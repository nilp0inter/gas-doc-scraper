[
{"url": "https://developers.google.com/apps-script/reference/document/attribute", "name": "Attribute", "type": "enum", "methods": [], "properties": [{"name": "BACKGROUND_COLOR", "type": "Enum", "url": "", "description": "The background color of an element (Paragraph, Table, etc) or document."}, {"name": "BOLD", "type": "Enum", "url": "", "description": "The font weight setting, for rich text."}, {"name": "BORDER_COLOR", "type": "Enum", "url": "", "description": "The border color, for table elements."}, {"name": "BORDER_WIDTH", "type": "Enum", "url": "", "description": "The border width in points, for table elements."}, {"name": "CODE", "type": "Enum", "url": "", "description": "The code contents, for equation elements."}, {"name": "FONT_FAMILY", "type": "Enum", "url": "", "description": "The font family setting, for rich text."}, {"name": "FONT_SIZE", "type": "Enum", "url": "", "description": "The font size setting in points, for rich text."}, {"name": "FOREGROUND_COLOR", "type": "Enum", "url": "", "description": "The foreground color setting, for rich text."}, {"name": "HEADING", "type": "Enum", "url": "", "description": "The heading type, for paragraph elements (for example, DocumentApp.ParagraphHeading.HEADING1)."}, {"name": "HEIGHT", "type": "Enum", "url": "", "description": "The height setting, for image elements."}, {"name": "HORIZONTAL_ALIGNMENT", "type": "Enum", "url": "", "description": "The horizontal alignment, for paragraph elements (for example, DocumentApp.HorizontalAlignment.CENTER)."}, {"name": "INDENT_END", "type": "Enum", "url": "", "description": "The end indentation setting in points, for paragraph elements."}, {"name": "INDENT_FIRST_LINE", "type": "Enum", "url": "", "description": "The first line indentation setting in points, for paragraph elements."}, {"name": "INDENT_START", "type": "Enum", "url": "", "description": "The start indentation setting in points, for paragraph elements."}, {"name": "ITALIC", "type": "Enum", "url": "", "description": "The font style setting, for rich text."}, {"name": "GLYPH_TYPE", "type": "Enum", "url": "", "description": "The glyph type, for list item elements."}, {"name": "LEFT_TO_RIGHT", "type": "Enum", "url": "", "description": "The text direction setting, for rich text."}, {"name": "LINE_SPACING", "type": "Enum", "url": "", "description": "The line spacing setting as a multiplier, for paragraph elements."}, {"name": "LINK_URL", "type": "Enum", "url": "", "description": "The link URL, for rich text. The default link style (foreground color, underline) is\nautomatically applied."}, {"name": "LIST_ID", "type": "Enum", "url": "", "description": "The ID of the encompassing list, for list item elements."}, {"name": "MARGIN_BOTTOM", "type": "Enum", "url": "", "description": "The bottom margin setting in points, for paragraph elements."}, {"name": "MARGIN_LEFT", "type": "Enum", "url": "", "description": "The left margin setting in points, for paragraph elements."}, {"name": "MARGIN_RIGHT", "type": "Enum", "url": "", "description": "The right margin setting in points, for paragraph elements."}, {"name": "MARGIN_TOP", "type": "Enum", "url": "", "description": "The top margin setting in points, for paragraph elements."}, {"name": "NESTING_LEVEL", "type": "Enum", "url": "", "description": "The item nesting level, for list item elements."}, {"name": "MINIMUM_HEIGHT", "type": "Enum", "url": "", "description": "The minimum height setting in points, for table row elements."}, {"name": "PADDING_BOTTOM", "type": "Enum", "url": "", "description": "The bottom padding setting in points, for table cell elements."}, {"name": "PADDING_LEFT", "type": "Enum", "url": "", "description": "The left padding setting in points, for table cell elements."}, {"name": "PADDING_RIGHT", "type": "Enum", "url": "", "description": "The right padding setting in points, for table cell elements."}, {"name": "PADDING_TOP", "type": "Enum", "url": "", "description": "The top padding setting in points, for table cell elements."}, {"name": "PAGE_HEIGHT", "type": "Enum", "url": "", "description": "The page height setting in points, for documents."}, {"name": "PAGE_WIDTH", "type": "Enum", "url": "", "description": "The page width setting in points, for documents."}, {"name": "SPACING_AFTER", "type": "Enum", "url": "", "description": "The bottom spacing setting in points, for paragraph elements."}, {"name": "SPACING_BEFORE", "type": "Enum", "url": "", "description": "The top spacing setting in points, for paragraph elements."}, {"name": "STRIKETHROUGH", "type": "Enum", "url": "", "description": "The strike-through setting, for rich text."}, {"name": "UNDERLINE", "type": "Enum", "url": "", "description": "The underline setting, for rich text."}, {"name": "VERTICAL_ALIGNMENT", "type": "Enum", "url": "", "description": "The vertical alignment setting, for table cell elements."}, {"name": "WIDTH", "type": "Enum", "url": "", "description": "The width setting, for table cell and image elements."}]},
{"url": "https://developers.google.com/apps-script/reference/data-studio", "name": "Data Studio", "type": "data", "methods": [{"name": "addQueryParameter", "parameters": [{"name": "name", "type": "String"}, {"name": "type", "type": "BigQueryParameterType"}, {"name": "value", "type": "String"}], "result": "BigQueryConfig", "description": "Adds a query parameter to this BigQueryConfig."}, {"name": "build", "parameters": [], "result": "Object", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setAccessToken", "parameters": [{"name": "accessToken", "type": "String"}], "result": "BigQueryConfig", "description": "Sets the access token of this BigQueryConfig."}, {"name": "setBillingProjectId", "parameters": [{"name": "billingProjectId", "type": "String"}], "result": "BigQueryConfig", "description": "Sets the billing project ID of this BigQueryConfig."}, {"name": "setQuery", "parameters": [{"name": "query", "type": "String"}], "result": "BigQueryConfig", "description": "Sets the SQL query of this BigQueryConfig."}, {"name": "setUseStandardSql", "parameters": [{"name": "useStandardSql", "type": "Boolean"}], "result": "BigQueryConfig", "description": "Determines if the query is interpreted as standard or legacy SQL."}, {"name": "setAllowOverride", "parameters": [{"name": "allowOverride", "type": "Boolean"}], "result": "Checkbox", "description": "Enables overriding for this config entry."}, {"name": "setHelpText", "parameters": [{"name": "helpText", "type": "String"}], "result": "Checkbox", "description": "Sets the help text for this configuration entry."}, {"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "Checkbox", "description": "Sets the unique ID for this configuration entry."}, {"name": "setIsDynamic", "parameters": [{"name": "isDynamic", "type": "Boolean"}], "result": "Checkbox", "description": "Sets the dynamic status for this configuration entry."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Checkbox", "description": "Sets the display name for this configuration entry."}, {"name": "getConfig", "parameters": [], "result": "Config", "description": "Returns a Config object."}, {"name": "getFields", "parameters": [], "result": "Fields", "description": "Returns a Fields object."}, {"name": "newAuthTypeResponse", "parameters": [], "result": "GetAuthTypeResponse", "description": "Returns a new GetAuthTypeResponse object."}, {"name": "newBigQueryConfig", "parameters": [], "result": "BigQueryConfig", "description": "Returns a new BigQueryConfig object."}, {"name": "newDebugError", "parameters": [], "result": "DebugError", "description": "Returns a new DebugError object."}, {"name": "newGetDataResponse", "parameters": [], "result": "GetDataResponse", "description": "Returns a new GetDataResponse object."}, {"name": "newGetSchemaResponse", "parameters": [], "result": "GetSchemaResponse", "description": "Returns a new GetSchemaResponse object."}, {"name": "newSetCredentialsResponse", "parameters": [], "result": "SetCredentialsResponse", "description": "Returns a new SetCredentialsResponse object."}, {"name": "newUserError", "parameters": [], "result": "UserError", "description": "Returns a new UserError object."}, {"name": "build", "parameters": [], "result": "Object", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "newCheckbox", "parameters": [], "result": "Checkbox", "description": "Returns a new checkbox configuration entry."}, {"name": "newInfo", "parameters": [], "result": "Info", "description": "Returns a new info configuration entry."}, {"name": "newOptionBuilder", "parameters": [], "result": "OptionBuilder", "description": "Returns a new options builder."}, {"name": "newSelectMultiple", "parameters": [], "result": "SelectMultiple", "description": "Returns a new select multiple configuration entry."}, {"name": "newSelectSingle", "parameters": [], "result": "SelectSingle", "description": "Returns a new select single configuration entry."}, {"name": "newTextArea", "parameters": [], "result": "TextArea", "description": "Returns a new text area configuration entry."}, {"name": "newTextInput", "parameters": [], "result": "TextInput", "description": "Returns a new text input configuration entry."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setDateRangeRequired", "parameters": [{"name": "dateRangeRequired", "type": "Boolean"}], "result": "Config", "description": "If true, a date range is provided for getData() requests."}, {"name": "setIsSteppedConfig", "parameters": [{"name": "isSteppedConfig", "type": "Boolean"}], "result": "Config", "description": "If true, getConfig() is called again with the current user configuration."}, {"name": "createCommunityConnector", "parameters": [], "result": "CommunityConnector", "description": "Creates a new Community Connector."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "DebugError", "description": "Sets the text of the debug error, which is only shown to admins."}, {"name": "throwException", "parameters": [], "result": "void", "description": "Triggers this exception to be thrown."}, {"name": "getAggregation", "parameters": [], "result": "AggregationType", "description": "Returns the AggregationType of this Field."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the description of this Field."}, {"name": "getFormula", "parameters": [], "result": "String", "description": "Returns the formula of this Field."}, {"name": "getGroup", "parameters": [], "result": "String", "description": "Returns the group of this Field."}, {"name": "getId", "parameters": [], "result": "String", "description": "Returns the ID of this Field."}, {"name": "getIsReaggregatable", "parameters": [], "result": "Boolean", "description": "Returns true if this field can be reaggregated, false otherwise."}, {"name": "getName", "parameters": [], "result": "String", "description": "Returns the name of this Field."}, {"name": "getType", "parameters": [], "result": "FieldType", "description": "Returns the FieldType of this Field."}, {"name": "isDefault", "parameters": [], "result": "Boolean", "description": "Returns true if this Field is the default metric or dimension."}, {"name": "isDimension", "parameters": [], "result": "Boolean", "description": "Returns true if this field is a dimension."}, {"name": "isHidden", "parameters": [], "result": "Boolean", "description": "Returns true if this Field is hidden."}, {"name": "isMetric", "parameters": [], "result": "Boolean", "description": "Returns true if this field is a metric."}, {"name": "setAggregation", "parameters": [{"name": "aggregation", "type": "AggregationType"}], "result": "Field", "description": "Sets the aggregation type of this Field."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Field", "description": "Sets the description of this Field."}, {"name": "setFormula", "parameters": [{"name": "formula", "type": "String"}], "result": "Field", "description": "Sets the formula of this Field."}, {"name": "setGroup", "parameters": [{"name": "group", "type": "String"}], "result": "Field", "description": "Sets the group of this Field."}, {"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "Field", "description": "Sets the ID of this Field."}, {"name": "setIsHidden", "parameters": [{"name": "isHidden", "type": "Boolean"}], "result": "Field", "description": "Sets the hidden status of this Field."}, {"name": "setIsReaggregatable", "parameters": [{"name": "isReaggregatable", "type": "Boolean"}], "result": "Field", "description": "Sets the reaggregation-permitted status for a Field."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Field", "description": "Sets the name of this Field."}, {"name": "setType", "parameters": [{"name": "type", "type": "FieldType"}], "result": "Field", "description": "Sets the FieldType of this Field."}, {"name": "asArray", "parameters": [], "result": "Field[]", "description": "Returns a view of this object as an array."}, {"name": "build", "parameters": [], "result": "Object[]", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "forIds", "parameters": [{"name": "ids", "type": "String"}], "result": "Fields", "description": "Returns a new Fields object filtered to Fields with an ID in ids."}, {"name": "getDefaultDimension", "parameters": [], "result": "Field", "description": "Returns the default dimension to be used for the set of fields."}, {"name": "getDefaultMetric", "parameters": [], "result": "Field", "description": "Returns the default metric to be used for the set of fields."}, {"name": "getFieldById", "parameters": [{"name": "fieldId", "type": "String"}], "result": "Field", "description": "Returns a field with a given ID, or null if no field with that ID is in this Fields object."}, {"name": "newDimension", "parameters": [], "result": "Field", "description": "Returns a new dimension Field."}, {"name": "newMetric", "parameters": [], "result": "Field", "description": "Returns a new metric Field."}, {"name": "setDefaultDimension", "parameters": [{"name": "fieldId", "type": "String"}], "result": "void", "description": "Sets the default dimension to be used for the set of fields."}, {"name": "setDefaultMetric", "parameters": [{"name": "fieldId", "type": "String"}], "result": "void", "description": "Sets the default metric to be used for the set of fields."}, {"name": "build", "parameters": [], "result": "Object", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setAuthType", "parameters": [{"name": "authType", "type": "AuthType"}], "result": "GetAuthTypeResponse", "description": "Sets the AuthType of the builder."}, {"name": "setHelpUrl", "parameters": [{"name": "helpUrl", "type": "String"}], "result": "GetAuthTypeResponse", "description": "Sets the help URL of the builder."}, {"name": "addAllRows", "parameters": [{"name": "rows", "type": "String"}], "result": "GetDataResponse", "description": "Adds multiple rows of data to this GetDataResponse."}, {"name": "addRow", "parameters": [{"name": "row", "type": "String"}], "result": "GetDataResponse", "description": "Adds a row of data to this GetDataResponse."}, {"name": "build", "parameters": [], "result": "Object", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "setFields", "parameters": [{"name": "fields", "type": "Fields"}], "result": "GetDataResponse", "description": "Sets the Fields of the builder."}, {"name": "setFiltersApplied", "parameters": [{"name": "filtersApplied", "type": "Boolean"}], "result": "GetDataResponse", "description": "Sets the filters applied status for this builder."}, {"name": "build", "parameters": [], "result": "Object", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setFields", "parameters": [{"name": "fields", "type": "Fields"}], "result": "GetSchemaResponse", "description": "Sets the Fields of the builder."}, {"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "Info", "description": "Sets the unique ID for this configuration entry."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Info", "description": "Sets the text for this configuration entry."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "OptionBuilder", "description": "Sets the label of this option builder."}, {"name": "setValue", "parameters": [{"name": "value", "type": "String"}], "result": "OptionBuilder", "description": "Sets the value of this option builder."}, {"name": "addOption", "parameters": [{"name": "optionBuilder", "type": "OptionBuilder"}], "result": "SelectMultiple", "description": "Adds a new select option."}, {"name": "setAllowOverride", "parameters": [{"name": "allowOverride", "type": "Boolean"}], "result": "SelectMultiple", "description": "Enables overriding for this config entry."}, {"name": "setHelpText", "parameters": [{"name": "helpText", "type": "String"}], "result": "SelectMultiple", "description": "Sets the help text for this configuration entry."}, {"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "SelectMultiple", "description": "Sets the unique ID for this configuration entry."}, {"name": "setIsDynamic", "parameters": [{"name": "isDynamic", "type": "Boolean"}], "result": "SelectMultiple", "description": "Sets the dynamic status for this configuration entry."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "SelectMultiple", "description": "Sets the display name for this configuration entry."}, {"name": "addOption", "parameters": [{"name": "optionBuilder", "type": "OptionBuilder"}], "result": "SelectSingle", "description": "Adds a new select option."}, {"name": "setAllowOverride", "parameters": [{"name": "allowOverride", "type": "Boolean"}], "result": "SelectSingle", "description": "Enables overriding for this config entry."}, {"name": "setHelpText", "parameters": [{"name": "helpText", "type": "String"}], "result": "SelectSingle", "description": "Sets the help text for this configuration entry."}, {"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "SelectSingle", "description": "Sets the unique ID for this configuration entry."}, {"name": "setIsDynamic", "parameters": [{"name": "isDynamic", "type": "Boolean"}], "result": "SelectSingle", "description": "Sets the dynamic status for this configuration entry."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "SelectSingle", "description": "Sets the display name for this configuration entry."}, {"name": "build", "parameters": [], "result": "Object", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setIsValid", "parameters": [{"name": "isValid", "type": "Boolean"}], "result": "SetCredentialsResponse", "description": "Sets the valid status of this SetCredentialsResponse."}, {"name": "setAllowOverride", "parameters": [{"name": "allowOverride", "type": "Boolean"}], "result": "TextArea", "description": "Enables overriding for this config entry."}, {"name": "setHelpText", "parameters": [{"name": "helpText", "type": "String"}], "result": "TextArea", "description": "Sets the help text for this configuration entry."}, {"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "TextArea", "description": "Sets the unique ID for this configuration entry."}, {"name": "setIsDynamic", "parameters": [{"name": "isDynamic", "type": "Boolean"}], "result": "TextArea", "description": "Sets the dynamic status for this configuration entry."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "TextArea", "description": "Sets the display name for this configuration entry."}, {"name": "setPlaceholder", "parameters": [{"name": "placeholder", "type": "String"}], "result": "TextArea", "description": "Sets the placeholder text for this configuration entry."}, {"name": "setAllowOverride", "parameters": [{"name": "allowOverride", "type": "Boolean"}], "result": "TextInput", "description": "Enables overriding for this config entry."}, {"name": "setHelpText", "parameters": [{"name": "helpText", "type": "String"}], "result": "TextInput", "description": "Sets the help text for this configuration entry."}, {"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "TextInput", "description": "Sets the unique ID for this configuration entry."}, {"name": "setIsDynamic", "parameters": [{"name": "isDynamic", "type": "Boolean"}], "result": "TextInput", "description": "Sets the dynamic status for this configuration entry."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "TextInput", "description": "Sets the display name for this configuration entry."}, {"name": "setPlaceholder", "parameters": [{"name": "placeholder", "type": "String"}], "result": "TextInput", "description": "Sets the placeholder text for this configuration entry."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setDebugText", "parameters": [{"name": "text", "type": "String"}], "result": "UserError", "description": "Sets the text of the debug error, which is only shown to admins."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "UserError", "description": "Sets the text of the user error."}, {"name": "throwException", "parameters": [], "result": "void", "description": "Triggers this exception to be thrown."}], "properties": [{"name": "AVG", "type": "Enum", "url": "", "description": "Average."}, {"name": "COUNT", "type": "Enum", "url": "", "description": "Count."}, {"name": "COUNT_DISTINCT", "type": "Enum", "url": "", "description": "Count Distinct."}, {"name": "MAX", "type": "Enum", "url": "", "description": "Max."}, {"name": "MIN", "type": "Enum", "url": "", "description": "Min."}, {"name": "SUM", "type": "Enum", "url": "", "description": "Sum."}, {"name": "AUTO", "type": "Enum", "url": "", "description": "Auto."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No authorization needed."}, {"name": "OAUTH2", "type": "Enum", "url": "", "description": "OAuth2 authorization needed."}, {"name": "USER_PASS", "type": "Enum", "url": "", "description": "Username and password credentials needed."}, {"name": "PATH_USER_PASS", "type": "Enum", "url": "", "description": "Username, path, and password needed."}, {"name": "KEY", "type": "Enum", "url": "", "description": "API Key or Token needed."}, {"name": "USER_TOKEN", "type": "Enum", "url": "", "description": "Username and token needed."}, {"name": "STRING", "type": "Enum", "url": "", "description": "String."}, {"name": "INT64", "type": "Enum", "url": "", "description": "64-bit integer."}, {"name": "BOOL", "type": "Enum", "url": "", "description": "Boolean."}, {"name": "FLOAT64", "type": "Enum", "url": "", "description": "64-bit floating point number."}, {"name": "AggregationType", "type": "AggregationType", "url": "/apps-script/reference/data-studio/aggregation-type", "description": "The AggregationType enumeration."}, {"name": "AuthType", "type": "AuthType", "url": "/apps-script/reference/data-studio/auth-type", "description": "The AuthType enumeration."}, {"name": "BigQueryParameterType", "type": "BigQueryParameterType", "url": "/apps-script/reference/data-studio/big-query-parameter-type", "description": "The BigQueryParameterType enumeration."}, {"name": "FieldType", "type": "FieldType", "url": "/apps-script/reference/data-studio/field-type", "description": "The FieldType enumeration."}, {"name": "YEAR", "type": "Enum", "url": "", "description": "Year in the format of YYYY such as 2017."}, {"name": "YEAR_QUARTER", "type": "Enum", "url": "", "description": "Year and quarter in the format of YYYYQ such as 20171."}, {"name": "YEAR_MONTH", "type": "Enum", "url": "", "description": "Year and month in the format of YYYYMM such as 201703."}, {"name": "YEAR_WEEK", "type": "Enum", "url": "", "description": "Year and week in the format of YYYYww such as 201707."}, {"name": "YEAR_MONTH_DAY", "type": "Enum", "url": "", "description": "Year, month, and day in the format of YYYYMMDD such as 20170317."}, {"name": "YEAR_MONTH_DAY_HOUR", "type": "Enum", "url": "", "description": "Year, month, day, and hour in the format of YYYYMMDDHH such as 2017031703."}, {"name": "YEAR_MONTH_DAY_MINUTE", "type": "Enum", "url": "", "description": "Year, month, day, hour, and minute in the format of YYYYMMDDHHmm such as 201703170230."}, {"name": "YEAR_MONTH_DAY_SECOND", "type": "Enum", "url": "", "description": "Year, month, day, hour, minute, and second in the format of YYYYMMDDHHmmss such as\n20170317023017."}, {"name": "QUARTER", "type": "Enum", "url": "", "description": "Quarter in the format of 1, 2, 3, or 4)."}, {"name": "MONTH", "type": "Enum", "url": "", "description": "Month in the format of MM such as 03."}, {"name": "WEEK", "type": "Enum", "url": "", "description": "Week in the format of ww such as 07."}, {"name": "MONTH_DAY", "type": "Enum", "url": "", "description": "Month and day in the format of MMDD such as 0317."}, {"name": "DAY_OF_WEEK", "type": "Enum", "url": "", "description": "A number in the range of [0,6] with 0 representing Sunday."}, {"name": "DAY", "type": "Enum", "url": "", "description": "Day in the format of DD such as 17."}, {"name": "HOUR", "type": "Enum", "url": "", "description": "Hour in the format of HH such as 13."}, {"name": "MINUTE", "type": "Enum", "url": "", "description": "Minute in the format of mm such as 12."}, {"name": "DURATION", "type": "Enum", "url": "", "description": "A duration of time in seconds."}, {"name": "COUNTRY", "type": "Enum", "url": "", "description": "A country such as United States."}, {"name": "COUNTRY_CODE", "type": "Enum", "url": "", "description": "A country code such as US."}, {"name": "CONTINENT", "type": "Enum", "url": "", "description": "A continent such as Americas."}, {"name": "CONTINENT_CODE", "type": "Enum", "url": "", "description": "A continent code such as 019."}, {"name": "SUB_CONTINENT", "type": "Enum", "url": "", "description": "A sub-continent such as North America."}, {"name": "SUB_CONTINENT_CODE", "type": "Enum", "url": "", "description": "A sub-continent code such as 003."}, {"name": "REGION", "type": "Enum", "url": "", "description": "A region such as California."}, {"name": "REGION_CODE", "type": "Enum", "url": "", "description": "A region code such as CA."}, {"name": "CITY", "type": "Enum", "url": "", "description": "A city such as Mountain View."}, {"name": "CITY_CODE", "type": "Enum", "url": "", "description": "A city code such as 1014044."}, {"name": "METRO", "type": "Enum", "url": "", "description": "A metro such as San Francisco-Oakland-San Jose CA."}, {"name": "METRO_CODE", "type": "Enum", "url": "", "description": "A metro code such as 200807."}, {"name": "LATITUDE_LONGITUDE", "type": "Enum", "url": "", "description": "A latitude longitude pair such as 51.5074, -0.1278."}, {"name": "NUMBER", "type": "Enum", "url": "", "description": "A decimal number."}, {"name": "PERCENT", "type": "Enum", "url": "", "description": "Decimal percentage (can be over 1.0)."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "Free-form text."}, {"name": "BOOLEAN", "type": "Enum", "url": "", "description": "A true or false boolean value."}, {"name": "URL", "type": "Enum", "url": "", "description": "A URL as text such as https://google.com."}, {"name": "HYPERLINK", "type": "Enum", "url": "", "description": "A hyperlink."}, {"name": "IMAGE", "type": "Enum", "url": "", "description": "An image."}, {"name": "IMAGE_LINK", "type": "Enum", "url": "", "description": "An image link."}, {"name": "CURRENCY_AED", "type": "Enum", "url": "", "description": "Currency from AED."}, {"name": "CURRENCY_ALL", "type": "Enum", "url": "", "description": "Currency from ALL."}, {"name": "CURRENCY_ARS", "type": "Enum", "url": "", "description": "Currency from ARS."}, {"name": "CURRENCY_AUD", "type": "Enum", "url": "", "description": "Currency from AUD."}, {"name": "CURRENCY_BDT", "type": "Enum", "url": "", "description": "Currency from BDT."}, {"name": "CURRENCY_BGN", "type": "Enum", "url": "", "description": "Currency from BGN."}, {"name": "CURRENCY_BOB", "type": "Enum", "url": "", "description": "Currency from BOB."}, {"name": "CURRENCY_BRL", "type": "Enum", "url": "", "description": "Currency from BRL."}, {"name": "CURRENCY_CAD", "type": "Enum", "url": "", "description": "Currency from CAD."}, {"name": "CURRENCY_CDF", "type": "Enum", "url": "", "description": "Currency from CDF."}, {"name": "CURRENCY_CHF", "type": "Enum", "url": "", "description": "Currency from CHF."}, {"name": "CURRENCY_CLP", "type": "Enum", "url": "", "description": "Currency from CLP."}, {"name": "CURRENCY_CNY", "type": "Enum", "url": "", "description": "Currency from CNY."}, {"name": "CURRENCY_COP", "type": "Enum", "url": "", "description": "Currency from COP."}, {"name": "CURRENCY_CRC", "type": "Enum", "url": "", "description": "Currency from CRC."}, {"name": "CURRENCY_CZK", "type": "Enum", "url": "", "description": "Currency from CZK."}, {"name": "CURRENCY_DKK", "type": "Enum", "url": "", "description": "Currency from DKK."}, {"name": "CURRENCY_DOP", "type": "Enum", "url": "", "description": "Currency from DOP."}, {"name": "CURRENCY_EGP", "type": "Enum", "url": "", "description": "Currency from EGP."}, {"name": "CURRENCY_ETB", "type": "Enum", "url": "", "description": "Currency from ETB."}, {"name": "CURRENCY_EUR", "type": "Enum", "url": "", "description": "Currency from EUR."}, {"name": "CURRENCY_GBP", "type": "Enum", "url": "", "description": "Currency from GBP."}, {"name": "CURRENCY_HKD", "type": "Enum", "url": "", "description": "Currency from HKD."}, {"name": "CURRENCY_HRK", "type": "Enum", "url": "", "description": "Currency from HRK."}, {"name": "CURRENCY_HUF", "type": "Enum", "url": "", "description": "Currency from HUF."}, {"name": "CURRENCY_IDR", "type": "Enum", "url": "", "description": "Currency from IDR."}, {"name": "CURRENCY_ILS", "type": "Enum", "url": "", "description": "Currency from ILS."}, {"name": "CURRENCY_INR", "type": "Enum", "url": "", "description": "Currency from INR."}, {"name": "CURRENCY_IRR", "type": "Enum", "url": "", "description": "Currency from IRR."}, {"name": "CURRENCY_ISK", "type": "Enum", "url": "", "description": "Currency from ISK."}, {"name": "CURRENCY_JMD", "type": "Enum", "url": "", "description": "Currency from JMD."}, {"name": "CURRENCY_JPY", "type": "Enum", "url": "", "description": "Currency from JPY."}, {"name": "CURRENCY_KRW", "type": "Enum", "url": "", "description": "Currency from KRW."}, {"name": "CURRENCY_LKR", "type": "Enum", "url": "", "description": "Currency from LKR."}, {"name": "CURRENCY_LTL", "type": "Enum", "url": "", "description": "Currency from LTL."}, {"name": "CURRENCY_MNT", "type": "Enum", "url": "", "description": "Currency from MNT."}, {"name": "CURRENCY_MVR", "type": "Enum", "url": "", "description": "Currency from MVR."}, {"name": "CURRENCY_MXN", "type": "Enum", "url": "", "description": "Currency from MXN."}, {"name": "CURRENCY_MYR", "type": "Enum", "url": "", "description": "Currency from MYR."}, {"name": "CURRENCY_NOK", "type": "Enum", "url": "", "description": "Currency from NOK."}, {"name": "CURRENCY_NZD", "type": "Enum", "url": "", "description": "Currency from NZD."}, {"name": "CURRENCY_PAB", "type": "Enum", "url": "", "description": "Currency from PAB."}, {"name": "CURRENCY_PEN", "type": "Enum", "url": "", "description": "Currency from PEN."}, {"name": "CURRENCY_PHP", "type": "Enum", "url": "", "description": "Currency from PHP."}, {"name": "CURRENCY_PKR", "type": "Enum", "url": "", "description": "Currency from PKR."}, {"name": "CURRENCY_PLN", "type": "Enum", "url": "", "description": "Currency from PLN."}, {"name": "CURRENCY_RON", "type": "Enum", "url": "", "description": "Currency from RON."}, {"name": "CURRENCY_RSD", "type": "Enum", "url": "", "description": "Currency from RSD."}, {"name": "CURRENCY_RUB", "type": "Enum", "url": "", "description": "Currency from RUB."}, {"name": "CURRENCY_SAR", "type": "Enum", "url": "", "description": "Currency from SAR."}, {"name": "CURRENCY_SEK", "type": "Enum", "url": "", "description": "Currency from SEK."}, {"name": "CURRENCY_SGD", "type": "Enum", "url": "", "description": "Currency from SGD."}, {"name": "CURRENCY_THB", "type": "Enum", "url": "", "description": "Currency from THB."}, {"name": "CURRENCY_TRY", "type": "Enum", "url": "", "description": "Currency from TRY."}, {"name": "CURRENCY_TWD", "type": "Enum", "url": "", "description": "Currency from TWD."}, {"name": "CURRENCY_TZS", "type": "Enum", "url": "", "description": "Currency from TZS."}, {"name": "CURRENCY_UAH", "type": "Enum", "url": "", "description": "Currency from UAH."}, {"name": "CURRENCY_USD", "type": "Enum", "url": "", "description": "Currency from USD."}, {"name": "CURRENCY_UYU", "type": "Enum", "url": "", "description": "Currency from UYU."}, {"name": "CURRENCY_VEF", "type": "Enum", "url": "", "description": "Currency from VEF."}, {"name": "CURRENCY_VND", "type": "Enum", "url": "", "description": "Currency from VND."}, {"name": "CURRENCY_YER", "type": "Enum", "url": "", "description": "Currency from YER."}, {"name": "CURRENCY_ZAR", "type": "Enum", "url": "", "description": "Currency from ZAR."}]},
{"url": "https://developers.google.com/apps-script/reference/contacts/priority", "name": "Priority", "type": "enum", "methods": [], "properties": [{"name": "HIGH", "type": "Enum", "url": "", "description": "high priority"}, {"name": "LOW", "type": "Enum", "url": "", "description": "low priority"}, {"name": "NORMAL", "type": "Enum", "url": "", "description": "normal priority"}]},
{"url": "https://developers.google.com/apps-script/reference/contacts/field", "name": "Field", "type": "enum", "methods": [], "properties": [{"name": "FULL_NAME", "type": "Enum", "url": "", "description": "the contact's full name"}, {"name": "GIVEN_NAME", "type": "Enum", "url": "", "description": "the contact's given (first) name"}, {"name": "MIDDLE_NAME", "type": "Enum", "url": "", "description": "the contact's middle name"}, {"name": "FAMILY_NAME", "type": "Enum", "url": "", "description": "the contact's family (last) name"}, {"name": "MAIDEN_NAME", "type": "Enum", "url": "", "description": "the contact's maiden name"}, {"name": "NICKNAME", "type": "Enum", "url": "", "description": "the contact's nickname"}, {"name": "SHORT_NAME", "type": "Enum", "url": "", "description": "the contact's short name"}, {"name": "INITIALS", "type": "Enum", "url": "", "description": "the contact's initials"}, {"name": "PREFIX", "type": "Enum", "url": "", "description": "the prefix for the contact's name"}, {"name": "SUFFIX", "type": "Enum", "url": "", "description": "the suffix for the contact's name"}, {"name": "HOME_EMAIL", "type": "Enum", "url": "", "description": "the contact's home email address"}, {"name": "WORK_EMAIL", "type": "Enum", "url": "", "description": "the contact's work email address"}, {"name": "BIRTHDAY", "type": "Enum", "url": "", "description": "the contact's birthday"}, {"name": "ANNIVERSARY", "type": "Enum", "url": "", "description": "the contact's anniversary"}, {"name": "HOME_ADDRESS", "type": "Enum", "url": "", "description": "the contact's home address"}, {"name": "WORK_ADDRESS", "type": "Enum", "url": "", "description": "the contact's work address"}, {"name": "ASSISTANT_PHONE", "type": "Enum", "url": "", "description": "the contact's assistant's phone number"}, {"name": "CALLBACK_PHONE", "type": "Enum", "url": "", "description": "the contact's callback phone number"}, {"name": "MAIN_PHONE", "type": "Enum", "url": "", "description": "the contact's main phone number"}, {"name": "PAGER", "type": "Enum", "url": "", "description": "the contact's pager number"}, {"name": "HOME_FAX", "type": "Enum", "url": "", "description": "the contact's home fax number"}, {"name": "WORK_FAX", "type": "Enum", "url": "", "description": "the contact's work fax number"}, {"name": "HOME_PHONE", "type": "Enum", "url": "", "description": "the contact's home phone number"}, {"name": "WORK_PHONE", "type": "Enum", "url": "", "description": "the contact's work phone number"}, {"name": "MOBILE_PHONE", "type": "Enum", "url": "", "description": "the contact's mobile phone number"}, {"name": "GOOGLE_VOICE", "type": "Enum", "url": "", "description": "the contact's Google Voice number"}, {"name": "NOTES", "type": "Enum", "url": "", "description": "notes about the contact"}, {"name": "GOOGLE_TALK", "type": "Enum", "url": "", "description": "the contact's Google Talk identifier"}, {"name": "AIM", "type": "Enum", "url": "", "description": "the contact's AIM identifier"}, {"name": "YAHOO", "type": "Enum", "url": "", "description": "the contact's Yahoo instant messaging identifier"}, {"name": "SKYPE", "type": "Enum", "url": "", "description": "the contact's Skype identifier"}, {"name": "QQ", "type": "Enum", "url": "", "description": "the contact's QQ identifer"}, {"name": "MSN", "type": "Enum", "url": "", "description": "the contact's MSN identifier"}, {"name": "ICQ", "type": "Enum", "url": "", "description": "the contact's ICQ identifier"}, {"name": "JABBER", "type": "Enum", "url": "", "description": "the contact's Jabber identifier"}, {"name": "BLOG", "type": "Enum", "url": "", "description": "the contact's blog URL"}, {"name": "FTP", "type": "Enum", "url": "", "description": "the contact's FTP URL"}, {"name": "PROFILE", "type": "Enum", "url": "", "description": "the contact's profile URL"}, {"name": "HOME_PAGE", "type": "Enum", "url": "", "description": "the contact's home page URL"}, {"name": "WORK_WEBSITE", "type": "Enum", "url": "", "description": "the contact's work website URL"}, {"name": "HOME_WEBSITE", "type": "Enum", "url": "", "description": "the contact's home website URL"}, {"name": "JOB_TITLE", "type": "Enum", "url": "", "description": "the contact's job title"}, {"name": "COMPANY", "type": "Enum", "url": "", "description": "the contact's company"}]},
{"url": "https://developers.google.com/apps-script/reference/contacts/extended-field", "name": "ExtendedField", "type": "enum", "methods": [], "properties": [{"name": "HOBBY", "type": "Enum", "url": "", "description": "the contact's hobby"}, {"name": "MILEAGE", "type": "Enum", "url": "", "description": "the contact's mileage"}, {"name": "LANGUAGE", "type": "Enum", "url": "", "description": "the contact's language"}, {"name": "GENDER", "type": "Enum", "url": "", "description": "the contact's gender"}, {"name": "BILLING_INFORMATION", "type": "Enum", "url": "", "description": "the contact's billing information"}, {"name": "DIRECTORY_SERVER", "type": "Enum", "url": "", "description": "the contact's directory server"}, {"name": "SENSITIVITY", "type": "Enum", "url": "", "description": "the contact's sensitivity"}, {"name": "PRIORITY", "type": "Enum", "url": "", "description": "the contact's priority"}, {"name": "HOME", "type": "Enum", "url": "", "description": "the contact's home information"}, {"name": "WORK", "type": "Enum", "url": "", "description": "the contact's work information"}, {"name": "USER", "type": "Enum", "url": "", "description": "the contact's user information"}, {"name": "OTHER", "type": "Enum", "url": "", "description": "the contact's other information"}]},
{"url": "https://developers.google.com/apps-script/reference/contacts/sensitivity", "name": "Sensitivity", "type": "enum", "methods": [], "properties": [{"name": "CONFIDENTIAL", "type": "Enum", "url": "", "description": "confidential sensitivity"}, {"name": "NORMAL", "type": "Enum", "url": "", "description": "normal sensitivity"}, {"name": "PERSONAL", "type": "Enum", "url": "", "description": "personal sensitivity"}, {"name": "PRIVATE", "type": "Enum", "url": "", "description": "private sensitivity"}]},
{"url": "https://developers.google.com/apps-script/reference/contacts/gender", "name": "Gender", "type": "enum", "methods": [], "properties": [{"name": "MALE", "type": "Enum", "url": "", "description": "male gender"}, {"name": "FEMALE", "type": "Enum", "url": "", "description": "female gender"}]},
{"url": "https://developers.google.com/apps-script/reference/contacts/phone-field", "name": "PhoneField", "type": "class", "methods": [{"name": "deletePhoneField", "parameters": [], "result": "void", "description": "Deletes this phone number field."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "getPhoneNumber", "parameters": [], "result": "String", "description": "Get the phone number for this field."}, {"name": "isPrimary", "parameters": [], "result": "Boolean", "description": "Gets whether this is the primary field value."}, {"name": "setAsPrimary", "parameters": [], "result": "PhoneField", "description": "Sets this field to primary."}, {"name": "setLabel", "parameters": [{"name": "field", "type": "Field"}], "result": "PhoneField", "description": "Sets the label of this field."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "PhoneField", "description": "Sets the label of this field."}, {"name": "setPhoneNumber", "parameters": [{"name": "number", "type": "String"}], "result": "PhoneField", "description": "Sets the phone number for this field."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/contacts/url-field", "name": "UrlField", "type": "class", "methods": [{"name": "deleteUrlField", "parameters": [], "result": "void", "description": "Deletes this URL field."}, {"name": "getAddress", "parameters": [], "result": "String", "description": "Get the address for this field."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "isPrimary", "parameters": [], "result": "Boolean", "description": "Gets whether this is the primary field value."}, {"name": "setAddress", "parameters": [{"name": "address", "type": "String"}], "result": "UrlField", "description": "Sets the address of this field."}, {"name": "setAsPrimary", "parameters": [], "result": "UrlField", "description": "Sets this field to primary."}, {"name": "setLabel", "parameters": [{"name": "field", "type": "Field"}], "result": "UrlField", "description": "Sets the label of this field."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "UrlField", "description": "Sets the label of this field."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/contacts/custom-field", "name": "CustomField", "type": "class", "methods": [{"name": "deleteCustomField", "parameters": [], "result": "void", "description": "Deletes this field."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "getValue", "parameters": [], "result": "Object", "description": "Gets the value of the field."}, {"name": "setLabel", "parameters": [{"name": "field", "type": "ExtendedField"}], "result": "CustomField", "description": "Sets the label of this field."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "CustomField", "description": "Sets the label of this field."}, {"name": "setValue", "parameters": [{"name": "value", "type": "Object"}], "result": "CustomField", "description": "Sets the value of this field."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/contacts/date-field", "name": "DateField", "type": "class", "methods": [{"name": "deleteDateField", "parameters": [], "result": "void", "description": "Deletes this date."}, {"name": "getDay", "parameters": [], "result": "Integer", "description": "Gets the day of the month for this date."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "getMonth", "parameters": [], "result": "Month", "description": "Gets the month for this date."}, {"name": "getYear", "parameters": [], "result": "Integer", "description": "Gets the year for this date."}, {"name": "setDate", "parameters": [{"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}], "result": "DateField", "description": "Sets the date to this day, without a year."}, {"name": "setDate", "parameters": [{"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}, {"name": "year", "type": "Integer"}], "result": "DateField", "description": "Sets the date to this day."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "Field"}], "result": "DateField", "description": "Sets the label of this field, such as 'Birthday' or 'Anniversary'."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "DateField", "description": "Sets the label of this field."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/contacts/contact-group", "name": "ContactGroup", "type": "class", "methods": [{"name": "addContact", "parameters": [{"name": "contact", "type": "Contact"}], "result": "ContactGroup", "description": "Adds the given contact to this group"}, {"name": "deleteGroup", "parameters": [], "result": "void", "description": "Deletes this contact group."}, {"name": "getContacts", "parameters": [], "result": "Contact[]", "description": "Gets all the contacts in this contact group."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the id of this contact group."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this contact group."}, {"name": "isSystemGroup", "parameters": [], "result": "Boolean", "description": "Gets a boolean value to determine whether this contact group is a system group (undeletable) or\nnot."}, {"name": "removeContact", "parameters": [{"name": "contact", "type": "Contact"}], "result": "ContactGroup", "description": "Removes the given contact from this group"}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "ContactGroup", "description": "Sets the name of this contact group."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/contacts/email-field", "name": "EmailField", "type": "class", "methods": [{"name": "deleteEmailField", "parameters": [], "result": "void", "description": "Deletes this email address from the Contact."}, {"name": "getAddress", "parameters": [], "result": "String", "description": "Get the address for this field."}, {"name": "getDisplayName", "parameters": [], "result": "String", "description": "Returns the display name for this email address."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "isPrimary", "parameters": [], "result": "Boolean", "description": "Gets whether this is the primary field value."}, {"name": "setAddress", "parameters": [{"name": "address", "type": "String"}], "result": "EmailField", "description": "Sets the address of this field."}, {"name": "setAsPrimary", "parameters": [], "result": "EmailField", "description": "Sets this field to primary."}, {"name": "setDisplayName", "parameters": [{"name": "name", "type": "String"}], "result": "EmailField", "description": "Sets the display name for this email address."}, {"name": "setLabel", "parameters": [{"name": "field", "type": "Field"}], "result": "EmailField", "description": "Sets the label of this field."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "EmailField", "description": "Sets the label of this field."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/contacts/im-field", "name": "IMField", "type": "class", "methods": [{"name": "deleteIMField", "parameters": [], "result": "void", "description": "Deletes this instant messaging field."}, {"name": "getAddress", "parameters": [], "result": "String", "description": "Get the address for this field."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "isPrimary", "parameters": [], "result": "Boolean", "description": "Gets whether this is the primary field value."}, {"name": "setAddress", "parameters": [{"name": "address", "type": "String"}], "result": "IMField", "description": "Sets the address of this field."}, {"name": "setAsPrimary", "parameters": [], "result": "IMField", "description": "Sets this field to primary."}, {"name": "setLabel", "parameters": [{"name": "field", "type": "Field"}], "result": "IMField", "description": "Sets the label of this field."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "IMField", "description": "Sets the label of this field."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/contacts/company-field", "name": "CompanyField", "type": "class", "methods": [{"name": "deleteCompanyField", "parameters": [], "result": "void", "description": "Deletes this company field."}, {"name": "getCompanyName", "parameters": [], "result": "String", "description": "Gets the company name."}, {"name": "getJobTitle", "parameters": [], "result": "String", "description": "Gets the job title."}, {"name": "isPrimary", "parameters": [], "result": "Boolean", "description": "Gets whether this is the primary company."}, {"name": "setAsPrimary", "parameters": [], "result": "CompanyField", "description": "Sets this company as the primary company, and unsets whatever company was previously primary."}, {"name": "setCompanyName", "parameters": [{"name": "company", "type": "String"}], "result": "CompanyField", "description": "Sets the company name."}, {"name": "setJobTitle", "parameters": [{"name": "title", "type": "String"}], "result": "CompanyField", "description": "Sets the job title."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/contacts/address-field", "name": "AddressField", "type": "class", "methods": [{"name": "deleteAddressField", "parameters": [], "result": "void", "description": "Deletes this address field."}, {"name": "getAddress", "parameters": [], "result": "String", "description": "Get the address for this field."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "isPrimary", "parameters": [], "result": "Boolean", "description": "Gets whether this is the primary field value."}, {"name": "setAddress", "parameters": [{"name": "address", "type": "String"}], "result": "AddressField", "description": "Sets the address of this field."}, {"name": "setAsPrimary", "parameters": [], "result": "AddressField", "description": "Sets this field to primary."}, {"name": "setLabel", "parameters": [{"name": "field", "type": "Field"}], "result": "AddressField", "description": "Sets the label of this field."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "AddressField", "description": "Sets the label of this field."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/contacts/contact", "name": "Contact", "type": "class", "methods": [{"name": "addAddress", "parameters": [{"name": "label", "type": "Object"}, {"name": "address", "type": "String"}], "result": "AddressField", "description": "Adds an address to the contact with either a standard or custom label."}, {"name": "addCompany", "parameters": [{"name": "company", "type": "String"}, {"name": "title", "type": "String"}], "result": "CompanyField", "description": "Adds a company to the contact."}, {"name": "addCustomField", "parameters": [{"name": "label", "type": "Object"}, {"name": "content", "type": "Object"}], "result": "CustomField", "description": "Adds a custom field to the contact with either an extended or custom label."}, {"name": "addDate", "parameters": [{"name": "label", "type": "Object"}, {"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}, {"name": "year", "type": "Integer"}], "result": "DateField", "description": "Adds a date to the contact with either an standard or custom label."}, {"name": "addEmail", "parameters": [{"name": "label", "type": "Object"}, {"name": "address", "type": "String"}], "result": "EmailField", "description": "Add an email address with a standard label (home, work, etc.) or a custom label"}, {"name": "addIM", "parameters": [{"name": "label", "type": "Object"}, {"name": "address", "type": "String"}], "result": "IMField", "description": "Adds an IM address to the contact with either a standard or custom label."}, {"name": "addPhone", "parameters": [{"name": "label", "type": "Object"}, {"name": "number", "type": "String"}], "result": "PhoneField", "description": "Adds a phone number to the contact with either a standard or custom label."}, {"name": "addToGroup", "parameters": [{"name": "group", "type": "ContactGroup"}], "result": "Contact", "description": "Adds this contact to the given contact group."}, {"name": "addUrl", "parameters": [{"name": "label", "type": "Object"}, {"name": "url", "type": "String"}], "result": "UrlField", "description": "Adds a URL to the contact with either a standard or custom label."}, {"name": "deleteContact", "parameters": [], "result": "void", "description": "Deletes this contact."}, {"name": "getAddresses", "parameters": [], "result": "AddressField[]", "description": "Gets all the addresses for this contact."}, {"name": "getAddresses", "parameters": [{"name": "label", "type": "Object"}], "result": "AddressField[]", "description": "Gets all the addresses for this contact matching a particular field."}, {"name": "getCompanies", "parameters": [], "result": "CompanyField[]", "description": "Gets all the companies for this contact."}, {"name": "getContactGroups", "parameters": [], "result": "ContactGroup[]", "description": "Gets all the contact groups that contain this contact."}, {"name": "getCustomFields", "parameters": [], "result": "CustomField[]", "description": "Gets all the custom fields for this contact."}, {"name": "getCustomFields", "parameters": [{"name": "label", "type": "Object"}], "result": "CustomField[]", "description": "Gets all the custom fields for this contact matching a particular field."}, {"name": "getDates", "parameters": [], "result": "DateField[]", "description": "Gets all the dates for this contact."}, {"name": "getDates", "parameters": [{"name": "label", "type": "Object"}], "result": "DateField[]", "description": "Gets all the dates for this contact matching a particular field."}, {"name": "getEmails", "parameters": [], "result": "EmailField[]", "description": "Gets the email addresses of this contact."}, {"name": "getEmails", "parameters": [{"name": "label", "type": "Object"}], "result": "EmailField[]", "description": "Gets the email addresses for this contact matching a particular field."}, {"name": "getFamilyName", "parameters": [], "result": "String", "description": "Gets the family name (last name) of the contact as a string."}, {"name": "getFullName", "parameters": [], "result": "String", "description": "Gets the full name (given name and last name) of the contact as a string."}, {"name": "getGivenName", "parameters": [], "result": "String", "description": "Gets the given name (first name) of the contact as a string."}, {"name": "getIMs", "parameters": [], "result": "IMField[]", "description": "Gets all the IM addresses for this contact."}, {"name": "getIMs", "parameters": [{"name": "label", "type": "Object"}], "result": "IMField[]", "description": "Gets all the IM addresses for this contact matching a particular field."}, {"name": "getId", "parameters": [], "result": "String", "description": "Returns the unique id of this contact."}, {"name": "getInitials", "parameters": [], "result": "String", "description": "Gets the contact's initials."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Gets the date this contact was last updated."}, {"name": "getMaidenName", "parameters": [], "result": "String", "description": "Gets the maiden name of the contact as a string."}, {"name": "getMiddleName", "parameters": [], "result": "String", "description": "Gets the middle name of the contact as a string."}, {"name": "getNickname", "parameters": [], "result": "String", "description": "Gets the nickname of the contact as a string."}, {"name": "getNotes", "parameters": [], "result": "String", "description": "Gets the notes associated with this contact, or an empty string if there are no notes."}, {"name": "getPhones", "parameters": [], "result": "PhoneField[]", "description": "Gets all the phone numbers for this contact."}, {"name": "getPhones", "parameters": [{"name": "label", "type": "Object"}], "result": "PhoneField[]", "description": "Gets all the phone numbers for this contact matching a particular field."}, {"name": "getPrefix", "parameters": [], "result": "String", "description": "Gets the prefix to the contact's name."}, {"name": "getPrimaryEmail", "parameters": [], "result": "String", "description": "Gets the primary email address of the contact as a string."}, {"name": "getShortName", "parameters": [], "result": "String", "description": "Gets the short name of the contact as a string."}, {"name": "getSuffix", "parameters": [], "result": "String", "description": "Gets the suffix to the contact's name."}, {"name": "getUrls", "parameters": [], "result": "UrlField[]", "description": "Gets all the URLs for this contact."}, {"name": "getUrls", "parameters": [{"name": "label", "type": "Object"}], "result": "UrlField[]", "description": "Gets all the URLs for this contact matching a particular field."}, {"name": "removeFromGroup", "parameters": [{"name": "group", "type": "ContactGroup"}], "result": "Contact", "description": "Removes this contact from the given contact group."}, {"name": "setFamilyName", "parameters": [{"name": "familyName", "type": "String"}], "result": "Contact", "description": "Sets the family name (last name) of the contact."}, {"name": "setFullName", "parameters": [{"name": "fullName", "type": "String"}], "result": "Contact", "description": "Sets the full name (given name and last name) of the contact."}, {"name": "setGivenName", "parameters": [{"name": "givenName", "type": "String"}], "result": "Contact", "description": "Sets the given name (first name) of the contact."}, {"name": "setInitials", "parameters": [{"name": "initials", "type": "String"}], "result": "Contact", "description": "Sets the contact's initials."}, {"name": "setMaidenName", "parameters": [{"name": "maidenName", "type": "String"}], "result": "Contact", "description": "Sets the maiden name of the contact."}, {"name": "setMiddleName", "parameters": [{"name": "middleName", "type": "String"}], "result": "Contact", "description": "Sets the middle name of the contact."}, {"name": "setNickname", "parameters": [{"name": "nickname", "type": "String"}], "result": "Contact", "description": "Sets the nickname of the contact."}, {"name": "setNotes", "parameters": [{"name": "notes", "type": "String"}], "result": "Contact", "description": "Sets the notes associated with this contact."}, {"name": "setPrefix", "parameters": [{"name": "prefix", "type": "String"}], "result": "Contact", "description": "Sets the prefix to the contact's name."}, {"name": "setShortName", "parameters": [{"name": "shortName", "type": "String"}], "result": "Contact", "description": "Sets the short name of the contact."}, {"name": "setSuffix", "parameters": [{"name": "suffix", "type": "String"}], "result": "Contact", "description": "Sets the suffix to the contact's name."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/xml-service/text", "name": "Text", "type": "class", "methods": [{"name": "append", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Appends the given text to any content that already exists in the node."}, {"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getText", "parameters": [], "result": "String", "description": "Gets the text value of the Text node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Sets the text value of the Text node."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/xml-service/content-type", "name": "ContentType", "type": "enum", "methods": [], "properties": [{"name": "CDATA", "type": "Enum", "url": "", "description": "An XML CDATASection node."}, {"name": "COMMENT", "type": "Enum", "url": "", "description": "An XML Comment node."}, {"name": "DOCTYPE", "type": "Enum", "url": "", "description": "An XML DocumentType node."}, {"name": "ELEMENT", "type": "Enum", "url": "", "description": "An XML Element node."}, {"name": "ENTITYREF", "type": "Enum", "url": "", "description": "An XML EntityReference node."}, {"name": "PROCESSINGINSTRUCTION", "type": "Enum", "url": "", "description": "An XML ProcessingInstruction node."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "An XML Text node."}]},
{"url": "https://developers.google.com/apps-script/reference/xml-service/processing-instruction", "name": "ProcessingInstruction", "type": "class", "methods": [{"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getData", "parameters": [], "result": "String", "description": "Gets the raw data for every instruction in the ProcessingInstruction node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getTarget", "parameters": [], "result": "String", "description": "Gets the target for the ProcessingInstruction node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/xml-service/namespace", "name": "Namespace", "type": "class", "methods": [{"name": "getPrefix", "parameters": [], "result": "String", "description": "Gets the prefix for the namespace."}, {"name": "getURI", "parameters": [], "result": "String", "description": "Gets the URI for the namespace."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/xml-service/content", "name": "Content", "type": "interface", "methods": [{"name": "asCdata", "parameters": [], "result": "Cdata", "description": "Casts the node as a CDATASection node for the purposes of autocomplete."}, {"name": "asComment", "parameters": [], "result": "Comment", "description": "Casts the node as a Comment node for the purposes of autocomplete."}, {"name": "asDocType", "parameters": [], "result": "DocType", "description": "Casts the node as a DocumentType node for the purposes of autocomplete."}, {"name": "asElement", "parameters": [], "result": "Element", "description": "Casts the node as an Element node for the purposes of autocomplete."}, {"name": "asEntityRef", "parameters": [], "result": "EntityRef", "description": "Casts the node as a EntityReference node for the purposes of autocomplete."}, {"name": "asProcessingInstruction", "parameters": [], "result": "ProcessingInstruction", "description": "Casts the node as a ProcessingInstruction node for the purposes of autocomplete."}, {"name": "asText", "parameters": [], "result": "Text", "description": "Casts the node as a Text node for the purposes of autocomplete."}, {"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getType", "parameters": [], "result": "ContentType", "description": "Gets the node's content type."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/xml-service/entity-ref", "name": "EntityRef", "type": "class", "methods": [{"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the EntityReference node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getPublicId", "parameters": [], "result": "String", "description": "Gets the public ID of the EntityReference node."}, {"name": "getSystemId", "parameters": [], "result": "String", "description": "Gets the system ID of the EntityReference node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "EntityRef", "description": "Sets the name of the EntityReference node."}, {"name": "setPublicId", "parameters": [{"name": "id", "type": "String"}], "result": "EntityRef", "description": "Sets the public ID of the EntityReference node."}, {"name": "setSystemId", "parameters": [{"name": "id", "type": "String"}], "result": "EntityRef", "description": "Sets the system ID of the EntityReference node."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/xml-service/document", "name": "Document", "type": "class", "methods": [{"name": "addContent", "parameters": [{"name": "content", "type": "Content"}], "result": "Document", "description": "Appends the given node to the end of the document."}, {"name": "addContent", "parameters": [{"name": "index", "type": "Integer"}, {"name": "content", "type": "Content"}], "result": "Document", "description": "Inserts the given node at the given index among all nodes that are immediate children of the\ndocument."}, {"name": "cloneContent", "parameters": [], "result": "Content[]", "description": "Creates unattached copies of all nodes that are immediate children of the document."}, {"name": "detachRootElement", "parameters": [], "result": "Element", "description": "Detaches and returns the document's root Element node."}, {"name": "getAllContent", "parameters": [], "result": "Content[]", "description": "Gets all nodes that are immediate children of the document."}, {"name": "getContent", "parameters": [{"name": "index", "type": "Integer"}], "result": "Content", "description": "Gets the node at the given index among all nodes that are immediate children of the\ndocument."}, {"name": "getContentSize", "parameters": [], "result": "Integer", "description": "Gets the number of nodes that are immediate children of the document."}, {"name": "getDescendants", "parameters": [], "result": "Content[]", "description": "Gets all nodes that are direct or indirect children of the document, in the order they\nappear in the document."}, {"name": "getDocType", "parameters": [], "result": "DocType", "description": "Gets the document's DocType declaration."}, {"name": "getRootElement", "parameters": [], "result": "Element", "description": "Gets the document's root Element node."}, {"name": "hasRootElement", "parameters": [], "result": "Boolean", "description": "Determines whether the document has a root Element node."}, {"name": "removeContent", "parameters": [], "result": "Content[]", "description": "Removes all nodes that are immediate children of the document."}, {"name": "removeContent", "parameters": [{"name": "content", "type": "Content"}], "result": "Boolean", "description": "Removes the given node, if the node is an immediate child of the document."}, {"name": "removeContent", "parameters": [{"name": "index", "type": "Integer"}], "result": "Content", "description": "Removes the node at the given index among all nodes that are immediate children of the\ndocument."}, {"name": "setDocType", "parameters": [{"name": "docType", "type": "DocType"}], "result": "Document", "description": "Sets the document's DocType declaration."}, {"name": "setRootElement", "parameters": [{"name": "element", "type": "Element"}], "result": "Document", "description": "Sets the document's root Element node."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/xml-service/comment", "name": "Comment", "type": "class", "methods": [{"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getText", "parameters": [], "result": "String", "description": "Gets the text value of the Comment node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Comment", "description": "Sets the text value of the Comment node."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/xml-service/doc-type", "name": "DocType", "type": "class", "methods": [{"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getElementName", "parameters": [], "result": "String", "description": "Gets the name of the root Element node specified in the DocType declaration."}, {"name": "getInternalSubset", "parameters": [], "result": "String", "description": "Gets the internal subset data for the DocumentType node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getPublicId", "parameters": [], "result": "String", "description": "Gets the public ID of the external subset data for the DocumentType node."}, {"name": "getSystemId", "parameters": [], "result": "String", "description": "Gets the system ID of the external subset data for the DocumentType node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "setElementName", "parameters": [{"name": "name", "type": "String"}], "result": "DocType", "description": "Sets the name of the root Element node to specify in the DocType\ndeclaration."}, {"name": "setInternalSubset", "parameters": [{"name": "data", "type": "String"}], "result": "DocType", "description": "Sets the internal subset data for the DocumentType node."}, {"name": "setPublicId", "parameters": [{"name": "id", "type": "String"}], "result": "DocType", "description": "Sets the public ID of the external subset data for the DocumentType node."}, {"name": "setSystemId", "parameters": [{"name": "id", "type": "String"}], "result": "DocType", "description": "Sets the system ID of the external subset data for the DocumentType node."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/xml-service/cdata", "name": "Cdata", "type": "class", "methods": [{"name": "append", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Appends the given text to any content that already exists in the node."}, {"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getText", "parameters": [], "result": "String", "description": "Gets the text value of the Text node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Sets the text value of the Text node."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/xml-service/element", "name": "Element", "type": "class", "methods": [{"name": "addContent", "parameters": [{"name": "content", "type": "Content"}], "result": "Element", "description": "Appends the given node as the last child of the Element node."}, {"name": "addContent", "parameters": [{"name": "index", "type": "Integer"}, {"name": "content", "type": "Content"}], "result": "Element", "description": "Inserts the given node at the given index among all nodes that are immediate children of the\nElement node."}, {"name": "cloneContent", "parameters": [], "result": "Content[]", "description": "Creates unattached copies of all nodes that are immediate children of the {@code Element} node."}, {"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getAllContent", "parameters": [], "result": "Content[]", "description": "Gets all nodes that are immediate children of the {@code Element} node."}, {"name": "getAttribute", "parameters": [{"name": "name", "type": "String"}], "result": "Attribute", "description": "Gets the attribute for this Element node with the given name and no namespace."}, {"name": "getAttribute", "parameters": [{"name": "name", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "Attribute", "description": "Gets the attribute for this Element node with the given name and namespace."}, {"name": "getAttributes", "parameters": [], "result": "Attribute[]", "description": "Gets all attributes for this Element node, in the order they appear in the document."}, {"name": "getChild", "parameters": [{"name": "name", "type": "String"}], "result": "Element", "description": "Gets the first Element node with the given name and no namespace that is an immediate\nchild of this Element node."}, {"name": "getChild", "parameters": [{"name": "name", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "Element", "description": "Gets the first Element node with the given name and namespace that is an immediate\nchild of this Element node."}, {"name": "getChildText", "parameters": [{"name": "name", "type": "String"}], "result": "String", "description": "Gets the text value of the node with the given name and no namespace, if the node is an\nimmediate child of the Element node."}, {"name": "getChildText", "parameters": [{"name": "name", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "String", "description": "Gets the text value of the node with the given name and namespace, if the node is an immediate\nchild of the Element node."}, {"name": "getChildren", "parameters": [], "result": "Element[]", "description": "Gets all Element nodes that are immediate children of this Element node, in the\norder they appear in the document."}, {"name": "getChildren", "parameters": [{"name": "name", "type": "String"}], "result": "Element[]", "description": "Gets all Element nodes with the given name and no namespace that are immediate children\nof this Element node, in the order they appear in the document."}, {"name": "getChildren", "parameters": [{"name": "name", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "Element[]", "description": "Gets all Element nodes with the given name and namespace that are immediate children of\nthis Element node, in the order they appear in the document."}, {"name": "getContent", "parameters": [{"name": "index", "type": "Integer"}], "result": "Content", "description": "Gets the node at the given index among all nodes that are immediate children of the\n{@code Element} node."}, {"name": "getContentSize", "parameters": [], "result": "Integer", "description": "Gets the number of nodes that are immediate children of the {@code Element} node."}, {"name": "getDescendants", "parameters": [], "result": "Content[]", "description": "Gets all nodes that are direct or indirect children of the {@code Element} node, in the order they\nappear in the document."}, {"name": "getDocument", "parameters": [], "result": "Document", "description": "Gets the XML document that contains the {@code Element} node."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the local name of the Element node."}, {"name": "getNamespace", "parameters": [], "result": "Namespace", "description": "Gets the namespace for the Element node."}, {"name": "getNamespace", "parameters": [{"name": "prefix", "type": "String"}], "result": "Namespace", "description": "Gets the namespace with the given prefix for the Element node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getQualifiedName", "parameters": [], "result": "String", "description": "Gets the local name and namespace prefix of the Element node, in the form [namespacePrefix]:[localName]."}, {"name": "getText", "parameters": [], "result": "String", "description": "Gets the text value of the Element node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "isAncestorOf", "parameters": [{"name": "other", "type": "Element"}], "result": "Boolean", "description": "Determines whether this Element node is a direct or indirect parent of a given Element node."}, {"name": "isRootElement", "parameters": [], "result": "Boolean", "description": "Determines whether the Element node is the document's root node."}, {"name": "removeAttribute", "parameters": [{"name": "attribute", "type": "Attribute"}], "result": "Boolean", "description": "Removes the given attribute for this Element node, if such an attribute exists."}, {"name": "removeAttribute", "parameters": [{"name": "attributeName", "type": "String"}], "result": "Boolean", "description": "Removes the attribute for this Element node with the given name and no namespace, if\nsuch an attribute exists."}, {"name": "removeAttribute", "parameters": [{"name": "attributeName", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "Boolean", "description": "Removes the attribute for this Element node with the given name and namespace, if such\nan attribute exists."}, {"name": "removeContent", "parameters": [], "result": "Content[]", "description": "Removes all nodes that are immediate children of the {@code Element} node."}, {"name": "removeContent", "parameters": [{"name": "content", "type": "Content"}], "result": "Boolean", "description": "Removes the given node, if the node is an immediate child of the {@code Element} node."}, {"name": "removeContent", "parameters": [{"name": "index", "type": "Integer"}], "result": "Content", "description": "Removes the node at the given index among all nodes that are immediate children of the\n{@code Element} node."}, {"name": "setAttribute", "parameters": [{"name": "attribute", "type": "Attribute"}], "result": "Element", "description": "Sets the given attribute for this Element node."}, {"name": "setAttribute", "parameters": [{"name": "name", "type": "String"}, {"name": "value", "type": "String"}], "result": "Element", "description": "Sets the attribute for this Element node with the given name, value, and no namespace."}, {"name": "setAttribute", "parameters": [{"name": "name", "type": "String"}, {"name": "value", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "Element", "description": "Sets the attribute for this Element node with the given name, value, and namespace."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Element", "description": "Sets the local name of the Element node."}, {"name": "setNamespace", "parameters": [{"name": "namespace", "type": "Namespace"}], "result": "Element", "description": "Sets the namespace for the Element node."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Element", "description": "Sets the text value of the Element node."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/xml-service/attribute", "name": "Attribute", "type": "class", "methods": [{"name": "getName", "parameters": [], "result": "String", "description": "Gets the local name of the attribute."}, {"name": "getNamespace", "parameters": [], "result": "Namespace", "description": "Gets the namespace for the attribute."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the value of the attribute."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Attribute", "description": "Sets the local name of the attribute."}, {"name": "setNamespace", "parameters": [{"name": "namespace", "type": "Namespace"}], "result": "Attribute", "description": "Sets the namespace for the attribute."}, {"name": "setValue", "parameters": [{"name": "value", "type": "String"}], "result": "Attribute", "description": "Sets the value of the attribute."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/xml-service/format", "name": "Format", "type": "class", "methods": [{"name": "format", "parameters": [{"name": "document", "type": "Document"}], "result": "String", "description": "Outputs the given Document as a formatted string."}, {"name": "format", "parameters": [{"name": "element", "type": "Element"}], "result": "String", "description": "Outputs the given Element node as a formatted string."}, {"name": "setEncoding", "parameters": [{"name": "encoding", "type": "String"}], "result": "Format", "description": "Sets the character encoding that the formatter should use."}, {"name": "setIndent", "parameters": [{"name": "indent", "type": "String"}], "result": "Format", "description": "Sets the string used to indent child nodes relative to their parents."}, {"name": "setLineSeparator", "parameters": [{"name": "separator", "type": "String"}], "result": "Format", "description": "Sets the string to insert whenever the formatter would normally insert a line break."}, {"name": "setOmitDeclaration", "parameters": [{"name": "omitDeclaration", "type": "Boolean"}], "result": "Format", "description": "Sets whether the formatter should omit the XML declaration, such as <?xml version=\"1.0\"\nencoding=\"UTF-8\"?>."}, {"name": "setOmitEncoding", "parameters": [{"name": "omitEncoding", "type": "Boolean"}], "result": "Format", "description": "Sets whether the formatter should omit the encoding in the XML declaration, such as the\nencoding field in <?xml version=\"1.0\" encoding=\"UTF-8\"?>."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/xml-service", "name": "XML Service", "type": "xml", "methods": [{"name": "getName", "parameters": [], "result": "String", "description": "Gets the local name of the attribute."}, {"name": "getNamespace", "parameters": [], "result": "Namespace", "description": "Gets the namespace for the attribute."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the value of the attribute."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Attribute", "description": "Sets the local name of the attribute."}, {"name": "setNamespace", "parameters": [{"name": "namespace", "type": "Namespace"}], "result": "Attribute", "description": "Sets the namespace for the attribute."}, {"name": "setValue", "parameters": [{"name": "value", "type": "String"}], "result": "Attribute", "description": "Sets the value of the attribute."}, {"name": "append", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Appends the given text to any content that already exists in the node."}, {"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getText", "parameters": [], "result": "String", "description": "Gets the text value of the Text node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Sets the text value of the Text node."}, {"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getText", "parameters": [], "result": "String", "description": "Gets the text value of the Comment node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Comment", "description": "Sets the text value of the Comment node."}, {"name": "asCdata", "parameters": [], "result": "Cdata", "description": "Casts the node as a CDATASection node for the purposes of autocomplete."}, {"name": "asComment", "parameters": [], "result": "Comment", "description": "Casts the node as a Comment node for the purposes of autocomplete."}, {"name": "asDocType", "parameters": [], "result": "DocType", "description": "Casts the node as a DocumentType node for the purposes of autocomplete."}, {"name": "asElement", "parameters": [], "result": "Element", "description": "Casts the node as an Element node for the purposes of autocomplete."}, {"name": "asEntityRef", "parameters": [], "result": "EntityRef", "description": "Casts the node as a EntityReference node for the purposes of autocomplete."}, {"name": "asProcessingInstruction", "parameters": [], "result": "ProcessingInstruction", "description": "Casts the node as a ProcessingInstruction node for the purposes of autocomplete."}, {"name": "asText", "parameters": [], "result": "Text", "description": "Casts the node as a Text node for the purposes of autocomplete."}, {"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getType", "parameters": [], "result": "ContentType", "description": "Gets the node's content type."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getElementName", "parameters": [], "result": "String", "description": "Gets the name of the root Element node specified in the DocType declaration."}, {"name": "getInternalSubset", "parameters": [], "result": "String", "description": "Gets the internal subset data for the DocumentType node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getPublicId", "parameters": [], "result": "String", "description": "Gets the public ID of the external subset data for the DocumentType node."}, {"name": "getSystemId", "parameters": [], "result": "String", "description": "Gets the system ID of the external subset data for the DocumentType node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "setElementName", "parameters": [{"name": "name", "type": "String"}], "result": "DocType", "description": "Sets the name of the root Element node to specify in the DocType\ndeclaration."}, {"name": "setInternalSubset", "parameters": [{"name": "data", "type": "String"}], "result": "DocType", "description": "Sets the internal subset data for the DocumentType node."}, {"name": "setPublicId", "parameters": [{"name": "id", "type": "String"}], "result": "DocType", "description": "Sets the public ID of the external subset data for the DocumentType node."}, {"name": "setSystemId", "parameters": [{"name": "id", "type": "String"}], "result": "DocType", "description": "Sets the system ID of the external subset data for the DocumentType node."}, {"name": "addContent", "parameters": [{"name": "content", "type": "Content"}], "result": "Document", "description": "Appends the given node to the end of the document."}, {"name": "addContent", "parameters": [{"name": "index", "type": "Integer"}, {"name": "content", "type": "Content"}], "result": "Document", "description": "Inserts the given node at the given index among all nodes that are immediate children of the\ndocument."}, {"name": "cloneContent", "parameters": [], "result": "Content[]", "description": "Creates unattached copies of all nodes that are immediate children of the document."}, {"name": "detachRootElement", "parameters": [], "result": "Element", "description": "Detaches and returns the document's root Element node."}, {"name": "getAllContent", "parameters": [], "result": "Content[]", "description": "Gets all nodes that are immediate children of the document."}, {"name": "getContent", "parameters": [{"name": "index", "type": "Integer"}], "result": "Content", "description": "Gets the node at the given index among all nodes that are immediate children of the\ndocument."}, {"name": "getContentSize", "parameters": [], "result": "Integer", "description": "Gets the number of nodes that are immediate children of the document."}, {"name": "getDescendants", "parameters": [], "result": "Content[]", "description": "Gets all nodes that are direct or indirect children of the document, in the order they\nappear in the document."}, {"name": "getDocType", "parameters": [], "result": "DocType", "description": "Gets the document's DocType declaration."}, {"name": "getRootElement", "parameters": [], "result": "Element", "description": "Gets the document's root Element node."}, {"name": "hasRootElement", "parameters": [], "result": "Boolean", "description": "Determines whether the document has a root Element node."}, {"name": "removeContent", "parameters": [], "result": "Content[]", "description": "Removes all nodes that are immediate children of the document."}, {"name": "removeContent", "parameters": [{"name": "content", "type": "Content"}], "result": "Boolean", "description": "Removes the given node, if the node is an immediate child of the document."}, {"name": "removeContent", "parameters": [{"name": "index", "type": "Integer"}], "result": "Content", "description": "Removes the node at the given index among all nodes that are immediate children of the\ndocument."}, {"name": "setDocType", "parameters": [{"name": "docType", "type": "DocType"}], "result": "Document", "description": "Sets the document's DocType declaration."}, {"name": "setRootElement", "parameters": [{"name": "element", "type": "Element"}], "result": "Document", "description": "Sets the document's root Element node."}, {"name": "addContent", "parameters": [{"name": "content", "type": "Content"}], "result": "Element", "description": "Appends the given node as the last child of the Element node."}, {"name": "addContent", "parameters": [{"name": "index", "type": "Integer"}, {"name": "content", "type": "Content"}], "result": "Element", "description": "Inserts the given node at the given index among all nodes that are immediate children of the\nElement node."}, {"name": "cloneContent", "parameters": [], "result": "Content[]", "description": "Creates unattached copies of all nodes that are immediate children of the {@code Element} node."}, {"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getAllContent", "parameters": [], "result": "Content[]", "description": "Gets all nodes that are immediate children of the {@code Element} node."}, {"name": "getAttribute", "parameters": [{"name": "name", "type": "String"}], "result": "Attribute", "description": "Gets the attribute for this Element node with the given name and no namespace."}, {"name": "getAttribute", "parameters": [{"name": "name", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "Attribute", "description": "Gets the attribute for this Element node with the given name and namespace."}, {"name": "getAttributes", "parameters": [], "result": "Attribute[]", "description": "Gets all attributes for this Element node, in the order they appear in the document."}, {"name": "getChild", "parameters": [{"name": "name", "type": "String"}], "result": "Element", "description": "Gets the first Element node with the given name and no namespace that is an immediate\nchild of this Element node."}, {"name": "getChild", "parameters": [{"name": "name", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "Element", "description": "Gets the first Element node with the given name and namespace that is an immediate\nchild of this Element node."}, {"name": "getChildText", "parameters": [{"name": "name", "type": "String"}], "result": "String", "description": "Gets the text value of the node with the given name and no namespace, if the node is an\nimmediate child of the Element node."}, {"name": "getChildText", "parameters": [{"name": "name", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "String", "description": "Gets the text value of the node with the given name and namespace, if the node is an immediate\nchild of the Element node."}, {"name": "getChildren", "parameters": [], "result": "Element[]", "description": "Gets all Element nodes that are immediate children of this Element node, in the\norder they appear in the document."}, {"name": "getChildren", "parameters": [{"name": "name", "type": "String"}], "result": "Element[]", "description": "Gets all Element nodes with the given name and no namespace that are immediate children\nof this Element node, in the order they appear in the document."}, {"name": "getChildren", "parameters": [{"name": "name", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "Element[]", "description": "Gets all Element nodes with the given name and namespace that are immediate children of\nthis Element node, in the order they appear in the document."}, {"name": "getContent", "parameters": [{"name": "index", "type": "Integer"}], "result": "Content", "description": "Gets the node at the given index among all nodes that are immediate children of the\n{@code Element} node."}, {"name": "getContentSize", "parameters": [], "result": "Integer", "description": "Gets the number of nodes that are immediate children of the {@code Element} node."}, {"name": "getDescendants", "parameters": [], "result": "Content[]", "description": "Gets all nodes that are direct or indirect children of the {@code Element} node, in the order they\nappear in the document."}, {"name": "getDocument", "parameters": [], "result": "Document", "description": "Gets the XML document that contains the {@code Element} node."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the local name of the Element node."}, {"name": "getNamespace", "parameters": [], "result": "Namespace", "description": "Gets the namespace for the Element node."}, {"name": "getNamespace", "parameters": [{"name": "prefix", "type": "String"}], "result": "Namespace", "description": "Gets the namespace with the given prefix for the Element node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getQualifiedName", "parameters": [], "result": "String", "description": "Gets the local name and namespace prefix of the Element node, in the form [namespacePrefix]:[localName]."}, {"name": "getText", "parameters": [], "result": "String", "description": "Gets the text value of the Element node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "isAncestorOf", "parameters": [{"name": "other", "type": "Element"}], "result": "Boolean", "description": "Determines whether this Element node is a direct or indirect parent of a given Element node."}, {"name": "isRootElement", "parameters": [], "result": "Boolean", "description": "Determines whether the Element node is the document's root node."}, {"name": "removeAttribute", "parameters": [{"name": "attribute", "type": "Attribute"}], "result": "Boolean", "description": "Removes the given attribute for this Element node, if such an attribute exists."}, {"name": "removeAttribute", "parameters": [{"name": "attributeName", "type": "String"}], "result": "Boolean", "description": "Removes the attribute for this Element node with the given name and no namespace, if\nsuch an attribute exists."}, {"name": "removeAttribute", "parameters": [{"name": "attributeName", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "Boolean", "description": "Removes the attribute for this Element node with the given name and namespace, if such\nan attribute exists."}, {"name": "removeContent", "parameters": [], "result": "Content[]", "description": "Removes all nodes that are immediate children of the {@code Element} node."}, {"name": "removeContent", "parameters": [{"name": "content", "type": "Content"}], "result": "Boolean", "description": "Removes the given node, if the node is an immediate child of the {@code Element} node."}, {"name": "removeContent", "parameters": [{"name": "index", "type": "Integer"}], "result": "Content", "description": "Removes the node at the given index among all nodes that are immediate children of the\n{@code Element} node."}, {"name": "setAttribute", "parameters": [{"name": "attribute", "type": "Attribute"}], "result": "Element", "description": "Sets the given attribute for this Element node."}, {"name": "setAttribute", "parameters": [{"name": "name", "type": "String"}, {"name": "value", "type": "String"}], "result": "Element", "description": "Sets the attribute for this Element node with the given name, value, and no namespace."}, {"name": "setAttribute", "parameters": [{"name": "name", "type": "String"}, {"name": "value", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "Element", "description": "Sets the attribute for this Element node with the given name, value, and namespace."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Element", "description": "Sets the local name of the Element node."}, {"name": "setNamespace", "parameters": [{"name": "namespace", "type": "Namespace"}], "result": "Element", "description": "Sets the namespace for the Element node."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Element", "description": "Sets the text value of the Element node."}, {"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the EntityReference node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getPublicId", "parameters": [], "result": "String", "description": "Gets the public ID of the EntityReference node."}, {"name": "getSystemId", "parameters": [], "result": "String", "description": "Gets the system ID of the EntityReference node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "EntityRef", "description": "Sets the name of the EntityReference node."}, {"name": "setPublicId", "parameters": [{"name": "id", "type": "String"}], "result": "EntityRef", "description": "Sets the public ID of the EntityReference node."}, {"name": "setSystemId", "parameters": [{"name": "id", "type": "String"}], "result": "EntityRef", "description": "Sets the system ID of the EntityReference node."}, {"name": "format", "parameters": [{"name": "document", "type": "Document"}], "result": "String", "description": "Outputs the given Document as a formatted string."}, {"name": "format", "parameters": [{"name": "element", "type": "Element"}], "result": "String", "description": "Outputs the given Element node as a formatted string."}, {"name": "setEncoding", "parameters": [{"name": "encoding", "type": "String"}], "result": "Format", "description": "Sets the character encoding that the formatter should use."}, {"name": "setIndent", "parameters": [{"name": "indent", "type": "String"}], "result": "Format", "description": "Sets the string used to indent child nodes relative to their parents."}, {"name": "setLineSeparator", "parameters": [{"name": "separator", "type": "String"}], "result": "Format", "description": "Sets the string to insert whenever the formatter would normally insert a line break."}, {"name": "setOmitDeclaration", "parameters": [{"name": "omitDeclaration", "type": "Boolean"}], "result": "Format", "description": "Sets whether the formatter should omit the XML declaration, such as <?xml version=\"1.0\"\nencoding=\"UTF-8\"?>."}, {"name": "setOmitEncoding", "parameters": [{"name": "omitEncoding", "type": "Boolean"}], "result": "Format", "description": "Sets whether the formatter should omit the encoding in the XML declaration, such as the\nencoding field in <?xml version=\"1.0\" encoding=\"UTF-8\"?>."}, {"name": "getPrefix", "parameters": [], "result": "String", "description": "Gets the prefix for the namespace."}, {"name": "getURI", "parameters": [], "result": "String", "description": "Gets the URI for the namespace."}, {"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getData", "parameters": [], "result": "String", "description": "Gets the raw data for every instruction in the ProcessingInstruction node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getTarget", "parameters": [], "result": "String", "description": "Gets the target for the ProcessingInstruction node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "append", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Appends the given text to any content that already exists in the node."}, {"name": "detach", "parameters": [], "result": "Content", "description": "Detaches the node from its parent Element node."}, {"name": "getParentElement", "parameters": [], "result": "Element", "description": "Gets the node's parent Element node."}, {"name": "getText", "parameters": [], "result": "String", "description": "Gets the text value of the Text node."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the text value of all nodes that are direct or indirect children of the node, in the order\nthey appear in the document."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Sets the text value of the Text node."}, {"name": "createCdata", "parameters": [{"name": "text", "type": "String"}], "result": "Cdata", "description": "Creates an unattached CDATASection node with the given value."}, {"name": "createComment", "parameters": [{"name": "text", "type": "String"}], "result": "Comment", "description": "Creates an unattached Comment node with the given value."}, {"name": "createDocType", "parameters": [{"name": "elementName", "type": "String"}], "result": "DocType", "description": "Creates an unattached DocumentType node for the root Element node\nwith the given name."}, {"name": "createDocType", "parameters": [{"name": "elementName", "type": "String"}, {"name": "systemId", "type": "String"}], "result": "DocType", "description": "Creates an unattached DocumentType node for the root Element node\nwith the given name, and the given system ID for the external subset data."}, {"name": "createDocType", "parameters": [{"name": "elementName", "type": "String"}, {"name": "publicId", "type": "String"}, {"name": "systemId", "type": "String"}], "result": "DocType", "description": "Creates an unattached DocumentType node for the root Element node\nwith the given name, and the given public ID and system ID for the external subset data."}, {"name": "createDocument", "parameters": [], "result": "Document", "description": "Creates an empty XML document."}, {"name": "createDocument", "parameters": [{"name": "rootElement", "type": "Element"}], "result": "Document", "description": "Creates an XML document with the given root Element node."}, {"name": "createElement", "parameters": [{"name": "name", "type": "String"}], "result": "Element", "description": "Creates an unattached Element node with the given local name and no namespace."}, {"name": "createElement", "parameters": [{"name": "name", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "Element", "description": "Creates an unattached Element node with the given local name and namespace."}, {"name": "createText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Creates an unattached Text node with the given value."}, {"name": "getCompactFormat", "parameters": [], "result": "Format", "description": "Creates a Format object for outputting a compact XML document."}, {"name": "getNamespace", "parameters": [{"name": "uri", "type": "String"}], "result": "Namespace", "description": "Creates a Namespace with the given URI."}, {"name": "getNamespace", "parameters": [{"name": "prefix", "type": "String"}, {"name": "uri", "type": "String"}], "result": "Namespace", "description": "Creates a Namespace with the given prefix and URI."}, {"name": "getNoNamespace", "parameters": [], "result": "Namespace", "description": "Creates a Namespace that represents the absence of a real namespace."}, {"name": "getPrettyFormat", "parameters": [], "result": "Format", "description": "Creates a Format object for outputting a human-readable XML document."}, {"name": "getRawFormat", "parameters": [], "result": "Format", "description": "Creates a Format object for outputting a raw XML document."}, {"name": "getXmlNamespace", "parameters": [], "result": "Namespace", "description": "Creates a Namespace with the standard xml prefix."}, {"name": "parse", "parameters": [{"name": "xml", "type": "String"}], "result": "Document", "description": "Creates an Document from the given XML, without validating the XML."}], "properties": [{"name": "CDATA", "type": "Enum", "url": "", "description": "An XML CDATASection node."}, {"name": "COMMENT", "type": "Enum", "url": "", "description": "An XML Comment node."}, {"name": "DOCTYPE", "type": "Enum", "url": "", "description": "An XML DocumentType node."}, {"name": "ELEMENT", "type": "Enum", "url": "", "description": "An XML Element node."}, {"name": "ENTITYREF", "type": "Enum", "url": "", "description": "An XML EntityReference node."}, {"name": "PROCESSINGINSTRUCTION", "type": "Enum", "url": "", "description": "An XML ProcessingInstruction node."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "An XML Text node."}, {"name": "ContentTypes", "type": "ContentType", "url": "/apps-script/reference/xml-service/content-type", "description": "An enumeration representing the types of XML content nodes."}]},
{"url": "https://developers.google.com/apps-script/reference/utilities/mac-algorithm", "name": "MacAlgorithm", "type": "enum", "methods": [], "properties": [{"name": "HMAC_MD5", "type": "Enum", "url": "", "description": ""}, {"name": "HMAC_SHA_1", "type": "Enum", "url": "", "description": ""}, {"name": "HMAC_SHA_256", "type": "Enum", "url": "", "description": ""}, {"name": "HMAC_SHA_384", "type": "Enum", "url": "", "description": ""}, {"name": "HMAC_SHA_512", "type": "Enum", "url": "", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/utilities/rsa-algorithm", "name": "RsaAlgorithm", "type": "enum", "methods": [], "properties": [{"name": "RSA_SHA_1", "type": "Enum", "url": "", "description": ""}, {"name": "RSA_SHA_256", "type": "Enum", "url": "", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/base/month.html", "name": "Month", "type": "enum", "methods": [], "properties": [{"name": "JANUARY", "type": "Enum", "url": "", "description": "January (month 1)."}, {"name": "FEBRUARY", "type": "Enum", "url": "", "description": "February (month 2)."}, {"name": "MARCH", "type": "Enum", "url": "", "description": "March (month 3)."}, {"name": "APRIL", "type": "Enum", "url": "", "description": "April (month 4)."}, {"name": "MAY", "type": "Enum", "url": "", "description": "May (month 5)."}, {"name": "JUNE", "type": "Enum", "url": "", "description": "June (month 6)."}, {"name": "JULY", "type": "Enum", "url": "", "description": "July (month 7)."}, {"name": "AUGUST", "type": "Enum", "url": "", "description": "August (month 8)."}, {"name": "SEPTEMBER", "type": "Enum", "url": "", "description": "September (month 9)."}, {"name": "OCTOBER", "type": "Enum", "url": "", "description": "October (month 10)."}, {"name": "NOVEMBER", "type": "Enum", "url": "", "description": "November (month 11)."}, {"name": "DECEMBER", "type": "Enum", "url": "", "description": "December (month 12)."}]},
{"url": "https://developers.google.com/apps-script/reference/utilities/digest-algorithm", "name": "DigestAlgorithm", "type": "enum", "methods": [], "properties": [{"name": "MD2", "type": "Enum", "url": "", "description": "MD2 algorithm"}, {"name": "MD5", "type": "Enum", "url": "", "description": "MD5 algorithm"}, {"name": "SHA_1", "type": "Enum", "url": "", "description": "SHA-1 algorithm"}, {"name": "SHA_256", "type": "Enum", "url": "", "description": "SHA-256 algorithm"}, {"name": "SHA_384", "type": "Enum", "url": "", "description": "SHA-384 algorithm"}, {"name": "SHA_512", "type": "Enum", "url": "", "description": "SHA-512 algorithm"}]},
{"url": "https://developers.google.com/apps-script/reference/utilities/charset", "name": "Charset", "type": "enum", "methods": [], "properties": [{"name": "US_ASCII", "type": "Enum", "url": "", "description": ""}, {"name": "UTF_8", "type": "Enum", "url": "", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/utilities", "name": "Utilities", "type": "utilities", "methods": [{"name": "base64Decode", "parameters": [{"name": "encoded", "type": "String"}], "result": "Byte[]", "description": "Decodes a base-64 encoded string into a UTF-8 byte array."}, {"name": "base64Decode", "parameters": [{"name": "encoded", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Decodes a base-64 encoded string into a byte array in a specific character set."}, {"name": "base64DecodeWebSafe", "parameters": [{"name": "encoded", "type": "String"}], "result": "Byte[]", "description": "Decodes a base-64 web-safe encoded string into a UTF-8 byte array."}, {"name": "base64DecodeWebSafe", "parameters": [{"name": "encoded", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Decodes a base-64 web-safe encoded string into a byte array in a specific character set."}, {"name": "base64Encode", "parameters": [{"name": "data", "type": "Byte"}], "result": "String", "description": "Generates a base-64 encoded string from the given byte array."}, {"name": "base64Encode", "parameters": [{"name": "data", "type": "String"}], "result": "String", "description": "Generates a base-64 encoded string from the given string."}, {"name": "base64Encode", "parameters": [{"name": "data", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "String", "description": "Generates a base-64 encoded string from the given string in a specific character set."}, {"name": "base64EncodeWebSafe", "parameters": [{"name": "data", "type": "Byte"}], "result": "String", "description": "Generates a base-64 web-safe encoded string from the given byte array."}, {"name": "base64EncodeWebSafe", "parameters": [{"name": "data", "type": "String"}], "result": "String", "description": "Generates a base-64 web-safe encoded string from the given string."}, {"name": "base64EncodeWebSafe", "parameters": [{"name": "data", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "String", "description": "Generates a base-64 web-safe encoded string from the given string in a specific character set."}, {"name": "computeDigest", "parameters": [{"name": "algorithm", "type": "DigestAlgorithm"}, {"name": "value", "type": "Byte"}], "result": "Byte[]", "description": "Compute a digest using the specified algorithm on the specified Byte[] value."}, {"name": "computeDigest", "parameters": [{"name": "algorithm", "type": "DigestAlgorithm"}, {"name": "value", "type": "String"}], "result": "Byte[]", "description": "Compute a digest using the specified algorithm on the specified String value."}, {"name": "computeDigest", "parameters": [{"name": "algorithm", "type": "DigestAlgorithm"}, {"name": "value", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Compute a digest using the specified algorithm on the specified String value with the\ngiven character set."}, {"name": "computeHmacSha256Signature", "parameters": [{"name": "value", "type": "Byte"}, {"name": "key", "type": "Byte"}], "result": "Byte[]", "description": "Signs the provided value using HMAC-SHA256 with the given key."}, {"name": "computeHmacSha256Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Signs the provided value using HMAC-SHA256 with the given key."}, {"name": "computeHmacSha256Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Signs the provided value using HMAC-SHA256 with the given key and character set."}, {"name": "computeHmacSignature", "parameters": [{"name": "algorithm", "type": "MacAlgorithm"}, {"name": "value", "type": "Byte"}, {"name": "key", "type": "Byte"}], "result": "Byte[]", "description": "Compute a message authentication code using the specified algorithm on the specified key and\nvalue."}, {"name": "computeHmacSignature", "parameters": [{"name": "algorithm", "type": "MacAlgorithm"}, {"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Compute a message authentication code using the specified algorithm on the specified key and\nvalue."}, {"name": "computeHmacSignature", "parameters": [{"name": "algorithm", "type": "MacAlgorithm"}, {"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Compute a message authentication code using the specified algorithm on the specified key and\nvalue."}, {"name": "computeRsaSha1Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Signs the provided value using RSA-SHA1 with the given key."}, {"name": "computeRsaSha1Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Signs the provided value using RSA-SHA1 with the given key and charset."}, {"name": "computeRsaSha256Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Signs the provided value using RSA-SHA256 with the given key."}, {"name": "computeRsaSha256Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Signs the provided value using RSA-SHA256 with the given key."}, {"name": "computeRsaSignature", "parameters": [{"name": "algorithm", "type": "RsaAlgorithm"}, {"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Signs the provided value using the specified RSA algorithm with the given key."}, {"name": "computeRsaSignature", "parameters": [{"name": "algorithm", "type": "RsaAlgorithm"}, {"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Signs the provided value using the specified RSA algorithm with the given key and charset."}, {"name": "formatDate", "parameters": [{"name": "date", "type": "Date"}, {"name": "timeZone", "type": "String"}, {"name": "format", "type": "String"}], "result": "String", "description": "Formats date according to specification described in Java SE SimpleDateFormat class."}, {"name": "formatString", "parameters": [{"name": "template", "type": "String"}, {"name": "args", "type": "Object..."}], "result": "String", "description": "Performs sprintf-like string formatting using '%'-style format strings."}, {"name": "getUuid", "parameters": [], "result": "String", "description": "Get a UUID as a string (equivalent to using the java.util.UUID.randomUUID() method)."}, {"name": "gzip", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Blob", "description": "gzip-compresses the provided Blob data and returns it in a new Blob object."}, {"name": "gzip", "parameters": [{"name": "blob", "type": "BlobSource"}, {"name": "name", "type": "String"}], "result": "Blob", "description": "gzip-compresses the provided Blob data and returns it in a new Blob object."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "Byte"}], "result": "Blob", "description": "Create a new Blob object from a byte array."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "Byte"}, {"name": "contentType", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a byte array and content type."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "Byte"}, {"name": "contentType", "type": "String"}, {"name": "name", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a byte array, content type, and name."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a string."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "String"}, {"name": "contentType", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a string and content type."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "String"}, {"name": "contentType", "type": "String"}, {"name": "name", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a string, content type, and name."}, {"name": "parseCsv", "parameters": [{"name": "csv", "type": "String"}], "result": "String[][]", "description": "Returns a tabular 2D array representation of a CSV string."}, {"name": "parseCsv", "parameters": [{"name": "csv", "type": "String"}, {"name": "delimiter", "type": "Char"}], "result": "String[][]", "description": "Returns a tabular 2D array representation of a CSV string using a custom delimiter."}, {"name": "sleep", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "void", "description": "Sleeps for specified number of milliseconds."}, {"name": "ungzip", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Blob", "description": "Uncompresses a Blob object and returns a Blob containing the uncompressed\ndata."}, {"name": "unzip", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Blob[]", "description": "Takes a Blob representing a zip file and returns its component files."}, {"name": "zip", "parameters": [{"name": "blobs", "type": "BlobSource"}], "result": "Blob", "description": "Creates a new Blob object that is a zip file containing the data from the Blobs passed in."}, {"name": "zip", "parameters": [{"name": "blobs", "type": "BlobSource"}, {"name": "name", "type": "String"}], "result": "Blob", "description": "Creates a new Blob object that is a zip file containing the data from the Blobs passed in."}], "properties": [{"name": "US_ASCII", "type": "Enum", "url": "", "description": ""}, {"name": "UTF_8", "type": "Enum", "url": "", "description": ""}, {"name": "MD2", "type": "Enum", "url": "", "description": "MD2 algorithm"}, {"name": "MD5", "type": "Enum", "url": "", "description": "MD5 algorithm"}, {"name": "SHA_1", "type": "Enum", "url": "", "description": "SHA-1 algorithm"}, {"name": "SHA_256", "type": "Enum", "url": "", "description": "SHA-256 algorithm"}, {"name": "SHA_384", "type": "Enum", "url": "", "description": "SHA-384 algorithm"}, {"name": "SHA_512", "type": "Enum", "url": "", "description": "SHA-512 algorithm"}, {"name": "HMAC_MD5", "type": "Enum", "url": "", "description": ""}, {"name": "HMAC_SHA_1", "type": "Enum", "url": "", "description": ""}, {"name": "HMAC_SHA_256", "type": "Enum", "url": "", "description": ""}, {"name": "HMAC_SHA_384", "type": "Enum", "url": "", "description": ""}, {"name": "HMAC_SHA_512", "type": "Enum", "url": "", "description": ""}, {"name": "RSA_SHA_1", "type": "Enum", "url": "", "description": ""}, {"name": "RSA_SHA_256", "type": "Enum", "url": "", "description": ""}, {"name": "Charset", "type": "Charset", "url": "/apps-script/reference/utilities/charset", "description": ""}, {"name": "DigestAlgorithm", "type": "DigestAlgorithm", "url": "/apps-script/reference/utilities/digest-algorithm", "description": ""}, {"name": "MacAlgorithm", "type": "MacAlgorithm", "url": "/apps-script/reference/utilities/mac-algorithm", "description": ""}, {"name": "RsaAlgorithm", "type": "RsaAlgorithm", "url": "/apps-script/reference/utilities/rsa-algorithm", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/xml-service/xml-service", "name": "XmlService", "type": "class", "methods": [{"name": "createCdata", "parameters": [{"name": "text", "type": "String"}], "result": "Cdata", "description": "Creates an unattached CDATASection node with the given value."}, {"name": "createComment", "parameters": [{"name": "text", "type": "String"}], "result": "Comment", "description": "Creates an unattached Comment node with the given value."}, {"name": "createDocType", "parameters": [{"name": "elementName", "type": "String"}], "result": "DocType", "description": "Creates an unattached DocumentType node for the root Element node\nwith the given name."}, {"name": "createDocType", "parameters": [{"name": "elementName", "type": "String"}, {"name": "systemId", "type": "String"}], "result": "DocType", "description": "Creates an unattached DocumentType node for the root Element node\nwith the given name, and the given system ID for the external subset data."}, {"name": "createDocType", "parameters": [{"name": "elementName", "type": "String"}, {"name": "publicId", "type": "String"}, {"name": "systemId", "type": "String"}], "result": "DocType", "description": "Creates an unattached DocumentType node for the root Element node\nwith the given name, and the given public ID and system ID for the external subset data."}, {"name": "createDocument", "parameters": [], "result": "Document", "description": "Creates an empty XML document."}, {"name": "createDocument", "parameters": [{"name": "rootElement", "type": "Element"}], "result": "Document", "description": "Creates an XML document with the given root Element node."}, {"name": "createElement", "parameters": [{"name": "name", "type": "String"}], "result": "Element", "description": "Creates an unattached Element node with the given local name and no namespace."}, {"name": "createElement", "parameters": [{"name": "name", "type": "String"}, {"name": "namespace", "type": "Namespace"}], "result": "Element", "description": "Creates an unattached Element node with the given local name and namespace."}, {"name": "createText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Creates an unattached Text node with the given value."}, {"name": "getCompactFormat", "parameters": [], "result": "Format", "description": "Creates a Format object for outputting a compact XML document."}, {"name": "getNamespace", "parameters": [{"name": "uri", "type": "String"}], "result": "Namespace", "description": "Creates a Namespace with the given URI."}, {"name": "getNamespace", "parameters": [{"name": "prefix", "type": "String"}, {"name": "uri", "type": "String"}], "result": "Namespace", "description": "Creates a Namespace with the given prefix and URI."}, {"name": "getNoNamespace", "parameters": [], "result": "Namespace", "description": "Creates a Namespace that represents the absence of a real namespace."}, {"name": "getPrettyFormat", "parameters": [], "result": "Format", "description": "Creates a Format object for outputting a human-readable XML document."}, {"name": "getRawFormat", "parameters": [], "result": "Format", "description": "Creates a Format object for outputting a raw XML document."}, {"name": "getXmlNamespace", "parameters": [], "result": "Namespace", "description": "Creates a Namespace with the standard xml prefix."}, {"name": "parse", "parameters": [{"name": "xml", "type": "String"}], "result": "Document", "description": "Creates an Document from the given XML, without validating the XML."}], "properties": [{"name": "ContentTypes", "type": "ContentType", "url": "/apps-script/reference/xml-service/content-type", "description": "An enumeration representing the types of XML content nodes."}]},
{"url": "https://developers.google.com/apps-script/reference/utilities/utilities", "name": "Utilities", "type": "class", "methods": [{"name": "base64Decode", "parameters": [{"name": "encoded", "type": "String"}], "result": "Byte[]", "description": "Decodes a base-64 encoded string into a UTF-8 byte array."}, {"name": "base64Decode", "parameters": [{"name": "encoded", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Decodes a base-64 encoded string into a byte array in a specific character set."}, {"name": "base64DecodeWebSafe", "parameters": [{"name": "encoded", "type": "String"}], "result": "Byte[]", "description": "Decodes a base-64 web-safe encoded string into a UTF-8 byte array."}, {"name": "base64DecodeWebSafe", "parameters": [{"name": "encoded", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Decodes a base-64 web-safe encoded string into a byte array in a specific character set."}, {"name": "base64Encode", "parameters": [{"name": "data", "type": "Byte"}], "result": "String", "description": "Generates a base-64 encoded string from the given byte array."}, {"name": "base64Encode", "parameters": [{"name": "data", "type": "String"}], "result": "String", "description": "Generates a base-64 encoded string from the given string."}, {"name": "base64Encode", "parameters": [{"name": "data", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "String", "description": "Generates a base-64 encoded string from the given string in a specific character set."}, {"name": "base64EncodeWebSafe", "parameters": [{"name": "data", "type": "Byte"}], "result": "String", "description": "Generates a base-64 web-safe encoded string from the given byte array."}, {"name": "base64EncodeWebSafe", "parameters": [{"name": "data", "type": "String"}], "result": "String", "description": "Generates a base-64 web-safe encoded string from the given string."}, {"name": "base64EncodeWebSafe", "parameters": [{"name": "data", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "String", "description": "Generates a base-64 web-safe encoded string from the given string in a specific character set."}, {"name": "computeDigest", "parameters": [{"name": "algorithm", "type": "DigestAlgorithm"}, {"name": "value", "type": "Byte"}], "result": "Byte[]", "description": "Compute a digest using the specified algorithm on the specified Byte[] value."}, {"name": "computeDigest", "parameters": [{"name": "algorithm", "type": "DigestAlgorithm"}, {"name": "value", "type": "String"}], "result": "Byte[]", "description": "Compute a digest using the specified algorithm on the specified String value."}, {"name": "computeDigest", "parameters": [{"name": "algorithm", "type": "DigestAlgorithm"}, {"name": "value", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Compute a digest using the specified algorithm on the specified String value with the\ngiven character set."}, {"name": "computeHmacSha256Signature", "parameters": [{"name": "value", "type": "Byte"}, {"name": "key", "type": "Byte"}], "result": "Byte[]", "description": "Signs the provided value using HMAC-SHA256 with the given key."}, {"name": "computeHmacSha256Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Signs the provided value using HMAC-SHA256 with the given key."}, {"name": "computeHmacSha256Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Signs the provided value using HMAC-SHA256 with the given key and character set."}, {"name": "computeHmacSignature", "parameters": [{"name": "algorithm", "type": "MacAlgorithm"}, {"name": "value", "type": "Byte"}, {"name": "key", "type": "Byte"}], "result": "Byte[]", "description": "Compute a message authentication code using the specified algorithm on the specified key and\nvalue."}, {"name": "computeHmacSignature", "parameters": [{"name": "algorithm", "type": "MacAlgorithm"}, {"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Compute a message authentication code using the specified algorithm on the specified key and\nvalue."}, {"name": "computeHmacSignature", "parameters": [{"name": "algorithm", "type": "MacAlgorithm"}, {"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Compute a message authentication code using the specified algorithm on the specified key and\nvalue."}, {"name": "computeRsaSha1Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Signs the provided value using RSA-SHA1 with the given key."}, {"name": "computeRsaSha1Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Signs the provided value using RSA-SHA1 with the given key and charset."}, {"name": "computeRsaSha256Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Signs the provided value using RSA-SHA256 with the given key."}, {"name": "computeRsaSha256Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Signs the provided value using RSA-SHA256 with the given key."}, {"name": "computeRsaSignature", "parameters": [{"name": "algorithm", "type": "RsaAlgorithm"}, {"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Signs the provided value using the specified RSA algorithm with the given key."}, {"name": "computeRsaSignature", "parameters": [{"name": "algorithm", "type": "RsaAlgorithm"}, {"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Signs the provided value using the specified RSA algorithm with the given key and charset."}, {"name": "formatDate", "parameters": [{"name": "date", "type": "Date"}, {"name": "timeZone", "type": "String"}, {"name": "format", "type": "String"}], "result": "String", "description": "Formats date according to specification described in Java SE SimpleDateFormat class."}, {"name": "formatString", "parameters": [{"name": "template", "type": "String"}, {"name": "args", "type": "Object..."}], "result": "String", "description": "Performs sprintf-like string formatting using '%'-style format strings."}, {"name": "getUuid", "parameters": [], "result": "String", "description": "Get a UUID as a string (equivalent to using the java.util.UUID.randomUUID() method)."}, {"name": "gzip", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Blob", "description": "gzip-compresses the provided Blob data and returns it in a new Blob object."}, {"name": "gzip", "parameters": [{"name": "blob", "type": "BlobSource"}, {"name": "name", "type": "String"}], "result": "Blob", "description": "gzip-compresses the provided Blob data and returns it in a new Blob object."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "Byte"}], "result": "Blob", "description": "Create a new Blob object from a byte array."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "Byte"}, {"name": "contentType", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a byte array and content type."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "Byte"}, {"name": "contentType", "type": "String"}, {"name": "name", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a byte array, content type, and name."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a string."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "String"}, {"name": "contentType", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a string and content type."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "String"}, {"name": "contentType", "type": "String"}, {"name": "name", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a string, content type, and name."}, {"name": "parseCsv", "parameters": [{"name": "csv", "type": "String"}], "result": "String[][]", "description": "Returns a tabular 2D array representation of a CSV string."}, {"name": "parseCsv", "parameters": [{"name": "csv", "type": "String"}, {"name": "delimiter", "type": "Char"}], "result": "String[][]", "description": "Returns a tabular 2D array representation of a CSV string using a custom delimiter."}, {"name": "sleep", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "void", "description": "Sleeps for specified number of milliseconds."}, {"name": "ungzip", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Blob", "description": "Uncompresses a Blob object and returns a Blob containing the uncompressed\ndata."}, {"name": "unzip", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Blob[]", "description": "Takes a Blob representing a zip file and returns its component files."}, {"name": "zip", "parameters": [{"name": "blobs", "type": "BlobSource"}], "result": "Blob", "description": "Creates a new Blob object that is a zip file containing the data from the Blobs passed in."}, {"name": "zip", "parameters": [{"name": "blobs", "type": "BlobSource"}, {"name": "name", "type": "String"}], "result": "Blob", "description": "Creates a new Blob object that is a zip file containing the data from the Blobs passed in."}], "properties": [{"name": "Charset", "type": "Charset", "url": "/apps-script/reference/utilities/charset", "description": ""}, {"name": "DigestAlgorithm", "type": "DigestAlgorithm", "url": "/apps-script/reference/utilities/digest-algorithm", "description": ""}, {"name": "MacAlgorithm", "type": "MacAlgorithm", "url": "/apps-script/reference/utilities/mac-algorithm", "description": ""}, {"name": "RsaAlgorithm", "type": "RsaAlgorithm", "url": "/apps-script/reference/utilities/rsa-algorithm", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/url-fetch/url-fetch-app", "name": "UrlFetchApp", "type": "class", "methods": [{"name": "fetch", "parameters": [{"name": "url", "type": "String"}], "result": "HTTPResponse", "description": "Makes a request to fetch a URL."}, {"name": "fetch", "parameters": [{"name": "url", "type": "String"}, {"name": "params", "type": "Object"}], "result": "HTTPResponse", "description": "Makes a request to fetch a URL using optional advanced parameters."}, {"name": "fetchAll", "parameters": [{"name": "requests", "type": "Object"}], "result": "HTTPResponse[]", "description": "Makes multiple requests to fetch multiple URLs using optional advanced parameters."}, {"name": "getRequest", "parameters": [{"name": "url", "type": "String"}], "result": "Object", "description": "Returns the request that is made if the operation was invoked."}, {"name": "getRequest", "parameters": [{"name": "url", "type": "String"}, {"name": "params", "type": "Object"}], "result": "Object", "description": "Returns the request that is made if the operation were invoked."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/url-fetch/http-response", "name": "HTTPResponse", "type": "class", "methods": [{"name": "getAllHeaders", "parameters": [], "result": "Object", "description": "Returns an attribute/value map of headers for the HTTP response, with headers that have\nmultiple values returned as arrays."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getContent", "parameters": [], "result": "Byte[]", "description": "Gets the raw binary content of an HTTP response."}, {"name": "getContentText", "parameters": [], "result": "String", "description": "Gets the content of an HTTP response encoded as a string."}, {"name": "getContentText", "parameters": [{"name": "charset", "type": "String"}], "result": "String", "description": "Returns the content of an HTTP response encoded as a string of the given charset."}, {"name": "getHeaders", "parameters": [], "result": "Object", "description": "Returns an attribute/value map of headers for the HTTP response."}, {"name": "getResponseCode", "parameters": [], "result": "Integer", "description": "Get the HTTP status code (200 for OK, etc.) of an HTTP response."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/script/trigger-source", "name": "TriggerSource", "type": "enum", "methods": [], "properties": [{"name": "SPREADSHEETS", "type": "Enum", "url": "", "description": "Google Sheets causes the trigger to fire."}, {"name": "CLOCK", "type": "Enum", "url": "", "description": "A time-driven event causes the trigger to fire."}, {"name": "FORMS", "type": "Enum", "url": "", "description": "Google Forms causes the trigger to fire."}, {"name": "DOCUMENTS", "type": "Enum", "url": "", "description": "Google Docs causes the trigger to fire."}, {"name": "CALENDAR", "type": "Enum", "url": "", "description": "Google Calendar causes the trigger to fire."}]},
{"url": "https://developers.google.com/apps-script/reference/url-fetch", "name": "URL Fetch", "type": "url", "methods": [{"name": "getAllHeaders", "parameters": [], "result": "Object", "description": "Returns an attribute/value map of headers for the HTTP response, with headers that have\nmultiple values returned as arrays."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getContent", "parameters": [], "result": "Byte[]", "description": "Gets the raw binary content of an HTTP response."}, {"name": "getContentText", "parameters": [], "result": "String", "description": "Gets the content of an HTTP response encoded as a string."}, {"name": "getContentText", "parameters": [{"name": "charset", "type": "String"}], "result": "String", "description": "Returns the content of an HTTP response encoded as a string of the given charset."}, {"name": "getHeaders", "parameters": [], "result": "Object", "description": "Returns an attribute/value map of headers for the HTTP response."}, {"name": "getResponseCode", "parameters": [], "result": "Integer", "description": "Get the HTTP status code (200 for OK, etc.) of an HTTP response."}, {"name": "fetch", "parameters": [{"name": "url", "type": "String"}], "result": "HTTPResponse", "description": "Makes a request to fetch a URL."}, {"name": "fetch", "parameters": [{"name": "url", "type": "String"}, {"name": "params", "type": "Object"}], "result": "HTTPResponse", "description": "Makes a request to fetch a URL using optional advanced parameters."}, {"name": "fetchAll", "parameters": [{"name": "requests", "type": "Object"}], "result": "HTTPResponse[]", "description": "Makes multiple requests to fetch multiple URLs using optional advanced parameters."}, {"name": "getRequest", "parameters": [{"name": "url", "type": "String"}], "result": "Object", "description": "Returns the request that is made if the operation was invoked."}, {"name": "getRequest", "parameters": [{"name": "url", "type": "String"}, {"name": "params", "type": "Object"}], "result": "Object", "description": "Returns the request that is made if the operation were invoked."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/script/installation-source", "name": "InstallationSource", "type": "enum", "methods": [], "properties": [{"name": "APPS_MARKETPLACE_DOMAIN_ADD_ON", "type": "Enum", "url": "", "description": "Add-on was installed by the administrator for the user's domain."}, {"name": "NONE", "type": "Enum", "url": "", "description": "Script is not running as an add-on."}, {"name": "WEB_STORE_ADD_ON", "type": "Enum", "url": "", "description": "Add-on was installed by the user from the Chrome Web Store."}]},
{"url": "https://developers.google.com/apps-script/reference/script/authorization-status", "name": "AuthorizationStatus", "type": "enum", "methods": [], "properties": [{"name": "REQUIRED", "type": "Enum", "url": "", "description": "The user needs to authorize this script to use one or more services. In most cases, the script\nprompts the user for authorization the next time it runs; however, if the script is published\nas an add-on that uses installable triggers, the trigger runs the\nscript without prompting for authorization but throws an exception if the script attempts to\ncall the unauthorized service."}, {"name": "NOT_REQUIRED", "type": "Enum", "url": "", "description": "The user has granted this script all the authorization it currently requires."}]},
{"url": "https://developers.google.com/apps-script/reference/script/trigger-builder", "name": "TriggerBuilder", "type": "class", "methods": [{"name": "forDocument", "parameters": [{"name": "document", "type": "Document"}], "result": "DocumentTriggerBuilder", "description": "Creates and returns a DocumentTriggerBuilder tied to the given document."}, {"name": "forDocument", "parameters": [{"name": "key", "type": "String"}], "result": "DocumentTriggerBuilder", "description": "Creates and returns a DocumentTriggerBuilder tied to the document with the given ID."}, {"name": "forForm", "parameters": [{"name": "form", "type": "Form"}], "result": "FormTriggerBuilder", "description": "Creates and returns a FormTriggerBuilder tied to the given form."}, {"name": "forForm", "parameters": [{"name": "key", "type": "String"}], "result": "FormTriggerBuilder", "description": "Creates and returns a FormTriggerBuilder tied to the form with the given ID."}, {"name": "forSpreadsheet", "parameters": [{"name": "sheet", "type": "Spreadsheet"}], "result": "SpreadsheetTriggerBuilder", "description": "Creates and returns a SpreadsheetTriggerBuilder tied to the given spreadsheet."}, {"name": "forSpreadsheet", "parameters": [{"name": "key", "type": "String"}], "result": "SpreadsheetTriggerBuilder", "description": "Creates and returns a SpreadsheetTriggerBuilder tied to the spreadsheet with the given\nID."}, {"name": "forUserCalendar", "parameters": [{"name": "emailId", "type": "String"}], "result": "CalendarTriggerBuilder", "description": "Returns a builder for building calendar triggers."}, {"name": "timeBased", "parameters": [], "result": "ClockTriggerBuilder", "description": "Creates and returns a ClockTriggerBuilder for building time-based triggers."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/script/auth-mode", "name": "AuthMode", "type": "enum", "methods": [], "properties": [{"name": "NONE", "type": "Enum", "url": "", "description": "A mode that does not allow access to any services that require authorization. This mode occurs\nwhen an add-on executes an onOpen(e) simple trigger, and the user has installed an\nadd-on in a different document but the add-on has not been used in the current document."}, {"name": "CUSTOM_FUNCTION", "type": "Enum", "url": "", "description": "A mode that allows access to a limited subset of services for use in custom spreadsheet\nfunctions. Some of these services \u2014 including read-only access to Spreadsheet service \u2014\nnormally require authorization, but are permitted without authorization when used in a custom\nfunction. Because custom functions do not include an event parameter, this value is never\nreturned; it is documented only to demonstrate that custom functions run in their own\nauthorization mode."}, {"name": "LIMITED", "type": "Enum", "url": "", "description": "A mode that allows access to a limited subset of services. This mode occurs when an add-on or a\nscript bound to a document executes an onOpen(e) or onEdit(e) simple trigger, except in the case described for NONE."}, {"name": "FULL", "type": "Enum", "url": "", "description": "A mode that allows access to all services that require authorization. This mode occurs when an\nadd-on or a script executes as the result of any trigger other than the cases described for\nLIMITED or NONE."}]},
{"url": "https://developers.google.com/apps-script/reference/script/trigger", "name": "Trigger", "type": "class", "methods": [{"name": "getEventType", "parameters": [], "result": "EventType", "description": "Returns the event type that the trigger fires on."}, {"name": "getHandlerFunction", "parameters": [], "result": "String", "description": "Returns the function that will be called when the trigger fires."}, {"name": "getTriggerSource", "parameters": [], "result": "TriggerSource", "description": "Returns the source of events that will cause the trigger to fire."}, {"name": "getTriggerSourceId", "parameters": [], "result": "String", "description": "Returns the id specific to the source."}, {"name": "getUniqueId", "parameters": [], "result": "String", "description": "Returns a unique identifier that can be used to distinguish triggers from each other."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/script/spreadsheet-trigger-builder", "name": "SpreadsheetTriggerBuilder", "type": "class", "methods": [{"name": "create", "parameters": [], "result": "Trigger", "description": "Creates the trigger and returns it."}, {"name": "onChange", "parameters": [], "result": "SpreadsheetTriggerBuilder", "description": "Specifies a trigger that will fire when the spreadsheet's content or structure is changed."}, {"name": "onEdit", "parameters": [], "result": "SpreadsheetTriggerBuilder", "description": "Specifies a trigger that will fire when the spreadsheet is edited."}, {"name": "onFormSubmit", "parameters": [], "result": "SpreadsheetTriggerBuilder", "description": "Specifies a trigger that will fire when the spreadsheet has a form submitted to it."}, {"name": "onOpen", "parameters": [], "result": "SpreadsheetTriggerBuilder", "description": "Specifies a trigger that will fire when the spreadsheet is opened."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/script/state-token-builder", "name": "StateTokenBuilder", "type": "class", "methods": [{"name": "createToken", "parameters": [], "result": "String", "description": "Constructs an encrypted string representation of the state token."}, {"name": "withArgument", "parameters": [{"name": "name", "type": "String"}, {"name": "value", "type": "String"}], "result": "StateTokenBuilder", "description": "Adds an argument to the token."}, {"name": "withMethod", "parameters": [{"name": "method", "type": "String"}], "result": "StateTokenBuilder", "description": "Sets a callback function."}, {"name": "withTimeout", "parameters": [{"name": "seconds", "type": "Integer"}], "result": "StateTokenBuilder", "description": "Sets the duration (in seconds) for which the token is valid."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/script/document-trigger-builder", "name": "DocumentTriggerBuilder", "type": "class", "methods": [{"name": "create", "parameters": [], "result": "Trigger", "description": "Creates and returns the new trigger."}, {"name": "onOpen", "parameters": [], "result": "DocumentTriggerBuilder", "description": "Specifies a trigger that will fire when the document is opened."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/script/calendar-trigger-builder", "name": "CalendarTriggerBuilder", "type": "class", "methods": [{"name": "create", "parameters": [], "result": "Trigger", "description": "Creates the trigger and returns it."}, {"name": "onEventUpdated", "parameters": [], "result": "CalendarTriggerBuilder", "description": "Specifies a trigger that fires when a calendar entry is created, updated, or deleted."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/script/form-trigger-builder", "name": "FormTriggerBuilder", "type": "class", "methods": [{"name": "create", "parameters": [], "result": "Trigger", "description": "Creates and returns the new trigger."}, {"name": "onFormSubmit", "parameters": [], "result": "FormTriggerBuilder", "description": "Specifies a trigger that will fire when a response is submitted to the form."}, {"name": "onOpen", "parameters": [], "result": "FormTriggerBuilder", "description": "Specifies a trigger that will fire when the form's edit view is opened."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/script/event-type", "name": "EventType", "type": "enum", "methods": [], "properties": [{"name": "CLOCK", "type": "Enum", "url": "", "description": "The trigger fires once the time-driven event reaches a specific time."}, {"name": "ON_OPEN", "type": "Enum", "url": "", "description": "The trigger fires once the user opens the Google Docs, Sheets, or Forms file."}, {"name": "ON_EDIT", "type": "Enum", "url": "", "description": "The trigger fires once the user edits the Google Sheets file (for example, by entering a new\nvalue into a cell, which counts as an edit instead of a change)."}, {"name": "ON_FORM_SUBMIT", "type": "Enum", "url": "", "description": "The trigger fires once the user responds to a Google Form. This trigger is available either in\nthe Google Form itself or in the Google Sheets file that the form sends its responses to."}, {"name": "ON_CHANGE", "type": "Enum", "url": "", "description": "The trigger fires once the user changes the Google Sheets file (for example, by adding a row,\nwhich counts as a change instead of an edit)."}, {"name": "ON_EVENT_UPDATED", "type": "Enum", "url": "", "description": "The trigger fires once an event gets created, updated, or deleted on the specified Google\nCalendar."}]},
{"url": "https://developers.google.com/apps-script/reference/script/authorization-info", "name": "AuthorizationInfo", "type": "class", "methods": [{"name": "getAuthorizationStatus", "parameters": [], "result": "AuthorizationStatus", "description": "Gets a value that indicates whether the user needs to authorize this script to use one or more\nservices (for example, ScriptApp.AuthorizationStatus.REQUIRED)."}, {"name": "getAuthorizationUrl", "parameters": [], "result": "String", "description": "Gets the authorization URL that can be used to grant access to the script."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/script/service", "name": "Service", "type": "class", "methods": [{"name": "getUrl", "parameters": [], "result": "String", "description": "Returns the URL of the web app, if it has been deployed; otherwise returns null."}, {"name": "isEnabled", "parameters": [], "result": "Boolean", "description": "Returns true if the script is accessible as a web app."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/properties/user-properties", "name": "UserProperties", "type": "class", "methods": [], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/script/script-app", "name": "ScriptApp", "type": "class", "methods": [{"name": "deleteTrigger", "parameters": [{"name": "trigger", "type": "Trigger"}], "result": "void", "description": "Removes the given trigger so it no longer runs."}, {"name": "getAuthorizationInfo", "parameters": [{"name": "authMode", "type": "AuthMode"}], "result": "AuthorizationInfo", "description": "Gets an object used to determine whether the user needs to authorize this script to use one or\nmore services, and to provide the URL for an authorization dialog."}, {"name": "getIdentityToken", "parameters": [], "result": "String", "description": "Gets an OpenID Connect identity token for the\neffective user, if the openid scope has been granted."}, {"name": "getInstallationSource", "parameters": [], "result": "InstallationSource", "description": "Returns an enum value that indicates how the script came to be installed as an add-on for the\ncurrent user (for example, whether the user installed it personally through the Chrome Web\nStore, or whether a domain administrator installed it for all users)."}, {"name": "getOAuthToken", "parameters": [], "result": "String", "description": "Gets the OAuth 2.0 access token\nfor the effective user."}, {"name": "getProjectTriggers", "parameters": [], "result": "Trigger[]", "description": "Gets all installable triggers associated with the current project and current user."}, {"name": "getScriptId", "parameters": [], "result": "String", "description": "Gets the script project's unique ID."}, {"name": "getService", "parameters": [], "result": "Service", "description": "Gets an object used to control publishing the script as a web app."}, {"name": "getUserTriggers", "parameters": [{"name": "document", "type": "Document"}], "result": "Trigger[]", "description": "Gets all installable triggers owned by this user in the given document, for this script or\nadd-on only."}, {"name": "getUserTriggers", "parameters": [{"name": "form", "type": "Form"}], "result": "Trigger[]", "description": "Gets all installable triggers owned by this user in the given form, for this script or add-on\nonly."}, {"name": "getUserTriggers", "parameters": [{"name": "spreadsheet", "type": "Spreadsheet"}], "result": "Trigger[]", "description": "Gets all installable triggers owned by this user in the given spreadsheet, for this script or\nadd-on only."}, {"name": "invalidateAuth", "parameters": [], "result": "void", "description": "Invalidates the authorization the effective user has to execute the current script."}, {"name": "newStateToken", "parameters": [], "result": "StateTokenBuilder", "description": "Creates a builder for a state token that can be used in a callback API (like an OAuth flow)."}, {"name": "newTrigger", "parameters": [{"name": "functionName", "type": "String"}], "result": "TriggerBuilder", "description": "Begins the process of creating an installable trigger that, when fired, calls a given function."}], "properties": [{"name": "AuthMode", "type": "AuthMode", "url": "/apps-script/reference/script/auth-mode", "description": "An enumeration that identifies which categories of authorized services Apps Script is able to\nexecute through a triggered function."}, {"name": "AuthorizationStatus", "type": "AuthorizationStatus", "url": "/apps-script/reference/script/authorization-status", "description": "An enumeration denoting the authorization status of a script."}, {"name": "EventType", "type": "EventType", "url": "/apps-script/reference/script/event-type", "description": "An enumeration denoting the type of triggered event."}, {"name": "InstallationSource", "type": "InstallationSource", "url": "/apps-script/reference/script/installation-source", "description": "An enumeration denoting how the script was installed to the user as an add-on."}, {"name": "TriggerSource", "type": "TriggerSource", "url": "/apps-script/reference/script/trigger-source", "description": "An enumeration denoting the source of the event that causes the trigger to fire."}, {"name": "WeekDay", "type": "Weekday", "url": "https://developers.google.com/apps-script/reference/base/weekday.html", "description": "An enumeration representing the days of the week."}]},
{"url": "https://developers.google.com/apps-script/reference/script/clock-trigger-builder", "name": "ClockTriggerBuilder", "type": "class", "methods": [{"name": "after", "parameters": [{"name": "durationMilliseconds", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies the minimum duration (in milliseconds) after the current time that the trigger runs."}, {"name": "at", "parameters": [{"name": "date", "type": "Date"}], "result": "ClockTriggerBuilder", "description": "Specifies when the trigger runs."}, {"name": "atDate", "parameters": [{"name": "year", "type": "Integer"}, {"name": "month", "type": "Integer"}, {"name": "day", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies that the trigger fires on the given date, by default near midnight (+/- 15 minutes)."}, {"name": "atHour", "parameters": [{"name": "hour", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies the hour the trigger at which the trigger runs."}, {"name": "create", "parameters": [], "result": "Trigger", "description": "Creates the trigger."}, {"name": "everyDays", "parameters": [{"name": "n", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies to run the trigger every n days."}, {"name": "everyHours", "parameters": [{"name": "n", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies to run the trigger every n hours."}, {"name": "everyMinutes", "parameters": [{"name": "n", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies to run the trigger every n minutes."}, {"name": "everyWeeks", "parameters": [{"name": "n", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies to run the trigger every n weeks."}, {"name": "inTimezone", "parameters": [{"name": "timezone", "type": "String"}], "result": "ClockTriggerBuilder", "description": "Specifies the timezone for the specified dates/time when the trigger runs."}, {"name": "nearMinute", "parameters": [{"name": "minute", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies the minute at which the trigger runs (plus or minus 15 minutes)."}, {"name": "onMonthDay", "parameters": [{"name": "day", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies the date in the month that the trigger runs."}, {"name": "onWeekDay", "parameters": [{"name": "day", "type": "Weekday"}], "result": "ClockTriggerBuilder", "description": "Specifies the day of the week that the trigger runs."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/script", "name": "Script", "type": "script", "methods": [{"name": "getAuthorizationStatus", "parameters": [], "result": "AuthorizationStatus", "description": "Gets a value that indicates whether the user needs to authorize this script to use one or more\nservices (for example, ScriptApp.AuthorizationStatus.REQUIRED)."}, {"name": "getAuthorizationUrl", "parameters": [], "result": "String", "description": "Gets the authorization URL that can be used to grant access to the script."}, {"name": "create", "parameters": [], "result": "Trigger", "description": "Creates the trigger and returns it."}, {"name": "onEventUpdated", "parameters": [], "result": "CalendarTriggerBuilder", "description": "Specifies a trigger that fires when a calendar entry is created, updated, or deleted."}, {"name": "after", "parameters": [{"name": "durationMilliseconds", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies the minimum duration (in milliseconds) after the current time that the trigger runs."}, {"name": "at", "parameters": [{"name": "date", "type": "Date"}], "result": "ClockTriggerBuilder", "description": "Specifies when the trigger runs."}, {"name": "atDate", "parameters": [{"name": "year", "type": "Integer"}, {"name": "month", "type": "Integer"}, {"name": "day", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies that the trigger fires on the given date, by default near midnight (+/- 15 minutes)."}, {"name": "atHour", "parameters": [{"name": "hour", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies the hour the trigger at which the trigger runs."}, {"name": "create", "parameters": [], "result": "Trigger", "description": "Creates the trigger."}, {"name": "everyDays", "parameters": [{"name": "n", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies to run the trigger every n days."}, {"name": "everyHours", "parameters": [{"name": "n", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies to run the trigger every n hours."}, {"name": "everyMinutes", "parameters": [{"name": "n", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies to run the trigger every n minutes."}, {"name": "everyWeeks", "parameters": [{"name": "n", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies to run the trigger every n weeks."}, {"name": "inTimezone", "parameters": [{"name": "timezone", "type": "String"}], "result": "ClockTriggerBuilder", "description": "Specifies the timezone for the specified dates/time when the trigger runs."}, {"name": "nearMinute", "parameters": [{"name": "minute", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies the minute at which the trigger runs (plus or minus 15 minutes)."}, {"name": "onMonthDay", "parameters": [{"name": "day", "type": "Integer"}], "result": "ClockTriggerBuilder", "description": "Specifies the date in the month that the trigger runs."}, {"name": "onWeekDay", "parameters": [{"name": "day", "type": "Weekday"}], "result": "ClockTriggerBuilder", "description": "Specifies the day of the week that the trigger runs."}, {"name": "create", "parameters": [], "result": "Trigger", "description": "Creates and returns the new trigger."}, {"name": "onOpen", "parameters": [], "result": "DocumentTriggerBuilder", "description": "Specifies a trigger that will fire when the document is opened."}, {"name": "create", "parameters": [], "result": "Trigger", "description": "Creates and returns the new trigger."}, {"name": "onFormSubmit", "parameters": [], "result": "FormTriggerBuilder", "description": "Specifies a trigger that will fire when a response is submitted to the form."}, {"name": "onOpen", "parameters": [], "result": "FormTriggerBuilder", "description": "Specifies a trigger that will fire when the form's edit view is opened."}, {"name": "deleteTrigger", "parameters": [{"name": "trigger", "type": "Trigger"}], "result": "void", "description": "Removes the given trigger so it no longer runs."}, {"name": "getAuthorizationInfo", "parameters": [{"name": "authMode", "type": "AuthMode"}], "result": "AuthorizationInfo", "description": "Gets an object used to determine whether the user needs to authorize this script to use one or\nmore services, and to provide the URL for an authorization dialog."}, {"name": "getIdentityToken", "parameters": [], "result": "String", "description": "Gets an OpenID Connect identity token for the\neffective user, if the openid scope has been granted."}, {"name": "getInstallationSource", "parameters": [], "result": "InstallationSource", "description": "Returns an enum value that indicates how the script came to be installed as an add-on for the\ncurrent user (for example, whether the user installed it personally through the Chrome Web\nStore, or whether a domain administrator installed it for all users)."}, {"name": "getOAuthToken", "parameters": [], "result": "String", "description": "Gets the OAuth 2.0 access token\nfor the effective user."}, {"name": "getProjectTriggers", "parameters": [], "result": "Trigger[]", "description": "Gets all installable triggers associated with the current project and current user."}, {"name": "getScriptId", "parameters": [], "result": "String", "description": "Gets the script project's unique ID."}, {"name": "getService", "parameters": [], "result": "Service", "description": "Gets an object used to control publishing the script as a web app."}, {"name": "getUserTriggers", "parameters": [{"name": "document", "type": "Document"}], "result": "Trigger[]", "description": "Gets all installable triggers owned by this user in the given document, for this script or\nadd-on only."}, {"name": "getUserTriggers", "parameters": [{"name": "form", "type": "Form"}], "result": "Trigger[]", "description": "Gets all installable triggers owned by this user in the given form, for this script or add-on\nonly."}, {"name": "getUserTriggers", "parameters": [{"name": "spreadsheet", "type": "Spreadsheet"}], "result": "Trigger[]", "description": "Gets all installable triggers owned by this user in the given spreadsheet, for this script or\nadd-on only."}, {"name": "invalidateAuth", "parameters": [], "result": "void", "description": "Invalidates the authorization the effective user has to execute the current script."}, {"name": "newStateToken", "parameters": [], "result": "StateTokenBuilder", "description": "Creates a builder for a state token that can be used in a callback API (like an OAuth flow)."}, {"name": "newTrigger", "parameters": [{"name": "functionName", "type": "String"}], "result": "TriggerBuilder", "description": "Begins the process of creating an installable trigger that, when fired, calls a given function."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Returns the URL of the web app, if it has been deployed; otherwise returns null."}, {"name": "isEnabled", "parameters": [], "result": "Boolean", "description": "Returns true if the script is accessible as a web app."}, {"name": "create", "parameters": [], "result": "Trigger", "description": "Creates the trigger and returns it."}, {"name": "onChange", "parameters": [], "result": "SpreadsheetTriggerBuilder", "description": "Specifies a trigger that will fire when the spreadsheet's content or structure is changed."}, {"name": "onEdit", "parameters": [], "result": "SpreadsheetTriggerBuilder", "description": "Specifies a trigger that will fire when the spreadsheet is edited."}, {"name": "onFormSubmit", "parameters": [], "result": "SpreadsheetTriggerBuilder", "description": "Specifies a trigger that will fire when the spreadsheet has a form submitted to it."}, {"name": "onOpen", "parameters": [], "result": "SpreadsheetTriggerBuilder", "description": "Specifies a trigger that will fire when the spreadsheet is opened."}, {"name": "createToken", "parameters": [], "result": "String", "description": "Constructs an encrypted string representation of the state token."}, {"name": "withArgument", "parameters": [{"name": "name", "type": "String"}, {"name": "value", "type": "String"}], "result": "StateTokenBuilder", "description": "Adds an argument to the token."}, {"name": "withMethod", "parameters": [{"name": "method", "type": "String"}], "result": "StateTokenBuilder", "description": "Sets a callback function."}, {"name": "withTimeout", "parameters": [{"name": "seconds", "type": "Integer"}], "result": "StateTokenBuilder", "description": "Sets the duration (in seconds) for which the token is valid."}, {"name": "getEventType", "parameters": [], "result": "EventType", "description": "Returns the event type that the trigger fires on."}, {"name": "getHandlerFunction", "parameters": [], "result": "String", "description": "Returns the function that will be called when the trigger fires."}, {"name": "getTriggerSource", "parameters": [], "result": "TriggerSource", "description": "Returns the source of events that will cause the trigger to fire."}, {"name": "getTriggerSourceId", "parameters": [], "result": "String", "description": "Returns the id specific to the source."}, {"name": "getUniqueId", "parameters": [], "result": "String", "description": "Returns a unique identifier that can be used to distinguish triggers from each other."}, {"name": "forDocument", "parameters": [{"name": "document", "type": "Document"}], "result": "DocumentTriggerBuilder", "description": "Creates and returns a DocumentTriggerBuilder tied to the given document."}, {"name": "forDocument", "parameters": [{"name": "key", "type": "String"}], "result": "DocumentTriggerBuilder", "description": "Creates and returns a DocumentTriggerBuilder tied to the document with the given ID."}, {"name": "forForm", "parameters": [{"name": "form", "type": "Form"}], "result": "FormTriggerBuilder", "description": "Creates and returns a FormTriggerBuilder tied to the given form."}, {"name": "forForm", "parameters": [{"name": "key", "type": "String"}], "result": "FormTriggerBuilder", "description": "Creates and returns a FormTriggerBuilder tied to the form with the given ID."}, {"name": "forSpreadsheet", "parameters": [{"name": "sheet", "type": "Spreadsheet"}], "result": "SpreadsheetTriggerBuilder", "description": "Creates and returns a SpreadsheetTriggerBuilder tied to the given spreadsheet."}, {"name": "forSpreadsheet", "parameters": [{"name": "key", "type": "String"}], "result": "SpreadsheetTriggerBuilder", "description": "Creates and returns a SpreadsheetTriggerBuilder tied to the spreadsheet with the given\nID."}, {"name": "forUserCalendar", "parameters": [{"name": "emailId", "type": "String"}], "result": "CalendarTriggerBuilder", "description": "Returns a builder for building calendar triggers."}, {"name": "timeBased", "parameters": [], "result": "ClockTriggerBuilder", "description": "Creates and returns a ClockTriggerBuilder for building time-based triggers."}], "properties": [{"name": "NONE", "type": "Enum", "url": "", "description": "A mode that does not allow access to any services that require authorization."}, {"name": "CUSTOM_FUNCTION", "type": "Enum", "url": "", "description": "A mode that allows access to a limited subset of services for use in custom spreadsheet\nfunctions."}, {"name": "LIMITED", "type": "Enum", "url": "", "description": "A mode that allows access to a limited subset of services."}, {"name": "FULL", "type": "Enum", "url": "", "description": "A mode that allows access to all services that require authorization."}, {"name": "REQUIRED", "type": "Enum", "url": "", "description": "The user needs to authorize this script to use one or more services."}, {"name": "NOT_REQUIRED", "type": "Enum", "url": "", "description": "The user has granted this script all the authorization it currently requires."}, {"name": "CLOCK", "type": "Enum", "url": "", "description": "The trigger fires once the time-driven event reaches a specific time."}, {"name": "ON_OPEN", "type": "Enum", "url": "", "description": "The trigger fires once the user opens the Google Docs, Sheets, or Forms file."}, {"name": "ON_EDIT", "type": "Enum", "url": "", "description": "The trigger fires once the user edits the Google Sheets file (for example, by entering a new\nvalue into a cell, which counts as an edit instead of a change)."}, {"name": "ON_FORM_SUBMIT", "type": "Enum", "url": "", "description": "The trigger fires once the user responds to a Google Form."}, {"name": "ON_CHANGE", "type": "Enum", "url": "", "description": "The trigger fires once the user changes the Google Sheets file (for example, by adding a row,\nwhich counts as a change instead of an edit)."}, {"name": "ON_EVENT_UPDATED", "type": "Enum", "url": "", "description": "The trigger fires once an event gets created, updated, or deleted on the specified Google\nCalendar."}, {"name": "APPS_MARKETPLACE_DOMAIN_ADD_ON", "type": "Enum", "url": "", "description": "Add-on was installed by the administrator for the user's domain."}, {"name": "NONE", "type": "Enum", "url": "", "description": "Script is not running as an add-on."}, {"name": "WEB_STORE_ADD_ON", "type": "Enum", "url": "", "description": "Add-on was installed by the user from the Chrome Web Store."}, {"name": "AuthMode", "type": "AuthMode", "url": "/apps-script/reference/script/auth-mode", "description": "An enumeration that identifies which categories of authorized services Apps Script is able to\nexecute through a triggered function."}, {"name": "AuthorizationStatus", "type": "AuthorizationStatus", "url": "/apps-script/reference/script/authorization-status", "description": "An enumeration denoting the authorization status of a script."}, {"name": "EventType", "type": "EventType", "url": "/apps-script/reference/script/event-type", "description": "An enumeration denoting the type of triggered event."}, {"name": "InstallationSource", "type": "InstallationSource", "url": "/apps-script/reference/script/installation-source", "description": "An enumeration denoting how the script was installed to the user as an add-on."}, {"name": "TriggerSource", "type": "TriggerSource", "url": "/apps-script/reference/script/trigger-source", "description": "An enumeration denoting the source of the event that causes the trigger to fire."}, {"name": "WeekDay", "type": "Weekday", "url": "https://developers.google.com/apps-script/reference/base/weekday.html", "description": "An enumeration representing the days of the week."}, {"name": "SPREADSHEETS", "type": "Enum", "url": "", "description": "Google Sheets causes the trigger to fire."}, {"name": "CLOCK", "type": "Enum", "url": "", "description": "A time-driven event causes the trigger to fire."}, {"name": "FORMS", "type": "Enum", "url": "", "description": "Google Forms causes the trigger to fire."}, {"name": "DOCUMENTS", "type": "Enum", "url": "", "description": "Google Docs causes the trigger to fire."}, {"name": "CALENDAR", "type": "Enum", "url": "", "description": "Google Calendar causes the trigger to fire."}]},
{"url": "https://developers.google.com/apps-script/reference/properties/script-properties", "name": "ScriptProperties", "type": "class", "methods": [], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/optimization/variable-type", "name": "VariableType", "type": "enum", "methods": [], "properties": [{"name": "INTEGER", "type": "Enum", "url": "", "description": "Type of variable that can only take integer values."}, {"name": "CONTINUOUS", "type": "Enum", "url": "", "description": "Type of variable that can take any real value."}]},
{"url": "https://developers.google.com/apps-script/reference/properties/properties-service", "name": "PropertiesService", "type": "class", "methods": [{"name": "getDocumentProperties", "parameters": [], "result": "Properties", "description": "Gets a property store (for this script only) that all users can access within the open\ndocument, spreadsheet, or form."}, {"name": "getScriptProperties", "parameters": [], "result": "Properties", "description": "Gets a property store that all users can access, but only within this script."}, {"name": "getUserProperties", "parameters": [], "result": "Properties", "description": "Gets a property store that only the current user can access, and only within this script."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/blob.html", "name": "Blob", "type": "class", "methods": [{"name": "copyBlob", "parameters": [], "result": "Blob", "description": "Returns a copy of this blob."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBytes", "parameters": [], "result": "Byte[]", "description": "Gets the data stored in this blob."}, {"name": "getContentType", "parameters": [], "result": "String", "description": "Gets the content type of the bytes in this blob."}, {"name": "getDataAsString", "parameters": [], "result": "String", "description": "Gets the data of this blob as a String with UTF-8 encoding."}, {"name": "getDataAsString", "parameters": [{"name": "charset", "type": "String"}], "result": "String", "description": "Gets the data of this blob as a string with the specified encoding."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this blob."}, {"name": "isGoogleType", "parameters": [], "result": "Boolean", "description": "Returns whether this blob is a Google Workspace file (Sheets, Docs, etc.)."}, {"name": "setBytes", "parameters": [{"name": "data", "type": "Byte"}], "result": "Blob", "description": "Sets the data stored in this blob."}, {"name": "setContentType", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Sets the content type of the bytes in this blob."}, {"name": "setContentTypeFromExtension", "parameters": [], "result": "Blob", "description": "Sets the content type of the bytes in this blob based on the file extension."}, {"name": "setDataFromString", "parameters": [{"name": "string", "type": "String"}], "result": "Blob", "description": "Sets the data of this blob from a string with UTF-8 encoding."}, {"name": "setDataFromString", "parameters": [{"name": "string", "type": "String"}, {"name": "charset", "type": "String"}], "result": "Blob", "description": "Sets the data of this blob from a string with the specified encoding."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Blob", "description": "Sets the name of this blob."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/properties/properties", "name": "Properties", "type": "class", "methods": [{"name": "deleteAllProperties", "parameters": [], "result": "Properties", "description": "Deletes all properties in the current Properties store."}, {"name": "deleteProperty", "parameters": [{"name": "key", "type": "String"}], "result": "Properties", "description": "Deletes the property with the given key in the current Properties store."}, {"name": "getKeys", "parameters": [], "result": "String[]", "description": "Gets all keys in the current Properties store."}, {"name": "getProperties", "parameters": [], "result": "Object", "description": "Gets a copy of all key-value pairs in the current Properties store."}, {"name": "getProperty", "parameters": [{"name": "key", "type": "String"}], "result": "String", "description": "Gets the value associated with the given key in the current Properties store, or null if no such key exists."}, {"name": "setProperties", "parameters": [{"name": "properties", "type": "Object"}], "result": "Properties", "description": "Sets all key-value pairs from the given object in the current Properties store."}, {"name": "setProperties", "parameters": [{"name": "properties", "type": "Object"}, {"name": "deleteAllOthers", "type": "Boolean"}], "result": "Properties", "description": "Sets all key-value pairs from the given object in the current Properties store,\noptionally deleting all other properties in the store."}, {"name": "setProperty", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "Properties", "description": "Sets the given key-value pair in the current Properties store."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/optimization/status", "name": "Status", "type": "enum", "methods": [], "properties": [{"name": "OPTIMAL", "type": "Enum", "url": "", "description": "Status when an optimal solution has been found."}, {"name": "FEASIBLE", "type": "Enum", "url": "", "description": "Status when a feasible (not necessarily optimal) solution has been found."}, {"name": "INFEASIBLE", "type": "Enum", "url": "", "description": "Status when the current model is unfeasible (has no solution)."}, {"name": "UNBOUNDED", "type": "Enum", "url": "", "description": "Status when the current model is unbound."}, {"name": "ABNORMAL", "type": "Enum", "url": "", "description": "Status when it failed to find a solution for unexpected reasons."}, {"name": "MODEL_INVALID", "type": "Enum", "url": "", "description": "Status when the model is invalid."}, {"name": "NOT_SOLVED", "type": "Enum", "url": "", "description": "Status when LinearOptimizationEngine.solve() has not been called yet."}]},
{"url": "https://developers.google.com/apps-script/reference/optimization/linear-optimization-solution", "name": "LinearOptimizationSolution", "type": "class", "methods": [{"name": "getObjectiveValue", "parameters": [], "result": "Number", "description": "Gets the value of the objective function in the current solution."}, {"name": "getStatus", "parameters": [], "result": "Status", "description": "Gets the status of the solution."}, {"name": "getVariableValue", "parameters": [{"name": "variableName", "type": "String"}], "result": "Number", "description": "Gets the value of a variable in the solution created by the last call to LinearOptimizationEngine.solve()."}, {"name": "isValid", "parameters": [], "result": "Boolean", "description": "Determines whether the solution is either feasible or optimal."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/properties", "name": "Properties", "type": "properties", "methods": [{"name": "deleteAllProperties", "parameters": [], "result": "Properties", "description": "Deletes all properties in the current Properties store."}, {"name": "deleteProperty", "parameters": [{"name": "key", "type": "String"}], "result": "Properties", "description": "Deletes the property with the given key in the current Properties store."}, {"name": "getKeys", "parameters": [], "result": "String[]", "description": "Gets all keys in the current Properties store."}, {"name": "getProperties", "parameters": [], "result": "Object", "description": "Gets a copy of all key-value pairs in the current Properties store."}, {"name": "getProperty", "parameters": [{"name": "key", "type": "String"}], "result": "String", "description": "Gets the value associated with the given key in the current Properties store, or null if no such key exists."}, {"name": "setProperties", "parameters": [{"name": "properties", "type": "Object"}], "result": "Properties", "description": "Sets all key-value pairs from the given object in the current Properties store."}, {"name": "setProperties", "parameters": [{"name": "properties", "type": "Object"}, {"name": "deleteAllOthers", "type": "Boolean"}], "result": "Properties", "description": "Sets all key-value pairs from the given object in the current Properties store,\noptionally deleting all other properties in the store."}, {"name": "setProperty", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "Properties", "description": "Sets the given key-value pair in the current Properties store."}, {"name": "getDocumentProperties", "parameters": [], "result": "Properties", "description": "Gets a property store (for this script only) that all users can access within the open\ndocument, spreadsheet, or form."}, {"name": "getScriptProperties", "parameters": [], "result": "Properties", "description": "Gets a property store that all users can access, but only within this script."}, {"name": "getUserProperties", "parameters": [], "result": "Properties", "description": "Gets a property store that only the current user can access, and only within this script."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/optimization", "name": "Optimization", "type": "optimization", "methods": [{"name": "setCoefficient", "parameters": [{"name": "variableName", "type": "String"}, {"name": "coefficient", "type": "Number"}], "result": "LinearOptimizationConstraint", "description": "Sets the coefficient of a variable in the constraint."}, {"name": "addConstraint", "parameters": [{"name": "lowerBound", "type": "Number"}, {"name": "upperBound", "type": "Number"}], "result": "LinearOptimizationConstraint", "description": "Adds a new linear constraint in the model."}, {"name": "addConstraints", "parameters": [{"name": "lowerBounds", "type": "Number"}, {"name": "upperBounds", "type": "Number"}, {"name": "variableNames", "type": "String"}, {"name": "coefficients", "type": "Number"}], "result": "LinearOptimizationEngine", "description": "Adds constraints in batch to the model."}, {"name": "addVariable", "parameters": [{"name": "name", "type": "String"}, {"name": "lowerBound", "type": "Number"}, {"name": "upperBound", "type": "Number"}], "result": "LinearOptimizationEngine", "description": "Adds a new continuous variable to the model."}, {"name": "addVariable", "parameters": [{"name": "name", "type": "String"}, {"name": "lowerBound", "type": "Number"}, {"name": "upperBound", "type": "Number"}, {"name": "type", "type": "VariableType"}], "result": "LinearOptimizationEngine", "description": "Adds a new variable to the model."}, {"name": "addVariable", "parameters": [{"name": "name", "type": "String"}, {"name": "lowerBound", "type": "Number"}, {"name": "upperBound", "type": "Number"}, {"name": "type", "type": "VariableType"}, {"name": "objectiveCoefficient", "type": "Number"}], "result": "LinearOptimizationEngine", "description": "Adds a new variable to the model."}, {"name": "addVariables", "parameters": [{"name": "names", "type": "String"}, {"name": "lowerBounds", "type": "Number"}, {"name": "upperBounds", "type": "Number"}, {"name": "types", "type": "VariableType"}, {"name": "objectiveCoefficients", "type": "Number"}], "result": "LinearOptimizationEngine", "description": "Adds variables in batch to the model."}, {"name": "setMaximization", "parameters": [], "result": "LinearOptimizationEngine", "description": "Sets the optimization direction to maximizing the linear objective function."}, {"name": "setMinimization", "parameters": [], "result": "LinearOptimizationEngine", "description": "Sets the optimization direction to minimizing the linear objective function."}, {"name": "setObjectiveCoefficient", "parameters": [{"name": "variableName", "type": "String"}, {"name": "coefficient", "type": "Number"}], "result": "LinearOptimizationEngine", "description": "Sets the coefficient of a variable in the linear objective function."}, {"name": "solve", "parameters": [], "result": "LinearOptimizationSolution", "description": "Solves the current linear program with the default deadline of 30 seconds."}, {"name": "solve", "parameters": [{"name": "seconds", "type": "Number"}], "result": "LinearOptimizationSolution", "description": "Solves the current linear program."}, {"name": "createEngine", "parameters": [], "result": "LinearOptimizationEngine", "description": "Creates an engine to to solve linear programs (potentially mixed-integer programs)."}, {"name": "getObjectiveValue", "parameters": [], "result": "Number", "description": "Gets the value of the objective function in the current solution."}, {"name": "getStatus", "parameters": [], "result": "Status", "description": "Gets the status of the solution."}, {"name": "getVariableValue", "parameters": [{"name": "variableName", "type": "String"}], "result": "Number", "description": "Gets the value of a variable in the solution created by the last call to LinearOptimizationEngine.solve()."}, {"name": "isValid", "parameters": [], "result": "Boolean", "description": "Determines whether the solution is either feasible or optimal."}], "properties": [{"name": "Status", "type": "Status", "url": "/apps-script/reference/optimization/status", "description": "Status of the solver."}, {"name": "VariableType", "type": "VariableType", "url": "/apps-script/reference/optimization/variable-type", "description": "Type of variables created by the solver."}, {"name": "OPTIMAL", "type": "Enum", "url": "", "description": "Status when an optimal solution has been found."}, {"name": "FEASIBLE", "type": "Enum", "url": "", "description": "Status when a feasible (not necessarily optimal) solution has been found."}, {"name": "INFEASIBLE", "type": "Enum", "url": "", "description": "Status when the current model is unfeasible (has no solution)."}, {"name": "UNBOUNDED", "type": "Enum", "url": "", "description": "Status when the current model is unbound."}, {"name": "ABNORMAL", "type": "Enum", "url": "", "description": "Status when it failed to find a solution for unexpected reasons."}, {"name": "MODEL_INVALID", "type": "Enum", "url": "", "description": "Status when the model is invalid."}, {"name": "NOT_SOLVED", "type": "Enum", "url": "", "description": "Status when LinearOptimizationEngine.solve() has not been called yet."}, {"name": "INTEGER", "type": "Enum", "url": "", "description": "Type of variable that can only take integer values."}, {"name": "CONTINUOUS", "type": "Enum", "url": "", "description": "Type of variable that can take any real value."}]},
{"url": "https://developers.google.com/apps-script/reference/base/blob-source.html", "name": "BlobSource", "type": "interface", "methods": [{"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/optimization/linear-optimization-constraint", "name": "LinearOptimizationConstraint", "type": "class", "methods": [{"name": "setCoefficient", "parameters": [{"name": "variableName", "type": "String"}, {"name": "coefficient", "type": "Number"}], "result": "LinearOptimizationConstraint", "description": "Sets the coefficient of a variable in the constraint."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/mail/mail-app", "name": "MailApp", "type": "class", "methods": [{"name": "getRemainingDailyQuota", "parameters": [], "result": "Integer", "description": "Returns the number of remaining emails a user can send for the rest of the day."}, {"name": "sendEmail", "parameters": [{"name": "message", "type": "Object"}], "result": "void", "description": "Sends an email message."}, {"name": "sendEmail", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}], "result": "void", "description": "Sends an email message."}, {"name": "sendEmail", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "void", "description": "Sends an email message with optional arguments."}, {"name": "sendEmail", "parameters": [{"name": "to", "type": "String"}, {"name": "replyTo", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}], "result": "void", "description": "Sends an email message."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/optimization/linear-optimization-service", "name": "LinearOptimizationService", "type": "class", "methods": [{"name": "createEngine", "parameters": [], "result": "LinearOptimizationEngine", "description": "Creates an engine to to solve linear programs (potentially mixed-integer programs)."}], "properties": [{"name": "Status", "type": "Status", "url": "/apps-script/reference/optimization/status", "description": "Status of the solver."}, {"name": "VariableType", "type": "VariableType", "url": "/apps-script/reference/optimization/variable-type", "description": "Type of variables created by the solver."}]},
{"url": "https://developers.google.com/apps-script/reference/optimization/linear-optimization-engine", "name": "LinearOptimizationEngine", "type": "class", "methods": [{"name": "addConstraint", "parameters": [{"name": "lowerBound", "type": "Number"}, {"name": "upperBound", "type": "Number"}], "result": "LinearOptimizationConstraint", "description": "Adds a new linear constraint in the model."}, {"name": "addConstraints", "parameters": [{"name": "lowerBounds", "type": "Number"}, {"name": "upperBounds", "type": "Number"}, {"name": "variableNames", "type": "String"}, {"name": "coefficients", "type": "Number"}], "result": "LinearOptimizationEngine", "description": "Adds constraints in batch to the model."}, {"name": "addVariable", "parameters": [{"name": "name", "type": "String"}, {"name": "lowerBound", "type": "Number"}, {"name": "upperBound", "type": "Number"}], "result": "LinearOptimizationEngine", "description": "Adds a new continuous variable to the model."}, {"name": "addVariable", "parameters": [{"name": "name", "type": "String"}, {"name": "lowerBound", "type": "Number"}, {"name": "upperBound", "type": "Number"}, {"name": "type", "type": "VariableType"}], "result": "LinearOptimizationEngine", "description": "Adds a new variable to the model."}, {"name": "addVariable", "parameters": [{"name": "name", "type": "String"}, {"name": "lowerBound", "type": "Number"}, {"name": "upperBound", "type": "Number"}, {"name": "type", "type": "VariableType"}, {"name": "objectiveCoefficient", "type": "Number"}], "result": "LinearOptimizationEngine", "description": "Adds a new variable to the model."}, {"name": "addVariables", "parameters": [{"name": "names", "type": "String"}, {"name": "lowerBounds", "type": "Number"}, {"name": "upperBounds", "type": "Number"}, {"name": "types", "type": "VariableType"}, {"name": "objectiveCoefficients", "type": "Number"}], "result": "LinearOptimizationEngine", "description": "Adds variables in batch to the model."}, {"name": "setMaximization", "parameters": [], "result": "LinearOptimizationEngine", "description": "Sets the optimization direction to maximizing the linear objective function."}, {"name": "setMinimization", "parameters": [], "result": "LinearOptimizationEngine", "description": "Sets the optimization direction to minimizing the linear objective function."}, {"name": "setObjectiveCoefficient", "parameters": [{"name": "variableName", "type": "String"}, {"name": "coefficient", "type": "Number"}], "result": "LinearOptimizationEngine", "description": "Sets the coefficient of a variable in the linear objective function."}, {"name": "solve", "parameters": [], "result": "LinearOptimizationSolution", "description": "Solves the current linear program with the default deadline of 30 seconds."}, {"name": "solve", "parameters": [{"name": "seconds", "type": "Number"}], "result": "LinearOptimizationSolution", "description": "Solves the current linear program."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/form.html", "name": "Form", "type": "class", "methods": [{"name": "addCheckboxGridItem", "parameters": [], "result": "CheckboxGridItem", "description": "Appends a new question item, presented as a grid of columns and rows, that allows the\nrespondent to select multiple choices per row from a sequence of checkboxes."}, {"name": "addCheckboxItem", "parameters": [], "result": "CheckboxItem", "description": "Appends a new question item that allows the respondent to select one or more checkboxes, as\nwell as an optional \"other\" field."}, {"name": "addDateItem", "parameters": [], "result": "DateItem", "description": "Appends a new question item that allows the respondent to indicate a date."}, {"name": "addDateTimeItem", "parameters": [], "result": "DateTimeItem", "description": "Appends a new question item that allows the respondent to indicate a date and time."}, {"name": "addDurationItem", "parameters": [], "result": "DurationItem", "description": "Appends a new question item that allows the respondent to indicate a length of time."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Form", "description": "Adds the given user to the list of editors for the Form."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Form", "description": "Adds the given user to the list of editors for the Form."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Form", "description": "Adds the given array of users to the list of editors for the Form."}, {"name": "addGridItem", "parameters": [], "result": "GridItem", "description": "Appends a new question item, presented as a grid of columns and rows, that allows the\nrespondent to select one choice per row from a sequence of radio buttons."}, {"name": "addImageItem", "parameters": [], "result": "ImageItem", "description": "Appends a new layout item that displays an image."}, {"name": "addListItem", "parameters": [], "result": "ListItem", "description": "Appends a new question item that allows the respondent to select one choice from a drop-down\nlist."}, {"name": "addMultipleChoiceItem", "parameters": [], "result": "MultipleChoiceItem", "description": "Appends a new question item that allows the respondent to select one choice from a list of\nradio buttons or an optional \"other\" field."}, {"name": "addPageBreakItem", "parameters": [], "result": "PageBreakItem", "description": "Appends a new layout item that marks the start of a page."}, {"name": "addParagraphTextItem", "parameters": [], "result": "ParagraphTextItem", "description": "Appends a new question item that allows the respondent to enter a block of text."}, {"name": "addScaleItem", "parameters": [], "result": "ScaleItem", "description": "Appends a new question item that allows the respondent to choose one option from a numbered\nsequence of radio buttons."}, {"name": "addSectionHeaderItem", "parameters": [], "result": "SectionHeaderItem", "description": "Appends a new layout item that visually indicates the start of a section."}, {"name": "addTextItem", "parameters": [], "result": "TextItem", "description": "Appends a new question item that allows the respondent to enter a single line of text."}, {"name": "addTimeItem", "parameters": [], "result": "TimeItem", "description": "Appends a new question item that allows the respondent to indicate a time of day."}, {"name": "addVideoItem", "parameters": [], "result": "VideoItem", "description": "Appends a new layout item that displays a video."}, {"name": "canEditResponse", "parameters": [], "result": "Boolean", "description": "Determines whether the form displays a link to edit a response after submitting it."}, {"name": "collectsEmail", "parameters": [], "result": "Boolean", "description": "Determines whether the form collects respondents' email addresses."}, {"name": "createResponse", "parameters": [], "result": "FormResponse", "description": "Creates a new response to the form."}, {"name": "deleteAllResponses", "parameters": [], "result": "Form", "description": "Deletes all submitted responses from the form's response store."}, {"name": "deleteItem", "parameters": [{"name": "index", "type": "Integer"}], "result": "void", "description": "Deletes the item at a given index among all the items in the form."}, {"name": "deleteItem", "parameters": [{"name": "item", "type": "Item"}], "result": "void", "description": "Deletes the given item."}, {"name": "deleteResponse", "parameters": [{"name": "responseId", "type": "String"}], "result": "Form", "description": "Deletes a single response from the form's response store."}, {"name": "getConfirmationMessage", "parameters": [], "result": "String", "description": "Gets the form's confirmation message."}, {"name": "getCustomClosedFormMessage", "parameters": [], "result": "String", "description": "Gets the custom message that will be displayed if the form is not accepting responses, or an\nempty string if no custom message has been set."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the form's description."}, {"name": "getDestinationId", "parameters": [], "result": "String", "description": "Gets the ID of the form's response destination."}, {"name": "getDestinationType", "parameters": [], "result": "DestinationType", "description": "Gets the type of the form's response destination."}, {"name": "getEditUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to access the form's edit mode."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Form."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the form."}, {"name": "getItemById", "parameters": [{"name": "id", "type": "Integer"}], "result": "Item", "description": "Gets the item with a given ID."}, {"name": "getItems", "parameters": [], "result": "Item[]", "description": "Gets an array of all items in the form."}, {"name": "getItems", "parameters": [{"name": "itemType", "type": "ItemType"}], "result": "Item[]", "description": "Gets an array of all items of a given type."}, {"name": "getPublishedUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to respond to the form."}, {"name": "getResponse", "parameters": [{"name": "responseId", "type": "String"}], "result": "FormResponse", "description": "Gets a single form response based on its response ID."}, {"name": "getResponses", "parameters": [], "result": "FormResponse[]", "description": "Gets an array of all of the form's responses."}, {"name": "getResponses", "parameters": [{"name": "timestamp", "type": "Date"}], "result": "FormResponse[]", "description": "Gets an array of all of the form's responses after a given date and time."}, {"name": "getShuffleQuestions", "parameters": [], "result": "Boolean", "description": "Determines whether the order of the questions on each page of the form is randomized."}, {"name": "getSummaryUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to view a summary of the form's responses."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the form's title."}, {"name": "hasLimitOneResponsePerUser", "parameters": [], "result": "Boolean", "description": "Determines whether the form allows only one response per respondent."}, {"name": "hasProgressBar", "parameters": [], "result": "Boolean", "description": "Determines whether the form displays a progress bar."}, {"name": "hasRespondAgainLink", "parameters": [], "result": "Boolean", "description": "Determines whether the form displays a link to submit another response after a respondent\ncompletes the form."}, {"name": "isAcceptingResponses", "parameters": [], "result": "Boolean", "description": "Determines whether the form is currently accepting responses."}, {"name": "isPublishingSummary", "parameters": [], "result": "Boolean", "description": "Determines whether the form displays a link to view a summary of responses after a respondent\ncompletes the form."}, {"name": "isQuiz", "parameters": [], "result": "Boolean", "description": "Determines whether the form is a quiz."}, {"name": "moveItem", "parameters": [{"name": "from", "type": "Integer"}, {"name": "to", "type": "Integer"}], "result": "Item", "description": "Moves an item at a given index among all the items in the form to another given index."}, {"name": "moveItem", "parameters": [{"name": "item", "type": "Item"}, {"name": "toIndex", "type": "Integer"}], "result": "Item", "description": "Moves a given item to an given index among all the items in the form."}, {"name": "removeDestination", "parameters": [], "result": "Form", "description": "Unlinks the form from its current response destination."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Form", "description": "Removes the given user from the list of editors for the Form."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Form", "description": "Removes the given user from the list of editors for the Form."}, {"name": "requiresLogin", "parameters": [], "result": "Boolean", "description": "Determines whether the form requires respondents to log in to an account in the same domain or\na subdomain before responding."}, {"name": "setAcceptingResponses", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form is currently accepting responses."}, {"name": "setAllowResponseEdits", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form displays a link to edit a response after submitting it."}, {"name": "setCollectEmail", "parameters": [{"name": "collect", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form collects respondents' email addresses."}, {"name": "setConfirmationMessage", "parameters": [{"name": "message", "type": "String"}], "result": "Form", "description": "Sets the form's confirmation message."}, {"name": "setCustomClosedFormMessage", "parameters": [{"name": "message", "type": "String"}], "result": "Form", "description": "Sets the message to display if the form is not accepting responses."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Form", "description": "Sets the form's description."}, {"name": "setDestination", "parameters": [{"name": "type", "type": "DestinationType"}, {"name": "id", "type": "String"}], "result": "Form", "description": "Sets the destination where form responses are saved."}, {"name": "setIsQuiz", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form is a quiz."}, {"name": "setLimitOneResponsePerUser", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form allows only one response per respondent."}, {"name": "setProgressBar", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form has a progress bar."}, {"name": "setPublishingSummary", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form displays a link to view a summary of responses after a respondent submits\nthe form."}, {"name": "setRequireLogin", "parameters": [{"name": "requireLogin", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form requires respondents to log in to an account in the same domain or a\nsubdomain before responding."}, {"name": "setShowLinkToRespondAgain", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form displays a link to submit another response after a respondent completes\nthe form."}, {"name": "setShuffleQuestions", "parameters": [{"name": "shuffle", "type": "Boolean"}], "result": "Form", "description": "Sets whether the order of the questions on each page of the form is randomized."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Form", "description": "Sets the form's title."}, {"name": "shortenFormUrl", "parameters": [{"name": "url", "type": "String"}], "result": "String", "description": "Converts a long URL for a form to a short URL."}, {"name": "submitGrades", "parameters": [{"name": "responses", "type": "FormResponse"}], "result": "Form", "description": "Submits grades for the given FormResponses."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet.html", "name": "Spreadsheet", "type": "class", "methods": [{"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}], "result": "Spreadsheet", "description": "Adds developer metadata with the specified key to the top-level spreadsheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Spreadsheet", "description": "Adds developer metadata with the specified key and visibility to the spreadsheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "Spreadsheet", "description": "Adds developer metadata with the specified key and value to the spreadsheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Spreadsheet", "description": "Adds developer metadata with the specified key, value, and visibility to the spreadsheet."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Spreadsheet", "description": "Adds the given user to the list of editors for the Spreadsheet."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Spreadsheet", "description": "Adds the given user to the list of editors for the Spreadsheet."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Spreadsheet", "description": "Adds the given array of users to the list of editors for the Spreadsheet."}, {"name": "addMenu", "parameters": [{"name": "name", "type": "String"}, {"name": "subMenus", "type": "Object"}], "result": "void", "description": "Creates a new menu in the Spreadsheet UI."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Spreadsheet", "description": "Adds the given user to the list of viewers for the Spreadsheet."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Spreadsheet", "description": "Adds the given user to the list of viewers for the Spreadsheet."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Spreadsheet", "description": "Adds the given array of users to the list of viewers for the Spreadsheet."}, {"name": "appendRow", "parameters": [{"name": "rowContents", "type": "Object"}], "result": "Sheet", "description": "Appends a row to the spreadsheet."}, {"name": "autoResizeColumn", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of the given column to fit its contents."}, {"name": "copy", "parameters": [{"name": "name", "type": "String"}], "result": "Spreadsheet", "description": "Copies the spreadsheet and returns the new one."}, {"name": "createDeveloperMetadataFinder", "parameters": [], "result": "DeveloperMetadataFinder", "description": "Returns a DeveloperMetadataFinder for finding developer metadata within the scope of\nthis spreadsheet."}, {"name": "createTextFinder", "parameters": [{"name": "findText", "type": "String"}], "result": "TextFinder", "description": "Creates a text finder for the spreadsheet, which can be used to find and replace text within\nthe spreadsheet."}, {"name": "deleteActiveSheet", "parameters": [], "result": "Sheet", "description": "Deletes the currently active sheet."}, {"name": "deleteColumn", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Deletes the column at the given column position."}, {"name": "deleteColumns", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "void", "description": "Deletes a number of columns starting at the given column position."}, {"name": "deleteRow", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Sheet", "description": "Deletes the row at the given row position."}, {"name": "deleteRows", "parameters": [{"name": "rowPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "void", "description": "Deletes a number of rows starting at the given row position."}, {"name": "deleteSheet", "parameters": [{"name": "sheet", "type": "Sheet"}], "result": "void", "description": "Deletes the specified sheet."}, {"name": "duplicateActiveSheet", "parameters": [], "result": "Sheet", "description": "Duplicates the active sheet and makes it the active sheet."}, {"name": "getActiveCell", "parameters": [], "result": "Range", "description": "Returns the active cell in this sheet."}, {"name": "getActiveRange", "parameters": [], "result": "Range", "description": "Returns the selected range in the active sheet, or null if there is no active range."}, {"name": "getActiveRangeList", "parameters": [], "result": "RangeList", "description": "Returns the list of active ranges in the active sheet or null if there are no active\nranges."}, {"name": "getActiveSheet", "parameters": [], "result": "Sheet", "description": "Gets the active sheet in a spreadsheet."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBandings", "parameters": [], "result": "Banding[]", "description": "Returns all the bandings in this spreadsheet."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getColumnWidth", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Integer", "description": "Gets the width in pixels of the given column."}, {"name": "getCurrentCell", "parameters": [], "result": "Range", "description": "Returns the current cell in the active sheet or null if there is no current cell."}, {"name": "getDataRange", "parameters": [], "result": "Range", "description": "Returns a Range corresponding to the dimensions in which data is present."}, {"name": "getDataSourceFormulas", "parameters": [], "result": "DataSourceFormula[]", "description": "Gets all the data source formulas."}, {"name": "getDataSourcePivotTables", "parameters": [], "result": "DataSourcePivotTable[]", "description": "Gets all the data source pivot tables."}, {"name": "getDataSourceRefreshSchedules", "parameters": [], "result": "DataSourceRefreshSchedule[]", "description": "Gets the refresh schedules of this spreadsheet."}, {"name": "getDataSourceSheets", "parameters": [], "result": "DataSourceSheet[]", "description": "Returns all the data source sheets in the spreadsheet."}, {"name": "getDataSourceTables", "parameters": [], "result": "DataSourceTable[]", "description": "Gets all the data source tables."}, {"name": "getDataSources", "parameters": [], "result": "DataSource[]", "description": "Returns all the data sources in the spreadsheet."}, {"name": "getDeveloperMetadata", "parameters": [], "result": "DeveloperMetadata[]", "description": "Get the developer metadata associated with the top-level spreadsheet."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Spreadsheet."}, {"name": "getFormUrl", "parameters": [], "result": "String", "description": "Returns the URL for the form that sends its responses to this spreadsheet, or null if\nthis spreadsheet has no associated form."}, {"name": "getFrozenColumns", "parameters": [], "result": "Integer", "description": "Returns the number of frozen columns."}, {"name": "getFrozenRows", "parameters": [], "result": "Integer", "description": "Returns the number of frozen rows."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets a unique identifier for this spreadsheet."}, {"name": "getImages", "parameters": [], "result": "OverGridImage[]", "description": "Returns all over-the-grid images on the sheet."}, {"name": "getIterativeCalculationConvergenceThreshold", "parameters": [], "result": "Number", "description": "Returns the threshold value used during iterative calculation."}, {"name": "getLastColumn", "parameters": [], "result": "Integer", "description": "Returns the position of the last column that has content."}, {"name": "getLastRow", "parameters": [], "result": "Integer", "description": "Returns the position of the last row that has content."}, {"name": "getMaxIterativeCalculationCycles", "parameters": [], "result": "Integer", "description": "Returns the maximum number of iterations to use during iterative calculation."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the document."}, {"name": "getNamedRanges", "parameters": [], "result": "NamedRange[]", "description": "Gets all the named ranges in this spreadsheet."}, {"name": "getNumSheets", "parameters": [], "result": "Integer", "description": "Returns the number of sheets in this spreadsheet."}, {"name": "getOwner", "parameters": [], "result": "User", "description": "Returns the owner of the document, or null for a document in a shared drive."}, {"name": "getPredefinedSpreadsheetThemes", "parameters": [], "result": "SpreadsheetTheme[]", "description": "Returns the list of predefined themes."}, {"name": "getProtections", "parameters": [{"name": "type", "type": "ProtectionType"}], "result": "Protection[]", "description": "Gets an array of objects representing all protected ranges or sheets in the spreadsheet."}, {"name": "getRange", "parameters": [{"name": "a1Notation", "type": "String"}], "result": "Range", "description": "Returns the range as specified in A1 notation or R1C1 notation."}, {"name": "getRangeByName", "parameters": [{"name": "name", "type": "String"}], "result": "Range", "description": "Returns a named range, or null if no range with the given name is found."}, {"name": "getRangeList", "parameters": [{"name": "a1Notations", "type": "String"}], "result": "RangeList", "description": "Returns the RangeList collection representing the ranges in the same sheet specified\nby a non-empty list of A1 notations or R1C1 notations."}, {"name": "getRecalculationInterval", "parameters": [], "result": "RecalculationInterval", "description": "Returns the calculation interval for this spreadsheet."}, {"name": "getRowHeight", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Integer", "description": "Gets the height in pixels of the given row."}, {"name": "getSelection", "parameters": [], "result": "Selection", "description": "Returns the current Selection in the spreadsheet."}, {"name": "getSheetByName", "parameters": [{"name": "name", "type": "String"}], "result": "Sheet", "description": "Returns a sheet with the given name."}, {"name": "getSheetId", "parameters": [], "result": "Integer", "description": "Returns the ID of the sheet represented by this object."}, {"name": "getSheetName", "parameters": [], "result": "String", "description": "Returns the sheet name."}, {"name": "getSheetValues", "parameters": [{"name": "startRow", "type": "Integer"}, {"name": "startColumn", "type": "Integer"}, {"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Object[][]", "description": "Returns the rectangular grid of values for this range starting at the given coordinates."}, {"name": "getSheets", "parameters": [], "result": "Sheet[]", "description": "Gets all the sheets in this spreadsheet."}, {"name": "getSpreadsheetLocale", "parameters": [], "result": "String", "description": "Gets the spreadsheet locale."}, {"name": "getSpreadsheetTheme", "parameters": [], "result": "SpreadsheetTheme", "description": "Returns the current theme of the spreadsheet, or null if no theme is applied."}, {"name": "getSpreadsheetTimeZone", "parameters": [], "result": "String", "description": "Gets the time zone for the spreadsheet."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Returns the URL for the given spreadsheet."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this Spreadsheet."}, {"name": "hideColumn", "parameters": [{"name": "column", "type": "Range"}], "result": "void", "description": "Hides the columns in the given range."}, {"name": "hideRow", "parameters": [{"name": "row", "type": "Range"}], "result": "void", "description": "Hides the rows in the given range."}, {"name": "insertColumnAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a column after the given column position."}, {"name": "insertColumnBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a column before the given column position."}, {"name": "insertColumnsAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of columns after the given column position."}, {"name": "insertColumnsBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of columns before the given column position."}, {"name": "insertDataSourceSheet", "parameters": [{"name": "spec", "type": "DataSourceSpec"}], "result": "DataSourceSheet", "description": "Inserts a new DataSourceSheet in the spreadsheet and starts data execution."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts a Spreadsheet as an image in the document at a given row and column."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts a Spreadsheet as an image in the document at a given row and column, with a\npixel offset."}, {"name": "insertImage", "parameters": [{"name": "url", "type": "String"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts an image in the document at a given row and column."}, {"name": "insertImage", "parameters": [{"name": "url", "type": "String"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts an image in the document at a given row and column, with a pixel offset."}, {"name": "insertRowAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a row after the given row position."}, {"name": "insertRowBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a row before the given row position."}, {"name": "insertRowsAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of rows after the given row position."}, {"name": "insertRowsBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of rows before the given row position."}, {"name": "insertSheet", "parameters": [], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet, using a default sheet name."}, {"name": "insertSheet", "parameters": [{"name": "sheetIndex", "type": "Integer"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet at the given index."}, {"name": "insertSheet", "parameters": [{"name": "sheetIndex", "type": "Integer"}, {"name": "options", "type": "Object"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet at the given index and uses optional advanced\narguments."}, {"name": "insertSheet", "parameters": [{"name": "options", "type": "Object"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet, using a default sheet name and optional advanced\narguments."}, {"name": "insertSheet", "parameters": [{"name": "sheetName", "type": "String"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet with the given name."}, {"name": "insertSheet", "parameters": [{"name": "sheetName", "type": "String"}, {"name": "sheetIndex", "type": "Integer"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet with the given name at the given index."}, {"name": "insertSheet", "parameters": [{"name": "sheetName", "type": "String"}, {"name": "sheetIndex", "type": "Integer"}, {"name": "options", "type": "Object"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet with the given name at the given index and uses\noptional advanced arguments."}, {"name": "insertSheet", "parameters": [{"name": "sheetName", "type": "String"}, {"name": "options", "type": "Object"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet with the given name and uses optional advanced\narguments."}, {"name": "insertSheetWithDataSourceTable", "parameters": [{"name": "spec", "type": "DataSourceSpec"}], "result": "Sheet", "description": "Inserts a new sheet in the spreadsheet, creates a DataSourceTable spanning the\nentire sheet with the given data source specification, and starts data execution."}, {"name": "isColumnHiddenByUser", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given column is hidden by the user."}, {"name": "isIterativeCalculationEnabled", "parameters": [], "result": "Boolean", "description": "Returns whether iterative calculation is enabled in this spreadsheet."}, {"name": "isRowHiddenByFilter", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given row is hidden by a filter (not a filter view)."}, {"name": "isRowHiddenByUser", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given row is hidden by the user."}, {"name": "moveActiveSheet", "parameters": [{"name": "pos", "type": "Integer"}], "result": "void", "description": "Moves the active sheet to the given position in the list of sheets."}, {"name": "moveChartToObjectSheet", "parameters": [{"name": "chart", "type": "EmbeddedChart"}], "result": "Sheet", "description": "Creates a new SheetType.OBJECT sheet and moves the provided chart to it."}, {"name": "refreshAllDataSources", "parameters": [], "result": "void", "description": "Refreshes all supported data sources and their linked data source objects, skipping invalid\ndata source objects."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Spreadsheet", "description": "Removes the given user from the list of editors for the Spreadsheet."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Spreadsheet", "description": "Removes the given user from the list of editors for the Spreadsheet."}, {"name": "removeMenu", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "Removes a menu that was added by addMenu(name, subMenus)."}, {"name": "removeNamedRange", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "Deletes a named range with the given name."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Spreadsheet", "description": "Removes the given user from the list of viewers and commenters for the Spreadsheet."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Spreadsheet", "description": "Removes the given user from the list of viewers and commenters for the Spreadsheet."}, {"name": "rename", "parameters": [{"name": "newName", "type": "String"}], "result": "void", "description": "Renames the document."}, {"name": "renameActiveSheet", "parameters": [{"name": "newName", "type": "String"}], "result": "void", "description": "Renames the current active sheet to the given new name."}, {"name": "resetSpreadsheetTheme", "parameters": [], "result": "SpreadsheetTheme", "description": "Removes the applied theme and sets the default theme on the spreadsheet."}, {"name": "setActiveRange", "parameters": [{"name": "range", "type": "Range"}], "result": "Range", "description": "Sets the specified range as the active range in the active sheet, with\nthe top left cell in the range as the current cell."}, {"name": "setActiveRangeList", "parameters": [{"name": "rangeList", "type": "RangeList"}], "result": "RangeList", "description": "Sets the specified list of ranges as the active ranges in the\nactive sheet."}, {"name": "setActiveSelection", "parameters": [{"name": "range", "type": "Range"}], "result": "Range", "description": "Sets the active selection region for this sheet."}, {"name": "setActiveSelection", "parameters": [{"name": "a1Notation", "type": "String"}], "result": "Range", "description": "Sets the active selection, as specified in A1 notation or R1C1 notation."}, {"name": "setActiveSheet", "parameters": [{"name": "sheet", "type": "Sheet"}], "result": "Sheet", "description": "Sets the given sheet to be the active sheet in the spreadsheet."}, {"name": "setActiveSheet", "parameters": [{"name": "sheet", "type": "Sheet"}, {"name": "restoreSelection", "type": "Boolean"}], "result": "Sheet", "description": "Sets the given sheet to be the active sheet in the spreadsheet, with an option to restore the\nmost recent selection within that sheet."}, {"name": "setColumnWidth", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "width", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of the given column in pixels."}, {"name": "setCurrentCell", "parameters": [{"name": "cell", "type": "Range"}], "result": "Range", "description": "Sets the specified cell as the current cell."}, {"name": "setFrozenColumns", "parameters": [{"name": "columns", "type": "Integer"}], "result": "void", "description": "Freezes the given number of columns."}, {"name": "setFrozenRows", "parameters": [{"name": "rows", "type": "Integer"}], "result": "void", "description": "Freezes the given number of rows."}, {"name": "setIterativeCalculationConvergenceThreshold", "parameters": [{"name": "minThreshold", "type": "Number"}], "result": "Spreadsheet", "description": "Sets the minimum threshold value for iterative calculation."}, {"name": "setIterativeCalculationEnabled", "parameters": [{"name": "isEnabled", "type": "Boolean"}], "result": "Spreadsheet", "description": "Sets whether iterative calculation is enabled in this spreadsheet."}, {"name": "setMaxIterativeCalculationCycles", "parameters": [{"name": "maxIterations", "type": "Integer"}], "result": "Spreadsheet", "description": "Sets the maximum number of calculation iterations that should be performed during iterative\ncalculation."}, {"name": "setNamedRange", "parameters": [{"name": "name", "type": "String"}, {"name": "range", "type": "Range"}], "result": "void", "description": "Names a range."}, {"name": "setRecalculationInterval", "parameters": [{"name": "recalculationInterval", "type": "RecalculationInterval"}], "result": "Spreadsheet", "description": "Sets how often this spreadsheet should recalculate."}, {"name": "setRowHeight", "parameters": [{"name": "rowPosition", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "Sheet", "description": "Sets the row height of the given row in pixels."}, {"name": "setSpreadsheetLocale", "parameters": [{"name": "locale", "type": "String"}], "result": "void", "description": "Sets the spreadsheet locale."}, {"name": "setSpreadsheetTheme", "parameters": [{"name": "theme", "type": "SpreadsheetTheme"}], "result": "SpreadsheetTheme", "description": "Sets a theme on the spreadsheet."}, {"name": "setSpreadsheetTimeZone", "parameters": [{"name": "timezone", "type": "String"}], "result": "void", "description": "Sets the time zone for the spreadsheet."}, {"name": "show", "parameters": [{"name": "userInterface", "type": "Object"}], "result": "void", "description": "Displays a custom user interface component in a dialog centered in the user's browser's\nviewport."}, {"name": "sort", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Sorts a sheet by column, ascending."}, {"name": "sort", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "ascending", "type": "Boolean"}], "result": "Sheet", "description": "Sorts a sheet by column."}, {"name": "toast", "parameters": [{"name": "msg", "type": "String"}], "result": "void", "description": "Shows a popup window in the lower right corner of the spreadsheet with the given message."}, {"name": "toast", "parameters": [{"name": "msg", "type": "String"}, {"name": "title", "type": "String"}], "result": "void", "description": "Shows a popup window in the lower right corner of the spreadsheet with the given message and\ntitle."}, {"name": "toast", "parameters": [{"name": "msg", "type": "String"}, {"name": "title", "type": "String"}, {"name": "timeoutSeconds", "type": "Number"}], "result": "void", "description": "Shows a popup window in the lower right corner of the spreadsheet with the given title and\nmessage, that stays visible for a certain length of time."}, {"name": "unhideColumn", "parameters": [{"name": "column", "type": "Range"}], "result": "void", "description": "Unhides the column in the given range."}, {"name": "unhideRow", "parameters": [{"name": "row", "type": "Range"}], "result": "void", "description": "Unhides the row in the given range."}, {"name": "updateMenu", "parameters": [{"name": "name", "type": "String"}, {"name": "subMenus", "type": "Object"}], "result": "void", "description": "Updates a menu that was added by addMenu(name, subMenus)."}, {"name": "waitForAllDataExecutionsCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "void", "description": "Waits until all the current executions in the spreadsheet complete, timing out after the\nprovided number of seconds."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/document.html", "name": "Document", "type": "class", "methods": [{"name": "addBookmark", "parameters": [{"name": "position", "type": "Position"}], "result": "Bookmark", "description": "Adds a Bookmark at the given Position."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Document", "description": "Adds the given user to the list of editors for the Document."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Document", "description": "Adds the given user to the list of editors for the Document."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Document", "description": "Adds the given array of users to the list of editors for the Document."}, {"name": "addFooter", "parameters": [], "result": "FooterSection", "description": "Adds a document footer section, if none exists."}, {"name": "addHeader", "parameters": [], "result": "HeaderSection", "description": "Adds a document header section, if none exists."}, {"name": "addNamedRange", "parameters": [{"name": "name", "type": "String"}, {"name": "range", "type": "Range"}], "result": "NamedRange", "description": "Adds a new NamedRange, which is a Range that has a name and ID to allow\nlater retrieval."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Document", "description": "Adds the given user to the list of viewers for the Document."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Document", "description": "Adds the given user to the list of viewers for the Document."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Document", "description": "Adds the given array of users to the list of viewers for the Document."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Retrieves the current Document contents as a blob of the specified type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Retrieves the current Document contents as a blob."}, {"name": "getBody", "parameters": [], "result": "Body", "description": "Retrieves the active document's Body."}, {"name": "getBookmark", "parameters": [{"name": "id", "type": "String"}], "result": "Bookmark", "description": "Gets the Bookmark with the given ID."}, {"name": "getBookmarks", "parameters": [], "result": "Bookmark[]", "description": "Gets all Bookmark objects in the document."}, {"name": "getCursor", "parameters": [], "result": "Position", "description": "Gets the user's cursor in the active document."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Document."}, {"name": "getFooter", "parameters": [], "result": "FooterSection", "description": "Retrieves the document's footer section, if one exists."}, {"name": "getFootnotes", "parameters": [], "result": "Footnote[]", "description": "Retrieves all the Footnote elements in the document body."}, {"name": "getHeader", "parameters": [], "result": "HeaderSection", "description": "Retrieves the document's header section, if one exists."}, {"name": "getId", "parameters": [], "result": "String", "description": "Retrieves the document's unique identifier."}, {"name": "getLanguage", "parameters": [], "result": "String", "description": "Gets the document's language code."}, {"name": "getName", "parameters": [], "result": "String", "description": "Retrieves the title of the document."}, {"name": "getNamedRangeById", "parameters": [{"name": "id", "type": "String"}], "result": "NamedRange", "description": "Gets the NamedRange with the given ID."}, {"name": "getNamedRanges", "parameters": [], "result": "NamedRange[]", "description": "Gets all NamedRange objects in the document."}, {"name": "getNamedRanges", "parameters": [{"name": "name", "type": "String"}], "result": "NamedRange[]", "description": "Gets all NamedRange objects in the document with the given name."}, {"name": "getSelection", "parameters": [], "result": "Range", "description": "Gets the user's selection in the active document."}, {"name": "getSupportedLanguageCodes", "parameters": [], "result": "String[]", "description": "Gets all language codes that are supported in Google Docs files."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Retrieves the URL to access the current document."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this Document."}, {"name": "newPosition", "parameters": [{"name": "element", "type": "Element"}, {"name": "offset", "type": "Integer"}], "result": "Position", "description": "Creates a new Position, which is a reference to a location in the document, relative to\na specific element."}, {"name": "newRange", "parameters": [], "result": "RangeBuilder", "description": "Creates a builder used to construct Range objects from document elements."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Document", "description": "Removes the given user from the list of editors for the Document."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Document", "description": "Removes the given user from the list of editors for the Document."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Document", "description": "Removes the given user from the list of viewers and commenters for the Document."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Document", "description": "Removes the given user from the list of viewers and commenters for the Document."}, {"name": "saveAndClose", "parameters": [], "result": "void", "description": "Saves the current Document."}, {"name": "setCursor", "parameters": [{"name": "position", "type": "Position"}], "result": "Document", "description": "Sets the user's cursor in the active document, given a Position."}, {"name": "setLanguage", "parameters": [{"name": "languageCode", "type": "String"}], "result": "Document", "description": "Sets the document's language code."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Document", "description": "Sets the document title."}, {"name": "setSelection", "parameters": [{"name": "range", "type": "Range"}], "result": "Document", "description": "Sets the user's selection in the active document, given a Range."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/mail", "name": "Mail", "type": "mail", "methods": [{"name": "getRemainingDailyQuota", "parameters": [], "result": "Integer", "description": "Returns the number of remaining emails a user can send for the rest of the day."}, {"name": "sendEmail", "parameters": [{"name": "message", "type": "Object"}], "result": "void", "description": "Sends an email message."}, {"name": "sendEmail", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}], "result": "void", "description": "Sends an email message."}, {"name": "sendEmail", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "void", "description": "Sends an email message with optional arguments."}, {"name": "sendEmail", "parameters": [{"name": "to", "type": "String"}, {"name": "replyTo", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}], "result": "void", "description": "Sends an email message."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/lock/lock", "name": "Lock", "type": "class", "methods": [{"name": "hasLock", "parameters": [], "result": "Boolean", "description": "Returns true if the lock was acquired."}, {"name": "releaseLock", "parameters": [], "result": "void", "description": "Releases the lock, allowing other processes waiting on the lock to continue."}, {"name": "tryLock", "parameters": [{"name": "timeoutInMillis", "type": "Integer"}], "result": "Boolean", "description": "Attempts to acquire the lock, timing out after the provided number of milliseconds."}, {"name": "waitLock", "parameters": [{"name": "timeoutInMillis", "type": "Integer"}], "result": "void", "description": "Attempts to acquire the lock, timing out with an exception after the provided number of\nmilliseconds."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/lock/lock-service", "name": "LockService", "type": "class", "methods": [{"name": "getDocumentLock", "parameters": [], "result": "Lock", "description": "Gets a lock that prevents any user of the current document from concurrently running a section\nof code."}, {"name": "getScriptLock", "parameters": [], "result": "Lock", "description": "Gets a lock that prevents any user from concurrently running a section of code."}, {"name": "getUserLock", "parameters": [], "result": "Lock", "description": "Gets a lock that prevents the current user from concurrently running a section of code."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/lock", "name": "Lock", "type": "lock", "methods": [{"name": "hasLock", "parameters": [], "result": "Boolean", "description": "Returns true if the lock was acquired."}, {"name": "releaseLock", "parameters": [], "result": "void", "description": "Releases the lock, allowing other processes waiting on the lock to continue."}, {"name": "tryLock", "parameters": [{"name": "timeoutInMillis", "type": "Integer"}], "result": "Boolean", "description": "Attempts to acquire the lock, timing out after the provided number of milliseconds."}, {"name": "waitLock", "parameters": [{"name": "timeoutInMillis", "type": "Integer"}], "result": "void", "description": "Attempts to acquire the lock, timing out with an exception after the provided number of\nmilliseconds."}, {"name": "getDocumentLock", "parameters": [], "result": "Lock", "description": "Gets a lock that prevents any user of the current document from concurrently running a section\nof code."}, {"name": "getScriptLock", "parameters": [], "result": "Lock", "description": "Gets a lock that prevents any user from concurrently running a section of code."}, {"name": "getUserLock", "parameters": [], "result": "Lock", "description": "Gets a lock that prevents the current user from concurrently running a section of code."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-timestamp", "name": "JdbcTimestamp", "type": "class", "methods": [{"name": "after", "parameters": [{"name": "when", "type": "JdbcTimestamp"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Timestamp#after(Timestamp)."}, {"name": "before", "parameters": [{"name": "when", "type": "JdbcTimestamp"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Timestamp#before(Timestamp)."}, {"name": "getDate", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getDate()."}, {"name": "getHours", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getHours()."}, {"name": "getMinutes", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getMinutes()."}, {"name": "getMonth", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getMonth()."}, {"name": "getNanos", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Timestamp#getNanos()."}, {"name": "getSeconds", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getSeconds()."}, {"name": "getTime", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Timestamp#getTime()."}, {"name": "getYear", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getYear()."}, {"name": "setDate", "parameters": [{"name": "date", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setDate(int)."}, {"name": "setHours", "parameters": [{"name": "hours", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setHours(int)."}, {"name": "setMinutes", "parameters": [{"name": "minutes", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setMinutes(int)."}, {"name": "setMonth", "parameters": [{"name": "month", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setMonth(int)."}, {"name": "setNanos", "parameters": [{"name": "nanoseconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Timestamp#setNanos(int)."}, {"name": "setSeconds", "parameters": [{"name": "seconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setSeconds(int)."}, {"name": "setTime", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Timestamp#setTime(long)."}, {"name": "setYear", "parameters": [{"name": "year", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setYear(int)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/weekday.html", "name": "Weekday", "type": "enum", "methods": [], "properties": [{"name": "SUNDAY", "type": "Enum", "url": "", "description": "Sunday."}, {"name": "MONDAY", "type": "Enum", "url": "", "description": "Monday."}, {"name": "TUESDAY", "type": "Enum", "url": "", "description": "Tuesday."}, {"name": "WEDNESDAY", "type": "Enum", "url": "", "description": "Wednesday."}, {"name": "THURSDAY", "type": "Enum", "url": "", "description": "Thursday."}, {"name": "FRIDAY", "type": "Enum", "url": "", "description": "Friday."}, {"name": "SATURDAY", "type": "Enum", "url": "", "description": "Saturday."}]},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-time", "name": "JdbcTime", "type": "class", "methods": [{"name": "after", "parameters": [{"name": "when", "type": "JdbcTime"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Date#after(Date)."}, {"name": "before", "parameters": [{"name": "when", "type": "JdbcTime"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Date#before(Date)."}, {"name": "getHours", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getHours()."}, {"name": "getMinutes", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getMinutes()."}, {"name": "getSeconds", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getSeconds()."}, {"name": "getTime", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getTime()."}, {"name": "setHours", "parameters": [{"name": "hours", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setHours(int)."}, {"name": "setMinutes", "parameters": [{"name": "minutes", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setMinutes(int)."}, {"name": "setSeconds", "parameters": [{"name": "seconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setSeconds(int)."}, {"name": "setTime", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Time#setTime(long)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-savepoint", "name": "JdbcSavepoint", "type": "class", "methods": [{"name": "getSavepointId", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Savepoint#getSavepointId()."}, {"name": "getSavepointName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.Savepoint#getSavepointName()."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-statement", "name": "JdbcStatement", "type": "class", "methods": [{"name": "addBatch", "parameters": [{"name": "sql", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#addBatch(String)."}, {"name": "cancel", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#cancel()."}, {"name": "clearBatch", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#clearBatch()."}, {"name": "clearWarnings", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#clearWarnings()."}, {"name": "close", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#close()."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String)."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, int)."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnIndexes", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, int[])."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, String[])."}, {"name": "executeBatch", "parameters": [], "result": "Integer[]", "description": "For documentation of this method, see \njava.sql.Statement#executeBatch()."}, {"name": "executeQuery", "parameters": [{"name": "sql", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#executeQuery(String)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, int)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnIndexes", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, int[])."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, String[])."}, {"name": "getConnection", "parameters": [], "result": "JdbcConnection", "description": "For documentation of this method, see \njava.sql.Statement#getConnection()."}, {"name": "getFetchDirection", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getFetchDirection()."}, {"name": "getFetchSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getFetchSize()."}, {"name": "getGeneratedKeys", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#getGeneratedKeys()."}, {"name": "getMaxFieldSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getMaxFieldSize()."}, {"name": "getMaxRows", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getMaxRows()."}, {"name": "getMoreResults", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#getMoreResults()."}, {"name": "getMoreResults", "parameters": [{"name": "current", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#getMoreResults(int)."}, {"name": "getQueryTimeout", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getQueryTimeout()."}, {"name": "getResultSet", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#getResultSet()."}, {"name": "getResultSetConcurrency", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetConcurrency()."}, {"name": "getResultSetHoldability", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetHoldability()."}, {"name": "getResultSetType", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetType()."}, {"name": "getUpdateCount", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getUpdateCount()."}, {"name": "getWarnings", "parameters": [], "result": "String[]", "description": "For documentation of this method, see \njava.sql.Statement#getWarnings()."}, {"name": "isClosed", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#isClosed()."}, {"name": "isPoolable", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#isPoolable()."}, {"name": "setCursorName", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setCursorName(String)."}, {"name": "setEscapeProcessing", "parameters": [{"name": "enable", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setEscapeProcessing(boolean)."}, {"name": "setFetchDirection", "parameters": [{"name": "direction", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setFetchDirection(int)."}, {"name": "setFetchSize", "parameters": [{"name": "rows", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setFetchSize(int)."}, {"name": "setMaxFieldSize", "parameters": [{"name": "max", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setMaxFieldSize(int)."}, {"name": "setMaxRows", "parameters": [{"name": "max", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setMaxRows(int)."}, {"name": "setPoolable", "parameters": [{"name": "poolable", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setPoolable(boolean)."}, {"name": "setQueryTimeout", "parameters": [{"name": "seconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setQueryTimeout(int)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-row-id", "name": "JdbcRowId", "type": "class", "methods": [{"name": "getBytes", "parameters": [], "result": "Byte[]", "description": "For documentation of this method, see \njava.sql.RowId#getBytes()."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-sqlxml", "name": "JdbcSQLXML", "type": "class", "methods": [{"name": "free", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.SQLXML#free()."}, {"name": "getString", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.SQLXML#getString()."}, {"name": "setString", "parameters": [{"name": "value", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.SQLXML#setString(String)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-struct", "name": "JdbcStruct", "type": "class", "methods": [{"name": "getAttributes", "parameters": [], "result": "Object[]", "description": "For documentation of this method, see \njava.sql.Struct#getAttributes()."}, {"name": "getSQLTypeName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.Struct#getSQLTypeName()."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-result-set-meta-data", "name": "JdbcResultSetMetaData", "type": "class", "methods": [{"name": "getCatalogName", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getCatalogName(int)."}, {"name": "getColumnClassName", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnClassName(int)."}, {"name": "getColumnCount", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnCount()."}, {"name": "getColumnDisplaySize", "parameters": [{"name": "column", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnDisplaySize(int)."}, {"name": "getColumnLabel", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnLabel(int)."}, {"name": "getColumnName", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnName(int)."}, {"name": "getColumnType", "parameters": [{"name": "column", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnType(int)."}, {"name": "getColumnTypeName", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnTypeName(int)."}, {"name": "getPrecision", "parameters": [{"name": "column", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getPrecision(int)."}, {"name": "getScale", "parameters": [{"name": "column", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getScale(int)."}, {"name": "getSchemaName", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getSchemaName(int)."}, {"name": "getTableName", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getTableName(int)."}, {"name": "isAutoIncrement", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isAutoIncrement(int)."}, {"name": "isCaseSensitive", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isCaseSensitive(int)."}, {"name": "isCurrency", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isCurrency(int)."}, {"name": "isDefinitelyWritable", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isDefinitelyWritable(int)."}, {"name": "isNullable", "parameters": [{"name": "column", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isNullable(int)."}, {"name": "isReadOnly", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isReadOnly(int)."}, {"name": "isSearchable", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isSearchable(int)."}, {"name": "isSigned", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isSigned(int)."}, {"name": "isWritable", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isWritable(int)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-ref", "name": "JdbcRef", "type": "class", "methods": [{"name": "getBaseTypeName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.Ref#getBaseTypeName()."}, {"name": "getObject", "parameters": [], "result": "Object", "description": "For documentation of this method, see \njava.sql.Ref#getObject()."}, {"name": "setObject", "parameters": [{"name": "object", "type": "Object"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Ref#setObject(Object)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-prepared-statement", "name": "JdbcPreparedStatement", "type": "class", "methods": [{"name": "addBatch", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#addBatch()."}, {"name": "addBatch", "parameters": [{"name": "sql", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#addBatch(String)."}, {"name": "cancel", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#cancel()."}, {"name": "clearBatch", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#clearBatch()."}, {"name": "clearParameters", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#clearParameters()."}, {"name": "clearWarnings", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#clearWarnings()."}, {"name": "close", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#close()."}, {"name": "execute", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.PreparedStatement#execute()."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String)."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, int)."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnIndexes", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, int[])."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, String[])."}, {"name": "executeBatch", "parameters": [], "result": "Integer[]", "description": "For documentation of this method, see \njava.sql.Statement#executeBatch()."}, {"name": "executeQuery", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.PreparedStatement#executeQuery()."}, {"name": "executeQuery", "parameters": [{"name": "sql", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#executeQuery(String)."}, {"name": "executeUpdate", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.PreparedStatement#executeUpdate()."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, int)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnIndexes", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, int[])."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, String[])."}, {"name": "getConnection", "parameters": [], "result": "JdbcConnection", "description": "For documentation of this method, see \njava.sql.Statement#getConnection()."}, {"name": "getFetchDirection", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getFetchDirection()."}, {"name": "getFetchSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getFetchSize()."}, {"name": "getGeneratedKeys", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#getGeneratedKeys()."}, {"name": "getMaxFieldSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getMaxFieldSize()."}, {"name": "getMaxRows", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getMaxRows()."}, {"name": "getMetaData", "parameters": [], "result": "JdbcResultSetMetaData", "description": "For documentation of this method, see \njava.sql.PreparedStatement#getMetaData()."}, {"name": "getMoreResults", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#getMoreResults()."}, {"name": "getMoreResults", "parameters": [{"name": "current", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#getMoreResults(int)."}, {"name": "getParameterMetaData", "parameters": [], "result": "JdbcParameterMetaData", "description": "For documentation of this method, see \njava.sql.PreparedStatement#getParameterMetaData()."}, {"name": "getQueryTimeout", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getQueryTimeout()."}, {"name": "getResultSet", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#getResultSet()."}, {"name": "getResultSetConcurrency", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetConcurrency()."}, {"name": "getResultSetHoldability", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetHoldability()."}, {"name": "getResultSetType", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetType()."}, {"name": "getUpdateCount", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getUpdateCount()."}, {"name": "getWarnings", "parameters": [], "result": "String[]", "description": "For documentation of this method, see \njava.sql.Statement#getWarnings()."}, {"name": "isClosed", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#isClosed()."}, {"name": "isPoolable", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#isPoolable()."}, {"name": "setArray", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcArray"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setArray(int, Array)."}, {"name": "setBigDecimal", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "BigNumber"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBigDecimal(int, BigDecimal)."}, {"name": "setBlob", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcBlob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBlob(int, Clob)."}, {"name": "setBoolean", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBoolean(int, boolean)."}, {"name": "setByte", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setByte(int, byte)."}, {"name": "setBytes", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBytes(int, byte[])."}, {"name": "setClob", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setClob(int, Clob)."}, {"name": "setCursorName", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setCursorName(String)."}, {"name": "setDate", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcDate"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setDate(int, Date)."}, {"name": "setDate", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcDate"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setDate(int, Date, Calendar)."}, {"name": "setDouble", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setDouble(int, double)."}, {"name": "setEscapeProcessing", "parameters": [{"name": "enable", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setEscapeProcessing(boolean)."}, {"name": "setFetchDirection", "parameters": [{"name": "direction", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setFetchDirection(int)."}, {"name": "setFetchSize", "parameters": [{"name": "rows", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setFetchSize(int)."}, {"name": "setFloat", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setFloat(int, float)."}, {"name": "setInt", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setInt(int, int)."}, {"name": "setLong", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setLong(int, long)."}, {"name": "setMaxFieldSize", "parameters": [{"name": "max", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setMaxFieldSize(int)."}, {"name": "setMaxRows", "parameters": [{"name": "max", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setMaxRows(int)."}, {"name": "setNClob", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNClob(int, NClob)."}, {"name": "setNString", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNString(int, String)."}, {"name": "setNull", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNull(int, int)."}, {"name": "setNull", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}, {"name": "typeName", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNull(int, int, String)."}, {"name": "setObject", "parameters": [{"name": "index", "type": "Integer"}, {"name": "x", "type": "Object"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setObject(int, Object)."}, {"name": "setObject", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Object"}, {"name": "targetSqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setObject(int, Object, int)."}, {"name": "setObject", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Object"}, {"name": "targetSqlType", "type": "Integer"}, {"name": "scaleOrLength", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setObject(int, Object, int, int)."}, {"name": "setPoolable", "parameters": [{"name": "poolable", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setPoolable(boolean)."}, {"name": "setQueryTimeout", "parameters": [{"name": "seconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setQueryTimeout(int)."}, {"name": "setRef", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcRef"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setRef(int, Ref)."}, {"name": "setRowId", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcRowId"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setRowId(int, RowId)."}, {"name": "setSQLXML", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcSQLXML"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setSQLXML(int, SQLXML)."}, {"name": "setShort", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setShort(int, short)."}, {"name": "setString", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setString(int, String)."}, {"name": "setTime", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTime"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTime(int, Time)."}, {"name": "setTime", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTime"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTime(int, Time, Calendar)."}, {"name": "setTimestamp", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTimestamp"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTimestamp(int, Timestamp)."}, {"name": "setTimestamp", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTimestamp"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTimestamp(int, Timestamp, Calendar)."}, {"name": "setURL", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setURL(int, URL)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-result-set", "name": "JdbcResultSet", "type": "class", "methods": [{"name": "absolute", "parameters": [{"name": "row", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#absolute(int)."}, {"name": "afterLast", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#afterLast()."}, {"name": "beforeFirst", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#beforeFirst()."}, {"name": "cancelRowUpdates", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#cancelRowUpdates()."}, {"name": "clearWarnings", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#clearWarnings()."}, {"name": "close", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#close()."}, {"name": "deleteRow", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#deleteRow()."}, {"name": "findColumn", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#findColumn(String)."}, {"name": "first", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#first()."}, {"name": "getArray", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcArray", "description": "For documentation of this method, see \njava.sql.ResultSet#getArray(int)."}, {"name": "getArray", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcArray", "description": "For documentation of this method, see \njava.sql.ResultSet#getArray(String)."}, {"name": "getBigDecimal", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "BigNumber", "description": "For documentation of this method, see \njava.sql.ResultSet#getBigDecimal(int)."}, {"name": "getBigDecimal", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "BigNumber", "description": "For documentation of this method, see \njava.sql.ResultSet#getBigDecimal(String)."}, {"name": "getBlob", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcBlob", "description": "For documentation of this method, see \njava.sql.ResultSet#getBlob(int)."}, {"name": "getBlob", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcBlob", "description": "For documentation of this method, see \njava.sql.ResultSet#getBlob(String)."}, {"name": "getBoolean", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#getBoolean(int)."}, {"name": "getBoolean", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#getBoolean(String)."}, {"name": "getByte", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Byte", "description": "For documentation of this method, see \njava.sql.ResultSet#getByte(int)."}, {"name": "getByte", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Byte", "description": "For documentation of this method, see \njava.sql.ResultSet#getByte(String)."}, {"name": "getBytes", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Byte[]", "description": "For documentation of this method, see \njava.sql.ResultSet#getBytes(int)."}, {"name": "getBytes", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Byte[]", "description": "For documentation of this method, see \njava.sql.ResultSet#getBytes(String)."}, {"name": "getClob", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.ResultSet#getClob(int)."}, {"name": "getClob", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.ResultSet#getClob(String)."}, {"name": "getConcurrency", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getConcurrency()."}, {"name": "getCursorName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getCursorName()."}, {"name": "getDate", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.ResultSet#getDate(int)."}, {"name": "getDate", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "timeZone", "type": "String"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.ResultSet#getDate(int, Calendar)."}, {"name": "getDate", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.ResultSet#getDate(String)."}, {"name": "getDate", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "timeZone", "type": "String"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.ResultSet#getDate(String, Calendar)."}, {"name": "getDouble", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.ResultSet#getDouble(int)."}, {"name": "getDouble", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.ResultSet#getDouble(String)."}, {"name": "getFetchDirection", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getFetchDirection()."}, {"name": "getFetchSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getFetchSize()."}, {"name": "getFloat", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.ResultSet#getFloat(int)."}, {"name": "getFloat", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.ResultSet#getFloat(String)."}, {"name": "getHoldability", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getHoldability()."}, {"name": "getInt", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getInt(int)."}, {"name": "getInt", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getInt(String)."}, {"name": "getLong", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getLong(int)."}, {"name": "getLong", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getLong(String)."}, {"name": "getMetaData", "parameters": [], "result": "JdbcResultSetMetaData", "description": "For documentation of this method, see \njava.sql.ResultSet#getMetaData()."}, {"name": "getNClob", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.ResultSet#getNClob(int)."}, {"name": "getNClob", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.ResultSet#getNClob(String)."}, {"name": "getNString", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getNString(int)."}, {"name": "getNString", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getNString(String)."}, {"name": "getObject", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Object", "description": "For documentation of this method, see \njava.sql.ResultSet#getObject(int)."}, {"name": "getObject", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Object", "description": "For documentation of this method, see \njava.sql.ResultSet#getObject(String)."}, {"name": "getRef", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcRef", "description": "For documentation of this method, see \njava.sql.ResultSet#getRef(int)."}, {"name": "getRef", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcRef", "description": "For documentation of this method, see \njava.sql.ResultSet#getRef(String)."}, {"name": "getRow", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getRow()."}, {"name": "getRowId", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcRowId", "description": "For documentation of this method, see \njava.sql.ResultSet#getRowId(int)."}, {"name": "getRowId", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcRowId", "description": "For documentation of this method, see \njava.sql.ResultSet#getRowId(String)."}, {"name": "getSQLXML", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcSQLXML", "description": "For documentation of this method, see \njava.sql.ResultSet#getSQLXML(int)."}, {"name": "getSQLXML", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcSQLXML", "description": "For documentation of this method, see \njava.sql.ResultSet#getSQLXML(String)."}, {"name": "getShort", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getShort(int)."}, {"name": "getShort", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getShort(String)."}, {"name": "getStatement", "parameters": [], "result": "JdbcStatement", "description": "For documentation of this method, see \njava.sql.ResultSet#getStatement()."}, {"name": "getString", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getString(int)."}, {"name": "getString", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getString(String)."}, {"name": "getTime", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.ResultSet#getTime(int)."}, {"name": "getTime", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.ResultSet#getTime(int, Calendar)."}, {"name": "getTime", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.ResultSet#getTime(String)."}, {"name": "getTime", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.ResultSet#getTime(String, Calendar)."}, {"name": "getTimestamp", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.ResultSet#getTimestamp(int)."}, {"name": "getTimestamp", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.ResultSet#getTimestamp(int, Calendar)."}, {"name": "getTimestamp", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.ResultSet#getTimestamp(String)."}, {"name": "getTimestamp", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.ResultSet#getTimestamp(String, Calendar)."}, {"name": "getType", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getType()."}, {"name": "getURL", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getURL(int)."}, {"name": "getURL", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getURL(String)."}, {"name": "getWarnings", "parameters": [], "result": "String[]", "description": "Returns the current set of warnings reported by the driver."}, {"name": "insertRow", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#insertRow()."}, {"name": "isAfterLast", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#isAfterLast()."}, {"name": "isBeforeFirst", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#isBeforeFirst()."}, {"name": "isClosed", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#isClosed()."}, {"name": "isFirst", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#isFirst()."}, {"name": "isLast", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#isLast()."}, {"name": "last", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#first()."}, {"name": "moveToCurrentRow", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#moveToCurrentRow()."}, {"name": "moveToInsertRow", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#moveToInsertRow()."}, {"name": "next", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#next()."}, {"name": "previous", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#previous()."}, {"name": "refreshRow", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#refreshRow()."}, {"name": "relative", "parameters": [{"name": "rows", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#relative(int)."}, {"name": "rowDeleted", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#rowDeleted()."}, {"name": "rowInserted", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#rowInserted()."}, {"name": "rowUpdated", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#rowUpdated()."}, {"name": "setFetchDirection", "parameters": [{"name": "direction", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#setFetchDirection(int)."}, {"name": "setFetchSize", "parameters": [{"name": "rows", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#setFetchSize(int)."}, {"name": "updateArray", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcArray"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateArray(int, Array)."}, {"name": "updateArray", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcArray"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateArray(String, Array)."}, {"name": "updateBigDecimal", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "BigNumber"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBigDecimal(int, BigDecimal)."}, {"name": "updateBigDecimal", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "BigNumber"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBigDecimal(String, BigDecimal)."}, {"name": "updateBlob", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcBlob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBlob(int, Blob)."}, {"name": "updateBlob", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcBlob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateRef(String, Blob)."}, {"name": "updateBoolean", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBoolean(int, boolean)."}, {"name": "updateBoolean", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBoolean(String, boolean)."}, {"name": "updateByte", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateByte(int, byte)."}, {"name": "updateByte", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateByte(String, byte)."}, {"name": "updateBytes", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBytes(int, byte[])."}, {"name": "updateBytes", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBytes(String, byte[])."}, {"name": "updateClob", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateClob(int, Clob)."}, {"name": "updateClob", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateClob(String, Clob)."}, {"name": "updateDate", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcDate"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateDate(int, Date)."}, {"name": "updateDate", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcDate"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateDate(String, Date)."}, {"name": "updateDouble", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateDouble(int, double)."}, {"name": "updateDouble", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateDouble(String, double)."}, {"name": "updateFloat", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateFloat(int, float)."}, {"name": "updateFloat", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateFloat(String, float)."}, {"name": "updateInt", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateInt(int, int)."}, {"name": "updateInt", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateInt(String, int)."}, {"name": "updateLong", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateLong(int, long)."}, {"name": "updateLong", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateLong(String, long)."}, {"name": "updateNClob", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateNClob(int, NClob)."}, {"name": "updateNClob", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateNClob(String, NClob)."}, {"name": "updateNString", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateNString(int, String)."}, {"name": "updateNString", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateNString(String, String)."}, {"name": "updateNull", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateNull(int)."}, {"name": "updateNull", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateNull(String)."}, {"name": "updateObject", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Object"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateObject(int, Object)."}, {"name": "updateObject", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Object"}, {"name": "scaleOrLength", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateObject(int, Object, int)."}, {"name": "updateObject", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Object"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateObject(String, Object)."}, {"name": "updateObject", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Object"}, {"name": "scaleOrLength", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateObject(String, Object, int)."}, {"name": "updateRef", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcRef"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateRef(int, Ref)."}, {"name": "updateRef", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcRef"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateRef(String, Ref)."}, {"name": "updateRow", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateRow()."}, {"name": "updateRowId", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcRowId"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateRowId(int, RowId)."}, {"name": "updateRowId", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcRowId"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateRowId(String, RowId)."}, {"name": "updateSQLXML", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcSQLXML"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateSQLXML(int, SQLXML)."}, {"name": "updateSQLXML", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcSQLXML"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateSQLXML(String, SQLXML)."}, {"name": "updateShort", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateShort(int, short)."}, {"name": "updateShort", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateShort(String, short)."}, {"name": "updateString", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateString(int, String)."}, {"name": "updateString", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateString(String, String)."}, {"name": "updateTime", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTime"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateTime(int, Time)."}, {"name": "updateTime", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcTime"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateTime(String, Time)."}, {"name": "updateTimestamp", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTimestamp"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateTimestamp(int, Timestamp)."}, {"name": "updateTimestamp", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcTimestamp"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateTimestamp(String, Timestamp)."}, {"name": "wasNull", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#wasNull()."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-date", "name": "JdbcDate", "type": "class", "methods": [{"name": "after", "parameters": [{"name": "when", "type": "JdbcDate"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Date#after(date)."}, {"name": "before", "parameters": [{"name": "when", "type": "JdbcDate"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Date#before(date)."}, {"name": "getDate", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getDate()."}, {"name": "getMonth", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getMonth()."}, {"name": "getTime", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getTime()."}, {"name": "getYear", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getYear()."}, {"name": "setDate", "parameters": [{"name": "date", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setDate(int)."}, {"name": "setMonth", "parameters": [{"name": "month", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setMonth(int)."}, {"name": "setTime", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setTime(int)."}, {"name": "setYear", "parameters": [{"name": "year", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setYear(int)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/positioned-image.html", "name": "PositionedImage", "type": "class", "methods": [{"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Retrieves the image's height, in pixels."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the image's ID."}, {"name": "getLayout", "parameters": [], "result": "PositionedLayout", "description": "Gets an enum value that represents how the image is laid out."}, {"name": "getLeftOffset", "parameters": [], "result": "Number", "description": "Gets the image's offset, in points, from the paragraph's left."}, {"name": "getParagraph", "parameters": [], "result": "Paragraph", "description": "Gets the Paragraph the image is anchored to."}, {"name": "getTopOffset", "parameters": [], "result": "Number", "description": "Gets the image's offset, in points, from the paragraph's top."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Retrieves the image's width, in pixels."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Integer"}], "result": "PositionedImage", "description": "Sets the image's height, in pixels."}, {"name": "setLayout", "parameters": [{"name": "layout", "type": "PositionedLayout"}], "result": "PositionedImage", "description": "Sets the definition of how the image is laid out."}, {"name": "setLeftOffset", "parameters": [{"name": "offset", "type": "Number"}], "result": "PositionedImage", "description": "Sets the image's offset, in points, from the paragraph's left."}, {"name": "setTopOffset", "parameters": [{"name": "offset", "type": "Number"}], "result": "PositionedImage", "description": "Sets the image's offset, in points, from the paragraph's top."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "PositionedImage", "description": "Sets the image's width, in pixels."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/picture-fill.html", "name": "PictureFill", "type": "class", "methods": [{"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getContentUrl", "parameters": [], "result": "String", "description": "Gets a URL to the image."}, {"name": "getSourceUrl", "parameters": [], "result": "String", "description": "Gets the image's source URL, if available."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/paragraph.html", "name": "Paragraph", "type": "class", "methods": [{"name": "addPositionedImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "PositionedImage", "description": "Creates and inserts a new PositionedImage from the specified image blob."}, {"name": "appendHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Creates and appends a new HorizontalRule."}, {"name": "appendInlineImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and appends a new InlineImage from the specified image blob."}, {"name": "appendInlineImage", "parameters": [{"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Appends the given InlineImage."}, {"name": "appendPageBreak", "parameters": [], "result": "PageBreak", "description": "Creates and appends a new PageBreak."}, {"name": "appendPageBreak", "parameters": [{"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Appends the given PageBreak."}, {"name": "appendText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Creates and appends a new Text element with the specified contents."}, {"name": "appendText", "parameters": [{"name": "text", "type": "Text"}], "result": "Text", "description": "Appends the given Text element."}, {"name": "clear", "parameters": [], "result": "Paragraph", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "Paragraph", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAlignment", "parameters": [], "result": "HorizontalAlignment", "description": "Retrieves the HorizontalAlignment."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getHeading", "parameters": [], "result": "ParagraphHeading", "description": "Retrieves the ParagraphHeading."}, {"name": "getIndentEnd", "parameters": [], "result": "Number", "description": "Retrieves the end indentation, in points."}, {"name": "getIndentFirstLine", "parameters": [], "result": "Number", "description": "Retrieves the first line indentation, in points."}, {"name": "getIndentStart", "parameters": [], "result": "Number", "description": "Retrieves the start indentation."}, {"name": "getLineSpacing", "parameters": [], "result": "Number", "description": "Retrieves the line spacing, in points."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPositionedImage", "parameters": [{"name": "id", "type": "String"}], "result": "PositionedImage", "description": "Gets a PositionedImage by the image's ID."}, {"name": "getPositionedImages", "parameters": [], "result": "PositionedImage[]", "description": "Gets all PositionedImage objects anchored to the paragraph."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getSpacingAfter", "parameters": [], "result": "Number", "description": "Retrieves the spacing after the element, in points."}, {"name": "getSpacingBefore", "parameters": [], "result": "Number", "description": "Retrieves the spacing before the element, in points."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertHorizontalRule", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "HorizontalRule", "description": "Creates and inserts a HorizontalRule at the specified index."}, {"name": "insertInlineImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts a new InlineImage from the specified image blob, at the specified\nindex."}, {"name": "insertInlineImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Inserts the given InlineImage at the specified index."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "PageBreak", "description": "Creates and inserts a new PageBreak at the specified index."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Inserts the given PageBreak at the specified index."}, {"name": "insertText", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Text", "description": "Creates and inserts a new text element at the specified index."}, {"name": "insertText", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "Text"}], "result": "Text", "description": "Inserts the given Text element at the specified index, with the specified text\ncontents."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "isLeftToRight", "parameters": [], "result": "Boolean", "description": "Retrieves the left-to-right setting."}, {"name": "merge", "parameters": [], "result": "Paragraph", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "Paragraph", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "Paragraph", "description": "Removes the element from its parent."}, {"name": "removePositionedImage", "parameters": [{"name": "id", "type": "String"}], "result": "Boolean", "description": "Removes a PositionedImage by the image's ID."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAlignment", "parameters": [{"name": "alignment", "type": "HorizontalAlignment"}], "result": "Paragraph", "description": "Sets the HorizontalAlignment."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Paragraph", "description": "Sets the element's attributes."}, {"name": "setHeading", "parameters": [{"name": "heading", "type": "ParagraphHeading"}], "result": "Paragraph", "description": "Sets the ParagraphHeading."}, {"name": "setIndentEnd", "parameters": [{"name": "indentEnd", "type": "Number"}], "result": "Paragraph", "description": "Sets the end indentation, in points."}, {"name": "setIndentFirstLine", "parameters": [{"name": "indentFirstLine", "type": "Number"}], "result": "Paragraph", "description": "Sets the first line indentation, in points."}, {"name": "setIndentStart", "parameters": [{"name": "indentStart", "type": "Number"}], "result": "Paragraph", "description": "Sets the start indentation, in points."}, {"name": "setLeftToRight", "parameters": [{"name": "leftToRight", "type": "Boolean"}], "result": "Paragraph", "description": "Sets the left-to-right setting."}, {"name": "setLineSpacing", "parameters": [{"name": "multiplier", "type": "Number"}], "result": "Paragraph", "description": "Sets the line spacing, as a quantity indicating the number of lines to use for spacing."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Paragraph", "description": "Sets the link url."}, {"name": "setSpacingAfter", "parameters": [{"name": "spacingAfter", "type": "Number"}], "result": "Paragraph", "description": "Sets the spacing after the element, in points."}, {"name": "setSpacingBefore", "parameters": [{"name": "spacingBefore", "type": "Number"}], "result": "Paragraph", "description": "Sets the spacing before the element, in points."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "void", "description": "Sets the contents of the paragraph as text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "Paragraph", "description": "Sets the text alignment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/maps/static-map.html", "name": "StaticMap", "type": "class", "methods": [{"name": "addAddress", "parameters": [{"name": "address", "type": "String"}], "result": "StaticMap", "description": "Adds a new address to the current path definition."}, {"name": "addMarker", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "StaticMap", "description": "Adds a marker to the map using a point (lat/lng)."}, {"name": "addMarker", "parameters": [{"name": "address", "type": "String"}], "result": "StaticMap", "description": "Adds a marker to the map using an address."}, {"name": "addPath", "parameters": [{"name": "points", "type": "Number"}], "result": "StaticMap", "description": "Adds a path to the map using an array of points."}, {"name": "addPath", "parameters": [{"name": "polyline", "type": "String"}], "result": "StaticMap", "description": "Adds a path to the map using an encoded polyline."}, {"name": "addPoint", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "StaticMap", "description": "Adds a new point (lat/lng) to the current path definition."}, {"name": "addVisible", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "StaticMap", "description": "Adds a point (lat/lng) location that must be visible in the map."}, {"name": "addVisible", "parameters": [{"name": "address", "type": "String"}], "result": "StaticMap", "description": "Adds an address location that must be visible in the map."}, {"name": "beginPath", "parameters": [], "result": "StaticMap", "description": "Starts a new path definition."}, {"name": "clearMarkers", "parameters": [], "result": "StaticMap", "description": "Clears the current set of markers."}, {"name": "clearPaths", "parameters": [], "result": "StaticMap", "description": "Clear the current set of paths."}, {"name": "clearVisibles", "parameters": [], "result": "StaticMap", "description": "Clears the current set of visible locations."}, {"name": "endPath", "parameters": [], "result": "StaticMap", "description": "Completes a path definition started with beginPath()."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Gets the image data as a Blob."}, {"name": "getMapImage", "parameters": [], "result": "Byte[]", "description": "Gets the raw image data as a byte array."}, {"name": "getMapUrl", "parameters": [], "result": "String", "description": "Gets the URL of the map image."}, {"name": "setCenter", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "StaticMap", "description": "Sets the center of the map using a point (lat/lng)."}, {"name": "setCenter", "parameters": [{"name": "address", "type": "String"}], "result": "StaticMap", "description": "Sets the center of the map using an address."}, {"name": "setCustomMarkerStyle", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "useShadow", "type": "Boolean"}], "result": "StaticMap", "description": "Sets the custom marker image to use when creating new markers."}, {"name": "setFormat", "parameters": [{"name": "format", "type": "String"}], "result": "StaticMap", "description": "Sets the format of the map image."}, {"name": "setLanguage", "parameters": [{"name": "language", "type": "String"}], "result": "StaticMap", "description": "Sets the language to be used for text on the map (where avaialbe)."}, {"name": "setMapType", "parameters": [{"name": "mapType", "type": "String"}], "result": "StaticMap", "description": "Sets the type of map to be shown."}, {"name": "setMarkerStyle", "parameters": [{"name": "size", "type": "String"}, {"name": "color", "type": "String"}, {"name": "label", "type": "String"}], "result": "StaticMap", "description": "Sets the marker style to use when creating new markers."}, {"name": "setMobile", "parameters": [{"name": "useMobileTiles", "type": "Boolean"}], "result": "StaticMap", "description": "Sets whether or not to use specialized tile sets for mobile devices."}, {"name": "setPathStyle", "parameters": [{"name": "weight", "type": "Integer"}, {"name": "color", "type": "String"}, {"name": "fillColor", "type": "String"}], "result": "StaticMap", "description": "Sets the path style to use when creating new paths."}, {"name": "setSize", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "StaticMap", "description": "Sets the width and height of the map image in pixels."}, {"name": "setZoom", "parameters": [{"name": "zoom", "type": "Integer"}], "result": "StaticMap", "description": "Sets the zoom factor, or magnification level, used for the map."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-database-meta-data", "name": "JdbcDatabaseMetaData", "type": "class", "methods": [{"name": "allProceduresAreCallable", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#allProceduresAreCallable()."}, {"name": "allTablesAreSelectable", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#allTablesAreSelectable()."}, {"name": "autoCommitFailureClosesAllResultSets", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#autoCommitFailureClosesAllResultSets()."}, {"name": "dataDefinitionCausesTransactionCommit", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#dataDefinitionCausesTransactionCommit()."}, {"name": "dataDefinitionIgnoredInTransactions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#dataDefinitionIgnoredInTransactions()."}, {"name": "deletesAreDetected", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#deletesAreDetected(int)."}, {"name": "doesMaxRowSizeIncludeBlobs", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#doesMaxRowSizeIncludeBlobs()."}, {"name": "getAttributes", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "typeNamePattern", "type": "String"}, {"name": "attributeNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getAttributes(String, String, String, String)."}, {"name": "getBestRowIdentifier", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}, {"name": "scope", "type": "Integer"}, {"name": "nullable", "type": "Boolean"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getBestRowIdentifier(String, String, String, int, boolean)\n      ."}, {"name": "getCatalogSeparator", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getCatalogSeparator()."}, {"name": "getCatalogTerm", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getCatalogTerm()."}, {"name": "getCatalogs", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getCatalogs()."}, {"name": "getClientInfoProperties", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getClientInfoProperties()."}, {"name": "getColumnPrivileges", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}, {"name": "columnNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getColumnPrivileges(String, String, String, String)\n   ."}, {"name": "getColumns", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "tableNamePattern", "type": "String"}, {"name": "columnNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getColumns(String, String, String, String)."}, {"name": "getConnection", "parameters": [], "result": "JdbcConnection", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getConnection()."}, {"name": "getCrossReference", "parameters": [{"name": "parentCatalog", "type": "String"}, {"name": "parentSchema", "type": "String"}, {"name": "parentTable", "type": "String"}, {"name": "foreignCatalog", "type": "String"}, {"name": "foreignSchema", "type": "String"}, {"name": "foreignTable", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getCrossReference(String, String, String,\n     String, String, String)."}, {"name": "getDatabaseMajorVersion", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDatabaseMajorVersion()."}, {"name": "getDatabaseMinorVersion", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDatabaseMinorVersion()."}, {"name": "getDatabaseProductName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDatabaseProductName()."}, {"name": "getDatabaseProductVersion", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDatabaseProductVersion()."}, {"name": "getDefaultTransactionIsolation", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDefaultTransactionIsolation()."}, {"name": "getDriverMajorVersion", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDriverMajorVersion()."}, {"name": "getDriverMinorVersion", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDriverMinorVersion()."}, {"name": "getDriverName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDriverName()."}, {"name": "getDriverVersion", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDriverVersion()."}, {"name": "getExportedKeys", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getImportedKeys(String, String, String)."}, {"name": "getExtraNameCharacters", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getExtraNameCharacters()."}, {"name": "getFunctionColumns", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "functionNamePattern", "type": "String"}, {"name": "columnNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getFunctionColumns(String, String, String, String)."}, {"name": "getFunctions", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "functionNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getFunctions(String, String, String)."}, {"name": "getIdentifierQuoteString", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getIdentifierQuoteString()."}, {"name": "getImportedKeys", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getImportedKeys(String, String, String)."}, {"name": "getIndexInfo", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}, {"name": "unique", "type": "Boolean"}, {"name": "approximate", "type": "Boolean"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getIndexInfo(String, String, String, boolean, boolean)\n      ."}, {"name": "getJDBCMajorVersion", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getJDBCMajorVersion()."}, {"name": "getJDBCMinorVersion", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getJDBCMinorVersion()."}, {"name": "getMaxBinaryLiteralLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxBinaryLiteralLength()."}, {"name": "getMaxCatalogNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxCatalogNameLength()."}, {"name": "getMaxCharLiteralLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxCharLiteralLength()."}, {"name": "getMaxColumnNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxColumnNameLength()."}, {"name": "getMaxColumnsInGroupBy", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxColumnsInGroupBy()."}, {"name": "getMaxColumnsInIndex", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxColumnsInIndex()."}, {"name": "getMaxColumnsInOrderBy", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxColumnsInOrderBy()."}, {"name": "getMaxColumnsInSelect", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxColumnsInSelect()."}, {"name": "getMaxColumnsInTable", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxColumnsInTable()."}, {"name": "getMaxConnections", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxConnections()."}, {"name": "getMaxCursorNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxCursorNameLength()."}, {"name": "getMaxIndexLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxIndexLength()."}, {"name": "getMaxProcedureNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxProcedureNameLength()."}, {"name": "getMaxRowSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxRowSize()."}, {"name": "getMaxSchemaNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxSchemaNameLength()."}, {"name": "getMaxStatementLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxStatementLength()."}, {"name": "getMaxStatements", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxStatements()."}, {"name": "getMaxTableNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxTableNameLength()."}, {"name": "getMaxTablesInSelect", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxTablesInSelect()."}, {"name": "getMaxUserNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxUserNameLength()."}, {"name": "getNumericFunctions", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getNumericFunctions()."}, {"name": "getPrimaryKeys", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getPrimaryKeys(String, String, String)."}, {"name": "getProcedureColumns", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "procedureNamePattern", "type": "String"}, {"name": "columnNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getProcedureColumns(String, String, String, String)\n    ."}, {"name": "getProcedureTerm", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getProcedureTerm()."}, {"name": "getProcedures", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "procedureNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getProcedures(String, String, String)."}, {"name": "getResultSetHoldability", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getResultSetHoldability()."}, {"name": "getRowIdLifetime", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getRowIdLifetime()."}, {"name": "getSQLKeywords", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSQLKeywords()."}, {"name": "getSQLStateType", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSQLStateType()."}, {"name": "getSchemaTerm", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSchemaTerm()."}, {"name": "getSchemas", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSchemas()."}, {"name": "getSchemas", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSchemas()."}, {"name": "getSearchStringEscape", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSearchStringEscape()."}, {"name": "getStringFunctions", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getStringFunctions()."}, {"name": "getSuperTables", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "tableNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSuperTables(String, String,String)."}, {"name": "getSuperTypes", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "typeNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSuperTypes(String, String, String)."}, {"name": "getSystemFunctions", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSystemFunctions()."}, {"name": "getTablePrivileges", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "tableNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getTablePrivileges(String, String, String)."}, {"name": "getTableTypes", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getTableTypes()."}, {"name": "getTables", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "tableNamePattern", "type": "String"}, {"name": "types", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getTables(String, String, String, String[])."}, {"name": "getTimeDateFunctions", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getTimeDateFunctions()."}, {"name": "getTypeInfo", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getTypeInfo()."}, {"name": "getUDTs", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "typeNamePattern", "type": "String"}, {"name": "types", "type": "Integer"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getUDTs(String, String, String, int[])."}, {"name": "getURL", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getURL()."}, {"name": "getUserName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getUserName()."}, {"name": "getVersionColumns", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getVersionColumns(String, String, String)."}, {"name": "insertsAreDetected", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#insertsAreDetected(int)."}, {"name": "isCatalogAtStart", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#isCatalogAtStart()."}, {"name": "isReadOnly", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#isReadOnly()."}, {"name": "locatorsUpdateCopy", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#locatorsUpdateCopy()."}, {"name": "nullPlusNonNullIsNull", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#nullPlusNonNullIsNull()."}, {"name": "nullsAreSortedAtEnd", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#nullsAreSortedAtEnd()."}, {"name": "nullsAreSortedAtStart", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#nullsAreSortedAtStart()."}, {"name": "nullsAreSortedHigh", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#nullsAreSortedHigh()."}, {"name": "nullsAreSortedLow", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#nullsAreSortedLow()."}, {"name": "othersDeletesAreVisible", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#othersDeletesAreVisible(int)."}, {"name": "othersInsertsAreVisible", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#othersInsertsAreVisible(int)."}, {"name": "othersUpdatesAreVisible", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#othersUpdatesAreVisible(int)."}, {"name": "ownDeletesAreVisible", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#ownDeletesAreVisible(int)."}, {"name": "ownInsertsAreVisible", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#ownInsertsAreVisible(int)."}, {"name": "ownUpdatesAreVisible", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#ownUpdatesAreVisible(int)."}, {"name": "storesLowerCaseIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#storesLowerCaseIdentifiers()."}, {"name": "storesLowerCaseQuotedIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#storesLowerCaseQuotedIdentifiers()."}, {"name": "storesMixedCaseIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#storesMixedCaseIdentifiers()."}, {"name": "storesMixedCaseQuotedIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#storesMixedCaseQuotedIdentifiers()."}, {"name": "storesUpperCaseIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#storesUpperCaseIdentifiers()."}, {"name": "storesUpperCaseQuotedIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#storesUpperCaseQuotedIdentifiers()."}, {"name": "supportsANSI92EntryLevelSQL", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsANSI92EntryLevelSQL()."}, {"name": "supportsANSI92FullSQL", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsANSI92FullSQL()."}, {"name": "supportsANSI92IntermediateSQL", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsANSI92IntermediateSQL()."}, {"name": "supportsAlterTableWithAddColumn", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsAlterTableWithAddColumn()."}, {"name": "supportsAlterTableWithDropColumn", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsAlterTableWithDropColumn()."}, {"name": "supportsBatchUpdates", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsBatchUpdates()."}, {"name": "supportsCatalogsInDataManipulation", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCatalogsInDataManipulation()."}, {"name": "supportsCatalogsInIndexDefinitions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCatalogsInIndexDefinitions()."}, {"name": "supportsCatalogsInPrivilegeDefinitions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCatalogsInPrivilegeDefinitions()."}, {"name": "supportsCatalogsInProcedureCalls", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCatalogsInProcedureCalls()."}, {"name": "supportsCatalogsInTableDefinitions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCatalogsInTableDefinitions()."}, {"name": "supportsColumnAliasing", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsColumnAliasing()."}, {"name": "supportsConvert", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsConvert()."}, {"name": "supportsConvert", "parameters": [{"name": "fromType", "type": "Integer"}, {"name": "toType", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsConvert(int, int)."}, {"name": "supportsCoreSQLGrammar", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCoreSQLGrammar()."}, {"name": "supportsCorrelatedSubqueries", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCorrelatedSubqueries()."}, {"name": "supportsDataDefinitionAndDataManipulationTransactions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsDataDefinitionAndDataManipulationTransactions()\n."}, {"name": "supportsDataManipulationTransactionsOnly", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsDataManipulationTransactionsOnly()."}, {"name": "supportsDifferentTableCorrelationNames", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsDifferentTableCorrelationNames()."}, {"name": "supportsExpressionsInOrderBy", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsExpressionsInOrderBy()."}, {"name": "supportsExtendedSQLGrammar", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsExtendedSQLGrammar()."}, {"name": "supportsFullOuterJoins", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsFullOuterJoins()."}, {"name": "supportsGetGeneratedKeys", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsGetGeneratedKeys()."}, {"name": "supportsGroupBy", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsGroupBy()."}, {"name": "supportsGroupByBeyondSelect", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsGroupByBeyondSelect()."}, {"name": "supportsGroupByUnrelated", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsGroupByUnrelated()."}, {"name": "supportsIntegrityEnhancementFacility", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsIntegrityEnhancementFacility()."}, {"name": "supportsLikeEscapeClause", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsLikeEscapeClause()."}, {"name": "supportsLimitedOuterJoins", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsLimitedOuterJoins()."}, {"name": "supportsMinimumSQLGrammar", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsMinimumSQLGrammar()."}, {"name": "supportsMixedCaseIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsMixedCaseIdentifiers()."}, {"name": "supportsMixedCaseQuotedIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsMixedCaseQuotedIdentifiers()."}, {"name": "supportsMultipleOpenResults", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsMultipleOpenResults()."}, {"name": "supportsMultipleResultSets", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsMultipleResultSets()."}, {"name": "supportsMultipleTransactions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsMultipleTransactions()."}, {"name": "supportsNamedParameters", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsNamedParameters()."}, {"name": "supportsNonNullableColumns", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsNonNullableColumns()."}, {"name": "supportsOpenCursorsAcrossCommit", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsOpenCursorsAcrossCommit()."}, {"name": "supportsOpenCursorsAcrossRollback", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsOpenCursorsAcrossRollback()."}, {"name": "supportsOpenStatementsAcrossCommit", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsOpenStatementsAcrossCommit()."}, {"name": "supportsOpenStatementsAcrossRollback", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsOpenStatementsAcrossRollback()."}, {"name": "supportsOrderByUnrelated", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsOrderByUnrelated()."}, {"name": "supportsOuterJoins", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsOuterJoins()."}, {"name": "supportsPositionedDelete", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsPositionedDelete()."}, {"name": "supportsPositionedUpdate", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsPositionedUpdate()."}, {"name": "supportsResultSetConcurrency", "parameters": [{"name": "type", "type": "Integer"}, {"name": "concurrency", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsResultSetConcurrency(int, int)."}, {"name": "supportsResultSetHoldability", "parameters": [{"name": "holdability", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsResultSetHoldability(int)."}, {"name": "supportsResultSetType", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsResultSetType(int)."}, {"name": "supportsSavepoints", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSavepoints()."}, {"name": "supportsSchemasInDataManipulation", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSchemasInDataManipulation()."}, {"name": "supportsSchemasInIndexDefinitions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSchemasInIndexDefinitions()."}, {"name": "supportsSchemasInPrivilegeDefinitions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSchemasInPrivilegeDefinitions()."}, {"name": "supportsSchemasInProcedureCalls", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSchemasInProcedureCalls()."}, {"name": "supportsSchemasInTableDefinitions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSchemasInTableDefinitions()."}, {"name": "supportsSelectForUpdate", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSelectForUpdate()."}, {"name": "supportsStatementPooling", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsStatementPooling()."}, {"name": "supportsStoredFunctionsUsingCallSyntax", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsStoredFunctionsUsingCallSyntax()."}, {"name": "supportsStoredProcedures", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsStoredProcedures()."}, {"name": "supportsSubqueriesInComparisons", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSubqueriesInComparisons()."}, {"name": "supportsSubqueriesInExists", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSubqueriesInExists()."}, {"name": "supportsSubqueriesInIns", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSubqueriesInIns()."}, {"name": "supportsSubqueriesInQuantifieds", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSubqueriesInQuantifieds()."}, {"name": "supportsTableCorrelationNames", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsTableCorrelationNames()."}, {"name": "supportsTransactionIsolationLevel", "parameters": [{"name": "level", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsTransactionIsolationLevel(int)."}, {"name": "supportsTransactions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsTransactions()."}, {"name": "supportsUnion", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsUnion()."}, {"name": "supportsUnionAll", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsUnionAll()."}, {"name": "updatesAreDetected", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#updatesAreDetected(int)."}, {"name": "usesLocalFilePerTable", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#usesLocalFilePerTable()."}, {"name": "usesLocalFiles", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#usesLocalFiles()."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-clob.html", "name": "JdbcClob", "type": "class", "methods": [{"name": "free", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Clob#truncate(long)."}, {"name": "getAppsScriptBlob", "parameters": [], "result": "Blob", "description": "Gets the content of this JdbcClob as an Apps Script blob."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getSubString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "length", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.Clob#getSubString(long, int)."}, {"name": "length", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#length()."}, {"name": "position", "parameters": [{"name": "search", "type": "JdbcClob"}, {"name": "start", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#position(Clob, long)."}, {"name": "position", "parameters": [{"name": "search", "type": "String"}, {"name": "start", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#position(String, long)."}, {"name": "setString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "blobSource", "type": "BlobSource"}], "result": "Integer", "description": "Convenience method for writing a JdbcClob to a clob."}, {"name": "setString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "blobSource", "type": "BlobSource"}, {"name": "offset", "type": "Integer"}, {"name": "len", "type": "Integer"}], "result": "Integer", "description": "Convenience method for writing a JdbcClob to a clob."}, {"name": "setString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "value", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#setString(long, String)."}, {"name": "setString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "value", "type": "String"}, {"name": "offset", "type": "Integer"}, {"name": "len", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#setString(long, String, int, int)."}, {"name": "truncate", "parameters": [{"name": "length", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Clob#truncate(long)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/user.html", "name": "User", "type": "class", "methods": [{"name": "getEmail", "parameters": [], "result": "String", "description": "Gets the user's email address, if available."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-parameter-meta-data", "name": "JdbcParameterMetaData", "type": "class", "methods": [{"name": "getParameterClassName", "parameters": [{"name": "param", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getParameterClassName(int)."}, {"name": "getParameterCount", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getParameterCount()."}, {"name": "getParameterMode", "parameters": [{"name": "param", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getParameterMode(int)."}, {"name": "getParameterType", "parameters": [{"name": "param", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getParameterType(int)."}, {"name": "getParameterTypeName", "parameters": [{"name": "param", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getParameterTypeName(int)."}, {"name": "getPrecision", "parameters": [{"name": "param", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getPrecision(int)."}, {"name": "getScale", "parameters": [{"name": "param", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getScale(int)."}, {"name": "isNullable", "parameters": [{"name": "param", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#isNullable(int)."}, {"name": "isSigned", "parameters": [{"name": "param", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#isSigned(int)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/image.html", "name": "Image", "type": "class", "methods": [{"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "Image", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "bringForward", "parameters": [], "result": "Image", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "Image", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this image as a blob."}, {"name": "getBorder", "parameters": [], "result": "Border", "description": "Returns the Border of the image."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getContentUrl", "parameters": [], "result": "String", "description": "Gets a URL to the image."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getLink", "parameters": [], "result": "Link", "description": "Returns the Link or null if there is no link."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getSourceUrl", "parameters": [], "result": "String", "description": "Gets the image's source URL, if available."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Image", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "removeLink", "parameters": [], "result": "void", "description": "Removes a Link."}, {"name": "replace", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "Image", "description": "Replaces this image with an image described by a BlobSource object."}, {"name": "replace", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "crop", "type": "Boolean"}], "result": "Image", "description": "Replaces this image with an image described by a Image object, optionally cropping\nthe image to fit."}, {"name": "replace", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "Image", "description": "Replaces this image with another image downloaded from the provided URL."}, {"name": "replace", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "crop", "type": "Boolean"}], "result": "Image", "description": "Replaces this image with another image downloaded from the provided URL, optionally cropping\nthe image to fit."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Image", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Image", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "Image", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "Image", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Image", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "Image", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "Image", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setLinkSlide", "parameters": [{"name": "slideIndex", "type": "Integer"}], "result": "Link", "description": "Sets a Link to the given Slide using the zero-based index of the slide."}, {"name": "setLinkSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "Link", "description": "Sets a Link to the given Slide, the link is set by the given slide ID."}, {"name": "setLinkSlide", "parameters": [{"name": "slidePosition", "type": "SlidePosition"}], "result": "Link", "description": "Sets a Link to the given Slide using the relative position of the slide."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Link", "description": "Sets a Link to the given non-empty URL string."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "Image", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Image", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "Image", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Image", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Image", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/inline-image.html", "name": "InlineImage", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "InlineImage", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAltDescription", "parameters": [], "result": "String", "description": "Returns the image's alternate description."}, {"name": "getAltTitle", "parameters": [], "result": "String", "description": "Returns the image's alternate title."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Retrieves the image's height, in pixels."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link URL."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Retrieves the image's width, in pixels."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "InlineImage", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "InlineImage", "description": "Removes the element from its parent."}, {"name": "setAltDescription", "parameters": [{"name": "description", "type": "String"}], "result": "InlineImage", "description": "Sets the image's alternate description."}, {"name": "setAltTitle", "parameters": [{"name": "title", "type": "String"}], "result": "InlineImage", "description": "Sets the image's alternate title."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "InlineImage", "description": "Sets the element's attributes."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Integer"}], "result": "InlineImage", "description": "Sets the image's height, in pixels."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "InlineImage", "description": "Sets the link URL."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "InlineImage", "description": "Sets the image's width, in pixels."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/page-element.html", "name": "PageElement", "type": "class", "methods": [{"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "PageElement", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "asGroup", "parameters": [], "result": "Group", "description": "Returns the page element as a group."}, {"name": "asImage", "parameters": [], "result": "Image", "description": "Returns the page element as an image."}, {"name": "asLine", "parameters": [], "result": "Line", "description": "Returns the page element as a line."}, {"name": "asShape", "parameters": [], "result": "Shape", "description": "Returns the page element as a shape."}, {"name": "asSheetsChart", "parameters": [], "result": "SheetsChart", "description": "Returns the page element as a linked chart embedded from Google Sheets."}, {"name": "asTable", "parameters": [], "result": "Table", "description": "Returns the page element as a table."}, {"name": "asVideo", "parameters": [], "result": "Video", "description": "Returns the page element as a video."}, {"name": "asWordArt", "parameters": [], "result": "WordArt", "description": "Returns the page element as word art."}, {"name": "bringForward", "parameters": [], "result": "PageElement", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "PageElement", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "PageElement", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "PageElement", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "PageElement", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "PageElement", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "PageElement", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "PageElement", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "PageElement", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "PageElement", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "PageElement", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "PageElement", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "PageElement", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "PageElement", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "PageElement", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/gmail/gmail-attachment.html", "name": "GmailAttachment", "type": "class", "methods": [{"name": "copyBlob", "parameters": [], "result": "Blob", "description": "Returns a copy of this blob."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBytes", "parameters": [], "result": "Byte[]", "description": "Gets the data stored in this blob."}, {"name": "getContentType", "parameters": [], "result": "String", "description": "Gets the content type of the bytes in this blob."}, {"name": "getDataAsString", "parameters": [], "result": "String", "description": "Gets the data of this blob as a String with UTF-8 encoding."}, {"name": "getDataAsString", "parameters": [{"name": "charset", "type": "String"}], "result": "String", "description": "Gets the data of this blob as a string with the specified encoding."}, {"name": "getHash", "parameters": [], "result": "String", "description": "Gets the SHA1 content hash for this attachment."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this blob."}, {"name": "getSize", "parameters": [], "result": "Integer", "description": "Gets the size of this attachment."}, {"name": "isGoogleType", "parameters": [], "result": "Boolean", "description": "Returns whether this blob is a Google Workspace file (Sheets, Docs, etc.)."}, {"name": "setBytes", "parameters": [{"name": "data", "type": "Byte"}], "result": "Blob", "description": "Sets the data stored in this blob."}, {"name": "setContentType", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Sets the content type of the bytes in this blob."}, {"name": "setContentTypeFromExtension", "parameters": [], "result": "Blob", "description": "Sets the content type of the bytes in this blob based on the file extension."}, {"name": "setDataFromString", "parameters": [{"name": "string", "type": "String"}], "result": "Blob", "description": "Sets the data of this blob from a string with UTF-8 encoding."}, {"name": "setDataFromString", "parameters": [{"name": "string", "type": "String"}, {"name": "charset", "type": "String"}], "result": "Blob", "description": "Sets the data of this blob from a string with the specified encoding."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Blob", "description": "Sets the name of this blob."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-blob.html", "name": "JdbcBlob", "type": "class", "methods": [{"name": "free", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Blob#free()."}, {"name": "getAppsScriptBlob", "parameters": [], "result": "Blob", "description": "Gets the content of this JdbcBlob as an Apps Script blob."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "length", "type": "Integer"}], "result": "Byte[]", "description": "For documentation of this method, see \njava.sql.Blob#getBytes(long, int)."}, {"name": "length", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#length()."}, {"name": "position", "parameters": [{"name": "pattern", "type": "Byte"}, {"name": "start", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#position(byte[], long)."}, {"name": "position", "parameters": [{"name": "pattern", "type": "JdbcBlob"}, {"name": "start", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#position(blob, long)."}, {"name": "setBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "blobSource", "type": "BlobSource"}], "result": "Integer", "description": "Convenience method for writing a JdbcBlob to this blob."}, {"name": "setBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "blobSource", "type": "BlobSource"}, {"name": "offset", "type": "Integer"}, {"name": "length", "type": "Integer"}], "result": "Integer", "description": "Convenience method for writing a JdbcBlob to this blob."}, {"name": "setBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "bytes", "type": "Byte"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#setBytes(long, byte[])."}, {"name": "setBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "bytes", "type": "Byte"}, {"name": "offset", "type": "Integer"}, {"name": "length", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#setBytes(long, byte[], int, int)."}, {"name": "truncate", "parameters": [{"name": "length", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Blob#truncate(long)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/html/html-output.html", "name": "HtmlOutput", "type": "class", "methods": [{"name": "addMetaTag", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}], "result": "HtmlOutput", "description": "Adds a meta tag to the page."}, {"name": "append", "parameters": [{"name": "addedContent", "type": "String"}], "result": "HtmlOutput", "description": "Appends new content to the content of this HtmlOutput."}, {"name": "appendUntrusted", "parameters": [{"name": "addedContent", "type": "String"}], "result": "HtmlOutput", "description": "Appends new content to the content of this HtmlOutput, using contextual escaping."}, {"name": "asTemplate", "parameters": [], "result": "HtmlTemplate", "description": "Returns an HtmlTemplate backed by this HtmlOutput."}, {"name": "clear", "parameters": [], "result": "HtmlOutput", "description": "Clears the current content."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getContent", "parameters": [], "result": "String", "description": "Gets the content of this HtmlOutput."}, {"name": "getFaviconUrl", "parameters": [], "result": "String", "description": "Gets the URL for a favicon link tag added to the page by calling setFaviconUrl(iconUrl)."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Gets the initial height of the custom dialog in Google\nDocs, Sheets, or Forms."}, {"name": "getMetaTags", "parameters": [], "result": "HtmlOutputMetaTag[]", "description": "Gets an array of objects that represent meta tags added to the page by calling addMetaTag(name, content)."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the title of the output page."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Gets the initial width of the custom dialog in Google\nDocs, Sheets, or Forms."}, {"name": "setContent", "parameters": [{"name": "content", "type": "String"}], "result": "HtmlOutput", "description": "Sets the content of this HtmlOutput."}, {"name": "setFaviconUrl", "parameters": [{"name": "iconUrl", "type": "String"}], "result": "HtmlOutput", "description": "Adds a link tag for a favicon to the page."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Integer"}], "result": "HtmlOutput", "description": "Sets the initial height of the custom dialog in Google\nDocs, Sheets, or Forms."}, {"name": "setSandboxMode", "parameters": [{"name": "mode", "type": "SandboxMode"}], "result": "HtmlOutput", "description": "This method now has no effect \u2014 previously it set the sandbox\nmode used for client-side scripts."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "HtmlOutput", "description": "Sets the title of the output page."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "HtmlOutput", "description": "Sets the initial width of a custom dialog in Google\nDocs, Sheets, or Forms."}, {"name": "setXFrameOptionsMode", "parameters": [{"name": "mode", "type": "XFrameOptionsMode"}], "result": "HtmlOutput", "description": "Sets the state of the page's X-Frame-Options header, which controls clickjacking\nprevention."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/url-fetch/http-response.html", "name": "HTTPResponse", "type": "class", "methods": [{"name": "getAllHeaders", "parameters": [], "result": "Object", "description": "Returns an attribute/value map of headers for the HTTP response, with headers that have\nmultiple values returned as arrays."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getContent", "parameters": [], "result": "Byte[]", "description": "Gets the raw binary content of an HTTP response."}, {"name": "getContentText", "parameters": [], "result": "String", "description": "Gets the content of an HTTP response encoded as a string."}, {"name": "getContentText", "parameters": [{"name": "charset", "type": "String"}], "result": "String", "description": "Returns the content of an HTTP response encoded as a string of the given charset."}, {"name": "getHeaders", "parameters": [], "result": "Object", "description": "Returns an attribute/value map of headers for the HTTP response."}, {"name": "getResponseCode", "parameters": [], "result": "Integer", "description": "Get the HTTP status code (200 for OK, etc.) of an HTTP response."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/drive/", "name": "Drive", "type": "drive", "methods": [{"name": "continueFileIterator", "parameters": [{"name": "continuationToken", "type": "String"}], "result": "FileIterator", "description": "Resumes a file iteration using a continuation token from a previous iterator."}, {"name": "continueFolderIterator", "parameters": [{"name": "continuationToken", "type": "String"}], "result": "FolderIterator", "description": "Resumes a folder iteration using a continuation token from a previous iterator."}, {"name": "createFile", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "File", "description": "Creates a file in the root of the user's Drive from a given Blob of arbitrary data."}, {"name": "createFile", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}], "result": "File", "description": "Creates a text file in the root of the user's Drive with the given name and contents."}, {"name": "createFile", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}, {"name": "mimeType", "type": "String"}], "result": "File", "description": "Creates a file in the root of the user's Drive with the given name, contents, and MIME type."}, {"name": "createFolder", "parameters": [{"name": "name", "type": "String"}], "result": "Folder", "description": "Creates a folder in the root of the user's Drive with the given name."}, {"name": "createShortcut", "parameters": [{"name": "targetId", "type": "String"}], "result": "File", "description": "Creates a shortcut to the provided Drive item ID, and returns it."}, {"name": "enforceSingleParent", "parameters": [{"name": "value", "type": "Boolean"}], "result": "void", "description": "Enables or disables enforceSingleParent behavior for all calls affecting item parents."}, {"name": "getFileById", "parameters": [{"name": "id", "type": "String"}], "result": "File", "description": "Gets the file with the given ID."}, {"name": "getFiles", "parameters": [], "result": "FileIterator", "description": "Gets a collection of all files in the user's Drive."}, {"name": "getFilesByName", "parameters": [{"name": "name", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files in the user's Drive that have the given name."}, {"name": "getFilesByType", "parameters": [{"name": "mimeType", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files in the user's Drive that have the given MIME type."}, {"name": "getFolderById", "parameters": [{"name": "id", "type": "String"}], "result": "Folder", "description": "Gets the folder with the given ID."}, {"name": "getFolders", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of all folders in the user's Drive."}, {"name": "getFoldersByName", "parameters": [{"name": "name", "type": "String"}], "result": "FolderIterator", "description": "Gets a collection of all folders in the user's Drive that have the given name."}, {"name": "getRootFolder", "parameters": [], "result": "Folder", "description": "Gets the folder at the root of the user's Drive."}, {"name": "getStorageLimit", "parameters": [], "result": "Integer", "description": "Gets the number of bytes the user is allowed to store in Drive."}, {"name": "getStorageUsed", "parameters": [], "result": "Integer", "description": "Gets the number of bytes the user is currently storing in Drive."}, {"name": "getTrashedFiles", "parameters": [], "result": "FileIterator", "description": "Gets a collection of all the files in the trash of the user's Drive."}, {"name": "getTrashedFolders", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of all the folders in the trash of the user's Drive."}, {"name": "searchFiles", "parameters": [{"name": "params", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files in the user's Drive that match the given search\ncriteria."}, {"name": "searchFolders", "parameters": [{"name": "params", "type": "String"}], "result": "FolderIterator", "description": "Gets a collection of all folders in the user's Drive that match the given search\ncriteria."}, {"name": "addCommenter", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Add the given user to the list of commenters for the File."}, {"name": "addCommenter", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Add the given user to the list of commenters for the File."}, {"name": "addCommenters", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "File", "description": "Add the given array of users to the list of commenters for the File."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Adds the given user to the list of editors for the File."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Adds the given user to the list of editors for the File."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "File", "description": "Adds the given array of users to the list of editors for the File."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Adds the given user to the list of viewers for the File."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Adds the given user to the list of viewers for the File."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "File", "description": "Adds the given array of users to the list of viewers for the File."}, {"name": "getAccess", "parameters": [{"name": "email", "type": "String"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getAccess", "parameters": [{"name": "user", "type": "User"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getDateCreated", "parameters": [], "result": "Date", "description": "Gets the date the File was created."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description for the File."}, {"name": "getDownloadUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to download the file."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this File."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the File."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Gets the date the File was last updated."}, {"name": "getMimeType", "parameters": [], "result": "String", "description": "Gets the MIME type of the file."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the File."}, {"name": "getOwner", "parameters": [], "result": "User", "description": "Gets the owner of the File."}, {"name": "getParents", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of folders that are immediate parents of the File."}, {"name": "getSharingAccess", "parameters": [], "result": "Access", "description": "Gets which class of users can access the File, besides any individual\nusers who have been explicitly given access."}, {"name": "getSharingPermission", "parameters": [], "result": "Permission", "description": "Gets the permission granted to those users who can access the File,\nbesides any individual users who have been explicitly given access."}, {"name": "getSize", "parameters": [], "result": "Integer", "description": "Gets the number of bytes used to store the File in Drive."}, {"name": "getTargetId", "parameters": [], "result": "String", "description": "If this is a Shortcut, returns the ID of the item it points to."}, {"name": "getTargetMimeType", "parameters": [], "result": "String", "description": "If this is a Shortcut, returns the mime type of the item it points to."}, {"name": "getThumbnail", "parameters": [], "result": "Blob", "description": "Gets a thumbnail image for the file, or null if no thumbnail exists."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to open the File in a Google App like\nDrive or Docs."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this File."}, {"name": "isShareableByEditors", "parameters": [], "result": "Boolean", "description": "Determines whether users with edit permissions to the File are allowed to\nshare with other users or change the permissions."}, {"name": "isStarred", "parameters": [], "result": "Boolean", "description": "Determines whether the File has been starred in the user's Drive."}, {"name": "isTrashed", "parameters": [], "result": "Boolean", "description": "Determines whether the File is in the trash of the user's Drive."}, {"name": "makeCopy", "parameters": [], "result": "File", "description": "Creates a copy of the file."}, {"name": "makeCopy", "parameters": [{"name": "destination", "type": "Folder"}], "result": "File", "description": "Creates a copy of the file in the destination directory."}, {"name": "makeCopy", "parameters": [{"name": "name", "type": "String"}], "result": "File", "description": "Creates a copy of the file and names it with the name provided."}, {"name": "makeCopy", "parameters": [{"name": "name", "type": "String"}, {"name": "destination", "type": "Folder"}], "result": "File", "description": "Creates a copy of the file in the destination directory and names it with the name provided."}, {"name": "moveTo", "parameters": [{"name": "destination", "type": "Folder"}], "result": "File", "description": "Moves this item to the provided destination folder."}, {"name": "removeCommenter", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Removes the given user from the list of commenters for the File."}, {"name": "removeCommenter", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Removes the given user from the list of commenters for the File."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Removes the given user from the list of editors for the File."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Removes the given user from the list of editors for the File."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Removes the given user from the list of viewers and commenters for the File."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Removes the given user from the list of viewers and commenters for the File."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "String"}], "result": "File", "description": "Revokes the access to the File granted to the given user."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Revokes the access to the File granted to the given user."}, {"name": "setContent", "parameters": [{"name": "content", "type": "String"}], "result": "File", "description": "Overwrites the content of the file with a given replacement."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "File", "description": "Sets the description for the File."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "File", "description": "Sets the name of the File."}, {"name": "setOwner", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Changes the owner of the File."}, {"name": "setOwner", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Changes the owner of the File."}, {"name": "setShareableByEditors", "parameters": [{"name": "shareable", "type": "Boolean"}], "result": "File", "description": "Sets whether users with edit permissions to the File are allowed to share\nwith other users or change the permissions."}, {"name": "setSharing", "parameters": [{"name": "accessType", "type": "Access"}, {"name": "permissionType", "type": "Permission"}], "result": "File", "description": "Sets which class of users can access the File and what permissions\nthose users are granted, besides any individual users who have been explicitly given access."}, {"name": "setStarred", "parameters": [{"name": "starred", "type": "Boolean"}], "result": "File", "description": "Sets whether the File is starred in the user's Drive."}, {"name": "setTrashed", "parameters": [{"name": "trashed", "type": "Boolean"}], "result": "File", "description": "Sets whether the File is in the trash of the user's Drive."}, {"name": "getContinuationToken", "parameters": [], "result": "String", "description": "Gets a token that can be used to resume this iteration at a later time."}, {"name": "hasNext", "parameters": [], "result": "Boolean", "description": "Determines whether calling next() will return an item."}, {"name": "next", "parameters": [], "result": "File", "description": "Gets the next item in the collection of files or folders."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Adds the given user to the list of editors for the Folder."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Adds the given user to the list of editors for the Folder."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Folder", "description": "Adds the given array of users to the list of editors for the Folder."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Adds the given user to the list of viewers for the Folder."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Adds the given user to the list of viewers for the Folder."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Folder", "description": "Adds the given array of users to the list of viewers for the Folder."}, {"name": "createFile", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "File", "description": "Creates a file in the current folder from a given Blob of arbitrary data."}, {"name": "createFile", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}], "result": "File", "description": "Creates a text file in the current folder with the given name and contents."}, {"name": "createFile", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}, {"name": "mimeType", "type": "String"}], "result": "File", "description": "Creates a file in the current folder with the given name, contents, and MIME type."}, {"name": "createFolder", "parameters": [{"name": "name", "type": "String"}], "result": "Folder", "description": "Creates a folder in the current folder with the given name."}, {"name": "createShortcut", "parameters": [{"name": "targetId", "type": "String"}], "result": "File", "description": "Creates a shortcut to the provided Drive item ID, and returns it."}, {"name": "getAccess", "parameters": [{"name": "email", "type": "String"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getAccess", "parameters": [{"name": "user", "type": "User"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getDateCreated", "parameters": [], "result": "Date", "description": "Gets the date the Folder was created."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description for the Folder."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Folder."}, {"name": "getFiles", "parameters": [], "result": "FileIterator", "description": "Gets a collection of all files that are children of the current folder."}, {"name": "getFilesByName", "parameters": [{"name": "name", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files that are children of the current folder and have the given name."}, {"name": "getFilesByType", "parameters": [{"name": "mimeType", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files that are children of the current folder and have the given MIME type."}, {"name": "getFolders", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of all folders that are children of the current folder."}, {"name": "getFoldersByName", "parameters": [{"name": "name", "type": "String"}], "result": "FolderIterator", "description": "Gets a collection of all folders that are children of the current folder and have the given name."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the Folder."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Gets the date the Folder was last updated."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the Folder."}, {"name": "getOwner", "parameters": [], "result": "User", "description": "Gets the owner of the Folder."}, {"name": "getParents", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of folders that are immediate parents of the Folder."}, {"name": "getSharingAccess", "parameters": [], "result": "Access", "description": "Gets which class of users can access the Folder, besides any individual\nusers who have been explicitly given access."}, {"name": "getSharingPermission", "parameters": [], "result": "Permission", "description": "Gets the permission granted to those users who can access the Folder,\nbesides any individual users who have been explicitly given access."}, {"name": "getSize", "parameters": [], "result": "Integer", "description": "Gets the number of bytes used to store the Folder in Drive."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to open the Folder in a Google App like\nDrive or Docs."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this Folder."}, {"name": "isShareableByEditors", "parameters": [], "result": "Boolean", "description": "Determines whether users with edit permissions to the Folder are allowed to\nshare with other users or change the permissions."}, {"name": "isStarred", "parameters": [], "result": "Boolean", "description": "Determines whether the Folder has been starred in the user's Drive."}, {"name": "isTrashed", "parameters": [], "result": "Boolean", "description": "Determines whether the Folder is in the trash of the user's Drive."}, {"name": "moveTo", "parameters": [{"name": "destination", "type": "Folder"}], "result": "Folder", "description": "Moves this item to the provided destination folder."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Removes the given user from the list of editors for the Folder."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Removes the given user from the list of editors for the Folder."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Removes the given user from the list of viewers and commenters for the Folder."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Removes the given user from the list of viewers and commenters for the Folder."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "String"}], "result": "Folder", "description": "Revokes the access to the Folder granted to the given user."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Revokes the access to the Folder granted to the given user."}, {"name": "searchFiles", "parameters": [{"name": "params", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files that are children of the current folder and match the given search\ncriteria."}, {"name": "searchFolders", "parameters": [{"name": "params", "type": "String"}], "result": "FolderIterator", "description": "Gets a collection of all folders that are children of the current folder and match the given search\ncriteria."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Folder", "description": "Sets the description for the Folder."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Folder", "description": "Sets the name of the Folder."}, {"name": "setOwner", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Changes the owner of the Folder."}, {"name": "setOwner", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Changes the owner of the Folder."}, {"name": "setShareableByEditors", "parameters": [{"name": "shareable", "type": "Boolean"}], "result": "Folder", "description": "Sets whether users with edit permissions to the Folder are allowed to share\nwith other users or change the permissions."}, {"name": "setSharing", "parameters": [{"name": "accessType", "type": "Access"}, {"name": "permissionType", "type": "Permission"}], "result": "Folder", "description": "Sets which class of users can access the Folder and what permissions\nthose users are granted, besides any individual users who have been explicitly given access."}, {"name": "setStarred", "parameters": [{"name": "starred", "type": "Boolean"}], "result": "Folder", "description": "Sets whether the Folder is starred in the user's Drive."}, {"name": "setTrashed", "parameters": [{"name": "trashed", "type": "Boolean"}], "result": "Folder", "description": "Sets whether the Folder is in the trash of the user's Drive."}, {"name": "getContinuationToken", "parameters": [], "result": "String", "description": "Gets a token that can be used to resume this iteration at a later time."}, {"name": "hasNext", "parameters": [], "result": "Boolean", "description": "Determines whether calling next() will return an item."}, {"name": "next", "parameters": [], "result": "Folder", "description": "Gets the next item in the collection of files or folders."}, {"name": "getDomain", "parameters": [], "result": "String", "description": "Gets the domain name associated with the user's account."}, {"name": "getEmail", "parameters": [], "result": "String", "description": "Gets the user's email address."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the user's name."}, {"name": "getPhotoUrl", "parameters": [], "result": "String", "description": "Gets the URL for the user's photo."}], "properties": [{"name": "ANYONE", "type": "Enum", "url": "", "description": "Anyone on the Internet can find and access."}, {"name": "ANYONE_WITH_LINK", "type": "Enum", "url": "", "description": "Anyone who has the link can access."}, {"name": "DOMAIN", "type": "Enum", "url": "", "description": "People in your domain can find and access."}, {"name": "DOMAIN_WITH_LINK", "type": "Enum", "url": "", "description": "People in your domain who have the link can access."}, {"name": "PRIVATE", "type": "Enum", "url": "", "description": "Only people explicitly granted permission can access."}, {"name": "Access", "type": "Access", "url": "/apps-script/reference/drive/access", "description": "An enum representing classes of users who can access a file or folder, besides any individual\nusers who have been explicitly given access."}, {"name": "Permission", "type": "Permission", "url": "/apps-script/reference/drive/permission", "description": "An enum representing the permissions granted to users who can access a file or folder, besides\nany individual users who have been explicitly given access."}, {"name": "VIEW", "type": "Enum", "url": "", "description": "Users who can access the file or folder are able only to view it or copy it."}, {"name": "EDIT", "type": "Enum", "url": "", "description": "Users who can access the file or folder are able to edit it."}, {"name": "COMMENT", "type": "Enum", "url": "", "description": "Users who can access the file or folder are able only to view it, copy it, or comment on it."}, {"name": "OWNER", "type": "Enum", "url": "", "description": "The user owns the file or folder."}, {"name": "ORGANIZER", "type": "Enum", "url": "", "description": "Users who can organize files and folders within a shared drive."}, {"name": "FILE_ORGANIZER", "type": "Enum", "url": "", "description": "Users who can edit, trash, and move content within a shared drive."}, {"name": "NONE", "type": "Enum", "url": "", "description": "The user does not have any permissions for the file or folder."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart.html", "name": "EmbeddedChart", "type": "class", "methods": [{"name": "asDataSourceChart", "parameters": [], "result": "DataSourceChart", "description": "Casts to a data source chart instance if the chart is a data source chart, or null\notherwise."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getChartId", "parameters": [], "result": "Integer", "description": "Returns a stable identifier for the chart that is unique across the spreadsheet containing the\nchart or null if the chart is not in a spreadsheet."}, {"name": "getContainerInfo", "parameters": [], "result": "ContainerInfo", "description": "Returns information about where the chart is positioned within a sheet."}, {"name": "getHiddenDimensionStrategy", "parameters": [], "result": "ChartHiddenDimensionStrategy", "description": "Returns the strategy to use for handling hidden rows and columns."}, {"name": "getMergeStrategy", "parameters": [], "result": "ChartMergeStrategy", "description": "Returns the merge strategy used when more than one range exists."}, {"name": "getNumHeaders", "parameters": [], "result": "Integer", "description": "Returns the number of rows or columns the range that are treated as headers."}, {"name": "getOptions", "parameters": [], "result": "ChartOptions", "description": "Returns the options for this chart, such as height, colors, and axes."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns the ranges that this chart uses as a data source."}, {"name": "getTransposeRowsAndColumns", "parameters": [], "result": "Boolean", "description": "If true, the rows and columns used to populate the chart are switched."}, {"name": "modify", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Returns an EmbeddedChartBuilder that can be used to modify this chart."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/html/html-service.html", "name": "HtmlService", "type": "class", "methods": [{"name": "createHtmlOutput", "parameters": [], "result": "HtmlOutput", "description": "Creates a new HtmlOutput object that can be returned from the script."}, {"name": "createHtmlOutput", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "HtmlOutput", "description": "Creates a new HtmlOutput object from a BlobSource resource."}, {"name": "createHtmlOutput", "parameters": [{"name": "html", "type": "String"}], "result": "HtmlOutput", "description": "Creates a new HtmlOutput object that can be returned from the script."}, {"name": "createHtmlOutputFromFile", "parameters": [{"name": "filename", "type": "String"}], "result": "HtmlOutput", "description": "Creates a new HtmlOutput object from a file in the code editor."}, {"name": "createTemplate", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "HtmlTemplate", "description": "Creates a new HtmlTemplate object from a BlobSource resource."}, {"name": "createTemplate", "parameters": [{"name": "html", "type": "String"}], "result": "HtmlTemplate", "description": "Creates a new HtmlTemplate object that can be returned from the script."}, {"name": "createTemplateFromFile", "parameters": [{"name": "filename", "type": "String"}], "result": "HtmlTemplate", "description": "Creates a new HtmlTemplate object from a file in the code editor."}, {"name": "getUserAgent", "parameters": [], "result": "String", "description": "Gets the user-agent string for the current browser."}], "properties": [{"name": "SandboxMode", "type": "SandboxMode", "url": "/apps-script/reference/html/sandbox-mode", "description": "An enum representing the sandbox modes that can be used for client-side HtmlService\nscripts."}, {"name": "XFrameOptionsMode", "type": "XFrameOptionsMode", "url": "/apps-script/reference/html/x-frame-options-mode", "description": "An enum representing the X-Frame-Options modes that can be used for client-side HtmlService scripts."}]},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-connection", "name": "JdbcConnection", "type": "class", "methods": [{"name": "clearWarnings", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#clearWarnings()."}, {"name": "close", "parameters": [], "result": "void", "description": "Release this connection's database and all associated resources."}, {"name": "commit", "parameters": [], "result": "void", "description": "Makes all pending changes permanent, releases database locks held by this JdbcConnection."}, {"name": "createArrayOf", "parameters": [{"name": "typeName", "type": "String"}, {"name": "elements", "type": "Object"}], "result": "JdbcArray", "description": "For documentation of this method, see \njava.sql.Connection#createArrayOf(String, Object[])."}, {"name": "createBlob", "parameters": [], "result": "JdbcBlob", "description": "Constructs a JdbcBlob instance."}, {"name": "createClob", "parameters": [], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.Connection#createClob()."}, {"name": "createNClob", "parameters": [], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.Connection#createNClob()."}, {"name": "createSQLXML", "parameters": [], "result": "JdbcSQLXML", "description": "For documentation of this method, see \njava.sql.Connection#createSQLXML()."}, {"name": "createStatement", "parameters": [], "result": "JdbcStatement", "description": "Creates a JdbcStatement object for sending SQL statements to the database."}, {"name": "createStatement", "parameters": [{"name": "resultSetType", "type": "Integer"}, {"name": "resultSetConcurrency", "type": "Integer"}], "result": "JdbcStatement", "description": "Creates a JdbcStatement object for sending SQL statements to the database."}, {"name": "createStatement", "parameters": [{"name": "resultSetType", "type": "Integer"}, {"name": "resultSetConcurrency", "type": "Integer"}, {"name": "resultSetHoldability", "type": "Integer"}], "result": "JdbcStatement", "description": "Creates a JdbcStatement object for sending SQL statements to the database."}, {"name": "createStruct", "parameters": [{"name": "typeName", "type": "String"}, {"name": "attributes", "type": "Object"}], "result": "JdbcStruct", "description": "For documentation of this method, see \njava.sql.Connection#createStruct(String, Object[])."}, {"name": "getAutoCommit", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Connection#getAutoCommit()."}, {"name": "getCatalog", "parameters": [], "result": "String", "description": "or documentation of this method, see \njava.sql.Connection#getCatalog()."}, {"name": "getHoldability", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Connection#getHoldability()."}, {"name": "getMetaData", "parameters": [], "result": "JdbcDatabaseMetaData", "description": "For documentation of this method, see \njava.sql.Connection#getMetaData()."}, {"name": "getTransactionIsolation", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Connection#getTransactionIsolation()."}, {"name": "getWarnings", "parameters": [], "result": "String[]", "description": "For documentation of this method, see \njava.sql.Connection#getWarnings()."}, {"name": "isClosed", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Connection#isClosed()."}, {"name": "isReadOnly", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Connection#isReadOnly()."}, {"name": "isValid", "parameters": [{"name": "timeout", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Connection#isValid(int)."}, {"name": "nativeSQL", "parameters": [{"name": "sql", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.Connection#nativeSQL(String)."}, {"name": "prepareCall", "parameters": [{"name": "sql", "type": "String"}], "result": "JdbcCallableStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareCall(String)."}, {"name": "prepareCall", "parameters": [{"name": "sql", "type": "String"}, {"name": "resultSetType", "type": "Integer"}, {"name": "resultSetConcurrency", "type": "Integer"}], "result": "JdbcCallableStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareCall(String, int, int)."}, {"name": "prepareCall", "parameters": [{"name": "sql", "type": "String"}, {"name": "resultSetType", "type": "Integer"}, {"name": "resultSetConcurrency", "type": "Integer"}, {"name": "resultSetHoldability", "type": "Integer"}], "result": "JdbcCallableStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareCall(String, int, int, int)."}, {"name": "prepareStatement", "parameters": [{"name": "sql", "type": "String"}], "result": "JdbcPreparedStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareStatement(String)."}, {"name": "prepareStatement", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "JdbcPreparedStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareStatement(String, int)."}, {"name": "prepareStatement", "parameters": [{"name": "sql", "type": "String"}, {"name": "resultSetType", "type": "Integer"}, {"name": "resultSetConcurrency", "type": "Integer"}], "result": "JdbcPreparedStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareStatement(String, int, int)."}, {"name": "prepareStatement", "parameters": [{"name": "sql", "type": "String"}, {"name": "resultSetType", "type": "Integer"}, {"name": "resultSetConcurrency", "type": "Integer"}, {"name": "resultSetHoldability", "type": "Integer"}], "result": "JdbcPreparedStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareStatement(String, int, int, int)."}, {"name": "prepareStatementByIndex", "parameters": [{"name": "sql", "type": "String"}, {"name": "indices", "type": "Integer"}], "result": "JdbcPreparedStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareStatement(String, int[])."}, {"name": "prepareStatementByName", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "JdbcPreparedStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareStatement(String, String[])."}, {"name": "releaseSavepoint", "parameters": [{"name": "savepoint", "type": "JdbcSavepoint"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#releaseSavepoint(Savepoint)."}, {"name": "rollback", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#rollback()."}, {"name": "rollback", "parameters": [{"name": "savepoint", "type": "JdbcSavepoint"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#rollback(Savepoint)."}, {"name": "setAutoCommit", "parameters": [{"name": "autoCommit", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#setAutoCommit(boolean)."}, {"name": "setCatalog", "parameters": [{"name": "catalog", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#setCatalog(String)."}, {"name": "setHoldability", "parameters": [{"name": "holdability", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#setHoldability(int)."}, {"name": "setReadOnly", "parameters": [{"name": "readOnly", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#setReadOnly(boolean)."}, {"name": "setSavepoint", "parameters": [], "result": "JdbcSavepoint", "description": "For documentation of this method, see \njava.sql.Connection#setSavepoint()."}, {"name": "setSavepoint", "parameters": [{"name": "name", "type": "String"}], "result": "JdbcSavepoint", "description": "For documentation of this method, see \njava.sql.Connection#setSavepoint(String)."}, {"name": "setTransactionIsolation", "parameters": [{"name": "level", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#setTransactionIsolation(int)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/chart.html", "name": "Chart", "type": "class", "methods": [{"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getOptions", "parameters": [], "result": "ChartOptions", "description": "Returns the options for this chart, such as height, colors, and axes."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/drive/file.html", "name": "File", "type": "class", "methods": [{"name": "addCommenter", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Add the given user to the list of commenters for the File."}, {"name": "addCommenter", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Add the given user to the list of commenters for the File."}, {"name": "addCommenters", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "File", "description": "Add the given array of users to the list of commenters for the File."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Adds the given user to the list of editors for the File."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Adds the given user to the list of editors for the File."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "File", "description": "Adds the given array of users to the list of editors for the File."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Adds the given user to the list of viewers for the File."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Adds the given user to the list of viewers for the File."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "File", "description": "Adds the given array of users to the list of viewers for the File."}, {"name": "getAccess", "parameters": [{"name": "email", "type": "String"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getAccess", "parameters": [{"name": "user", "type": "User"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getDateCreated", "parameters": [], "result": "Date", "description": "Gets the date the File was created."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description for the File."}, {"name": "getDownloadUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to download the file."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this File."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the File."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Gets the date the File was last updated."}, {"name": "getMimeType", "parameters": [], "result": "String", "description": "Gets the MIME type of the file."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the File."}, {"name": "getOwner", "parameters": [], "result": "User", "description": "Gets the owner of the File."}, {"name": "getParents", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of folders that are immediate parents of the File."}, {"name": "getSharingAccess", "parameters": [], "result": "Access", "description": "Gets which class of users can access the File, besides any individual\nusers who have been explicitly given access."}, {"name": "getSharingPermission", "parameters": [], "result": "Permission", "description": "Gets the permission granted to those users who can access the File,\nbesides any individual users who have been explicitly given access."}, {"name": "getSize", "parameters": [], "result": "Integer", "description": "Gets the number of bytes used to store the File in Drive."}, {"name": "getTargetId", "parameters": [], "result": "String", "description": "If this is a Shortcut, returns the ID of the item it points to."}, {"name": "getTargetMimeType", "parameters": [], "result": "String", "description": "If this is a Shortcut, returns the mime type of the item it points to."}, {"name": "getThumbnail", "parameters": [], "result": "Blob", "description": "Gets a thumbnail image for the file, or null if no thumbnail exists."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to open the File in a Google App like\nDrive or Docs."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this File."}, {"name": "isShareableByEditors", "parameters": [], "result": "Boolean", "description": "Determines whether users with edit permissions to the File are allowed to\nshare with other users or change the permissions."}, {"name": "isStarred", "parameters": [], "result": "Boolean", "description": "Determines whether the File has been starred in the user's Drive."}, {"name": "isTrashed", "parameters": [], "result": "Boolean", "description": "Determines whether the File is in the trash of the user's Drive."}, {"name": "makeCopy", "parameters": [], "result": "File", "description": "Creates a copy of the file."}, {"name": "makeCopy", "parameters": [{"name": "destination", "type": "Folder"}], "result": "File", "description": "Creates a copy of the file in the destination directory."}, {"name": "makeCopy", "parameters": [{"name": "name", "type": "String"}], "result": "File", "description": "Creates a copy of the file and names it with the name provided."}, {"name": "makeCopy", "parameters": [{"name": "name", "type": "String"}, {"name": "destination", "type": "Folder"}], "result": "File", "description": "Creates a copy of the file in the destination directory and names it with the name provided."}, {"name": "moveTo", "parameters": [{"name": "destination", "type": "Folder"}], "result": "File", "description": "Moves this item to the provided destination folder."}, {"name": "removeCommenter", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Removes the given user from the list of commenters for the File."}, {"name": "removeCommenter", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Removes the given user from the list of commenters for the File."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Removes the given user from the list of editors for the File."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Removes the given user from the list of editors for the File."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Removes the given user from the list of viewers and commenters for the File."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Removes the given user from the list of viewers and commenters for the File."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "String"}], "result": "File", "description": "Revokes the access to the File granted to the given user."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Revokes the access to the File granted to the given user."}, {"name": "setContent", "parameters": [{"name": "content", "type": "String"}], "result": "File", "description": "Overwrites the content of the file with a given replacement."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "File", "description": "Sets the description for the File."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "File", "description": "Sets the name of the File."}, {"name": "setOwner", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Changes the owner of the File."}, {"name": "setOwner", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Changes the owner of the File."}, {"name": "setShareableByEditors", "parameters": [{"name": "shareable", "type": "Boolean"}], "result": "File", "description": "Sets whether users with edit permissions to the File are allowed to share\nwith other users or change the permissions."}, {"name": "setSharing", "parameters": [{"name": "accessType", "type": "Access"}, {"name": "permissionType", "type": "Permission"}], "result": "File", "description": "Sets which class of users can access the File and what permissions\nthose users are granted, besides any individual users who have been explicitly given access."}, {"name": "setStarred", "parameters": [{"name": "starred", "type": "Boolean"}], "result": "File", "description": "Sets whether the File is starred in the user's Drive."}, {"name": "setTrashed", "parameters": [{"name": "trashed", "type": "Boolean"}], "result": "File", "description": "Sets whether the File is in the trash of the user's Drive."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-blob", "name": "JdbcBlob", "type": "class", "methods": [{"name": "free", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Blob#free()."}, {"name": "getAppsScriptBlob", "parameters": [], "result": "Blob", "description": "Gets the content of this JdbcBlob as an Apps Script blob."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "length", "type": "Integer"}], "result": "Byte[]", "description": "For documentation of this method, see \njava.sql.Blob#getBytes(long, int)."}, {"name": "length", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#length()."}, {"name": "position", "parameters": [{"name": "pattern", "type": "Byte"}, {"name": "start", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#position(byte[], long)."}, {"name": "position", "parameters": [{"name": "pattern", "type": "JdbcBlob"}, {"name": "start", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#position(blob, long)."}, {"name": "setBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "blobSource", "type": "BlobSource"}], "result": "Integer", "description": "Convenience method for writing a JdbcBlob to this blob."}, {"name": "setBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "blobSource", "type": "BlobSource"}, {"name": "offset", "type": "Integer"}, {"name": "length", "type": "Integer"}], "result": "Integer", "description": "Convenience method for writing a JdbcBlob to this blob."}, {"name": "setBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "bytes", "type": "Byte"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#setBytes(long, byte[])."}, {"name": "setBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "bytes", "type": "Byte"}, {"name": "offset", "type": "Integer"}, {"name": "length", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#setBytes(long, byte[], int, int)."}, {"name": "truncate", "parameters": [{"name": "length", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Blob#truncate(long)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/sites/attachment.html", "name": "Attachment", "type": "class", "methods": [{"name": "deleteAttachment", "parameters": [], "result": "void", "description": "Deletes this attachment."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getAttachmentType", "parameters": [], "result": "AttachmentType", "description": "Return the type of this attachment (HOSTED or WEB)."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getContentType", "parameters": [], "result": "String", "description": "Return the mime type of this attachment."}, {"name": "getDatePublished", "parameters": [], "result": "Date", "description": "Return the date this attachment was first published."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Return the description of this attachment."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Return the date this attachment was last updated."}, {"name": "getParent", "parameters": [], "result": "Page", "description": "Get the parent page of this attachment."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Return the title of this attachment."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Return the download url for this attachment."}, {"name": "setContentType", "parameters": [{"name": "contentType", "type": "String"}], "result": "Attachment", "description": "Set the mime type of this attachment."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Attachment", "description": "Set the descripton of this attachment."}, {"name": "setFrom", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Attachment", "description": "Set the actual data of this attachment."}, {"name": "setParent", "parameters": [{"name": "parent", "type": "Page"}], "result": "Attachment", "description": "Set the parent page of this attachment."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Attachment", "description": "Set the title of this attachment."}, {"name": "setUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Attachment", "description": "Sets the download url for this attachment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-clob", "name": "JdbcClob", "type": "class", "methods": [{"name": "free", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Clob#truncate(long)."}, {"name": "getAppsScriptBlob", "parameters": [], "result": "Blob", "description": "Gets the content of this JdbcClob as an Apps Script blob."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getSubString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "length", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.Clob#getSubString(long, int)."}, {"name": "length", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#length()."}, {"name": "position", "parameters": [{"name": "search", "type": "JdbcClob"}, {"name": "start", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#position(Clob, long)."}, {"name": "position", "parameters": [{"name": "search", "type": "String"}, {"name": "start", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#position(String, long)."}, {"name": "setString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "blobSource", "type": "BlobSource"}], "result": "Integer", "description": "Convenience method for writing a JdbcClob to a clob."}, {"name": "setString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "blobSource", "type": "BlobSource"}, {"name": "offset", "type": "Integer"}, {"name": "len", "type": "Integer"}], "result": "Integer", "description": "Convenience method for writing a JdbcClob to a clob."}, {"name": "setString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "value", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#setString(long, String)."}, {"name": "setString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "value", "type": "String"}, {"name": "offset", "type": "Integer"}, {"name": "len", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#setString(long, String, int, int)."}, {"name": "truncate", "parameters": [{"name": "length", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Clob#truncate(long)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-callable-statement", "name": "JdbcCallableStatement", "type": "class", "methods": [{"name": "addBatch", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#addBatch()."}, {"name": "addBatch", "parameters": [{"name": "sql", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#addBatch(String)."}, {"name": "cancel", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#cancel()."}, {"name": "clearBatch", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#clearBatch()."}, {"name": "clearParameters", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#clearParameters()."}, {"name": "clearWarnings", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#clearWarnings()."}, {"name": "close", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#close()."}, {"name": "execute", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.PreparedStatement#execute()."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String)."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, int)."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnIndexes", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, int[])."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, String[])."}, {"name": "executeBatch", "parameters": [], "result": "Integer[]", "description": "For documentation of this method, see \njava.sql.Statement#executeBatch()."}, {"name": "executeQuery", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.PreparedStatement#executeQuery()."}, {"name": "executeQuery", "parameters": [{"name": "sql", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#executeQuery(String)."}, {"name": "executeUpdate", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.PreparedStatement#executeUpdate()."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, int)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnIndexes", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, int[])."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, String[])."}, {"name": "getArray", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcArray", "description": "For documentation of this method, see \njava.sql.CallableStatement#getArray(int)."}, {"name": "getArray", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcArray", "description": "For documentation of this method, see \njava.sql.CallableStatement#getArray(String)."}, {"name": "getBigDecimal", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "BigNumber", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBigDecimal(int)."}, {"name": "getBigDecimal", "parameters": [{"name": "parameterName", "type": "String"}], "result": "BigNumber", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBigDecimal(String)."}, {"name": "getBlob", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcBlob", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBlob(int)."}, {"name": "getBlob", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcBlob", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBlob(String)."}, {"name": "getBoolean", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBoolean(int)."}, {"name": "getBoolean", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBoolean(String)."}, {"name": "getByte", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Byte", "description": "For documentation of this method, see \njava.sql.CallableStatement#getByte(int)."}, {"name": "getByte", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Byte", "description": "For documentation of this method, see \njava.sql.CallableStatement#getByte(String)."}, {"name": "getBytes", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Byte[]", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBytes(int)."}, {"name": "getBytes", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Byte[]", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBytes(String)."}, {"name": "getClob", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.CallableStatement#getClob(int)."}, {"name": "getClob", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.CallableStatement#getClob(String)."}, {"name": "getConnection", "parameters": [], "result": "JdbcConnection", "description": "For documentation of this method, see \njava.sql.Statement#getConnection()."}, {"name": "getDate", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.CallableStatement#getDate(int)."}, {"name": "getDate", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "timeZone", "type": "String"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.CallableStatement#getDate(int, Calendar)."}, {"name": "getDate", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.CallableStatement#getDate(String)."}, {"name": "getDate", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "timeZone", "type": "String"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.CallableStatement#getDate(String, Calendar)."}, {"name": "getDouble", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.CallableStatement#getDouble(int)."}, {"name": "getDouble", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.CallableStatement#getDouble(String)."}, {"name": "getFetchDirection", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getFetchDirection()."}, {"name": "getFetchSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getFetchSize()."}, {"name": "getFloat", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.CallableStatement#getFloat(int)."}, {"name": "getFloat", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.CallableStatement#getFloat(String)."}, {"name": "getGeneratedKeys", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#getGeneratedKeys()."}, {"name": "getInt", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.CallableStatement#getInt(int)."}, {"name": "getInt", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.CallableStatement#getInt(String)."}, {"name": "getLong", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.CallableStatement#getLong(int)."}, {"name": "getLong", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.CallableStatement#getLong(String)."}, {"name": "getMaxFieldSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getMaxFieldSize()."}, {"name": "getMaxRows", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getMaxRows()."}, {"name": "getMetaData", "parameters": [], "result": "JdbcResultSetMetaData", "description": "For documentation of this method, see \njava.sql.PreparedStatement#getMetaData()."}, {"name": "getMoreResults", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#getMoreResults()."}, {"name": "getMoreResults", "parameters": [{"name": "current", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#getMoreResults(int)."}, {"name": "getNClob", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.CallableStatement#getNClob(int)."}, {"name": "getNClob", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.CallableStatement#getNClob(String)."}, {"name": "getNString", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.CallableStatement#getNString(int)."}, {"name": "getNString", "parameters": [{"name": "parameterName", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.CallableStatement#getNString(String)."}, {"name": "getObject", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Object", "description": "For documentation of this method, see \njava.sql.CallableStatement#getObject(int)."}, {"name": "getObject", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Object", "description": "For documentation of this method, see \njava.sql.CallableStatement#getObject(String)."}, {"name": "getParameterMetaData", "parameters": [], "result": "JdbcParameterMetaData", "description": "For documentation of this method, see \njava.sql.PreparedStatement#getParameterMetaData()."}, {"name": "getQueryTimeout", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getQueryTimeout()."}, {"name": "getRef", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcRef", "description": "For documentation of this method, see \njava.sql.CallableStatement#getRef(int)."}, {"name": "getRef", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcRef", "description": "For documentation of this method, see \njava.sql.CallableStatement#getRef(String)."}, {"name": "getResultSet", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#getResultSet()."}, {"name": "getResultSetConcurrency", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetConcurrency()."}, {"name": "getResultSetHoldability", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetHoldability()."}, {"name": "getResultSetType", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetType()."}, {"name": "getRowId", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcRowId", "description": "For documentation of this method, see \njava.sql.CallableStatement#getRowId(int)."}, {"name": "getRowId", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcRowId", "description": "For documentation of this method, see \njava.sql.CallableStatement#getRowId(String)."}, {"name": "getSQLXML", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcSQLXML", "description": "For documentation of this method, see \njava.sql.CallableStatement#getSQLXML(int)."}, {"name": "getSQLXML", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcSQLXML", "description": "For documentation of this method, see \njava.sql.CallableStatement#getSQLXML(String)."}, {"name": "getShort", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.CallableStatement#getShort(int)."}, {"name": "getShort", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.CallableStatement#getShort(String)."}, {"name": "getString", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.CallableStatement#getString(int)."}, {"name": "getString", "parameters": [{"name": "parameterName", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.CallableStatement#getString(String)."}, {"name": "getTime", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTime(int)."}, {"name": "getTime", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTime(int, Calendar)."}, {"name": "getTime", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTime(String)."}, {"name": "getTime", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTime(String, Calendar)."}, {"name": "getTimestamp", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTimestamp(int)."}, {"name": "getTimestamp", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTimestamp(int, Calendar)."}, {"name": "getTimestamp", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTimestamp(String)."}, {"name": "getTimestamp", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTimestamp(String, Calendar)."}, {"name": "getURL", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.CallableStatement#getURL(int)."}, {"name": "getURL", "parameters": [{"name": "parameterName", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.CallableStatement#getURL(String)."}, {"name": "getUpdateCount", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getUpdateCount()."}, {"name": "getWarnings", "parameters": [], "result": "String[]", "description": "For documentation of this method, see \njava.sql.Statement#getWarnings()."}, {"name": "isClosed", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#isClosed()."}, {"name": "isPoolable", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#isPoolable()."}, {"name": "registerOutParameter", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#registerOutParameter(int, int)."}, {"name": "registerOutParameter", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}, {"name": "scale", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#registerOutParameter(int, int, int)."}, {"name": "registerOutParameter", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}, {"name": "typeName", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#registerOutParameter(int, int, String)."}, {"name": "registerOutParameter", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#registerOutParameter(String, int)."}, {"name": "registerOutParameter", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sqlType", "type": "Integer"}, {"name": "scale", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#registerOutParameter(String, int, int)."}, {"name": "registerOutParameter", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sqlType", "type": "Integer"}, {"name": "typeName", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#registerOutParameter(String, int, String)."}, {"name": "setArray", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcArray"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setArray(int, Array)."}, {"name": "setBigDecimal", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "BigNumber"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBigDecimal(int, BigDecimal)."}, {"name": "setBigDecimal", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "BigNumber"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setBigDecimal(String, BigDecimal)."}, {"name": "setBlob", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcBlob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBlob(int, Clob)."}, {"name": "setBlob", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcBlob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setBlob(String, Blob)."}, {"name": "setBoolean", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBoolean(int, boolean)."}, {"name": "setBoolean", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setBoolean(String, boolean)."}, {"name": "setByte", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setByte(int, byte)."}, {"name": "setByte", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setByte(String, byte)."}, {"name": "setBytes", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBytes(int, byte[])."}, {"name": "setBytes", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setBytes(String, byte[])."}, {"name": "setClob", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setClob(int, Clob)."}, {"name": "setClob", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setBlob(String, Clob)."}, {"name": "setCursorName", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setCursorName(String)."}, {"name": "setDate", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcDate"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setDate(int, Date)."}, {"name": "setDate", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcDate"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setDate(int, Date, Calendar)."}, {"name": "setDate", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcDate"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setDate(String, Date)."}, {"name": "setDate", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcDate"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setDate(String, Date, Calendar)."}, {"name": "setDouble", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setDouble(int, double)."}, {"name": "setDouble", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setDouble(String, double)."}, {"name": "setEscapeProcessing", "parameters": [{"name": "enable", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setEscapeProcessing(boolean)."}, {"name": "setFetchDirection", "parameters": [{"name": "direction", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setFetchDirection(int)."}, {"name": "setFetchSize", "parameters": [{"name": "rows", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setFetchSize(int)."}, {"name": "setFloat", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setFloat(int, float)."}, {"name": "setFloat", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setFloat(String, float)."}, {"name": "setInt", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setInt(int, int)."}, {"name": "setInt", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setInt(String, int)."}, {"name": "setLong", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setLong(int, long)."}, {"name": "setLong", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setLong(String, long)."}, {"name": "setMaxFieldSize", "parameters": [{"name": "max", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setMaxFieldSize(int)."}, {"name": "setMaxRows", "parameters": [{"name": "max", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setMaxRows(int)."}, {"name": "setNClob", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNClob(int, NClob)."}, {"name": "setNClob", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "value", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setNClob(String, NClob)."}, {"name": "setNString", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNString(int, String)."}, {"name": "setNString", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "value", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setNString(String, String)."}, {"name": "setNull", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNull(int, int)."}, {"name": "setNull", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}, {"name": "typeName", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNull(int, int, String)."}, {"name": "setNull", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setNull(String, int)."}, {"name": "setNull", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sqlType", "type": "Integer"}, {"name": "typeName", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setNull(String, int, String)."}, {"name": "setObject", "parameters": [{"name": "index", "type": "Integer"}, {"name": "x", "type": "Object"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setObject(int, Object)."}, {"name": "setObject", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Object"}, {"name": "targetSqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setObject(int, Object, int)."}, {"name": "setObject", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Object"}, {"name": "targetSqlType", "type": "Integer"}, {"name": "scaleOrLength", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setObject(int, Object, int, int)."}, {"name": "setObject", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Object"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setObject(String, Object)."}, {"name": "setObject", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Object"}, {"name": "targetSqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setObject(String, Object, int)."}, {"name": "setObject", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Object"}, {"name": "targetSqlType", "type": "Integer"}, {"name": "scale", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setObject(String, Object, int, int)."}, {"name": "setPoolable", "parameters": [{"name": "poolable", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setPoolable(boolean)."}, {"name": "setQueryTimeout", "parameters": [{"name": "seconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setQueryTimeout(int)."}, {"name": "setRef", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcRef"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setRef(int, Ref)."}, {"name": "setRowId", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcRowId"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setRowId(int, RowId)."}, {"name": "setRowId", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcRowId"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setRowId(String, RowId)."}, {"name": "setSQLXML", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcSQLXML"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setSQLXML(int, SQLXML)."}, {"name": "setSQLXML", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "xmlObject", "type": "JdbcSQLXML"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setSQLXML(String, SQLXML)."}, {"name": "setShort", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setShort(int, short)."}, {"name": "setShort", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setShort(String, short)."}, {"name": "setString", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setString(int, String)."}, {"name": "setString", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setString(String, String)."}, {"name": "setTime", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTime"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTime(int, Time)."}, {"name": "setTime", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTime"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTime(int, Time, Calendar)."}, {"name": "setTime", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcTime"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setTime(String, Time)."}, {"name": "setTime", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcTime"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setTime(String, Time, Calendar)."}, {"name": "setTimestamp", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTimestamp"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTimestamp(int, Timestamp)."}, {"name": "setTimestamp", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTimestamp"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTimestamp(int, Timestamp, Calendar)."}, {"name": "setTimestamp", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcTimestamp"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setTimestamp(String, Timestamp)."}, {"name": "setTimestamp", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcTimestamp"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setTimestamp(String, Timestamp, Calendar)."}, {"name": "setURL", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setURL(int, URL)."}, {"name": "setURL", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "val", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setURL(String, URL)."}, {"name": "wasNull", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.CallableStatement#wasNull()."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/html/x-frame-options-mode", "name": "XFrameOptionsMode", "type": "enum", "methods": [], "properties": [{"name": "ALLOWALL", "type": "Enum", "url": "", "description": "No X-Frame-Options header will be set. This will let any site iframe the page, so the\ndeveloper should implement their own protection against clickjacking."}, {"name": "DEFAULT", "type": "Enum", "url": "", "description": "Sets the default value for the X-Frame-Options header, which preserves normal security\nassumptions. If a script does not set an X-Frame-Options mode, Apps Script uses this\nmode as the default."}]},
{"url": "https://developers.google.com/apps-script/reference/jdbc", "name": "JDBC", "type": "jdbc", "methods": [{"name": "getCloudSqlConnection", "parameters": [{"name": "url", "type": "String"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given Google Cloud SQL URL."}, {"name": "getCloudSqlConnection", "parameters": [{"name": "url", "type": "String"}, {"name": "info", "type": "Object"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given Google Cloud SQL URL."}, {"name": "getCloudSqlConnection", "parameters": [{"name": "url", "type": "String"}, {"name": "userName", "type": "String"}, {"name": "password", "type": "String"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given Google Cloud SQL URL."}, {"name": "getConnection", "parameters": [{"name": "url", "type": "String"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given database URL."}, {"name": "getConnection", "parameters": [{"name": "url", "type": "String"}, {"name": "info", "type": "Object"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given database URL."}, {"name": "getConnection", "parameters": [{"name": "url", "type": "String"}, {"name": "userName", "type": "String"}, {"name": "password", "type": "String"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given database using a username and password."}, {"name": "newDate", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "JdbcDate", "description": "Create a date from milliseconds since epoch."}, {"name": "newTime", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "JdbcTime", "description": "Create a time from milliseconds since epoch."}, {"name": "newTimestamp", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "JdbcTimestamp", "description": "Create a timestamp from milliseconds since epoch."}, {"name": "parseDate", "parameters": [{"name": "date", "type": "String"}], "result": "JdbcDate", "description": "Create a date by parsing the SQL date string."}, {"name": "parseTime", "parameters": [{"name": "time", "type": "String"}], "result": "JdbcTime", "description": "Create a time by parsing the SQL time string."}, {"name": "parseTimestamp", "parameters": [{"name": "timestamp", "type": "String"}], "result": "JdbcTimestamp", "description": "Create a timestamp by parsing the SQL timestamp string."}, {"name": "free", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Array#free()."}, {"name": "getArray", "parameters": [], "result": "Object", "description": "For documentation of this method, see \njava.sql.Array#getArray()"}, {"name": "getArray", "parameters": [{"name": "index", "type": "Integer"}, {"name": "count", "type": "Integer"}], "result": "Object", "description": "For documentation of this method, see \njava.sql.Array#getArray(long, int)."}, {"name": "getBaseType", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Array#getBaseType()."}, {"name": "getBaseTypeName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.Array#getBaseTypeName()."}, {"name": "getResultSet", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Array#getResultSet()."}, {"name": "getResultSet", "parameters": [{"name": "index", "type": "Integer"}, {"name": "count", "type": "Integer"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Array#getResultSet(long, int)."}, {"name": "free", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Blob#free()."}, {"name": "getAppsScriptBlob", "parameters": [], "result": "Blob", "description": "Gets the content of this JdbcBlob as an Apps Script blob."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "length", "type": "Integer"}], "result": "Byte[]", "description": "For documentation of this method, see \njava.sql.Blob#getBytes(long, int)."}, {"name": "length", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#length()."}, {"name": "position", "parameters": [{"name": "pattern", "type": "Byte"}, {"name": "start", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#position(byte[], long)."}, {"name": "position", "parameters": [{"name": "pattern", "type": "JdbcBlob"}, {"name": "start", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#position(blob, long)."}, {"name": "setBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "blobSource", "type": "BlobSource"}], "result": "Integer", "description": "Convenience method for writing a JdbcBlob to this blob."}, {"name": "setBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "blobSource", "type": "BlobSource"}, {"name": "offset", "type": "Integer"}, {"name": "length", "type": "Integer"}], "result": "Integer", "description": "Convenience method for writing a JdbcBlob to this blob."}, {"name": "setBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "bytes", "type": "Byte"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#setBytes(long, byte[])."}, {"name": "setBytes", "parameters": [{"name": "position", "type": "Integer"}, {"name": "bytes", "type": "Byte"}, {"name": "offset", "type": "Integer"}, {"name": "length", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Blob#setBytes(long, byte[], int, int)."}, {"name": "truncate", "parameters": [{"name": "length", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Blob#truncate(long)."}, {"name": "addBatch", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#addBatch()."}, {"name": "addBatch", "parameters": [{"name": "sql", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#addBatch(String)."}, {"name": "cancel", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#cancel()."}, {"name": "clearBatch", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#clearBatch()."}, {"name": "clearParameters", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#clearParameters()."}, {"name": "clearWarnings", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#clearWarnings()."}, {"name": "close", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#close()."}, {"name": "execute", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.PreparedStatement#execute()."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String)."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, int)."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnIndexes", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, int[])."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, String[])."}, {"name": "executeBatch", "parameters": [], "result": "Integer[]", "description": "For documentation of this method, see \njava.sql.Statement#executeBatch()."}, {"name": "executeQuery", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.PreparedStatement#executeQuery()."}, {"name": "executeQuery", "parameters": [{"name": "sql", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#executeQuery(String)."}, {"name": "executeUpdate", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.PreparedStatement#executeUpdate()."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, int)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnIndexes", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, int[])."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, String[])."}, {"name": "getArray", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcArray", "description": "For documentation of this method, see \njava.sql.CallableStatement#getArray(int)."}, {"name": "getArray", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcArray", "description": "For documentation of this method, see \njava.sql.CallableStatement#getArray(String)."}, {"name": "getBigDecimal", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "BigNumber", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBigDecimal(int)."}, {"name": "getBigDecimal", "parameters": [{"name": "parameterName", "type": "String"}], "result": "BigNumber", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBigDecimal(String)."}, {"name": "getBlob", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcBlob", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBlob(int)."}, {"name": "getBlob", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcBlob", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBlob(String)."}, {"name": "getBoolean", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBoolean(int)."}, {"name": "getBoolean", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBoolean(String)."}, {"name": "getByte", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Byte", "description": "For documentation of this method, see \njava.sql.CallableStatement#getByte(int)."}, {"name": "getByte", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Byte", "description": "For documentation of this method, see \njava.sql.CallableStatement#getByte(String)."}, {"name": "getBytes", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Byte[]", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBytes(int)."}, {"name": "getBytes", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Byte[]", "description": "For documentation of this method, see \njava.sql.CallableStatement#getBytes(String)."}, {"name": "getClob", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.CallableStatement#getClob(int)."}, {"name": "getClob", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.CallableStatement#getClob(String)."}, {"name": "getConnection", "parameters": [], "result": "JdbcConnection", "description": "For documentation of this method, see \njava.sql.Statement#getConnection()."}, {"name": "getDate", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.CallableStatement#getDate(int)."}, {"name": "getDate", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "timeZone", "type": "String"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.CallableStatement#getDate(int, Calendar)."}, {"name": "getDate", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.CallableStatement#getDate(String)."}, {"name": "getDate", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "timeZone", "type": "String"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.CallableStatement#getDate(String, Calendar)."}, {"name": "getDouble", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.CallableStatement#getDouble(int)."}, {"name": "getDouble", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.CallableStatement#getDouble(String)."}, {"name": "getFetchDirection", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getFetchDirection()."}, {"name": "getFetchSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getFetchSize()."}, {"name": "getFloat", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.CallableStatement#getFloat(int)."}, {"name": "getFloat", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.CallableStatement#getFloat(String)."}, {"name": "getGeneratedKeys", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#getGeneratedKeys()."}, {"name": "getInt", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.CallableStatement#getInt(int)."}, {"name": "getInt", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.CallableStatement#getInt(String)."}, {"name": "getLong", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.CallableStatement#getLong(int)."}, {"name": "getLong", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.CallableStatement#getLong(String)."}, {"name": "getMaxFieldSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getMaxFieldSize()."}, {"name": "getMaxRows", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getMaxRows()."}, {"name": "getMetaData", "parameters": [], "result": "JdbcResultSetMetaData", "description": "For documentation of this method, see \njava.sql.PreparedStatement#getMetaData()."}, {"name": "getMoreResults", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#getMoreResults()."}, {"name": "getMoreResults", "parameters": [{"name": "current", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#getMoreResults(int)."}, {"name": "getNClob", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.CallableStatement#getNClob(int)."}, {"name": "getNClob", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.CallableStatement#getNClob(String)."}, {"name": "getNString", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.CallableStatement#getNString(int)."}, {"name": "getNString", "parameters": [{"name": "parameterName", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.CallableStatement#getNString(String)."}, {"name": "getObject", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Object", "description": "For documentation of this method, see \njava.sql.CallableStatement#getObject(int)."}, {"name": "getObject", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Object", "description": "For documentation of this method, see \njava.sql.CallableStatement#getObject(String)."}, {"name": "getParameterMetaData", "parameters": [], "result": "JdbcParameterMetaData", "description": "For documentation of this method, see \njava.sql.PreparedStatement#getParameterMetaData()."}, {"name": "getQueryTimeout", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getQueryTimeout()."}, {"name": "getRef", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcRef", "description": "For documentation of this method, see \njava.sql.CallableStatement#getRef(int)."}, {"name": "getRef", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcRef", "description": "For documentation of this method, see \njava.sql.CallableStatement#getRef(String)."}, {"name": "getResultSet", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#getResultSet()."}, {"name": "getResultSetConcurrency", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetConcurrency()."}, {"name": "getResultSetHoldability", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetHoldability()."}, {"name": "getResultSetType", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetType()."}, {"name": "getRowId", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcRowId", "description": "For documentation of this method, see \njava.sql.CallableStatement#getRowId(int)."}, {"name": "getRowId", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcRowId", "description": "For documentation of this method, see \njava.sql.CallableStatement#getRowId(String)."}, {"name": "getSQLXML", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcSQLXML", "description": "For documentation of this method, see \njava.sql.CallableStatement#getSQLXML(int)."}, {"name": "getSQLXML", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcSQLXML", "description": "For documentation of this method, see \njava.sql.CallableStatement#getSQLXML(String)."}, {"name": "getShort", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.CallableStatement#getShort(int)."}, {"name": "getShort", "parameters": [{"name": "parameterName", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.CallableStatement#getShort(String)."}, {"name": "getString", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.CallableStatement#getString(int)."}, {"name": "getString", "parameters": [{"name": "parameterName", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.CallableStatement#getString(String)."}, {"name": "getTime", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTime(int)."}, {"name": "getTime", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTime(int, Calendar)."}, {"name": "getTime", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTime(String)."}, {"name": "getTime", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTime(String, Calendar)."}, {"name": "getTimestamp", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTimestamp(int)."}, {"name": "getTimestamp", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTimestamp(int, Calendar)."}, {"name": "getTimestamp", "parameters": [{"name": "parameterName", "type": "String"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTimestamp(String)."}, {"name": "getTimestamp", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.CallableStatement#getTimestamp(String, Calendar)."}, {"name": "getURL", "parameters": [{"name": "parameterIndex", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.CallableStatement#getURL(int)."}, {"name": "getURL", "parameters": [{"name": "parameterName", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.CallableStatement#getURL(String)."}, {"name": "getUpdateCount", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getUpdateCount()."}, {"name": "getWarnings", "parameters": [], "result": "String[]", "description": "For documentation of this method, see \njava.sql.Statement#getWarnings()."}, {"name": "isClosed", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#isClosed()."}, {"name": "isPoolable", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#isPoolable()."}, {"name": "registerOutParameter", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#registerOutParameter(int, int)."}, {"name": "registerOutParameter", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}, {"name": "scale", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#registerOutParameter(int, int, int)."}, {"name": "registerOutParameter", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}, {"name": "typeName", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#registerOutParameter(int, int, String)."}, {"name": "registerOutParameter", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#registerOutParameter(String, int)."}, {"name": "registerOutParameter", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sqlType", "type": "Integer"}, {"name": "scale", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#registerOutParameter(String, int, int)."}, {"name": "registerOutParameter", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sqlType", "type": "Integer"}, {"name": "typeName", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#registerOutParameter(String, int, String)."}, {"name": "setArray", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcArray"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setArray(int, Array)."}, {"name": "setBigDecimal", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "BigNumber"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBigDecimal(int, BigDecimal)."}, {"name": "setBigDecimal", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "BigNumber"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setBigDecimal(String, BigDecimal)."}, {"name": "setBlob", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcBlob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBlob(int, Clob)."}, {"name": "setBlob", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcBlob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setBlob(String, Blob)."}, {"name": "setBoolean", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBoolean(int, boolean)."}, {"name": "setBoolean", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setBoolean(String, boolean)."}, {"name": "setByte", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setByte(int, byte)."}, {"name": "setByte", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setByte(String, byte)."}, {"name": "setBytes", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBytes(int, byte[])."}, {"name": "setBytes", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setBytes(String, byte[])."}, {"name": "setClob", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setClob(int, Clob)."}, {"name": "setClob", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setBlob(String, Clob)."}, {"name": "setCursorName", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setCursorName(String)."}, {"name": "setDate", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcDate"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setDate(int, Date)."}, {"name": "setDate", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcDate"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setDate(int, Date, Calendar)."}, {"name": "setDate", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcDate"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setDate(String, Date)."}, {"name": "setDate", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcDate"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setDate(String, Date, Calendar)."}, {"name": "setDouble", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setDouble(int, double)."}, {"name": "setDouble", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setDouble(String, double)."}, {"name": "setEscapeProcessing", "parameters": [{"name": "enable", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setEscapeProcessing(boolean)."}, {"name": "setFetchDirection", "parameters": [{"name": "direction", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setFetchDirection(int)."}, {"name": "setFetchSize", "parameters": [{"name": "rows", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setFetchSize(int)."}, {"name": "setFloat", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setFloat(int, float)."}, {"name": "setFloat", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setFloat(String, float)."}, {"name": "setInt", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setInt(int, int)."}, {"name": "setInt", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setInt(String, int)."}, {"name": "setLong", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setLong(int, long)."}, {"name": "setLong", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setLong(String, long)."}, {"name": "setMaxFieldSize", "parameters": [{"name": "max", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setMaxFieldSize(int)."}, {"name": "setMaxRows", "parameters": [{"name": "max", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setMaxRows(int)."}, {"name": "setNClob", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNClob(int, NClob)."}, {"name": "setNClob", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "value", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setNClob(String, NClob)."}, {"name": "setNString", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNString(int, String)."}, {"name": "setNString", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "value", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setNString(String, String)."}, {"name": "setNull", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNull(int, int)."}, {"name": "setNull", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}, {"name": "typeName", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNull(int, int, String)."}, {"name": "setNull", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setNull(String, int)."}, {"name": "setNull", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sqlType", "type": "Integer"}, {"name": "typeName", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setNull(String, int, String)."}, {"name": "setObject", "parameters": [{"name": "index", "type": "Integer"}, {"name": "x", "type": "Object"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setObject(int, Object)."}, {"name": "setObject", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Object"}, {"name": "targetSqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setObject(int, Object, int)."}, {"name": "setObject", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Object"}, {"name": "targetSqlType", "type": "Integer"}, {"name": "scaleOrLength", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setObject(int, Object, int, int)."}, {"name": "setObject", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Object"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setObject(String, Object)."}, {"name": "setObject", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Object"}, {"name": "targetSqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setObject(String, Object, int)."}, {"name": "setObject", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Object"}, {"name": "targetSqlType", "type": "Integer"}, {"name": "scale", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setObject(String, Object, int, int)."}, {"name": "setPoolable", "parameters": [{"name": "poolable", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setPoolable(boolean)."}, {"name": "setQueryTimeout", "parameters": [{"name": "seconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setQueryTimeout(int)."}, {"name": "setRef", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcRef"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setRef(int, Ref)."}, {"name": "setRowId", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcRowId"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setRowId(int, RowId)."}, {"name": "setRowId", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcRowId"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setRowId(String, RowId)."}, {"name": "setSQLXML", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcSQLXML"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setSQLXML(int, SQLXML)."}, {"name": "setSQLXML", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "xmlObject", "type": "JdbcSQLXML"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setSQLXML(String, SQLXML)."}, {"name": "setShort", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setShort(int, short)."}, {"name": "setShort", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setShort(String, short)."}, {"name": "setString", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setString(int, String)."}, {"name": "setString", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setString(String, String)."}, {"name": "setTime", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTime"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTime(int, Time)."}, {"name": "setTime", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTime"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTime(int, Time, Calendar)."}, {"name": "setTime", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcTime"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setTime(String, Time)."}, {"name": "setTime", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcTime"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setTime(String, Time, Calendar)."}, {"name": "setTimestamp", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTimestamp"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTimestamp(int, Timestamp)."}, {"name": "setTimestamp", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTimestamp"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTimestamp(int, Timestamp, Calendar)."}, {"name": "setTimestamp", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcTimestamp"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setTimestamp(String, Timestamp)."}, {"name": "setTimestamp", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "x", "type": "JdbcTimestamp"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setTimestamp(String, Timestamp, Calendar)."}, {"name": "setURL", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setURL(int, URL)."}, {"name": "setURL", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "val", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.CallableStatement#setURL(String, URL)."}, {"name": "wasNull", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.CallableStatement#wasNull()."}, {"name": "free", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Clob#truncate(long)."}, {"name": "getAppsScriptBlob", "parameters": [], "result": "Blob", "description": "Gets the content of this JdbcClob as an Apps Script blob."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getSubString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "length", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.Clob#getSubString(long, int)."}, {"name": "length", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#length()."}, {"name": "position", "parameters": [{"name": "search", "type": "JdbcClob"}, {"name": "start", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#position(Clob, long)."}, {"name": "position", "parameters": [{"name": "search", "type": "String"}, {"name": "start", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#position(String, long)."}, {"name": "setString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "blobSource", "type": "BlobSource"}], "result": "Integer", "description": "Convenience method for writing a JdbcClob to a clob."}, {"name": "setString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "blobSource", "type": "BlobSource"}, {"name": "offset", "type": "Integer"}, {"name": "len", "type": "Integer"}], "result": "Integer", "description": "Convenience method for writing a JdbcClob to a clob."}, {"name": "setString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "value", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#setString(long, String)."}, {"name": "setString", "parameters": [{"name": "position", "type": "Integer"}, {"name": "value", "type": "String"}, {"name": "offset", "type": "Integer"}, {"name": "len", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Clob#setString(long, String, int, int)."}, {"name": "truncate", "parameters": [{"name": "length", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Clob#truncate(long)."}, {"name": "clearWarnings", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#clearWarnings()."}, {"name": "close", "parameters": [], "result": "void", "description": "Release this connection's database and all associated resources."}, {"name": "commit", "parameters": [], "result": "void", "description": "Makes all pending changes permanent, releases database locks held by this JdbcConnection."}, {"name": "createArrayOf", "parameters": [{"name": "typeName", "type": "String"}, {"name": "elements", "type": "Object"}], "result": "JdbcArray", "description": "For documentation of this method, see \njava.sql.Connection#createArrayOf(String, Object[])."}, {"name": "createBlob", "parameters": [], "result": "JdbcBlob", "description": "Constructs a JdbcBlob instance."}, {"name": "createClob", "parameters": [], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.Connection#createClob()."}, {"name": "createNClob", "parameters": [], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.Connection#createNClob()."}, {"name": "createSQLXML", "parameters": [], "result": "JdbcSQLXML", "description": "For documentation of this method, see \njava.sql.Connection#createSQLXML()."}, {"name": "createStatement", "parameters": [], "result": "JdbcStatement", "description": "Creates a JdbcStatement object for sending SQL statements to the database."}, {"name": "createStatement", "parameters": [{"name": "resultSetType", "type": "Integer"}, {"name": "resultSetConcurrency", "type": "Integer"}], "result": "JdbcStatement", "description": "Creates a JdbcStatement object for sending SQL statements to the database."}, {"name": "createStatement", "parameters": [{"name": "resultSetType", "type": "Integer"}, {"name": "resultSetConcurrency", "type": "Integer"}, {"name": "resultSetHoldability", "type": "Integer"}], "result": "JdbcStatement", "description": "Creates a JdbcStatement object for sending SQL statements to the database."}, {"name": "createStruct", "parameters": [{"name": "typeName", "type": "String"}, {"name": "attributes", "type": "Object"}], "result": "JdbcStruct", "description": "For documentation of this method, see \njava.sql.Connection#createStruct(String, Object[])."}, {"name": "getAutoCommit", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Connection#getAutoCommit()."}, {"name": "getCatalog", "parameters": [], "result": "String", "description": "or documentation of this method, see \njava.sql.Connection#getCatalog()."}, {"name": "getHoldability", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Connection#getHoldability()."}, {"name": "getMetaData", "parameters": [], "result": "JdbcDatabaseMetaData", "description": "For documentation of this method, see \njava.sql.Connection#getMetaData()."}, {"name": "getTransactionIsolation", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Connection#getTransactionIsolation()."}, {"name": "getWarnings", "parameters": [], "result": "String[]", "description": "For documentation of this method, see \njava.sql.Connection#getWarnings()."}, {"name": "isClosed", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Connection#isClosed()."}, {"name": "isReadOnly", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Connection#isReadOnly()."}, {"name": "isValid", "parameters": [{"name": "timeout", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Connection#isValid(int)."}, {"name": "nativeSQL", "parameters": [{"name": "sql", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.Connection#nativeSQL(String)."}, {"name": "prepareCall", "parameters": [{"name": "sql", "type": "String"}], "result": "JdbcCallableStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareCall(String)."}, {"name": "prepareCall", "parameters": [{"name": "sql", "type": "String"}, {"name": "resultSetType", "type": "Integer"}, {"name": "resultSetConcurrency", "type": "Integer"}], "result": "JdbcCallableStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareCall(String, int, int)."}, {"name": "prepareCall", "parameters": [{"name": "sql", "type": "String"}, {"name": "resultSetType", "type": "Integer"}, {"name": "resultSetConcurrency", "type": "Integer"}, {"name": "resultSetHoldability", "type": "Integer"}], "result": "JdbcCallableStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareCall(String, int, int, int)."}, {"name": "prepareStatement", "parameters": [{"name": "sql", "type": "String"}], "result": "JdbcPreparedStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareStatement(String)."}, {"name": "prepareStatement", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "JdbcPreparedStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareStatement(String, int)."}, {"name": "prepareStatement", "parameters": [{"name": "sql", "type": "String"}, {"name": "resultSetType", "type": "Integer"}, {"name": "resultSetConcurrency", "type": "Integer"}], "result": "JdbcPreparedStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareStatement(String, int, int)."}, {"name": "prepareStatement", "parameters": [{"name": "sql", "type": "String"}, {"name": "resultSetType", "type": "Integer"}, {"name": "resultSetConcurrency", "type": "Integer"}, {"name": "resultSetHoldability", "type": "Integer"}], "result": "JdbcPreparedStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareStatement(String, int, int, int)."}, {"name": "prepareStatementByIndex", "parameters": [{"name": "sql", "type": "String"}, {"name": "indices", "type": "Integer"}], "result": "JdbcPreparedStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareStatement(String, int[])."}, {"name": "prepareStatementByName", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "JdbcPreparedStatement", "description": "For documentation of this method, see \njava.sql.Connection#prepareStatement(String, String[])."}, {"name": "releaseSavepoint", "parameters": [{"name": "savepoint", "type": "JdbcSavepoint"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#releaseSavepoint(Savepoint)."}, {"name": "rollback", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#rollback()."}, {"name": "rollback", "parameters": [{"name": "savepoint", "type": "JdbcSavepoint"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#rollback(Savepoint)."}, {"name": "setAutoCommit", "parameters": [{"name": "autoCommit", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#setAutoCommit(boolean)."}, {"name": "setCatalog", "parameters": [{"name": "catalog", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#setCatalog(String)."}, {"name": "setHoldability", "parameters": [{"name": "holdability", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#setHoldability(int)."}, {"name": "setReadOnly", "parameters": [{"name": "readOnly", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#setReadOnly(boolean)."}, {"name": "setSavepoint", "parameters": [], "result": "JdbcSavepoint", "description": "For documentation of this method, see \njava.sql.Connection#setSavepoint()."}, {"name": "setSavepoint", "parameters": [{"name": "name", "type": "String"}], "result": "JdbcSavepoint", "description": "For documentation of this method, see \njava.sql.Connection#setSavepoint(String)."}, {"name": "setTransactionIsolation", "parameters": [{"name": "level", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Connection#setTransactionIsolation(int)."}, {"name": "allProceduresAreCallable", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#allProceduresAreCallable()."}, {"name": "allTablesAreSelectable", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#allTablesAreSelectable()."}, {"name": "autoCommitFailureClosesAllResultSets", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#autoCommitFailureClosesAllResultSets()."}, {"name": "dataDefinitionCausesTransactionCommit", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#dataDefinitionCausesTransactionCommit()."}, {"name": "dataDefinitionIgnoredInTransactions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#dataDefinitionIgnoredInTransactions()."}, {"name": "deletesAreDetected", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#deletesAreDetected(int)."}, {"name": "doesMaxRowSizeIncludeBlobs", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#doesMaxRowSizeIncludeBlobs()."}, {"name": "getAttributes", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "typeNamePattern", "type": "String"}, {"name": "attributeNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getAttributes(String, String, String, String)."}, {"name": "getBestRowIdentifier", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}, {"name": "scope", "type": "Integer"}, {"name": "nullable", "type": "Boolean"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getBestRowIdentifier(String, String, String, int, boolean)\n      ."}, {"name": "getCatalogSeparator", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getCatalogSeparator()."}, {"name": "getCatalogTerm", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getCatalogTerm()."}, {"name": "getCatalogs", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getCatalogs()."}, {"name": "getClientInfoProperties", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getClientInfoProperties()."}, {"name": "getColumnPrivileges", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}, {"name": "columnNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getColumnPrivileges(String, String, String, String)\n   ."}, {"name": "getColumns", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "tableNamePattern", "type": "String"}, {"name": "columnNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getColumns(String, String, String, String)."}, {"name": "getConnection", "parameters": [], "result": "JdbcConnection", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getConnection()."}, {"name": "getCrossReference", "parameters": [{"name": "parentCatalog", "type": "String"}, {"name": "parentSchema", "type": "String"}, {"name": "parentTable", "type": "String"}, {"name": "foreignCatalog", "type": "String"}, {"name": "foreignSchema", "type": "String"}, {"name": "foreignTable", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getCrossReference(String, String, String,\n     String, String, String)."}, {"name": "getDatabaseMajorVersion", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDatabaseMajorVersion()."}, {"name": "getDatabaseMinorVersion", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDatabaseMinorVersion()."}, {"name": "getDatabaseProductName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDatabaseProductName()."}, {"name": "getDatabaseProductVersion", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDatabaseProductVersion()."}, {"name": "getDefaultTransactionIsolation", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDefaultTransactionIsolation()."}, {"name": "getDriverMajorVersion", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDriverMajorVersion()."}, {"name": "getDriverMinorVersion", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDriverMinorVersion()."}, {"name": "getDriverName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDriverName()."}, {"name": "getDriverVersion", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getDriverVersion()."}, {"name": "getExportedKeys", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getImportedKeys(String, String, String)."}, {"name": "getExtraNameCharacters", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getExtraNameCharacters()."}, {"name": "getFunctionColumns", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "functionNamePattern", "type": "String"}, {"name": "columnNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getFunctionColumns(String, String, String, String)."}, {"name": "getFunctions", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "functionNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getFunctions(String, String, String)."}, {"name": "getIdentifierQuoteString", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getIdentifierQuoteString()."}, {"name": "getImportedKeys", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getImportedKeys(String, String, String)."}, {"name": "getIndexInfo", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}, {"name": "unique", "type": "Boolean"}, {"name": "approximate", "type": "Boolean"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getIndexInfo(String, String, String, boolean, boolean)\n      ."}, {"name": "getJDBCMajorVersion", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getJDBCMajorVersion()."}, {"name": "getJDBCMinorVersion", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getJDBCMinorVersion()."}, {"name": "getMaxBinaryLiteralLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxBinaryLiteralLength()."}, {"name": "getMaxCatalogNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxCatalogNameLength()."}, {"name": "getMaxCharLiteralLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxCharLiteralLength()."}, {"name": "getMaxColumnNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxColumnNameLength()."}, {"name": "getMaxColumnsInGroupBy", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxColumnsInGroupBy()."}, {"name": "getMaxColumnsInIndex", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxColumnsInIndex()."}, {"name": "getMaxColumnsInOrderBy", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxColumnsInOrderBy()."}, {"name": "getMaxColumnsInSelect", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxColumnsInSelect()."}, {"name": "getMaxColumnsInTable", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxColumnsInTable()."}, {"name": "getMaxConnections", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxConnections()."}, {"name": "getMaxCursorNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxCursorNameLength()."}, {"name": "getMaxIndexLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxIndexLength()."}, {"name": "getMaxProcedureNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxProcedureNameLength()."}, {"name": "getMaxRowSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxRowSize()."}, {"name": "getMaxSchemaNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxSchemaNameLength()."}, {"name": "getMaxStatementLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxStatementLength()."}, {"name": "getMaxStatements", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxStatements()."}, {"name": "getMaxTableNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxTableNameLength()."}, {"name": "getMaxTablesInSelect", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxTablesInSelect()."}, {"name": "getMaxUserNameLength", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getMaxUserNameLength()."}, {"name": "getNumericFunctions", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getNumericFunctions()."}, {"name": "getPrimaryKeys", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getPrimaryKeys(String, String, String)."}, {"name": "getProcedureColumns", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "procedureNamePattern", "type": "String"}, {"name": "columnNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getProcedureColumns(String, String, String, String)\n    ."}, {"name": "getProcedureTerm", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getProcedureTerm()."}, {"name": "getProcedures", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "procedureNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getProcedures(String, String, String)."}, {"name": "getResultSetHoldability", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getResultSetHoldability()."}, {"name": "getRowIdLifetime", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getRowIdLifetime()."}, {"name": "getSQLKeywords", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSQLKeywords()."}, {"name": "getSQLStateType", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSQLStateType()."}, {"name": "getSchemaTerm", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSchemaTerm()."}, {"name": "getSchemas", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSchemas()."}, {"name": "getSchemas", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSchemas()."}, {"name": "getSearchStringEscape", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSearchStringEscape()."}, {"name": "getStringFunctions", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getStringFunctions()."}, {"name": "getSuperTables", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "tableNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSuperTables(String, String,String)."}, {"name": "getSuperTypes", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "typeNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSuperTypes(String, String, String)."}, {"name": "getSystemFunctions", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getSystemFunctions()."}, {"name": "getTablePrivileges", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "tableNamePattern", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getTablePrivileges(String, String, String)."}, {"name": "getTableTypes", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getTableTypes()."}, {"name": "getTables", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "tableNamePattern", "type": "String"}, {"name": "types", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getTables(String, String, String, String[])."}, {"name": "getTimeDateFunctions", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getTimeDateFunctions()."}, {"name": "getTypeInfo", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getTypeInfo()."}, {"name": "getUDTs", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schemaPattern", "type": "String"}, {"name": "typeNamePattern", "type": "String"}, {"name": "types", "type": "Integer"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getUDTs(String, String, String, int[])."}, {"name": "getURL", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getURL()."}, {"name": "getUserName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getUserName()."}, {"name": "getVersionColumns", "parameters": [{"name": "catalog", "type": "String"}, {"name": "schema", "type": "String"}, {"name": "table", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#getVersionColumns(String, String, String)."}, {"name": "insertsAreDetected", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#insertsAreDetected(int)."}, {"name": "isCatalogAtStart", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#isCatalogAtStart()."}, {"name": "isReadOnly", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#isReadOnly()."}, {"name": "locatorsUpdateCopy", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#locatorsUpdateCopy()."}, {"name": "nullPlusNonNullIsNull", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#nullPlusNonNullIsNull()."}, {"name": "nullsAreSortedAtEnd", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#nullsAreSortedAtEnd()."}, {"name": "nullsAreSortedAtStart", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#nullsAreSortedAtStart()."}, {"name": "nullsAreSortedHigh", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#nullsAreSortedHigh()."}, {"name": "nullsAreSortedLow", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#nullsAreSortedLow()."}, {"name": "othersDeletesAreVisible", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#othersDeletesAreVisible(int)."}, {"name": "othersInsertsAreVisible", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#othersInsertsAreVisible(int)."}, {"name": "othersUpdatesAreVisible", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#othersUpdatesAreVisible(int)."}, {"name": "ownDeletesAreVisible", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#ownDeletesAreVisible(int)."}, {"name": "ownInsertsAreVisible", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#ownInsertsAreVisible(int)."}, {"name": "ownUpdatesAreVisible", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#ownUpdatesAreVisible(int)."}, {"name": "storesLowerCaseIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#storesLowerCaseIdentifiers()."}, {"name": "storesLowerCaseQuotedIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#storesLowerCaseQuotedIdentifiers()."}, {"name": "storesMixedCaseIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#storesMixedCaseIdentifiers()."}, {"name": "storesMixedCaseQuotedIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#storesMixedCaseQuotedIdentifiers()."}, {"name": "storesUpperCaseIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#storesUpperCaseIdentifiers()."}, {"name": "storesUpperCaseQuotedIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#storesUpperCaseQuotedIdentifiers()."}, {"name": "supportsANSI92EntryLevelSQL", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsANSI92EntryLevelSQL()."}, {"name": "supportsANSI92FullSQL", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsANSI92FullSQL()."}, {"name": "supportsANSI92IntermediateSQL", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsANSI92IntermediateSQL()."}, {"name": "supportsAlterTableWithAddColumn", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsAlterTableWithAddColumn()."}, {"name": "supportsAlterTableWithDropColumn", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsAlterTableWithDropColumn()."}, {"name": "supportsBatchUpdates", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsBatchUpdates()."}, {"name": "supportsCatalogsInDataManipulation", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCatalogsInDataManipulation()."}, {"name": "supportsCatalogsInIndexDefinitions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCatalogsInIndexDefinitions()."}, {"name": "supportsCatalogsInPrivilegeDefinitions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCatalogsInPrivilegeDefinitions()."}, {"name": "supportsCatalogsInProcedureCalls", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCatalogsInProcedureCalls()."}, {"name": "supportsCatalogsInTableDefinitions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCatalogsInTableDefinitions()."}, {"name": "supportsColumnAliasing", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsColumnAliasing()."}, {"name": "supportsConvert", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsConvert()."}, {"name": "supportsConvert", "parameters": [{"name": "fromType", "type": "Integer"}, {"name": "toType", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsConvert(int, int)."}, {"name": "supportsCoreSQLGrammar", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCoreSQLGrammar()."}, {"name": "supportsCorrelatedSubqueries", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsCorrelatedSubqueries()."}, {"name": "supportsDataDefinitionAndDataManipulationTransactions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsDataDefinitionAndDataManipulationTransactions()\n."}, {"name": "supportsDataManipulationTransactionsOnly", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsDataManipulationTransactionsOnly()."}, {"name": "supportsDifferentTableCorrelationNames", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsDifferentTableCorrelationNames()."}, {"name": "supportsExpressionsInOrderBy", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsExpressionsInOrderBy()."}, {"name": "supportsExtendedSQLGrammar", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsExtendedSQLGrammar()."}, {"name": "supportsFullOuterJoins", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsFullOuterJoins()."}, {"name": "supportsGetGeneratedKeys", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsGetGeneratedKeys()."}, {"name": "supportsGroupBy", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsGroupBy()."}, {"name": "supportsGroupByBeyondSelect", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsGroupByBeyondSelect()."}, {"name": "supportsGroupByUnrelated", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsGroupByUnrelated()."}, {"name": "supportsIntegrityEnhancementFacility", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsIntegrityEnhancementFacility()."}, {"name": "supportsLikeEscapeClause", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsLikeEscapeClause()."}, {"name": "supportsLimitedOuterJoins", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsLimitedOuterJoins()."}, {"name": "supportsMinimumSQLGrammar", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsMinimumSQLGrammar()."}, {"name": "supportsMixedCaseIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsMixedCaseIdentifiers()."}, {"name": "supportsMixedCaseQuotedIdentifiers", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsMixedCaseQuotedIdentifiers()."}, {"name": "supportsMultipleOpenResults", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsMultipleOpenResults()."}, {"name": "supportsMultipleResultSets", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsMultipleResultSets()."}, {"name": "supportsMultipleTransactions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsMultipleTransactions()."}, {"name": "supportsNamedParameters", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsNamedParameters()."}, {"name": "supportsNonNullableColumns", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsNonNullableColumns()."}, {"name": "supportsOpenCursorsAcrossCommit", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsOpenCursorsAcrossCommit()."}, {"name": "supportsOpenCursorsAcrossRollback", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsOpenCursorsAcrossRollback()."}, {"name": "supportsOpenStatementsAcrossCommit", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsOpenStatementsAcrossCommit()."}, {"name": "supportsOpenStatementsAcrossRollback", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsOpenStatementsAcrossRollback()."}, {"name": "supportsOrderByUnrelated", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsOrderByUnrelated()."}, {"name": "supportsOuterJoins", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsOuterJoins()."}, {"name": "supportsPositionedDelete", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsPositionedDelete()."}, {"name": "supportsPositionedUpdate", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsPositionedUpdate()."}, {"name": "supportsResultSetConcurrency", "parameters": [{"name": "type", "type": "Integer"}, {"name": "concurrency", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsResultSetConcurrency(int, int)."}, {"name": "supportsResultSetHoldability", "parameters": [{"name": "holdability", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsResultSetHoldability(int)."}, {"name": "supportsResultSetType", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsResultSetType(int)."}, {"name": "supportsSavepoints", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSavepoints()."}, {"name": "supportsSchemasInDataManipulation", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSchemasInDataManipulation()."}, {"name": "supportsSchemasInIndexDefinitions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSchemasInIndexDefinitions()."}, {"name": "supportsSchemasInPrivilegeDefinitions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSchemasInPrivilegeDefinitions()."}, {"name": "supportsSchemasInProcedureCalls", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSchemasInProcedureCalls()."}, {"name": "supportsSchemasInTableDefinitions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSchemasInTableDefinitions()."}, {"name": "supportsSelectForUpdate", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSelectForUpdate()."}, {"name": "supportsStatementPooling", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsStatementPooling()."}, {"name": "supportsStoredFunctionsUsingCallSyntax", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsStoredFunctionsUsingCallSyntax()."}, {"name": "supportsStoredProcedures", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsStoredProcedures()."}, {"name": "supportsSubqueriesInComparisons", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSubqueriesInComparisons()."}, {"name": "supportsSubqueriesInExists", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSubqueriesInExists()."}, {"name": "supportsSubqueriesInIns", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSubqueriesInIns()."}, {"name": "supportsSubqueriesInQuantifieds", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsSubqueriesInQuantifieds()."}, {"name": "supportsTableCorrelationNames", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsTableCorrelationNames()."}, {"name": "supportsTransactionIsolationLevel", "parameters": [{"name": "level", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsTransactionIsolationLevel(int)."}, {"name": "supportsTransactions", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsTransactions()."}, {"name": "supportsUnion", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsUnion()."}, {"name": "supportsUnionAll", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#supportsUnionAll()."}, {"name": "updatesAreDetected", "parameters": [{"name": "type", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#updatesAreDetected(int)."}, {"name": "usesLocalFilePerTable", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#usesLocalFilePerTable()."}, {"name": "usesLocalFiles", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.DatabaseMetaData#usesLocalFiles()."}, {"name": "after", "parameters": [{"name": "when", "type": "JdbcDate"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Date#after(date)."}, {"name": "before", "parameters": [{"name": "when", "type": "JdbcDate"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Date#before(date)."}, {"name": "getDate", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getDate()."}, {"name": "getMonth", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getMonth()."}, {"name": "getTime", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getTime()."}, {"name": "getYear", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getYear()."}, {"name": "setDate", "parameters": [{"name": "date", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setDate(int)."}, {"name": "setMonth", "parameters": [{"name": "month", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setMonth(int)."}, {"name": "setTime", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setTime(int)."}, {"name": "setYear", "parameters": [{"name": "year", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setYear(int)."}, {"name": "getParameterClassName", "parameters": [{"name": "param", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getParameterClassName(int)."}, {"name": "getParameterCount", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getParameterCount()."}, {"name": "getParameterMode", "parameters": [{"name": "param", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getParameterMode(int)."}, {"name": "getParameterType", "parameters": [{"name": "param", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getParameterType(int)."}, {"name": "getParameterTypeName", "parameters": [{"name": "param", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getParameterTypeName(int)."}, {"name": "getPrecision", "parameters": [{"name": "param", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getPrecision(int)."}, {"name": "getScale", "parameters": [{"name": "param", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#getScale(int)."}, {"name": "isNullable", "parameters": [{"name": "param", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#isNullable(int)."}, {"name": "isSigned", "parameters": [{"name": "param", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ParameterMetaData#isSigned(int)."}, {"name": "addBatch", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#addBatch()."}, {"name": "addBatch", "parameters": [{"name": "sql", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#addBatch(String)."}, {"name": "cancel", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#cancel()."}, {"name": "clearBatch", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#clearBatch()."}, {"name": "clearParameters", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#clearParameters()."}, {"name": "clearWarnings", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#clearWarnings()."}, {"name": "close", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#close()."}, {"name": "execute", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.PreparedStatement#execute()."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String)."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, int)."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnIndexes", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, int[])."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, String[])."}, {"name": "executeBatch", "parameters": [], "result": "Integer[]", "description": "For documentation of this method, see \njava.sql.Statement#executeBatch()."}, {"name": "executeQuery", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.PreparedStatement#executeQuery()."}, {"name": "executeQuery", "parameters": [{"name": "sql", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#executeQuery(String)."}, {"name": "executeUpdate", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.PreparedStatement#executeUpdate()."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, int)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnIndexes", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, int[])."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, String[])."}, {"name": "getConnection", "parameters": [], "result": "JdbcConnection", "description": "For documentation of this method, see \njava.sql.Statement#getConnection()."}, {"name": "getFetchDirection", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getFetchDirection()."}, {"name": "getFetchSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getFetchSize()."}, {"name": "getGeneratedKeys", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#getGeneratedKeys()."}, {"name": "getMaxFieldSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getMaxFieldSize()."}, {"name": "getMaxRows", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getMaxRows()."}, {"name": "getMetaData", "parameters": [], "result": "JdbcResultSetMetaData", "description": "For documentation of this method, see \njava.sql.PreparedStatement#getMetaData()."}, {"name": "getMoreResults", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#getMoreResults()."}, {"name": "getMoreResults", "parameters": [{"name": "current", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#getMoreResults(int)."}, {"name": "getParameterMetaData", "parameters": [], "result": "JdbcParameterMetaData", "description": "For documentation of this method, see \njava.sql.PreparedStatement#getParameterMetaData()."}, {"name": "getQueryTimeout", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getQueryTimeout()."}, {"name": "getResultSet", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#getResultSet()."}, {"name": "getResultSetConcurrency", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetConcurrency()."}, {"name": "getResultSetHoldability", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetHoldability()."}, {"name": "getResultSetType", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetType()."}, {"name": "getUpdateCount", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getUpdateCount()."}, {"name": "getWarnings", "parameters": [], "result": "String[]", "description": "For documentation of this method, see \njava.sql.Statement#getWarnings()."}, {"name": "isClosed", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#isClosed()."}, {"name": "isPoolable", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#isPoolable()."}, {"name": "setArray", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcArray"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setArray(int, Array)."}, {"name": "setBigDecimal", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "BigNumber"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBigDecimal(int, BigDecimal)."}, {"name": "setBlob", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcBlob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBlob(int, Clob)."}, {"name": "setBoolean", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBoolean(int, boolean)."}, {"name": "setByte", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setByte(int, byte)."}, {"name": "setBytes", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setBytes(int, byte[])."}, {"name": "setClob", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setClob(int, Clob)."}, {"name": "setCursorName", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setCursorName(String)."}, {"name": "setDate", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcDate"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setDate(int, Date)."}, {"name": "setDate", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcDate"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setDate(int, Date, Calendar)."}, {"name": "setDouble", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setDouble(int, double)."}, {"name": "setEscapeProcessing", "parameters": [{"name": "enable", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setEscapeProcessing(boolean)."}, {"name": "setFetchDirection", "parameters": [{"name": "direction", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setFetchDirection(int)."}, {"name": "setFetchSize", "parameters": [{"name": "rows", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setFetchSize(int)."}, {"name": "setFloat", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setFloat(int, float)."}, {"name": "setInt", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setInt(int, int)."}, {"name": "setLong", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setLong(int, long)."}, {"name": "setMaxFieldSize", "parameters": [{"name": "max", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setMaxFieldSize(int)."}, {"name": "setMaxRows", "parameters": [{"name": "max", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setMaxRows(int)."}, {"name": "setNClob", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNClob(int, NClob)."}, {"name": "setNString", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNString(int, String)."}, {"name": "setNull", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNull(int, int)."}, {"name": "setNull", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "sqlType", "type": "Integer"}, {"name": "typeName", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setNull(int, int, String)."}, {"name": "setObject", "parameters": [{"name": "index", "type": "Integer"}, {"name": "x", "type": "Object"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setObject(int, Object)."}, {"name": "setObject", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Object"}, {"name": "targetSqlType", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setObject(int, Object, int)."}, {"name": "setObject", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Object"}, {"name": "targetSqlType", "type": "Integer"}, {"name": "scaleOrLength", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setObject(int, Object, int, int)."}, {"name": "setPoolable", "parameters": [{"name": "poolable", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setPoolable(boolean)."}, {"name": "setQueryTimeout", "parameters": [{"name": "seconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setQueryTimeout(int)."}, {"name": "setRef", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcRef"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setRef(int, Ref)."}, {"name": "setRowId", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcRowId"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setRowId(int, RowId)."}, {"name": "setSQLXML", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcSQLXML"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setSQLXML(int, SQLXML)."}, {"name": "setShort", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setShort(int, short)."}, {"name": "setString", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setString(int, String)."}, {"name": "setTime", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTime"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTime(int, Time)."}, {"name": "setTime", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTime"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTime(int, Time, Calendar)."}, {"name": "setTimestamp", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTimestamp"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTimestamp(int, Timestamp)."}, {"name": "setTimestamp", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTimestamp"}, {"name": "timeZone", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setTimestamp(int, Timestamp, Calendar)."}, {"name": "setURL", "parameters": [{"name": "parameterIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.PreparedStatement#setURL(int, URL)."}, {"name": "getBaseTypeName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.Ref#getBaseTypeName()."}, {"name": "getObject", "parameters": [], "result": "Object", "description": "For documentation of this method, see \njava.sql.Ref#getObject()."}, {"name": "setObject", "parameters": [{"name": "object", "type": "Object"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Ref#setObject(Object)."}, {"name": "absolute", "parameters": [{"name": "row", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#absolute(int)."}, {"name": "afterLast", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#afterLast()."}, {"name": "beforeFirst", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#beforeFirst()."}, {"name": "cancelRowUpdates", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#cancelRowUpdates()."}, {"name": "clearWarnings", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#clearWarnings()."}, {"name": "close", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#close()."}, {"name": "deleteRow", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#deleteRow()."}, {"name": "findColumn", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#findColumn(String)."}, {"name": "first", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#first()."}, {"name": "getArray", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcArray", "description": "For documentation of this method, see \njava.sql.ResultSet#getArray(int)."}, {"name": "getArray", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcArray", "description": "For documentation of this method, see \njava.sql.ResultSet#getArray(String)."}, {"name": "getBigDecimal", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "BigNumber", "description": "For documentation of this method, see \njava.sql.ResultSet#getBigDecimal(int)."}, {"name": "getBigDecimal", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "BigNumber", "description": "For documentation of this method, see \njava.sql.ResultSet#getBigDecimal(String)."}, {"name": "getBlob", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcBlob", "description": "For documentation of this method, see \njava.sql.ResultSet#getBlob(int)."}, {"name": "getBlob", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcBlob", "description": "For documentation of this method, see \njava.sql.ResultSet#getBlob(String)."}, {"name": "getBoolean", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#getBoolean(int)."}, {"name": "getBoolean", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#getBoolean(String)."}, {"name": "getByte", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Byte", "description": "For documentation of this method, see \njava.sql.ResultSet#getByte(int)."}, {"name": "getByte", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Byte", "description": "For documentation of this method, see \njava.sql.ResultSet#getByte(String)."}, {"name": "getBytes", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Byte[]", "description": "For documentation of this method, see \njava.sql.ResultSet#getBytes(int)."}, {"name": "getBytes", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Byte[]", "description": "For documentation of this method, see \njava.sql.ResultSet#getBytes(String)."}, {"name": "getClob", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.ResultSet#getClob(int)."}, {"name": "getClob", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.ResultSet#getClob(String)."}, {"name": "getConcurrency", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getConcurrency()."}, {"name": "getCursorName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getCursorName()."}, {"name": "getDate", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.ResultSet#getDate(int)."}, {"name": "getDate", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "timeZone", "type": "String"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.ResultSet#getDate(int, Calendar)."}, {"name": "getDate", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.ResultSet#getDate(String)."}, {"name": "getDate", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "timeZone", "type": "String"}], "result": "JdbcDate", "description": "For documentation of this method, see \njava.sql.ResultSet#getDate(String, Calendar)."}, {"name": "getDouble", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.ResultSet#getDouble(int)."}, {"name": "getDouble", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.ResultSet#getDouble(String)."}, {"name": "getFetchDirection", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getFetchDirection()."}, {"name": "getFetchSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getFetchSize()."}, {"name": "getFloat", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.ResultSet#getFloat(int)."}, {"name": "getFloat", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Number", "description": "For documentation of this method, see \njava.sql.ResultSet#getFloat(String)."}, {"name": "getHoldability", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getHoldability()."}, {"name": "getInt", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getInt(int)."}, {"name": "getInt", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getInt(String)."}, {"name": "getLong", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getLong(int)."}, {"name": "getLong", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getLong(String)."}, {"name": "getMetaData", "parameters": [], "result": "JdbcResultSetMetaData", "description": "For documentation of this method, see \njava.sql.ResultSet#getMetaData()."}, {"name": "getNClob", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.ResultSet#getNClob(int)."}, {"name": "getNClob", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcClob", "description": "For documentation of this method, see \njava.sql.ResultSet#getNClob(String)."}, {"name": "getNString", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getNString(int)."}, {"name": "getNString", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getNString(String)."}, {"name": "getObject", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Object", "description": "For documentation of this method, see \njava.sql.ResultSet#getObject(int)."}, {"name": "getObject", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Object", "description": "For documentation of this method, see \njava.sql.ResultSet#getObject(String)."}, {"name": "getRef", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcRef", "description": "For documentation of this method, see \njava.sql.ResultSet#getRef(int)."}, {"name": "getRef", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcRef", "description": "For documentation of this method, see \njava.sql.ResultSet#getRef(String)."}, {"name": "getRow", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getRow()."}, {"name": "getRowId", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcRowId", "description": "For documentation of this method, see \njava.sql.ResultSet#getRowId(int)."}, {"name": "getRowId", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcRowId", "description": "For documentation of this method, see \njava.sql.ResultSet#getRowId(String)."}, {"name": "getSQLXML", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcSQLXML", "description": "For documentation of this method, see \njava.sql.ResultSet#getSQLXML(int)."}, {"name": "getSQLXML", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcSQLXML", "description": "For documentation of this method, see \njava.sql.ResultSet#getSQLXML(String)."}, {"name": "getShort", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getShort(int)."}, {"name": "getShort", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getShort(String)."}, {"name": "getStatement", "parameters": [], "result": "JdbcStatement", "description": "For documentation of this method, see \njava.sql.ResultSet#getStatement()."}, {"name": "getString", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getString(int)."}, {"name": "getString", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getString(String)."}, {"name": "getTime", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.ResultSet#getTime(int)."}, {"name": "getTime", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.ResultSet#getTime(int, Calendar)."}, {"name": "getTime", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.ResultSet#getTime(String)."}, {"name": "getTime", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTime", "description": "For documentation of this method, see \njava.sql.ResultSet#getTime(String, Calendar)."}, {"name": "getTimestamp", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.ResultSet#getTimestamp(int)."}, {"name": "getTimestamp", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.ResultSet#getTimestamp(int, Calendar)."}, {"name": "getTimestamp", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.ResultSet#getTimestamp(String)."}, {"name": "getTimestamp", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "timeZone", "type": "String"}], "result": "JdbcTimestamp", "description": "For documentation of this method, see \njava.sql.ResultSet#getTimestamp(String, Calendar)."}, {"name": "getType", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSet#getType()."}, {"name": "getURL", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getURL(int)."}, {"name": "getURL", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSet#getURL(String)."}, {"name": "getWarnings", "parameters": [], "result": "String[]", "description": "Returns the current set of warnings reported by the driver."}, {"name": "insertRow", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#insertRow()."}, {"name": "isAfterLast", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#isAfterLast()."}, {"name": "isBeforeFirst", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#isBeforeFirst()."}, {"name": "isClosed", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#isClosed()."}, {"name": "isFirst", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#isFirst()."}, {"name": "isLast", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#isLast()."}, {"name": "last", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#first()."}, {"name": "moveToCurrentRow", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#moveToCurrentRow()."}, {"name": "moveToInsertRow", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#moveToInsertRow()."}, {"name": "next", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#next()."}, {"name": "previous", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#previous()."}, {"name": "refreshRow", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#refreshRow()."}, {"name": "relative", "parameters": [{"name": "rows", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#relative(int)."}, {"name": "rowDeleted", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#rowDeleted()."}, {"name": "rowInserted", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#rowInserted()."}, {"name": "rowUpdated", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#rowUpdated()."}, {"name": "setFetchDirection", "parameters": [{"name": "direction", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#setFetchDirection(int)."}, {"name": "setFetchSize", "parameters": [{"name": "rows", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#setFetchSize(int)."}, {"name": "updateArray", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcArray"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateArray(int, Array)."}, {"name": "updateArray", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcArray"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateArray(String, Array)."}, {"name": "updateBigDecimal", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "BigNumber"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBigDecimal(int, BigDecimal)."}, {"name": "updateBigDecimal", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "BigNumber"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBigDecimal(String, BigDecimal)."}, {"name": "updateBlob", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcBlob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBlob(int, Blob)."}, {"name": "updateBlob", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcBlob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateRef(String, Blob)."}, {"name": "updateBoolean", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBoolean(int, boolean)."}, {"name": "updateBoolean", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBoolean(String, boolean)."}, {"name": "updateByte", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateByte(int, byte)."}, {"name": "updateByte", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateByte(String, byte)."}, {"name": "updateBytes", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBytes(int, byte[])."}, {"name": "updateBytes", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Byte"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateBytes(String, byte[])."}, {"name": "updateClob", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateClob(int, Clob)."}, {"name": "updateClob", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateClob(String, Clob)."}, {"name": "updateDate", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcDate"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateDate(int, Date)."}, {"name": "updateDate", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcDate"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateDate(String, Date)."}, {"name": "updateDouble", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateDouble(int, double)."}, {"name": "updateDouble", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateDouble(String, double)."}, {"name": "updateFloat", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateFloat(int, float)."}, {"name": "updateFloat", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Number"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateFloat(String, float)."}, {"name": "updateInt", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateInt(int, int)."}, {"name": "updateInt", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateInt(String, int)."}, {"name": "updateLong", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateLong(int, long)."}, {"name": "updateLong", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateLong(String, long)."}, {"name": "updateNClob", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateNClob(int, NClob)."}, {"name": "updateNClob", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcClob"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateNClob(String, NClob)."}, {"name": "updateNString", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateNString(int, String)."}, {"name": "updateNString", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateNString(String, String)."}, {"name": "updateNull", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateNull(int)."}, {"name": "updateNull", "parameters": [{"name": "columnLabel", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateNull(String)."}, {"name": "updateObject", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Object"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateObject(int, Object)."}, {"name": "updateObject", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Object"}, {"name": "scaleOrLength", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateObject(int, Object, int)."}, {"name": "updateObject", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Object"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateObject(String, Object)."}, {"name": "updateObject", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Object"}, {"name": "scaleOrLength", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateObject(String, Object, int)."}, {"name": "updateRef", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcRef"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateRef(int, Ref)."}, {"name": "updateRef", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcRef"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateRef(String, Ref)."}, {"name": "updateRow", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateRow()."}, {"name": "updateRowId", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcRowId"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateRowId(int, RowId)."}, {"name": "updateRowId", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcRowId"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateRowId(String, RowId)."}, {"name": "updateSQLXML", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcSQLXML"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateSQLXML(int, SQLXML)."}, {"name": "updateSQLXML", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcSQLXML"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateSQLXML(String, SQLXML)."}, {"name": "updateShort", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateShort(int, short)."}, {"name": "updateShort", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateShort(String, short)."}, {"name": "updateString", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateString(int, String)."}, {"name": "updateString", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateString(String, String)."}, {"name": "updateTime", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTime"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateTime(int, Time)."}, {"name": "updateTime", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcTime"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateTime(String, Time)."}, {"name": "updateTimestamp", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "x", "type": "JdbcTimestamp"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateTimestamp(int, Timestamp)."}, {"name": "updateTimestamp", "parameters": [{"name": "columnLabel", "type": "String"}, {"name": "x", "type": "JdbcTimestamp"}], "result": "void", "description": "For documentation of this method, see \njava.sql.ResultSet#updateTimestamp(String, Timestamp)."}, {"name": "wasNull", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSet#wasNull()."}, {"name": "getCatalogName", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getCatalogName(int)."}, {"name": "getColumnClassName", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnClassName(int)."}, {"name": "getColumnCount", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnCount()."}, {"name": "getColumnDisplaySize", "parameters": [{"name": "column", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnDisplaySize(int)."}, {"name": "getColumnLabel", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnLabel(int)."}, {"name": "getColumnName", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnName(int)."}, {"name": "getColumnType", "parameters": [{"name": "column", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnType(int)."}, {"name": "getColumnTypeName", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getColumnTypeName(int)."}, {"name": "getPrecision", "parameters": [{"name": "column", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getPrecision(int)."}, {"name": "getScale", "parameters": [{"name": "column", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getScale(int)."}, {"name": "getSchemaName", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getSchemaName(int)."}, {"name": "getTableName", "parameters": [{"name": "column", "type": "Integer"}], "result": "String", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#getTableName(int)."}, {"name": "isAutoIncrement", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isAutoIncrement(int)."}, {"name": "isCaseSensitive", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isCaseSensitive(int)."}, {"name": "isCurrency", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isCurrency(int)."}, {"name": "isDefinitelyWritable", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isDefinitelyWritable(int)."}, {"name": "isNullable", "parameters": [{"name": "column", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isNullable(int)."}, {"name": "isReadOnly", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isReadOnly(int)."}, {"name": "isSearchable", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isSearchable(int)."}, {"name": "isSigned", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isSigned(int)."}, {"name": "isWritable", "parameters": [{"name": "column", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.ResultSetMetaData#isWritable(int)."}, {"name": "getBytes", "parameters": [], "result": "Byte[]", "description": "For documentation of this method, see \njava.sql.RowId#getBytes()."}, {"name": "free", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.SQLXML#free()."}, {"name": "getString", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.SQLXML#getString()."}, {"name": "setString", "parameters": [{"name": "value", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.SQLXML#setString(String)."}, {"name": "getSavepointId", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Savepoint#getSavepointId()."}, {"name": "getSavepointName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.Savepoint#getSavepointName()."}, {"name": "addBatch", "parameters": [{"name": "sql", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#addBatch(String)."}, {"name": "cancel", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#cancel()."}, {"name": "clearBatch", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#clearBatch()."}, {"name": "clearWarnings", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#clearWarnings()."}, {"name": "close", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#close()."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String)."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, int)."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnIndexes", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, int[])."}, {"name": "execute", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#execute(String, String[])."}, {"name": "executeBatch", "parameters": [], "result": "Integer[]", "description": "For documentation of this method, see \njava.sql.Statement#executeBatch()."}, {"name": "executeQuery", "parameters": [{"name": "sql", "type": "String"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#executeQuery(String)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "autoGeneratedKeys", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, int)."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnIndexes", "type": "Integer"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, int[])."}, {"name": "executeUpdate", "parameters": [{"name": "sql", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#executeUpdate(String, String[])."}, {"name": "getConnection", "parameters": [], "result": "JdbcConnection", "description": "For documentation of this method, see \njava.sql.Statement#getConnection()."}, {"name": "getFetchDirection", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getFetchDirection()."}, {"name": "getFetchSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getFetchSize()."}, {"name": "getGeneratedKeys", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#getGeneratedKeys()."}, {"name": "getMaxFieldSize", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getMaxFieldSize()."}, {"name": "getMaxRows", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getMaxRows()."}, {"name": "getMoreResults", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#getMoreResults()."}, {"name": "getMoreResults", "parameters": [{"name": "current", "type": "Integer"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#getMoreResults(int)."}, {"name": "getQueryTimeout", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getQueryTimeout()."}, {"name": "getResultSet", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Statement#getResultSet()."}, {"name": "getResultSetConcurrency", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetConcurrency()."}, {"name": "getResultSetHoldability", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetHoldability()."}, {"name": "getResultSetType", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getResultSetType()."}, {"name": "getUpdateCount", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Statement#getUpdateCount()."}, {"name": "getWarnings", "parameters": [], "result": "String[]", "description": "For documentation of this method, see \njava.sql.Statement#getWarnings()."}, {"name": "isClosed", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#isClosed()."}, {"name": "isPoolable", "parameters": [], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Statement#isPoolable()."}, {"name": "setCursorName", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setCursorName(String)."}, {"name": "setEscapeProcessing", "parameters": [{"name": "enable", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setEscapeProcessing(boolean)."}, {"name": "setFetchDirection", "parameters": [{"name": "direction", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setFetchDirection(int)."}, {"name": "setFetchSize", "parameters": [{"name": "rows", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setFetchSize(int)."}, {"name": "setMaxFieldSize", "parameters": [{"name": "max", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setMaxFieldSize(int)."}, {"name": "setMaxRows", "parameters": [{"name": "max", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setMaxRows(int)."}, {"name": "setPoolable", "parameters": [{"name": "poolable", "type": "Boolean"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setPoolable(boolean)."}, {"name": "setQueryTimeout", "parameters": [{"name": "seconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Statement#setQueryTimeout(int)."}, {"name": "getAttributes", "parameters": [], "result": "Object[]", "description": "For documentation of this method, see \njava.sql.Struct#getAttributes()."}, {"name": "getSQLTypeName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.Struct#getSQLTypeName()."}, {"name": "after", "parameters": [{"name": "when", "type": "JdbcTime"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Date#after(Date)."}, {"name": "before", "parameters": [{"name": "when", "type": "JdbcTime"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Date#before(Date)."}, {"name": "getHours", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getHours()."}, {"name": "getMinutes", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getMinutes()."}, {"name": "getSeconds", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getSeconds()."}, {"name": "getTime", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getTime()."}, {"name": "setHours", "parameters": [{"name": "hours", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setHours(int)."}, {"name": "setMinutes", "parameters": [{"name": "minutes", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setMinutes(int)."}, {"name": "setSeconds", "parameters": [{"name": "seconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setSeconds(int)."}, {"name": "setTime", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Time#setTime(long)."}, {"name": "after", "parameters": [{"name": "when", "type": "JdbcTimestamp"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Timestamp#after(Timestamp)."}, {"name": "before", "parameters": [{"name": "when", "type": "JdbcTimestamp"}], "result": "Boolean", "description": "For documentation of this method, see \njava.sql.Timestamp#before(Timestamp)."}, {"name": "getDate", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getDate()."}, {"name": "getHours", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getHours()."}, {"name": "getMinutes", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getMinutes()."}, {"name": "getMonth", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getMonth()."}, {"name": "getNanos", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Timestamp#getNanos()."}, {"name": "getSeconds", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getSeconds()."}, {"name": "getTime", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Timestamp#getTime()."}, {"name": "getYear", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Date#getYear()."}, {"name": "setDate", "parameters": [{"name": "date", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setDate(int)."}, {"name": "setHours", "parameters": [{"name": "hours", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setHours(int)."}, {"name": "setMinutes", "parameters": [{"name": "minutes", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setMinutes(int)."}, {"name": "setMonth", "parameters": [{"name": "month", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setMonth(int)."}, {"name": "setNanos", "parameters": [{"name": "nanoseconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Timestamp#setNanos(int)."}, {"name": "setSeconds", "parameters": [{"name": "seconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setSeconds(int)."}, {"name": "setTime", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Timestamp#setTime(long)."}, {"name": "setYear", "parameters": [{"name": "year", "type": "Integer"}], "result": "void", "description": "For documentation of this method, see \njava.sql.Date#setYear(int)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/html/sandbox-mode", "name": "SandboxMode", "type": "enum", "methods": [], "properties": [{"name": "EMULATED", "type": "Enum", "url": "", "description": "A legacy sandbox mode that emulates ECMAScript 5 strict mode using only the features available\nin ECMAScript 3. This mode was the default prior to February 2014.\n\n\nEMULATED was sunset as of December 10,\n2015. All scripts attempting use EMULATED will now use IFRAME instead.\n"}, {"name": "IFRAME", "type": "Enum", "url": "", "description": "A sandbox mode that uses iframe sandboxing instead of the Caja sandbox technology used by the\nEMULATED and NATIVE modes. This mode is the default for new scripts as of\nNovember 12, 2015 and for all scripts as of July 6, 2016.\n\nThis mode imposes many fewer restrictions than the other sandbox modes and runs fastest, but\ndoes not work at all in certain older browsers, including Internet Explorer 9.\n"}, {"name": "NATIVE", "type": "Enum", "url": "", "description": "A sandbox mode that is built on top of ECMAScript 5 strict mode. A sandbox mode built on top of\nECMAScript 5 strict mode. This mode was sunset as\nof July 6, 2016. All scripts now use IFRAME mode."}]},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc-array", "name": "JdbcArray", "type": "class", "methods": [{"name": "free", "parameters": [], "result": "void", "description": "For documentation of this method, see \njava.sql.Array#free()."}, {"name": "getArray", "parameters": [], "result": "Object", "description": "For documentation of this method, see \njava.sql.Array#getArray()"}, {"name": "getArray", "parameters": [{"name": "index", "type": "Integer"}, {"name": "count", "type": "Integer"}], "result": "Object", "description": "For documentation of this method, see \njava.sql.Array#getArray(long, int)."}, {"name": "getBaseType", "parameters": [], "result": "Integer", "description": "For documentation of this method, see \njava.sql.Array#getBaseType()."}, {"name": "getBaseTypeName", "parameters": [], "result": "String", "description": "For documentation of this method, see \njava.sql.Array#getBaseTypeName()."}, {"name": "getResultSet", "parameters": [], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Array#getResultSet()."}, {"name": "getResultSet", "parameters": [{"name": "index", "type": "Integer"}, {"name": "count", "type": "Integer"}], "result": "JdbcResultSet", "description": "For documentation of this method, see \njava.sql.Array#getResultSet(long, int)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/html/html-output-meta-tag", "name": "HtmlOutputMetaTag", "type": "class", "methods": [{"name": "getContent", "parameters": [], "result": "String", "description": "Gets the content of this meta tag."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this HtmlOutputMetaTag."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc", "name": "Jdbc", "type": "class", "methods": [{"name": "getCloudSqlConnection", "parameters": [{"name": "url", "type": "String"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given Google Cloud SQL URL."}, {"name": "getCloudSqlConnection", "parameters": [{"name": "url", "type": "String"}, {"name": "info", "type": "Object"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given Google Cloud SQL URL."}, {"name": "getCloudSqlConnection", "parameters": [{"name": "url", "type": "String"}, {"name": "userName", "type": "String"}, {"name": "password", "type": "String"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given Google Cloud SQL URL."}, {"name": "getConnection", "parameters": [{"name": "url", "type": "String"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given database URL."}, {"name": "getConnection", "parameters": [{"name": "url", "type": "String"}, {"name": "info", "type": "Object"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given database URL."}, {"name": "getConnection", "parameters": [{"name": "url", "type": "String"}, {"name": "userName", "type": "String"}, {"name": "password", "type": "String"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given database using a username and password."}, {"name": "newDate", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "JdbcDate", "description": "Create a date from milliseconds since epoch."}, {"name": "newTime", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "JdbcTime", "description": "Create a time from milliseconds since epoch."}, {"name": "newTimestamp", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "JdbcTimestamp", "description": "Create a timestamp from milliseconds since epoch."}, {"name": "parseDate", "parameters": [{"name": "date", "type": "String"}], "result": "JdbcDate", "description": "Create a date by parsing the SQL date string."}, {"name": "parseTime", "parameters": [{"name": "time", "type": "String"}], "result": "JdbcTime", "description": "Create a time by parsing the SQL time string."}, {"name": "parseTimestamp", "parameters": [{"name": "timestamp", "type": "String"}], "result": "JdbcTimestamp", "description": "Create a timestamp by parsing the SQL timestamp string."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/html/html-template", "name": "HtmlTemplate", "type": "class", "methods": [{"name": "evaluate", "parameters": [], "result": "HtmlOutput", "description": "Evaluates this template and returns an HtmlOutput object."}, {"name": "getCode", "parameters": [], "result": "String", "description": "Generates a string of JavaScript code, based on the template file, that can be evaluated."}, {"name": "getCodeWithComments", "parameters": [], "result": "String", "description": "Generates a string of JavaScript code that can be evaluated, with each line of the code\ncontaining the original line from the template as a comment."}, {"name": "getRawContent", "parameters": [], "result": "String", "description": "Returns the unprocessed content of this template."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/html/html-output", "name": "HtmlOutput", "type": "class", "methods": [{"name": "addMetaTag", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}], "result": "HtmlOutput", "description": "Adds a meta tag to the page."}, {"name": "append", "parameters": [{"name": "addedContent", "type": "String"}], "result": "HtmlOutput", "description": "Appends new content to the content of this HtmlOutput."}, {"name": "appendUntrusted", "parameters": [{"name": "addedContent", "type": "String"}], "result": "HtmlOutput", "description": "Appends new content to the content of this HtmlOutput, using contextual escaping."}, {"name": "asTemplate", "parameters": [], "result": "HtmlTemplate", "description": "Returns an HtmlTemplate backed by this HtmlOutput."}, {"name": "clear", "parameters": [], "result": "HtmlOutput", "description": "Clears the current content."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getContent", "parameters": [], "result": "String", "description": "Gets the content of this HtmlOutput."}, {"name": "getFaviconUrl", "parameters": [], "result": "String", "description": "Gets the URL for a favicon link tag added to the page by calling setFaviconUrl(iconUrl)."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Gets the initial height of the custom dialog in Google\nDocs, Sheets, or Forms."}, {"name": "getMetaTags", "parameters": [], "result": "HtmlOutputMetaTag[]", "description": "Gets an array of objects that represent meta tags added to the page by calling addMetaTag(name, content)."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the title of the output page."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Gets the initial width of the custom dialog in Google\nDocs, Sheets, or Forms."}, {"name": "setContent", "parameters": [{"name": "content", "type": "String"}], "result": "HtmlOutput", "description": "Sets the content of this HtmlOutput."}, {"name": "setFaviconUrl", "parameters": [{"name": "iconUrl", "type": "String"}], "result": "HtmlOutput", "description": "Adds a link tag for a favicon to the page."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Integer"}], "result": "HtmlOutput", "description": "Sets the initial height of the custom dialog in Google\nDocs, Sheets, or Forms."}, {"name": "setSandboxMode", "parameters": [{"name": "mode", "type": "SandboxMode"}], "result": "HtmlOutput", "description": "This method now has no effect \u2014 previously it set the sandbox\nmode used for client-side scripts."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "HtmlOutput", "description": "Sets the title of the output page."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "HtmlOutput", "description": "Sets the initial width of a custom dialog in Google\nDocs, Sheets, or Forms."}, {"name": "setXFrameOptionsMode", "parameters": [{"name": "mode", "type": "XFrameOptionsMode"}], "result": "HtmlOutput", "description": "Sets the state of the page's X-Frame-Options header, which controls clickjacking\nprevention."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/html", "name": "HTML", "type": "html", "methods": [{"name": "addMetaTag", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}], "result": "HtmlOutput", "description": "Adds a meta tag to the page."}, {"name": "append", "parameters": [{"name": "addedContent", "type": "String"}], "result": "HtmlOutput", "description": "Appends new content to the content of this HtmlOutput."}, {"name": "appendUntrusted", "parameters": [{"name": "addedContent", "type": "String"}], "result": "HtmlOutput", "description": "Appends new content to the content of this HtmlOutput, using contextual escaping."}, {"name": "asTemplate", "parameters": [], "result": "HtmlTemplate", "description": "Returns an HtmlTemplate backed by this HtmlOutput."}, {"name": "clear", "parameters": [], "result": "HtmlOutput", "description": "Clears the current content."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getContent", "parameters": [], "result": "String", "description": "Gets the content of this HtmlOutput."}, {"name": "getFaviconUrl", "parameters": [], "result": "String", "description": "Gets the URL for a favicon link tag added to the page by calling setFaviconUrl(iconUrl)."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Gets the initial height of the custom dialog in Google\nDocs, Sheets, or Forms."}, {"name": "getMetaTags", "parameters": [], "result": "HtmlOutputMetaTag[]", "description": "Gets an array of objects that represent meta tags added to the page by calling addMetaTag(name, content)."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the title of the output page."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Gets the initial width of the custom dialog in Google\nDocs, Sheets, or Forms."}, {"name": "setContent", "parameters": [{"name": "content", "type": "String"}], "result": "HtmlOutput", "description": "Sets the content of this HtmlOutput."}, {"name": "setFaviconUrl", "parameters": [{"name": "iconUrl", "type": "String"}], "result": "HtmlOutput", "description": "Adds a link tag for a favicon to the page."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Integer"}], "result": "HtmlOutput", "description": "Sets the initial height of the custom dialog in Google\nDocs, Sheets, or Forms."}, {"name": "setSandboxMode", "parameters": [{"name": "mode", "type": "SandboxMode"}], "result": "HtmlOutput", "description": "This method now has no effect \u2014 previously it set the sandbox\nmode used for client-side scripts."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "HtmlOutput", "description": "Sets the title of the output page."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "HtmlOutput", "description": "Sets the initial width of a custom dialog in Google\nDocs, Sheets, or Forms."}, {"name": "setXFrameOptionsMode", "parameters": [{"name": "mode", "type": "XFrameOptionsMode"}], "result": "HtmlOutput", "description": "Sets the state of the page's X-Frame-Options header, which controls clickjacking\nprevention."}, {"name": "getContent", "parameters": [], "result": "String", "description": "Gets the content of this meta tag."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this HtmlOutputMetaTag."}, {"name": "createHtmlOutput", "parameters": [], "result": "HtmlOutput", "description": "Creates a new HtmlOutput object that can be returned from the script."}, {"name": "createHtmlOutput", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "HtmlOutput", "description": "Creates a new HtmlOutput object from a BlobSource resource."}, {"name": "createHtmlOutput", "parameters": [{"name": "html", "type": "String"}], "result": "HtmlOutput", "description": "Creates a new HtmlOutput object that can be returned from the script."}, {"name": "createHtmlOutputFromFile", "parameters": [{"name": "filename", "type": "String"}], "result": "HtmlOutput", "description": "Creates a new HtmlOutput object from a file in the code editor."}, {"name": "createTemplate", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "HtmlTemplate", "description": "Creates a new HtmlTemplate object from a BlobSource resource."}, {"name": "createTemplate", "parameters": [{"name": "html", "type": "String"}], "result": "HtmlTemplate", "description": "Creates a new HtmlTemplate object that can be returned from the script."}, {"name": "createTemplateFromFile", "parameters": [{"name": "filename", "type": "String"}], "result": "HtmlTemplate", "description": "Creates a new HtmlTemplate object from a file in the code editor."}, {"name": "getUserAgent", "parameters": [], "result": "String", "description": "Gets the user-agent string for the current browser."}, {"name": "evaluate", "parameters": [], "result": "HtmlOutput", "description": "Evaluates this template and returns an HtmlOutput object."}, {"name": "getCode", "parameters": [], "result": "String", "description": "Generates a string of JavaScript code, based on the template file, that can be evaluated."}, {"name": "getCodeWithComments", "parameters": [], "result": "String", "description": "Generates a string of JavaScript code that can be evaluated, with each line of the code\ncontaining the original line from the template as a comment."}, {"name": "getRawContent", "parameters": [], "result": "String", "description": "Returns the unprocessed content of this template."}], "properties": [{"name": "SandboxMode", "type": "SandboxMode", "url": "/apps-script/reference/html/sandbox-mode", "description": "An enum representing the sandbox modes that can be used for client-side HtmlService\nscripts."}, {"name": "XFrameOptionsMode", "type": "XFrameOptionsMode", "url": "/apps-script/reference/html/x-frame-options-mode", "description": "An enum representing the X-Frame-Options modes that can be used for client-side HtmlService scripts."}, {"name": "EMULATED", "type": "Enum", "url": "", "description": "A legacy sandbox mode that emulates ECMAScript 5 strict mode using only the features available\nin ECMAScript 3."}, {"name": "IFRAME", "type": "Enum", "url": "", "description": "A sandbox mode that uses iframe sandboxing instead of the Caja sandbox technology used by the\nEMULATED and NATIVE modes."}, {"name": "NATIVE", "type": "Enum", "url": "", "description": "A sandbox mode that is built on top of ECMAScript 5 strict mode."}, {"name": "ALLOWALL", "type": "Enum", "url": "", "description": "No X-Frame-Options header will be set."}, {"name": "DEFAULT", "type": "Enum", "url": "", "description": "Sets the default value for the X-Frame-Options header, which preserves normal security\nassumptions."}]},
{"url": "https://developers.google.com/apps-script/reference/html/html-service", "name": "HtmlService", "type": "class", "methods": [{"name": "createHtmlOutput", "parameters": [], "result": "HtmlOutput", "description": "Creates a new HtmlOutput object that can be returned from the script."}, {"name": "createHtmlOutput", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "HtmlOutput", "description": "Creates a new HtmlOutput object from a BlobSource resource."}, {"name": "createHtmlOutput", "parameters": [{"name": "html", "type": "String"}], "result": "HtmlOutput", "description": "Creates a new HtmlOutput object that can be returned from the script."}, {"name": "createHtmlOutputFromFile", "parameters": [{"name": "filename", "type": "String"}], "result": "HtmlOutput", "description": "Creates a new HtmlOutput object from a file in the code editor."}, {"name": "createTemplate", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "HtmlTemplate", "description": "Creates a new HtmlTemplate object from a BlobSource resource."}, {"name": "createTemplate", "parameters": [{"name": "html", "type": "String"}], "result": "HtmlTemplate", "description": "Creates a new HtmlTemplate object that can be returned from the script."}, {"name": "createTemplateFromFile", "parameters": [{"name": "filename", "type": "String"}], "result": "HtmlTemplate", "description": "Creates a new HtmlTemplate object from a file in the code editor."}, {"name": "getUserAgent", "parameters": [], "result": "String", "description": "Gets the user-agent string for the current browser."}], "properties": [{"name": "SandboxMode", "type": "SandboxMode", "url": "/apps-script/reference/html/sandbox-mode", "description": "An enum representing the sandbox modes that can be used for client-side HtmlService\nscripts."}, {"name": "XFrameOptionsMode", "type": "XFrameOptionsMode", "url": "/apps-script/reference/html/x-frame-options-mode", "description": "An enum representing the X-Frame-Options modes that can be used for client-side HtmlService scripts."}]},
{"url": "https://developers.google.com/apps-script/reference/content/mime-type", "name": "MimeType", "type": "enum", "methods": [], "properties": [{"name": "ATOM", "type": "Enum", "url": "", "description": ""}, {"name": "CSV", "type": "Enum", "url": "", "description": ""}, {"name": "ICAL", "type": "Enum", "url": "", "description": ""}, {"name": "JAVASCRIPT", "type": "Enum", "url": "", "description": ""}, {"name": "JSON", "type": "Enum", "url": "", "description": ""}, {"name": "RSS", "type": "Enum", "url": "", "description": ""}, {"name": "TEXT", "type": "Enum", "url": "", "description": ""}, {"name": "VCARD", "type": "Enum", "url": "", "description": ""}, {"name": "XML", "type": "Enum", "url": "", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/content/content-service", "name": "ContentService", "type": "class", "methods": [{"name": "createTextOutput", "parameters": [], "result": "TextOutput", "description": "Create a new TextOutput object."}, {"name": "createTextOutput", "parameters": [{"name": "content", "type": "String"}], "result": "TextOutput", "description": "Create a new TextOutput object that can serve the given content."}], "properties": [{"name": "MimeType", "type": "MimeType", "url": "/apps-script/reference/content/mime-type", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/content", "name": "Content", "type": "content", "methods": [{"name": "createTextOutput", "parameters": [], "result": "TextOutput", "description": "Create a new TextOutput object."}, {"name": "createTextOutput", "parameters": [{"name": "content", "type": "String"}], "result": "TextOutput", "description": "Create a new TextOutput object that can serve the given content."}, {"name": "append", "parameters": [{"name": "addedContent", "type": "String"}], "result": "TextOutput", "description": "Appends new content to the content that will be served."}, {"name": "clear", "parameters": [], "result": "TextOutput", "description": "Clears the current content."}, {"name": "downloadAsFile", "parameters": [{"name": "filename", "type": "String"}], "result": "TextOutput", "description": "Tells browsers to download rather than display this content."}, {"name": "getContent", "parameters": [], "result": "String", "description": "Gets the content that will be served."}, {"name": "getFileName", "parameters": [], "result": "String", "description": "Returns the file name to download this file as, or null if it should be displayed rather than\ndownloaded."}, {"name": "getMimeType", "parameters": [], "result": "MimeType", "description": "Get the mime type this content will be served with."}, {"name": "setContent", "parameters": [{"name": "content", "type": "String"}], "result": "TextOutput", "description": "Sets the content that will be served."}, {"name": "setMimeType", "parameters": [{"name": "mimeType", "type": "MimeType"}], "result": "TextOutput", "description": "Sets the mime type for content that will be served."}], "properties": [{"name": "MimeType", "type": "MimeType", "url": "/apps-script/reference/content/mime-type", "description": ""}, {"name": "ATOM", "type": "Enum", "url": "", "description": ""}, {"name": "CSV", "type": "Enum", "url": "", "description": ""}, {"name": "ICAL", "type": "Enum", "url": "", "description": ""}, {"name": "JAVASCRIPT", "type": "Enum", "url": "", "description": ""}, {"name": "JSON", "type": "Enum", "url": "", "description": ""}, {"name": "RSS", "type": "Enum", "url": "", "description": ""}, {"name": "TEXT", "type": "Enum", "url": "", "description": ""}, {"name": "VCARD", "type": "Enum", "url": "", "description": ""}, {"name": "XML", "type": "Enum", "url": "", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/conference-data/entry-point-type", "name": "EntryPointType", "type": "enum", "methods": [], "properties": [{"name": "VIDEO", "type": "Enum", "url": "", "description": "A video entry point for a conference. A conference can have zero or one VIDEO entry\npoints."}, {"name": "PHONE", "type": "Enum", "url": "", "description": "A phone entry point for a conference. A conference can have zero or more PHONE entry\npoints."}, {"name": "MORE", "type": "Enum", "url": "", "description": "A link to more information about entry points into a conference. A conference can have zero or\none MORE entry points. A conference with only a MORE entry point is not valid."}, {"name": "SIP", "type": "Enum", "url": "", "description": "A SIP entry point for a conference. A conference can have zero or one SIP entry points."}]},
{"url": "https://developers.google.com/apps-script/reference/conference-data/entry-point-feature", "name": "EntryPointFeature", "type": "enum", "methods": [], "properties": [{"name": "UNKNOWN_FEATURE", "type": "Enum", "url": "", "description": "Do not use. Here only as a default value for compatibility reasons."}, {"name": "TOLL", "type": "Enum", "url": "", "description": "Applies to PHONE entry point only. A call to a toll number is charged to the calling party. A\nnumber can't be toll and toll-free at the same time."}, {"name": "TOLL_FREE", "type": "Enum", "url": "", "description": "Applies to PHONE entry point only. For the calling party, a call to a toll-free number is free\nof charge. A number can't be toll and toll-free at the same time."}]},
{"url": "https://developers.google.com/apps-script/reference/content/text-output", "name": "TextOutput", "type": "class", "methods": [{"name": "append", "parameters": [{"name": "addedContent", "type": "String"}], "result": "TextOutput", "description": "Appends new content to the content that will be served."}, {"name": "clear", "parameters": [], "result": "TextOutput", "description": "Clears the current content."}, {"name": "downloadAsFile", "parameters": [{"name": "filename", "type": "String"}], "result": "TextOutput", "description": "Tells browsers to download rather than display this content."}, {"name": "getContent", "parameters": [], "result": "String", "description": "Gets the content that will be served."}, {"name": "getFileName", "parameters": [], "result": "String", "description": "Returns the file name to download this file as, or null if it should be displayed rather than\ndownloaded."}, {"name": "getMimeType", "parameters": [], "result": "MimeType", "description": "Get the mime type this content will be served with."}, {"name": "setContent", "parameters": [{"name": "content", "type": "String"}], "result": "TextOutput", "description": "Sets the content that will be served."}, {"name": "setMimeType", "parameters": [{"name": "mimeType", "type": "MimeType"}], "result": "TextOutput", "description": "Sets the mime type for content that will be served."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/conference-data/entry-point", "name": "EntryPoint", "type": "class", "methods": [{"name": "addFeature", "parameters": [{"name": "feature", "type": "EntryPointFeature"}], "result": "EntryPoint", "description": "Adds the feature of the entry point, such as being toll or toll-free."}, {"name": "setAccessCode", "parameters": [{"name": "accessCode", "type": "String"}], "result": "EntryPoint", "description": "An access code for accessing the conference."}, {"name": "setEntryPointType", "parameters": [{"name": "entryPointType", "type": "EntryPointType"}], "result": "EntryPoint", "description": "Sets the type of this entry point."}, {"name": "setMeetingCode", "parameters": [{"name": "meetingCode", "type": "String"}], "result": "EntryPoint", "description": "A meeting code for accessing the conference."}, {"name": "setPasscode", "parameters": [{"name": "passcode", "type": "String"}], "result": "EntryPoint", "description": "A passcode for accessing the conference."}, {"name": "setPassword", "parameters": [{"name": "password", "type": "String"}], "result": "EntryPoint", "description": "A password code for accessing the conference."}, {"name": "setPin", "parameters": [{"name": "pin", "type": "String"}], "result": "EntryPoint", "description": "A PIN code for accessing the conference."}, {"name": "setRegionCode", "parameters": [{"name": "regionCode", "type": "String"}], "result": "EntryPoint", "description": "The CLDR/ISO 3166 region code for the country associated with this entry point."}, {"name": "setUri", "parameters": [{"name": "uri", "type": "String"}], "result": "EntryPoint", "description": "Sets the URI for joining the conference through this entry point."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/chart-merge-strategy.html", "name": "ChartMergeStrategy", "type": "enum", "methods": [], "properties": [{"name": "MERGE_COLUMNS", "type": "Enum", "url": "", "description": "Default. Charts merges the columns of multiple ranges."}, {"name": "MERGE_ROWS", "type": "Enum", "url": "", "description": "Charts merges the rows of multiple ranges."}]},
{"url": "https://developers.google.com/apps-script/reference/charts/chart-options.html", "name": "ChartOptions", "type": "class", "methods": [{"name": "get", "parameters": [{"name": "option", "type": "String"}], "result": "Object", "description": "Returns a configured option for this chart."}, {"name": "getOrDefault", "parameters": [{"name": "option", "type": "String"}], "result": "Object", "description": "Returns a configured option for this chart."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/conference-data/conference-error-type", "name": "ConferenceErrorType", "type": "enum", "methods": [], "properties": [{"name": "AUTHENTICATION", "type": "Enum", "url": "", "description": "An authentication error during conference data generation."}, {"name": "CONFERENCE_SOLUTION_FORBIDDEN", "type": "Enum", "url": "", "description": "The user is not allowed to use the selected conference solution (but might be allowed to use\nother solutions offered by the add-on)."}, {"name": "PERMANENT", "type": "Enum", "url": "", "description": "A permanent error during conference data generation."}, {"name": "PERMISSION_DENIED", "type": "Enum", "url": "", "description": "The user isn't allowed to perform an action in the third-party conferencing system."}, {"name": "TEMPORARY", "type": "Enum", "url": "", "description": "A temporary error during conference data generation."}, {"name": "UNKNOWN", "type": "Enum", "url": "", "description": "An unknown error during conference data generation."}]},
{"url": "https://developers.google.com/apps-script/reference/charts/chart-hidden-dimension-strategy.html", "name": "ChartHiddenDimensionStrategy", "type": "enum", "methods": [], "properties": [{"name": "IGNORE_BOTH", "type": "Enum", "url": "", "description": "Default; charts skips any hidden columns and hidden rows."}, {"name": "IGNORE_ROWS", "type": "Enum", "url": "", "description": "Charts skips hidden rows only."}, {"name": "IGNORE_COLUMNS", "type": "Enum", "url": "", "description": "Charts skips hidden columns only."}, {"name": "SHOW_BOTH", "type": "Enum", "url": "", "description": "Charts does not skip hidden columns or hidden rows."}]},
{"url": "https://developers.google.com/apps-script/reference/conference-data/conference-error", "name": "ConferenceError", "type": "class", "methods": [{"name": "setAuthenticationUrl", "parameters": [{"name": "authenticationUrl", "type": "String"}], "result": "ConferenceError", "description": "If the error type is AUTHENTICATION, the add-on must\nprovide a URL calling back into the add-on to allow users to log in."}, {"name": "setConferenceErrorType", "parameters": [{"name": "conferenceErrorType", "type": "ConferenceErrorType"}], "result": "ConferenceError", "description": "Sets the error type of this ConferenceError."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/conference-data/conference-data-builder", "name": "ConferenceDataBuilder", "type": "class", "methods": [{"name": "addConferenceParameter", "parameters": [{"name": "conferenceParameter", "type": "ConferenceParameter"}], "result": "ConferenceDataBuilder", "description": "Adds a ConferenceParameter to this ConferenceData."}, {"name": "addEntryPoint", "parameters": [{"name": "entryPoint", "type": "EntryPoint"}], "result": "ConferenceDataBuilder", "description": "Adds an EntryPoint to this ConferenceData."}, {"name": "build", "parameters": [], "result": "ConferenceData", "description": "Builds and validates the ConferenceData."}, {"name": "setConferenceId", "parameters": [{"name": "conferenceId", "type": "String"}], "result": "ConferenceDataBuilder", "description": "Sets the conference ID of this ConferenceData."}, {"name": "setConferenceSolutionId", "parameters": [{"name": "conferenceSolutionId", "type": "String"}], "result": "ConferenceDataBuilder", "description": "Sets the conference solution ID defined in the addon's manifest."}, {"name": "setError", "parameters": [{"name": "conferenceError", "type": "ConferenceError"}], "result": "ConferenceDataBuilder", "description": "Sets the ConferenceError of this ConferenceData, indicating that the conference\nwas not successfully created."}, {"name": "setNotes", "parameters": [{"name": "notes", "type": "String"}], "result": "ConferenceDataBuilder", "description": "Sets the additional notes of this ConferenceData, such as instructions from the\nadministrator or legal notices."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/utilities/utilities.html#newBlob(Byte)", "name": "Utilities", "type": "class", "methods": [{"name": "base64Decode", "parameters": [{"name": "encoded", "type": "String"}], "result": "Byte[]", "description": "Decodes a base-64 encoded string into a UTF-8 byte array."}, {"name": "base64Decode", "parameters": [{"name": "encoded", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Decodes a base-64 encoded string into a byte array in a specific character set."}, {"name": "base64DecodeWebSafe", "parameters": [{"name": "encoded", "type": "String"}], "result": "Byte[]", "description": "Decodes a base-64 web-safe encoded string into a UTF-8 byte array."}, {"name": "base64DecodeWebSafe", "parameters": [{"name": "encoded", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Decodes a base-64 web-safe encoded string into a byte array in a specific character set."}, {"name": "base64Encode", "parameters": [{"name": "data", "type": "Byte"}], "result": "String", "description": "Generates a base-64 encoded string from the given byte array."}, {"name": "base64Encode", "parameters": [{"name": "data", "type": "String"}], "result": "String", "description": "Generates a base-64 encoded string from the given string."}, {"name": "base64Encode", "parameters": [{"name": "data", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "String", "description": "Generates a base-64 encoded string from the given string in a specific character set."}, {"name": "base64EncodeWebSafe", "parameters": [{"name": "data", "type": "Byte"}], "result": "String", "description": "Generates a base-64 web-safe encoded string from the given byte array."}, {"name": "base64EncodeWebSafe", "parameters": [{"name": "data", "type": "String"}], "result": "String", "description": "Generates a base-64 web-safe encoded string from the given string."}, {"name": "base64EncodeWebSafe", "parameters": [{"name": "data", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "String", "description": "Generates a base-64 web-safe encoded string from the given string in a specific character set."}, {"name": "computeDigest", "parameters": [{"name": "algorithm", "type": "DigestAlgorithm"}, {"name": "value", "type": "Byte"}], "result": "Byte[]", "description": "Compute a digest using the specified algorithm on the specified Byte[] value."}, {"name": "computeDigest", "parameters": [{"name": "algorithm", "type": "DigestAlgorithm"}, {"name": "value", "type": "String"}], "result": "Byte[]", "description": "Compute a digest using the specified algorithm on the specified String value."}, {"name": "computeDigest", "parameters": [{"name": "algorithm", "type": "DigestAlgorithm"}, {"name": "value", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Compute a digest using the specified algorithm on the specified String value with the\ngiven character set."}, {"name": "computeHmacSha256Signature", "parameters": [{"name": "value", "type": "Byte"}, {"name": "key", "type": "Byte"}], "result": "Byte[]", "description": "Signs the provided value using HMAC-SHA256 with the given key."}, {"name": "computeHmacSha256Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Signs the provided value using HMAC-SHA256 with the given key."}, {"name": "computeHmacSha256Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Signs the provided value using HMAC-SHA256 with the given key and character set."}, {"name": "computeHmacSignature", "parameters": [{"name": "algorithm", "type": "MacAlgorithm"}, {"name": "value", "type": "Byte"}, {"name": "key", "type": "Byte"}], "result": "Byte[]", "description": "Compute a message authentication code using the specified algorithm on the specified key and\nvalue."}, {"name": "computeHmacSignature", "parameters": [{"name": "algorithm", "type": "MacAlgorithm"}, {"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Compute a message authentication code using the specified algorithm on the specified key and\nvalue."}, {"name": "computeHmacSignature", "parameters": [{"name": "algorithm", "type": "MacAlgorithm"}, {"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Compute a message authentication code using the specified algorithm on the specified key and\nvalue."}, {"name": "computeRsaSha1Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Signs the provided value using RSA-SHA1 with the given key."}, {"name": "computeRsaSha1Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Signs the provided value using RSA-SHA1 with the given key and charset."}, {"name": "computeRsaSha256Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Signs the provided value using RSA-SHA256 with the given key."}, {"name": "computeRsaSha256Signature", "parameters": [{"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Signs the provided value using RSA-SHA256 with the given key."}, {"name": "computeRsaSignature", "parameters": [{"name": "algorithm", "type": "RsaAlgorithm"}, {"name": "value", "type": "String"}, {"name": "key", "type": "String"}], "result": "Byte[]", "description": "Signs the provided value using the specified RSA algorithm with the given key."}, {"name": "computeRsaSignature", "parameters": [{"name": "algorithm", "type": "RsaAlgorithm"}, {"name": "value", "type": "String"}, {"name": "key", "type": "String"}, {"name": "charset", "type": "Charset"}], "result": "Byte[]", "description": "Signs the provided value using the specified RSA algorithm with the given key and charset."}, {"name": "formatDate", "parameters": [{"name": "date", "type": "Date"}, {"name": "timeZone", "type": "String"}, {"name": "format", "type": "String"}], "result": "String", "description": "Formats date according to specification described in Java SE SimpleDateFormat class."}, {"name": "formatString", "parameters": [{"name": "template", "type": "String"}, {"name": "args", "type": "Object..."}], "result": "String", "description": "Performs sprintf-like string formatting using '%'-style format strings."}, {"name": "getUuid", "parameters": [], "result": "String", "description": "Get a UUID as a string (equivalent to using the java.util.UUID.randomUUID() method)."}, {"name": "gzip", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Blob", "description": "gzip-compresses the provided Blob data and returns it in a new Blob object."}, {"name": "gzip", "parameters": [{"name": "blob", "type": "BlobSource"}, {"name": "name", "type": "String"}], "result": "Blob", "description": "gzip-compresses the provided Blob data and returns it in a new Blob object."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "Byte"}], "result": "Blob", "description": "Create a new Blob object from a byte array."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "Byte"}, {"name": "contentType", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a byte array and content type."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "Byte"}, {"name": "contentType", "type": "String"}, {"name": "name", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a byte array, content type, and name."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a string."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "String"}, {"name": "contentType", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a string and content type."}, {"name": "newBlob", "parameters": [{"name": "data", "type": "String"}, {"name": "contentType", "type": "String"}, {"name": "name", "type": "String"}], "result": "Blob", "description": "Create a new Blob object from a string, content type, and name."}, {"name": "parseCsv", "parameters": [{"name": "csv", "type": "String"}], "result": "String[][]", "description": "Returns a tabular 2D array representation of a CSV string."}, {"name": "parseCsv", "parameters": [{"name": "csv", "type": "String"}, {"name": "delimiter", "type": "Char"}], "result": "String[][]", "description": "Returns a tabular 2D array representation of a CSV string using a custom delimiter."}, {"name": "sleep", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "void", "description": "Sleeps for specified number of milliseconds."}, {"name": "ungzip", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Blob", "description": "Uncompresses a Blob object and returns a Blob containing the uncompressed\ndata."}, {"name": "unzip", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Blob[]", "description": "Takes a Blob representing a zip file and returns its component files."}, {"name": "zip", "parameters": [{"name": "blobs", "type": "BlobSource"}], "result": "Blob", "description": "Creates a new Blob object that is a zip file containing the data from the Blobs passed in."}, {"name": "zip", "parameters": [{"name": "blobs", "type": "BlobSource"}, {"name": "name", "type": "String"}], "result": "Blob", "description": "Creates a new Blob object that is a zip file containing the data from the Blobs passed in."}], "properties": [{"name": "Charset", "type": "Charset", "url": "/apps-script/reference/utilities/charset", "description": ""}, {"name": "DigestAlgorithm", "type": "DigestAlgorithm", "url": "/apps-script/reference/utilities/digest-algorithm", "description": ""}, {"name": "MacAlgorithm", "type": "MacAlgorithm", "url": "/apps-script/reference/utilities/mac-algorithm", "description": ""}, {"name": "RsaAlgorithm", "type": "RsaAlgorithm", "url": "/apps-script/reference/utilities/rsa-algorithm", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/conference-data/conference-data-service", "name": "ConferenceDataService", "type": "class", "methods": [{"name": "newConferenceDataBuilder", "parameters": [], "result": "ConferenceDataBuilder", "description": "Returns a new, empty ConferenceDataBuilder."}, {"name": "newConferenceError", "parameters": [], "result": "ConferenceError", "description": "Returns a new, empty ConferenceError."}, {"name": "newConferenceParameter", "parameters": [], "result": "ConferenceParameter", "description": "Returns a new, empty ConferenceParameter."}, {"name": "newEntryPoint", "parameters": [], "result": "EntryPoint", "description": "Returns a new, empty EntryPoint."}], "properties": [{"name": "ConferenceErrorType", "type": "ConferenceErrorType", "url": "/apps-script/reference/conference-data/conference-error-type", "description": "The ConferenceErrorType enumeration."}, {"name": "EntryPointFeature", "type": "EntryPointFeature", "url": "/apps-script/reference/conference-data/entry-point-feature", "description": "The EntryPointFeature enumeration."}, {"name": "EntryPointType", "type": "EntryPointType", "url": "/apps-script/reference/conference-data/entry-point-type", "description": "The EntryPointType enumeration."}]},
{"url": "https://developers.google.com/apps-script/reference/conference-data/conference-data", "name": "ConferenceData", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/conference-data/conference-parameter", "name": "ConferenceParameter", "type": "class", "methods": [{"name": "setKey", "parameters": [{"name": "key", "type": "String"}], "result": "ConferenceParameter", "description": "Sets the key of this ConferenceParameter."}, {"name": "setValue", "parameters": [{"name": "value", "type": "String"}], "result": "ConferenceParameter", "description": "Sets the value of this ConferenceParameter."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/conference-data", "name": "Conference Data", "type": "conference", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "addConferenceParameter", "parameters": [{"name": "conferenceParameter", "type": "ConferenceParameter"}], "result": "ConferenceDataBuilder", "description": "Adds a ConferenceParameter to this ConferenceData."}, {"name": "addEntryPoint", "parameters": [{"name": "entryPoint", "type": "EntryPoint"}], "result": "ConferenceDataBuilder", "description": "Adds an EntryPoint to this ConferenceData."}, {"name": "build", "parameters": [], "result": "ConferenceData", "description": "Builds and validates the ConferenceData."}, {"name": "setConferenceId", "parameters": [{"name": "conferenceId", "type": "String"}], "result": "ConferenceDataBuilder", "description": "Sets the conference ID of this ConferenceData."}, {"name": "setConferenceSolutionId", "parameters": [{"name": "conferenceSolutionId", "type": "String"}], "result": "ConferenceDataBuilder", "description": "Sets the conference solution ID defined in the addon's manifest."}, {"name": "setError", "parameters": [{"name": "conferenceError", "type": "ConferenceError"}], "result": "ConferenceDataBuilder", "description": "Sets the ConferenceError of this ConferenceData, indicating that the conference\nwas not successfully created."}, {"name": "setNotes", "parameters": [{"name": "notes", "type": "String"}], "result": "ConferenceDataBuilder", "description": "Sets the additional notes of this ConferenceData, such as instructions from the\nadministrator or legal notices."}, {"name": "newConferenceDataBuilder", "parameters": [], "result": "ConferenceDataBuilder", "description": "Returns a new, empty ConferenceDataBuilder."}, {"name": "newConferenceError", "parameters": [], "result": "ConferenceError", "description": "Returns a new, empty ConferenceError."}, {"name": "newConferenceParameter", "parameters": [], "result": "ConferenceParameter", "description": "Returns a new, empty ConferenceParameter."}, {"name": "newEntryPoint", "parameters": [], "result": "EntryPoint", "description": "Returns a new, empty EntryPoint."}, {"name": "setAuthenticationUrl", "parameters": [{"name": "authenticationUrl", "type": "String"}], "result": "ConferenceError", "description": "If the error type is AUTHENTICATION, the add-on must\nprovide a URL calling back into the add-on to allow users to log in."}, {"name": "setConferenceErrorType", "parameters": [{"name": "conferenceErrorType", "type": "ConferenceErrorType"}], "result": "ConferenceError", "description": "Sets the error type of this ConferenceError."}, {"name": "setKey", "parameters": [{"name": "key", "type": "String"}], "result": "ConferenceParameter", "description": "Sets the key of this ConferenceParameter."}, {"name": "setValue", "parameters": [{"name": "value", "type": "String"}], "result": "ConferenceParameter", "description": "Sets the value of this ConferenceParameter."}, {"name": "addFeature", "parameters": [{"name": "feature", "type": "EntryPointFeature"}], "result": "EntryPoint", "description": "Adds the feature of the entry point, such as being toll or toll-free."}, {"name": "setAccessCode", "parameters": [{"name": "accessCode", "type": "String"}], "result": "EntryPoint", "description": "An access code for accessing the conference."}, {"name": "setEntryPointType", "parameters": [{"name": "entryPointType", "type": "EntryPointType"}], "result": "EntryPoint", "description": "Sets the type of this entry point."}, {"name": "setMeetingCode", "parameters": [{"name": "meetingCode", "type": "String"}], "result": "EntryPoint", "description": "A meeting code for accessing the conference."}, {"name": "setPasscode", "parameters": [{"name": "passcode", "type": "String"}], "result": "EntryPoint", "description": "A passcode for accessing the conference."}, {"name": "setPassword", "parameters": [{"name": "password", "type": "String"}], "result": "EntryPoint", "description": "A password code for accessing the conference."}, {"name": "setPin", "parameters": [{"name": "pin", "type": "String"}], "result": "EntryPoint", "description": "A PIN code for accessing the conference."}, {"name": "setRegionCode", "parameters": [{"name": "regionCode", "type": "String"}], "result": "EntryPoint", "description": "The CLDR/ISO 3166 region code for the country associated with this entry point."}, {"name": "setUri", "parameters": [{"name": "uri", "type": "String"}], "result": "EntryPoint", "description": "Sets the URI for joining the conference through this entry point."}], "properties": [{"name": "ConferenceErrorType", "type": "ConferenceErrorType", "url": "/apps-script/reference/conference-data/conference-error-type", "description": "The ConferenceErrorType enumeration."}, {"name": "EntryPointFeature", "type": "EntryPointFeature", "url": "/apps-script/reference/conference-data/entry-point-feature", "description": "The EntryPointFeature enumeration."}, {"name": "EntryPointType", "type": "EntryPointType", "url": "/apps-script/reference/conference-data/entry-point-type", "description": "The EntryPointType enumeration."}, {"name": "AUTHENTICATION", "type": "Enum", "url": "", "description": "An authentication error during conference data generation."}, {"name": "CONFERENCE_SOLUTION_FORBIDDEN", "type": "Enum", "url": "", "description": "The user is not allowed to use the selected conference solution (but might be allowed to use\nother solutions offered by the add-on)."}, {"name": "PERMANENT", "type": "Enum", "url": "", "description": "A permanent error during conference data generation."}, {"name": "PERMISSION_DENIED", "type": "Enum", "url": "", "description": "The user isn't allowed to perform an action in the third-party conferencing system."}, {"name": "TEMPORARY", "type": "Enum", "url": "", "description": "A temporary error during conference data generation."}, {"name": "UNKNOWN", "type": "Enum", "url": "", "description": "An unknown error during conference data generation."}, {"name": "UNKNOWN_FEATURE", "type": "Enum", "url": "", "description": "Do not use."}, {"name": "TOLL", "type": "Enum", "url": "", "description": "Applies to PHONE entry point only."}, {"name": "TOLL_FREE", "type": "Enum", "url": "", "description": "Applies to PHONE entry point only."}, {"name": "VIDEO", "type": "Enum", "url": "", "description": "A video entry point for a conference."}, {"name": "PHONE", "type": "Enum", "url": "", "description": "A phone entry point for a conference."}, {"name": "MORE", "type": "Enum", "url": "", "description": "A link to more information about entry points into a conference."}, {"name": "SIP", "type": "Enum", "url": "", "description": "A SIP entry point for a conference."}]},
{"url": "https://developers.google.com/apps-script/reference/url-fetch/url-fetch-app.html", "name": "UrlFetchApp", "type": "class", "methods": [{"name": "fetch", "parameters": [{"name": "url", "type": "String"}], "result": "HTTPResponse", "description": "Makes a request to fetch a URL."}, {"name": "fetch", "parameters": [{"name": "url", "type": "String"}, {"name": "params", "type": "Object"}], "result": "HTTPResponse", "description": "Makes a request to fetch a URL using optional advanced parameters."}, {"name": "fetchAll", "parameters": [{"name": "requests", "type": "Object"}], "result": "HTTPResponse[]", "description": "Makes multiple requests to fetch multiple URLs using optional advanced parameters."}, {"name": "getRequest", "parameters": [{"name": "url", "type": "String"}], "result": "Object", "description": "Returns the request that is made if the operation was invoked."}, {"name": "getRequest", "parameters": [{"name": "url", "type": "String"}, {"name": "params", "type": "Object"}], "result": "Object", "description": "Returns the request that is made if the operation were invoked."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/picker-values-layout", "name": "PickerValuesLayout", "type": "enum", "methods": [], "properties": [{"name": "ASIDE", "type": "Enum", "url": "", "description": "Selected values display in a single text line next to the value picker widget."}, {"name": "BELOW", "type": "Enum", "url": "", "description": "Selected values display in a single text line below the widget."}, {"name": "BELOW_WRAPPING", "type": "Enum", "url": "", "description": "Similar to below, but entries that cannot fit in the picker wrap to a new line."}, {"name": "BELOW_STACKED", "type": "Enum", "url": "", "description": "Selected values display in a column below the widget."}]},
{"url": "https://developers.google.com/apps-script/reference/charts/position", "name": "Position", "type": "enum", "methods": [], "properties": [{"name": "TOP", "type": "Enum", "url": "", "description": "Above the chart."}, {"name": "RIGHT", "type": "Enum", "url": "", "description": "To the right of the chart."}, {"name": "BOTTOM", "type": "Enum", "url": "", "description": "Below the chart."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No legend is displayed."}]},
{"url": "https://developers.google.com/apps-script/reference/charts/point-style", "name": "PointStyle", "type": "enum", "methods": [], "properties": [{"name": "NONE", "type": "Enum", "url": "", "description": "Do not display line points."}, {"name": "TINY", "type": "Enum", "url": "", "description": "Use tiny line points."}, {"name": "MEDIUM", "type": "Enum", "url": "", "description": "Use medium sized line points."}, {"name": "LARGE", "type": "Enum", "url": "", "description": "Use large sized line points."}, {"name": "HUGE", "type": "Enum", "url": "", "description": "Use largest sized line points."}]},
{"url": "https://developers.google.com/apps-script/reference/charts/match-type", "name": "MatchType", "type": "enum", "methods": [{"name": "getName", "parameters": [], "result": "String", "description": "Returns the name of the match type to be used in the options JSON."}], "properties": [{"name": "EXACT", "type": "Enum", "url": "", "description": "Match exact values only"}, {"name": "PREFIX", "type": "Enum", "url": "", "description": "Match prefixes starting from the beginning of the value"}, {"name": "ANY", "type": "Enum", "url": "", "description": "Match any substring"}]},
{"url": "https://developers.google.com/apps-script/reference/charts/orientation", "name": "Orientation", "type": "enum", "methods": [], "properties": [{"name": "HORIZONTAL", "type": "Enum", "url": "", "description": "Horizontal orientation."}, {"name": "VERTICAL", "type": "Enum", "url": "", "description": "Vertical orientation."}]},
{"url": "https://developers.google.com/apps-script/reference/charts/curve-style", "name": "CurveStyle", "type": "enum", "methods": [], "properties": [{"name": "NORMAL", "type": "Enum", "url": "", "description": "Straight lines without curve."}, {"name": "SMOOTH", "type": "Enum", "url": "", "description": "The angles of the line are smoothed."}]},
{"url": "https://developers.google.com/apps-script/reference/charts/chart-type", "name": "ChartType", "type": "enum", "methods": [], "properties": [{"name": "TIMELINE", "type": "Enum", "url": "", "description": "Timeline chart."}, {"name": "AREA", "type": "Enum", "url": "", "description": "Area chart"}, {"name": "BAR", "type": "Enum", "url": "", "description": "Bar chart"}, {"name": "BUBBLE", "type": "Enum", "url": "", "description": "Bubble chart."}, {"name": "CANDLESTICK", "type": "Enum", "url": "", "description": "Candlestick chart."}, {"name": "COLUMN", "type": "Enum", "url": "", "description": "Column chart"}, {"name": "COMBO", "type": "Enum", "url": "", "description": "Combo chart"}, {"name": "GAUGE", "type": "Enum", "url": "", "description": "Gauge chart."}, {"name": "GEO", "type": "Enum", "url": "", "description": "Geo chart."}, {"name": "HISTOGRAM", "type": "Enum", "url": "", "description": "Histogram"}, {"name": "RADAR", "type": "Enum", "url": "", "description": "Radar chart."}, {"name": "LINE", "type": "Enum", "url": "", "description": "Line chart"}, {"name": "ORG", "type": "Enum", "url": "", "description": "Org chart."}, {"name": "PIE", "type": "Enum", "url": "", "description": "Pie chart"}, {"name": "SCATTER", "type": "Enum", "url": "", "description": "Scatter chart"}, {"name": "SPARKLINE", "type": "Enum", "url": "", "description": "Sparkline chart."}, {"name": "STEPPED_AREA", "type": "Enum", "url": "", "description": "Stepped area chart."}, {"name": "TABLE", "type": "Enum", "url": "", "description": "Table chart"}, {"name": "TREEMAP", "type": "Enum", "url": "", "description": "Treemap chart."}, {"name": "WATERFALL", "type": "Enum", "url": "", "description": "Waterfall chart."}]},
{"url": "https://developers.google.com/apps-script/reference/charts/column-type", "name": "ColumnType", "type": "enum", "methods": [], "properties": [{"name": "DATE", "type": "Enum", "url": "", "description": "Corresponds to date values."}, {"name": "NUMBER", "type": "Enum", "url": "", "description": "Corresponds to number values."}, {"name": "STRING", "type": "Enum", "url": "", "description": "Corresponds to string values."}]},
{"url": "https://developers.google.com/apps-script/reference/charts/chart-merge-strategy", "name": "ChartMergeStrategy", "type": "enum", "methods": [], "properties": [{"name": "MERGE_COLUMNS", "type": "Enum", "url": "", "description": "Default. Charts merges the columns of multiple ranges."}, {"name": "MERGE_ROWS", "type": "Enum", "url": "", "description": "Charts merges the rows of multiple ranges."}]},
{"url": "https://developers.google.com/apps-script/reference/charts/data-table-source", "name": "DataTableSource", "type": "interface", "methods": [{"name": "getDataTable", "parameters": [], "result": "DataTable", "description": "Return the data inside this object as a DataTable."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/text-style", "name": "TextStyle", "type": "class", "methods": [{"name": "getColor", "parameters": [], "result": "String", "description": "Gets the color of the text style."}, {"name": "getFontName", "parameters": [], "result": "String", "description": "Gets the font name of the text style."}, {"name": "getFontSize", "parameters": [], "result": "Number", "description": "Gets the font size of the text style."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/chart-hidden-dimension-strategy", "name": "ChartHiddenDimensionStrategy", "type": "enum", "methods": [], "properties": [{"name": "IGNORE_BOTH", "type": "Enum", "url": "", "description": "Default; charts skips any hidden columns and hidden rows."}, {"name": "IGNORE_ROWS", "type": "Enum", "url": "", "description": "Charts skips hidden rows only."}, {"name": "IGNORE_COLUMNS", "type": "Enum", "url": "", "description": "Charts skips hidden columns only."}, {"name": "SHOW_BOTH", "type": "Enum", "url": "", "description": "Charts does not skip hidden columns or hidden rows."}]},
{"url": "https://developers.google.com/apps-script/reference/charts/table-chart-builder", "name": "TableChartBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "enablePaging", "parameters": [{"name": "enablePaging", "type": "Boolean"}], "result": "TableChartBuilder", "description": "Sets whether to enable paging through the data."}, {"name": "enablePaging", "parameters": [{"name": "pageSize", "type": "Integer"}], "result": "TableChartBuilder", "description": "Enables paging and sets the number of rows in each page."}, {"name": "enablePaging", "parameters": [{"name": "pageSize", "type": "Integer"}, {"name": "startPage", "type": "Integer"}], "result": "TableChartBuilder", "description": "Enables paging, sets the number of rows in each page and the first table page to display (page\nnumbers are zero based)."}, {"name": "enableRtlTable", "parameters": [{"name": "rtlEnabled", "type": "Boolean"}], "result": "TableChartBuilder", "description": "Adds basic support for right-to-left languages (such as Arabic or Hebrew) by reversing the\ncolumn order of the table, so that column zero is the right-most column, and the last column is\nthe left-most column."}, {"name": "enableSorting", "parameters": [{"name": "enableSorting", "type": "Boolean"}], "result": "TableChartBuilder", "description": "Sets whether to sort columns when the user clicks a column heading."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "TableChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "TableChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "TableChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "TableChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "TableChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setFirstRowNumber", "parameters": [{"name": "number", "type": "Integer"}], "result": "TableChartBuilder", "description": "Sets the row number for the first row in the data table."}, {"name": "setInitialSortingAscending", "parameters": [{"name": "column", "type": "Integer"}], "result": "TableChartBuilder", "description": "Sets the index of the column according to which the table should be initially sorted\n(ascending)."}, {"name": "setInitialSortingDescending", "parameters": [{"name": "column", "type": "Integer"}], "result": "TableChartBuilder", "description": "Sets the index of the column according to which the table should be initially sorted\n(descending)."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "TableChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "showRowNumberColumn", "parameters": [{"name": "showRowNumber", "type": "Boolean"}], "result": "TableChartBuilder", "description": "Sets whether to show the row number as the first column of the table."}, {"name": "useAlternatingRowStyle", "parameters": [{"name": "alternate", "type": "Boolean"}], "result": "TableChartBuilder", "description": "Sets whether alternating color style is assigned to odd and even rows of a table chart."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/text-style-builder", "name": "TextStyleBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "TextStyle", "description": "Builds and returns a text style configuration object that was built using this builder."}, {"name": "setColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "TextStyleBuilder", "description": "Sets the color of the text style."}, {"name": "setFontName", "parameters": [{"name": "fontName", "type": "String"}], "result": "TextStyleBuilder", "description": "Sets the font name of the text style"}, {"name": "setFontSize", "parameters": [{"name": "fontSize", "type": "Number"}], "result": "TextStyleBuilder", "description": "Sets the font size of the text style."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/string-filter-builder", "name": "StringFilterBuilder", "type": "class", "methods": [{"name": "setCaseSensitive", "parameters": [{"name": "caseSensitive", "type": "Boolean"}], "result": "StringFilterBuilder", "description": "Sets whether matching should be case sensitive or not."}, {"name": "setMatchType", "parameters": [{"name": "matchType", "type": "MatchType"}], "result": "StringFilterBuilder", "description": "Sets whether the control should match exact values only (MatchType.EXACT), prefixes\nstarting from the beginning of the value (MatchType.PREFIX), or any substring\n(MatchType.ANY)."}, {"name": "setRealtimeTrigger", "parameters": [{"name": "realtimeTrigger", "type": "Boolean"}], "result": "StringFilterBuilder", "description": "Sets whether the control should match any time a key is pressed or only when the input field\n'changes' (loss of focus or pressing the Enter key)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/scatter-chart-builder", "name": "ScatterChartBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "ScatterChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "ScatterChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "ScatterChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "ScatterChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "ScatterChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "ScatterChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "ScatterChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "ScatterChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ScatterChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "ScatterChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPointStyle", "parameters": [{"name": "style", "type": "PointStyle"}], "result": "ScatterChartBuilder", "description": "Sets the style for points in the line."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "ScatterChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ScatterChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setXAxisLogScale", "parameters": [], "result": "ScatterChartBuilder", "description": "Makes the horizontal axis into a logarithmic scale (requires all values to be positive)."}, {"name": "setXAxisRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "ScatterChartBuilder", "description": "Sets the range for the horizontal axis of the chart."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ScatterChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ScatterChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ScatterChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisLogScale", "parameters": [], "result": "ScatterChartBuilder", "description": "Makes the vertical axis into a logarithmic scale (requires all values to be positive)."}, {"name": "setYAxisRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "ScatterChartBuilder", "description": "Sets the range for the vertical axis of the chart."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ScatterChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ScatterChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ScatterChartBuilder", "description": "Sets the vertical axis title text style."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/pie-chart-builder", "name": "PieChartBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "reverseCategories", "parameters": [], "result": "PieChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "set3D", "parameters": [], "result": "PieChartBuilder", "description": "Sets the chart to be three-dimensional."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "PieChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "PieChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "PieChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "PieChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "PieChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "PieChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "PieChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "PieChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "PieChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "PieChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "PieChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "PieChartBuilder", "description": "Sets the text style of the chart title."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/data-table-builder", "name": "DataTableBuilder", "type": "class", "methods": [{"name": "addColumn", "parameters": [{"name": "type", "type": "ColumnType"}, {"name": "label", "type": "String"}], "result": "DataTableBuilder", "description": "Adds a column to the data table."}, {"name": "addRow", "parameters": [{"name": "values", "type": "Object"}], "result": "DataTableBuilder", "description": "Adds a row to the data table."}, {"name": "build", "parameters": [], "result": "DataTable", "description": "Builds and returns a data table."}, {"name": "setValue", "parameters": [{"name": "row", "type": "Integer"}, {"name": "column", "type": "Integer"}, {"name": "value", "type": "Object"}], "result": "DataTableBuilder", "description": "Sets a specific value in the table."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/data-table", "name": "DataTable", "type": "class", "methods": [], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/data-view-definition-builder", "name": "DataViewDefinitionBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "DataViewDefinition", "description": "Builds and returns the data view definition object that was built using this builder."}, {"name": "setColumns", "parameters": [{"name": "columns", "type": "Object"}], "result": "DataViewDefinitionBuilder", "description": "Sets the indexes of the columns to include in the data view as well as specifying role-column\ninformation."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/line-chart-builder", "name": "LineChartBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "reverseCategories", "parameters": [], "result": "LineChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "LineChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "LineChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setCurveStyle", "parameters": [{"name": "style", "type": "CurveStyle"}], "result": "LineChartBuilder", "description": "Sets the style to use for curves in the chart."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "LineChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "LineChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "LineChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "LineChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "LineChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "LineChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "LineChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "LineChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPointStyle", "parameters": [{"name": "style", "type": "PointStyle"}], "result": "LineChartBuilder", "description": "Sets the style for points in the line."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "LineChartBuilder", "description": "Sets the range for the chart."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "LineChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "LineChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "LineChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "LineChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "LineChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "LineChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "LineChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "LineChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "LineChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/data-view-definition", "name": "DataViewDefinition", "type": "class", "methods": [], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/chart-options", "name": "ChartOptions", "type": "class", "methods": [{"name": "get", "parameters": [{"name": "option", "type": "String"}], "result": "Object", "description": "Returns a configured option for this chart."}, {"name": "getOrDefault", "parameters": [{"name": "option", "type": "String"}], "result": "Object", "description": "Returns a configured option for this chart."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/number-range-filter-builder", "name": "NumberRangeFilterBuilder", "type": "class", "methods": [{"name": "setMaxValue", "parameters": [{"name": "maxValue", "type": "Integer"}], "result": "NumberRangeFilterBuilder", "description": "Sets the maximum allowed value for the range lower extent."}, {"name": "setMinValue", "parameters": [{"name": "minValue", "type": "Integer"}], "result": "NumberRangeFilterBuilder", "description": "Sets the minimum allowed value for the range lower extent."}, {"name": "setOrientation", "parameters": [{"name": "orientation", "type": "Orientation"}], "result": "NumberRangeFilterBuilder", "description": "Sets the slider orientation."}, {"name": "setShowRangeValues", "parameters": [{"name": "showRangeValues", "type": "Boolean"}], "result": "NumberRangeFilterBuilder", "description": "Sets whether to have labels next to the slider displaying extents of the selected range."}, {"name": "setTicks", "parameters": [{"name": "ticks", "type": "Integer"}], "result": "NumberRangeFilterBuilder", "description": "Sets the number of ticks (fixed positions in a range bar) a number range filter slider thumbs\ncan fall in."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/bar-chart-builder", "name": "BarChartBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "reverseCategories", "parameters": [], "result": "BarChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "reverseDirection", "parameters": [], "result": "BarChartBuilder", "description": "Reverses the direction in which the bars grow along the horizontal axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "BarChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "BarChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "BarChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "BarChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "BarChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "BarChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "BarChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "BarChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "BarChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "BarChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "BarChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "BarChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "BarChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "BarChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "BarChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "BarChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "BarChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "BarChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "BarChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "BarChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "BarChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/column-chart-builder", "name": "ColumnChartBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "reverseCategories", "parameters": [], "result": "ColumnChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "ColumnChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "ColumnChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "ColumnChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "ColumnChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "ColumnChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "ColumnChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "ColumnChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "ColumnChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ColumnChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "ColumnChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "ColumnChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "ColumnChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "ColumnChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ColumnChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ColumnChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ColumnChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ColumnChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ColumnChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ColumnChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ColumnChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "ColumnChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/chart", "name": "Chart", "type": "class", "methods": [{"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getOptions", "parameters": [], "result": "ChartOptions", "description": "Returns the options for this chart, such as height, colors, and axes."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/charts", "name": "Charts", "type": "class", "methods": [{"name": "newAreaChart", "parameters": [], "result": "AreaChartBuilder", "description": "Starts building an area chart, as described in the Google Chart\nTools documentation."}, {"name": "newBarChart", "parameters": [], "result": "BarChartBuilder", "description": "Starts building a bar chart, as described in the Google Chart\nTools documentation."}, {"name": "newColumnChart", "parameters": [], "result": "ColumnChartBuilder", "description": "Starts building a column chart, as described in the Google Chart\nTools documentation."}, {"name": "newDataTable", "parameters": [], "result": "DataTableBuilder", "description": "Creates an empty data table, which can have its values set manually."}, {"name": "newDataViewDefinition", "parameters": [], "result": "DataViewDefinitionBuilder", "description": "Creates a new data view definition."}, {"name": "newLineChart", "parameters": [], "result": "LineChartBuilder", "description": "Starts building a line chart, as described in the Google Chart\nTools documentation."}, {"name": "newPieChart", "parameters": [], "result": "PieChartBuilder", "description": "Starts building a pie chart, as described in the Google Chart\nTools documentation."}, {"name": "newScatterChart", "parameters": [], "result": "ScatterChartBuilder", "description": "Starts building a scatter chart, as described in the Google Chart\nTools documentation."}, {"name": "newTableChart", "parameters": [], "result": "TableChartBuilder", "description": "Starts building a table chart, as described in the Google Chart\nTools documentation."}, {"name": "newTextStyle", "parameters": [], "result": "TextStyleBuilder", "description": "Creates a new text style builder."}], "properties": [{"name": "ChartHiddenDimensionStrategy", "type": "ChartHiddenDimensionStrategy", "url": "/apps-script/reference/charts/chart-hidden-dimension-strategy", "description": "An enumeration of how hidden dimensions in a source are expressed in a chart."}, {"name": "ChartMergeStrategy", "type": "ChartMergeStrategy", "url": "/apps-script/reference/charts/chart-merge-strategy", "description": "An enumeration of how multiple ranges in the source are expressed in a chart."}, {"name": "ChartType", "type": "ChartType", "url": "/apps-script/reference/charts/chart-type", "description": "An enumeration of chart types supported by the Charts service."}, {"name": "ColumnType", "type": "ColumnType", "url": "/apps-script/reference/charts/column-type", "description": "An enumeration of the valid data types for columns in a DataTable."}, {"name": "CurveStyle", "type": "CurveStyle", "url": "/apps-script/reference/charts/curve-style", "description": "An enumeration of the styles for curves in a chart."}, {"name": "PointStyle", "type": "PointStyle", "url": "/apps-script/reference/charts/point-style", "description": "An enumeration of the styles of points in a line."}, {"name": "Position", "type": "Position", "url": "/apps-script/reference/charts/position", "description": "An enumeration of legend positions within a chart."}]},
{"url": "https://developers.google.com/apps-script/reference/charts/area-chart-builder", "name": "AreaChartBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "reverseCategories", "parameters": [], "result": "AreaChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "AreaChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "AreaChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "AreaChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "AreaChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "AreaChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "AreaChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "AreaChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "AreaChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "AreaChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "AreaChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPointStyle", "parameters": [{"name": "style", "type": "PointStyle"}], "result": "AreaChartBuilder", "description": "Sets the style for points in the line."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "AreaChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "AreaChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "AreaChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "AreaChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "AreaChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "AreaChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "AreaChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "AreaChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "AreaChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "AreaChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "AreaChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts", "name": "Charts", "type": "charts", "methods": [{"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "reverseCategories", "parameters": [], "result": "AreaChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "AreaChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "AreaChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "AreaChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "AreaChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "AreaChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "AreaChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "AreaChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "AreaChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "AreaChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "AreaChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPointStyle", "parameters": [{"name": "style", "type": "PointStyle"}], "result": "AreaChartBuilder", "description": "Sets the style for points in the line."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "AreaChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "AreaChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "AreaChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "AreaChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "AreaChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "AreaChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "AreaChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "AreaChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "AreaChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "AreaChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "AreaChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}, {"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "reverseCategories", "parameters": [], "result": "BarChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "reverseDirection", "parameters": [], "result": "BarChartBuilder", "description": "Reverses the direction in which the bars grow along the horizontal axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "BarChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "BarChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "BarChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "BarChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "BarChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "BarChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "BarChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "BarChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "BarChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "BarChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "BarChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "BarChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "BarChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "BarChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "BarChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "BarChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "BarChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "BarChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "BarChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "BarChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "BarChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getOptions", "parameters": [], "result": "ChartOptions", "description": "Returns the options for this chart, such as height, colors, and axes."}, {"name": "get", "parameters": [{"name": "option", "type": "String"}], "result": "Object", "description": "Returns a configured option for this chart."}, {"name": "getOrDefault", "parameters": [{"name": "option", "type": "String"}], "result": "Object", "description": "Returns a configured option for this chart."}, {"name": "newAreaChart", "parameters": [], "result": "AreaChartBuilder", "description": "Starts building an area chart, as described in the Google Chart\nTools documentation."}, {"name": "newBarChart", "parameters": [], "result": "BarChartBuilder", "description": "Starts building a bar chart, as described in the Google Chart\nTools documentation."}, {"name": "newColumnChart", "parameters": [], "result": "ColumnChartBuilder", "description": "Starts building a column chart, as described in the Google Chart\nTools documentation."}, {"name": "newDataTable", "parameters": [], "result": "DataTableBuilder", "description": "Creates an empty data table, which can have its values set manually."}, {"name": "newDataViewDefinition", "parameters": [], "result": "DataViewDefinitionBuilder", "description": "Creates a new data view definition."}, {"name": "newLineChart", "parameters": [], "result": "LineChartBuilder", "description": "Starts building a line chart, as described in the Google Chart\nTools documentation."}, {"name": "newPieChart", "parameters": [], "result": "PieChartBuilder", "description": "Starts building a pie chart, as described in the Google Chart\nTools documentation."}, {"name": "newScatterChart", "parameters": [], "result": "ScatterChartBuilder", "description": "Starts building a scatter chart, as described in the Google Chart\nTools documentation."}, {"name": "newTableChart", "parameters": [], "result": "TableChartBuilder", "description": "Starts building a table chart, as described in the Google Chart\nTools documentation."}, {"name": "newTextStyle", "parameters": [], "result": "TextStyleBuilder", "description": "Creates a new text style builder."}, {"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "reverseCategories", "parameters": [], "result": "ColumnChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "ColumnChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "ColumnChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "ColumnChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "ColumnChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "ColumnChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "ColumnChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "ColumnChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "ColumnChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ColumnChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "ColumnChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "ColumnChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "ColumnChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "ColumnChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ColumnChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ColumnChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ColumnChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ColumnChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ColumnChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ColumnChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ColumnChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "ColumnChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}, {"name": "addColumn", "parameters": [{"name": "type", "type": "ColumnType"}, {"name": "label", "type": "String"}], "result": "DataTableBuilder", "description": "Adds a column to the data table."}, {"name": "addRow", "parameters": [{"name": "values", "type": "Object"}], "result": "DataTableBuilder", "description": "Adds a row to the data table."}, {"name": "build", "parameters": [], "result": "DataTable", "description": "Builds and returns a data table."}, {"name": "setValue", "parameters": [{"name": "row", "type": "Integer"}, {"name": "column", "type": "Integer"}, {"name": "value", "type": "Object"}], "result": "DataTableBuilder", "description": "Sets a specific value in the table."}, {"name": "getDataTable", "parameters": [], "result": "DataTable", "description": "Return the data inside this object as a DataTable."}, {"name": "build", "parameters": [], "result": "DataViewDefinition", "description": "Builds and returns the data view definition object that was built using this builder."}, {"name": "setColumns", "parameters": [{"name": "columns", "type": "Object"}], "result": "DataViewDefinitionBuilder", "description": "Sets the indexes of the columns to include in the data view as well as specifying role-column\ninformation."}, {"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "reverseCategories", "parameters": [], "result": "LineChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "LineChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "LineChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setCurveStyle", "parameters": [{"name": "style", "type": "CurveStyle"}], "result": "LineChartBuilder", "description": "Sets the style to use for curves in the chart."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "LineChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "LineChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "LineChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "LineChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "LineChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "LineChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "LineChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "LineChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPointStyle", "parameters": [{"name": "style", "type": "PointStyle"}], "result": "LineChartBuilder", "description": "Sets the style for points in the line."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "LineChartBuilder", "description": "Sets the range for the chart."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "LineChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "LineChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "LineChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "LineChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "LineChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "LineChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "LineChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "LineChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "LineChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}, {"name": "getName", "parameters": [], "result": "String", "description": "Returns the name of the match type to be used in the options JSON."}, {"name": "setMaxValue", "parameters": [{"name": "maxValue", "type": "Integer"}], "result": "NumberRangeFilterBuilder", "description": "Sets the maximum allowed value for the range lower extent."}, {"name": "setMinValue", "parameters": [{"name": "minValue", "type": "Integer"}], "result": "NumberRangeFilterBuilder", "description": "Sets the minimum allowed value for the range lower extent."}, {"name": "setOrientation", "parameters": [{"name": "orientation", "type": "Orientation"}], "result": "NumberRangeFilterBuilder", "description": "Sets the slider orientation."}, {"name": "setShowRangeValues", "parameters": [{"name": "showRangeValues", "type": "Boolean"}], "result": "NumberRangeFilterBuilder", "description": "Sets whether to have labels next to the slider displaying extents of the selected range."}, {"name": "setTicks", "parameters": [{"name": "ticks", "type": "Integer"}], "result": "NumberRangeFilterBuilder", "description": "Sets the number of ticks (fixed positions in a range bar) a number range filter slider thumbs\ncan fall in."}, {"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "reverseCategories", "parameters": [], "result": "PieChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "set3D", "parameters": [], "result": "PieChartBuilder", "description": "Sets the chart to be three-dimensional."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "PieChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "PieChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "PieChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "PieChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "PieChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "PieChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "PieChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "PieChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "PieChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "PieChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "PieChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "PieChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "ScatterChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "ScatterChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "ScatterChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "ScatterChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "ScatterChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "ScatterChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "ScatterChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "ScatterChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ScatterChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "ScatterChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPointStyle", "parameters": [{"name": "style", "type": "PointStyle"}], "result": "ScatterChartBuilder", "description": "Sets the style for points in the line."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "ScatterChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ScatterChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setXAxisLogScale", "parameters": [], "result": "ScatterChartBuilder", "description": "Makes the horizontal axis into a logarithmic scale (requires all values to be positive)."}, {"name": "setXAxisRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "ScatterChartBuilder", "description": "Sets the range for the horizontal axis of the chart."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ScatterChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ScatterChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ScatterChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisLogScale", "parameters": [], "result": "ScatterChartBuilder", "description": "Makes the vertical axis into a logarithmic scale (requires all values to be positive)."}, {"name": "setYAxisRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "ScatterChartBuilder", "description": "Sets the range for the vertical axis of the chart."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ScatterChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ScatterChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "ScatterChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "setCaseSensitive", "parameters": [{"name": "caseSensitive", "type": "Boolean"}], "result": "StringFilterBuilder", "description": "Sets whether matching should be case sensitive or not."}, {"name": "setMatchType", "parameters": [{"name": "matchType", "type": "MatchType"}], "result": "StringFilterBuilder", "description": "Sets whether the control should match exact values only (MatchType.EXACT), prefixes\nstarting from the beginning of the value (MatchType.PREFIX), or any substring\n(MatchType.ANY)."}, {"name": "setRealtimeTrigger", "parameters": [{"name": "realtimeTrigger", "type": "Boolean"}], "result": "StringFilterBuilder", "description": "Sets whether the control should match any time a key is pressed or only when the input field\n'changes' (loss of focus or pressing the Enter key)."}, {"name": "build", "parameters": [], "result": "Chart", "description": "Builds the chart."}, {"name": "enablePaging", "parameters": [{"name": "enablePaging", "type": "Boolean"}], "result": "TableChartBuilder", "description": "Sets whether to enable paging through the data."}, {"name": "enablePaging", "parameters": [{"name": "pageSize", "type": "Integer"}], "result": "TableChartBuilder", "description": "Enables paging and sets the number of rows in each page."}, {"name": "enablePaging", "parameters": [{"name": "pageSize", "type": "Integer"}, {"name": "startPage", "type": "Integer"}], "result": "TableChartBuilder", "description": "Enables paging, sets the number of rows in each page and the first table page to display (page\nnumbers are zero based)."}, {"name": "enableRtlTable", "parameters": [{"name": "rtlEnabled", "type": "Boolean"}], "result": "TableChartBuilder", "description": "Adds basic support for right-to-left languages (such as Arabic or Hebrew) by reversing the\ncolumn order of the table, so that column zero is the right-most column, and the last column is\nthe left-most column."}, {"name": "enableSorting", "parameters": [{"name": "enableSorting", "type": "Boolean"}], "result": "TableChartBuilder", "description": "Sets whether to sort columns when the user clicks a column heading."}, {"name": "setDataSourceUrl", "parameters": [{"name": "url", "type": "String"}], "result": "TableChartBuilder", "description": "Sets the data source URL that is used to pull data in from an external source, such as Google\nSheets."}, {"name": "setDataTable", "parameters": [{"name": "tableBuilder", "type": "DataTableBuilder"}], "result": "TableChartBuilder", "description": "Sets the data table to use for the chart using a DataTableBuilder."}, {"name": "setDataTable", "parameters": [{"name": "table", "type": "DataTableSource"}], "result": "TableChartBuilder", "description": "Sets the data table which contains the lines for the chart, as well as the X-axis labels."}, {"name": "setDataViewDefinition", "parameters": [{"name": "dataViewDefinition", "type": "DataViewDefinition"}], "result": "TableChartBuilder", "description": "Sets the data view definition to use for the chart."}, {"name": "setDimensions", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "TableChartBuilder", "description": "Sets the dimensions for the chart."}, {"name": "setFirstRowNumber", "parameters": [{"name": "number", "type": "Integer"}], "result": "TableChartBuilder", "description": "Sets the row number for the first row in the data table."}, {"name": "setInitialSortingAscending", "parameters": [{"name": "column", "type": "Integer"}], "result": "TableChartBuilder", "description": "Sets the index of the column according to which the table should be initially sorted\n(ascending)."}, {"name": "setInitialSortingDescending", "parameters": [{"name": "column", "type": "Integer"}], "result": "TableChartBuilder", "description": "Sets the index of the column according to which the table should be initially sorted\n(descending)."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "TableChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "showRowNumberColumn", "parameters": [{"name": "showRowNumber", "type": "Boolean"}], "result": "TableChartBuilder", "description": "Sets whether to show the row number as the first column of the table."}, {"name": "useAlternatingRowStyle", "parameters": [{"name": "alternate", "type": "Boolean"}], "result": "TableChartBuilder", "description": "Sets whether alternating color style is assigned to odd and even rows of a table chart."}, {"name": "getColor", "parameters": [], "result": "String", "description": "Gets the color of the text style."}, {"name": "getFontName", "parameters": [], "result": "String", "description": "Gets the font name of the text style."}, {"name": "getFontSize", "parameters": [], "result": "Number", "description": "Gets the font size of the text style."}, {"name": "build", "parameters": [], "result": "TextStyle", "description": "Builds and returns a text style configuration object that was built using this builder."}, {"name": "setColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "TextStyleBuilder", "description": "Sets the color of the text style."}, {"name": "setFontName", "parameters": [{"name": "fontName", "type": "String"}], "result": "TextStyleBuilder", "description": "Sets the font name of the text style"}, {"name": "setFontSize", "parameters": [{"name": "fontSize", "type": "Number"}], "result": "TextStyleBuilder", "description": "Sets the font size of the text style."}], "properties": [{"name": "IGNORE_BOTH", "type": "Enum", "url": "", "description": "Default; charts skips any hidden columns and hidden rows."}, {"name": "IGNORE_ROWS", "type": "Enum", "url": "", "description": "Charts skips hidden rows only."}, {"name": "IGNORE_COLUMNS", "type": "Enum", "url": "", "description": "Charts skips hidden columns only."}, {"name": "SHOW_BOTH", "type": "Enum", "url": "", "description": "Charts does not skip hidden columns or hidden rows."}, {"name": "MERGE_COLUMNS", "type": "Enum", "url": "", "description": "Default."}, {"name": "MERGE_ROWS", "type": "Enum", "url": "", "description": "Charts merges the rows of multiple ranges."}, {"name": "TIMELINE", "type": "Enum", "url": "", "description": "Timeline chart."}, {"name": "AREA", "type": "Enum", "url": "", "description": "Area chart"}, {"name": "BAR", "type": "Enum", "url": "", "description": "Bar chart"}, {"name": "BUBBLE", "type": "Enum", "url": "", "description": "Bubble chart."}, {"name": "CANDLESTICK", "type": "Enum", "url": "", "description": "Candlestick chart."}, {"name": "COLUMN", "type": "Enum", "url": "", "description": "Column chart"}, {"name": "COMBO", "type": "Enum", "url": "", "description": "Combo chart"}, {"name": "GAUGE", "type": "Enum", "url": "", "description": "Gauge chart."}, {"name": "GEO", "type": "Enum", "url": "", "description": "Geo chart."}, {"name": "HISTOGRAM", "type": "Enum", "url": "", "description": "Histogram"}, {"name": "RADAR", "type": "Enum", "url": "", "description": "Radar chart."}, {"name": "LINE", "type": "Enum", "url": "", "description": "Line chart"}, {"name": "ORG", "type": "Enum", "url": "", "description": "Org chart."}, {"name": "PIE", "type": "Enum", "url": "", "description": "Pie chart"}, {"name": "SCATTER", "type": "Enum", "url": "", "description": "Scatter chart"}, {"name": "SPARKLINE", "type": "Enum", "url": "", "description": "Sparkline chart."}, {"name": "STEPPED_AREA", "type": "Enum", "url": "", "description": "Stepped area chart."}, {"name": "TABLE", "type": "Enum", "url": "", "description": "Table chart"}, {"name": "TREEMAP", "type": "Enum", "url": "", "description": "Treemap chart."}, {"name": "WATERFALL", "type": "Enum", "url": "", "description": "Waterfall chart."}, {"name": "ChartHiddenDimensionStrategy", "type": "ChartHiddenDimensionStrategy", "url": "/apps-script/reference/charts/chart-hidden-dimension-strategy", "description": "An enumeration of how hidden dimensions in a source are expressed in a chart."}, {"name": "ChartMergeStrategy", "type": "ChartMergeStrategy", "url": "/apps-script/reference/charts/chart-merge-strategy", "description": "An enumeration of how multiple ranges in the source are expressed in a chart."}, {"name": "ChartType", "type": "ChartType", "url": "/apps-script/reference/charts/chart-type", "description": "An enumeration of chart types supported by the Charts service."}, {"name": "ColumnType", "type": "ColumnType", "url": "/apps-script/reference/charts/column-type", "description": "An enumeration of the valid data types for columns in a DataTable."}, {"name": "CurveStyle", "type": "CurveStyle", "url": "/apps-script/reference/charts/curve-style", "description": "An enumeration of the styles for curves in a chart."}, {"name": "PointStyle", "type": "PointStyle", "url": "/apps-script/reference/charts/point-style", "description": "An enumeration of the styles of points in a line."}, {"name": "Position", "type": "Position", "url": "/apps-script/reference/charts/position", "description": "An enumeration of legend positions within a chart."}, {"name": "DATE", "type": "Enum", "url": "", "description": "Corresponds to date values."}, {"name": "NUMBER", "type": "Enum", "url": "", "description": "Corresponds to number values."}, {"name": "STRING", "type": "Enum", "url": "", "description": "Corresponds to string values."}, {"name": "NORMAL", "type": "Enum", "url": "", "description": "Straight lines without curve."}, {"name": "SMOOTH", "type": "Enum", "url": "", "description": "The angles of the line are smoothed."}, {"name": "EXACT", "type": "Enum", "url": "", "description": "Match exact values only"}, {"name": "PREFIX", "type": "Enum", "url": "", "description": "Match prefixes starting from the beginning of the value"}, {"name": "ANY", "type": "Enum", "url": "", "description": "Match any substring"}, {"name": "HORIZONTAL", "type": "Enum", "url": "", "description": "Horizontal orientation."}, {"name": "VERTICAL", "type": "Enum", "url": "", "description": "Vertical orientation."}, {"name": "ASIDE", "type": "Enum", "url": "", "description": "Selected values display in a single text line next to the value picker widget."}, {"name": "BELOW", "type": "Enum", "url": "", "description": "Selected values display in a single text line below the widget."}, {"name": "BELOW_WRAPPING", "type": "Enum", "url": "", "description": "Similar to below, but entries that cannot fit in the picker wrap to a new line."}, {"name": "BELOW_STACKED", "type": "Enum", "url": "", "description": "Selected values display in a column below the widget."}, {"name": "NONE", "type": "Enum", "url": "", "description": "Do not display line points."}, {"name": "TINY", "type": "Enum", "url": "", "description": "Use tiny line points."}, {"name": "MEDIUM", "type": "Enum", "url": "", "description": "Use medium sized line points."}, {"name": "LARGE", "type": "Enum", "url": "", "description": "Use large sized line points."}, {"name": "HUGE", "type": "Enum", "url": "", "description": "Use largest sized line points."}, {"name": "TOP", "type": "Enum", "url": "", "description": "Above the chart."}, {"name": "RIGHT", "type": "Enum", "url": "", "description": "To the right of the chart."}, {"name": "BOTTOM", "type": "Enum", "url": "", "description": "Below the chart."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No legend is displayed."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/update-draft-body-type", "name": "UpdateDraftBodyType", "type": "enum", "methods": [], "properties": [{"name": "IN_PLACE_INSERT", "type": "Enum", "url": "", "description": "Default. Update actions insert content at the current cursor position, replacing any selected\ncontent."}, {"name": "INSERT_AT_START", "type": "Enum", "url": "", "description": "Update actions insert content at the start of message body."}, {"name": "INSERT_AT_END", "type": "Enum", "url": "", "description": "Update actions insert content at the end of the message body. If an email signature is present,\nin Gmail on the web, the update action inserts after the user's signature. In the Gmail mobile\napp, the update action inserts before the user's signature."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/text-button-style", "name": "TextButtonStyle", "type": "enum", "methods": [], "properties": [{"name": "TEXT", "type": "Enum", "url": "", "description": "Normal text button with clear background. Default."}, {"name": "FILLED", "type": "Enum", "url": "", "description": "Text button with colored background."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/selection-input-type", "name": "SelectionInputType", "type": "enum", "methods": [], "properties": [{"name": "CHECK_BOX", "type": "Enum", "url": "", "description": "Checkbox input style. Default."}, {"name": "RADIO_BUTTON", "type": "Enum", "url": "", "description": "Radio buton input style. At most one item in the group can be selected."}, {"name": "DROPDOWN", "type": "Enum", "url": "", "description": "Dropdown menu selection input style."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/switch-control-type", "name": "SwitchControlType", "type": "enum", "methods": [], "properties": [{"name": "SWITCH", "type": "Enum", "url": "", "description": "Toggle-styled control for a switch widget. Default."}, {"name": "CHECK_BOX", "type": "Enum", "url": "", "description": "Checkbox-styled control for a switch widget."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/open-as", "name": "OpenAs", "type": "enum", "methods": [], "properties": [{"name": "FULL_SIZE", "type": "Enum", "url": "", "description": "Open in a full window or tab. Default."}, {"name": "OVERLAY", "type": "Enum", "url": "", "description": "Open as an overlay such as a pop-up."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/load-indicator", "name": "LoadIndicator", "type": "enum", "methods": [], "properties": [{"name": "SPINNER", "type": "Enum", "url": "", "description": "Use a spinner indicator. Default."}, {"name": "NONE", "type": "Enum", "url": "", "description": "Do not use an indicator."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/on-close", "name": "OnClose", "type": "enum", "methods": [], "properties": [{"name": "NOTHING", "type": "Enum", "url": "", "description": "Do nothing on close. Default."}, {"name": "RELOAD", "type": "Enum", "url": "", "description": "Reloads the add-on on when the window closes.\n\nIf OpenAs.OVERLAY is also set, the main card is blocked until the overlay\nwindow is closed and the add-on has finished reloading.\n"}, {"name": "RELOAD_ADD_ON", "type": "Enum", "url": "", "description": "Reload the add-on on closing the URL. This action differs from RELOAD in that it does\nnot block the main card while showing an OpenAs.OVERLAY window."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/image-style", "name": "ImageStyle", "type": "enum", "methods": [], "properties": [{"name": "SQUARE", "type": "Enum", "url": "", "description": "No cropping. Default."}, {"name": "CIRCLE", "type": "Enum", "url": "", "description": "Crop to a circle shape."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/horizontal-alignment", "name": "HorizontalAlignment", "type": "enum", "methods": [], "properties": [{"name": "START", "type": "Enum", "url": "", "description": "Align the widget to the start of the sentence side."}, {"name": "CENTER", "type": "Enum", "url": "", "description": "Align the widget to the center."}, {"name": "END", "type": "Enum", "url": "", "description": "Align the widget to the end of the sentence side."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/image-crop-type", "name": "ImageCropType", "type": "enum", "methods": [], "properties": [{"name": "SQUARE", "type": "Enum", "url": "", "description": "Square shape crop style."}, {"name": "CIRCLE", "type": "Enum", "url": "", "description": "Circle shape crop style."}, {"name": "RECTANGLE_CUSTOM", "type": "Enum", "url": "", "description": "Rectangle shape crop style with custom ratio."}, {"name": "RECTANGLE_4_3", "type": "Enum", "url": "", "description": "Rectangle shape crop style with 4:3 ratio."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/grid-item-layout", "name": "GridItemLayout", "type": "enum", "methods": [], "properties": [{"name": "TEXT_BELOW", "type": "Enum", "url": "", "description": "The title and subtitle are shown below the grid item's image."}, {"name": "TEXT_ABOVE", "type": "Enum", "url": "", "description": "The title and subtitle are shown above the grid item's image."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/content-type", "name": "ContentType", "type": "enum", "methods": [], "properties": [{"name": "TEXT", "type": "Enum", "url": "", "description": "Indicates that the generated content is plain text. Default."}, {"name": "MUTABLE_HTML", "type": "Enum", "url": "", "description": "Indicates that the generated content is formatted as HTML. The content can be edited after it\nis generated."}, {"name": "IMMUTABLE_HTML", "type": "Enum", "url": "", "description": "Indicates that the generated content is formatted as HTML, but this content cannot be edited\nafter it is generated."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/display-style", "name": "DisplayStyle", "type": "enum", "methods": [], "properties": [{"name": "PEEK", "type": "Enum", "url": "", "description": "Show the card header at the bottom of add-on content over existing content."}, {"name": "REPLACE", "type": "Enum", "url": "", "description": "Show the card by replacing existing content."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/composed-email-type", "name": "ComposedEmailType", "type": "enum", "methods": [], "properties": [{"name": "REPLY_AS_DRAFT", "type": "Enum", "url": "", "description": "A draft that is a reply to another message. Default."}, {"name": "STANDALONE_DRAFT", "type": "Enum", "url": "", "description": "A draft that is a standalone message."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/range.html", "name": "Range", "type": "class", "methods": [{"name": "activate", "parameters": [], "result": "Range", "description": "Sets the specified range as the active range, with the top\nleft cell in the range as the current cell."}, {"name": "activateAsCurrentCell", "parameters": [], "result": "Range", "description": "Sets the specified cell as the current cell."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}], "result": "Range", "description": "Adds developer metadata with the specified key to the range."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Range", "description": "Adds developer metadata with the specified key and visibility to the range."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "Range", "description": "Adds developer metadata with the specified key and value to the range."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Range", "description": "Adds developer metadata with the specified key, value, and visibility to the range."}, {"name": "applyColumnBanding", "parameters": [], "result": "Banding", "description": "Applies a default column banding theme to the range."}, {"name": "applyColumnBanding", "parameters": [{"name": "bandingTheme", "type": "BandingTheme"}], "result": "Banding", "description": "Applies a specified column banding theme to the range."}, {"name": "applyColumnBanding", "parameters": [{"name": "bandingTheme", "type": "BandingTheme"}, {"name": "showHeader", "type": "Boolean"}, {"name": "showFooter", "type": "Boolean"}], "result": "Banding", "description": "Applies a specified column banding theme to the range with specified header and footer\nsettings."}, {"name": "applyRowBanding", "parameters": [], "result": "Banding", "description": "Applies a default row banding theme to the range."}, {"name": "applyRowBanding", "parameters": [{"name": "bandingTheme", "type": "BandingTheme"}], "result": "Banding", "description": "Applies a specified row banding theme to the range."}, {"name": "applyRowBanding", "parameters": [{"name": "bandingTheme", "type": "BandingTheme"}, {"name": "showHeader", "type": "Boolean"}, {"name": "showFooter", "type": "Boolean"}], "result": "Banding", "description": "Applies a specified row banding theme to the range with specified header and footer settings."}, {"name": "autoFill", "parameters": [{"name": "destination", "type": "Range"}, {"name": "series", "type": "AutoFillSeries"}], "result": "void", "description": "Fills the destinationRange with data based on the data in this range."}, {"name": "autoFillToNeighbor", "parameters": [{"name": "series", "type": "AutoFillSeries"}], "result": "void", "description": "Calculates a range to fill with new data based on neighboring cells and automatically fills\nthat range with new values based on the data contained in this range."}, {"name": "breakApart", "parameters": [], "result": "Range", "description": "Break any multi-column cells in the range into individual cells again."}, {"name": "canEdit", "parameters": [], "result": "Boolean", "description": "Determines whether the user has permission to edit every cell in the range."}, {"name": "check", "parameters": [], "result": "Range", "description": "Changes the state of the checkboxes in the range to \u201cchecked\u201d."}, {"name": "clear", "parameters": [], "result": "Range", "description": "Clears the range of contents, formats, and data validation rules."}, {"name": "clear", "parameters": [{"name": "options", "type": "Object"}], "result": "Range", "description": "Clears the range of contents, format, data validation rules, and/or comments, as specified with\nthe given advanced options."}, {"name": "clearContent", "parameters": [], "result": "Range", "description": "Clears the content of the range, leaving the formatting intact."}, {"name": "clearDataValidations", "parameters": [], "result": "Range", "description": "Clears the data validation rules for the range."}, {"name": "clearFormat", "parameters": [], "result": "Range", "description": "Clears formatting for this range."}, {"name": "clearNote", "parameters": [], "result": "Range", "description": "Clears the note in the given cell or cells."}, {"name": "collapseGroups", "parameters": [], "result": "Range", "description": "Collapses all groups that are wholly contained within the range."}, {"name": "copyFormatToRange", "parameters": [{"name": "gridId", "type": "Integer"}, {"name": "column", "type": "Integer"}, {"name": "columnEnd", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "rowEnd", "type": "Integer"}], "result": "void", "description": "Copy the formatting of the range to the given location."}, {"name": "copyFormatToRange", "parameters": [{"name": "sheet", "type": "Sheet"}, {"name": "column", "type": "Integer"}, {"name": "columnEnd", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "rowEnd", "type": "Integer"}], "result": "void", "description": "Copy the formatting of the range to the given location."}, {"name": "copyTo", "parameters": [{"name": "destination", "type": "Range"}], "result": "void", "description": "Copies the data from a range of cells to another range of cells."}, {"name": "copyTo", "parameters": [{"name": "destination", "type": "Range"}, {"name": "copyPasteType", "type": "CopyPasteType"}, {"name": "transposed", "type": "Boolean"}], "result": "void", "description": "Copies the data from a range of cells to another range of cells."}, {"name": "copyTo", "parameters": [{"name": "destination", "type": "Range"}, {"name": "options", "type": "Object"}], "result": "void", "description": "Copies the data from a range of cells to another range of cells."}, {"name": "copyValuesToRange", "parameters": [{"name": "gridId", "type": "Integer"}, {"name": "column", "type": "Integer"}, {"name": "columnEnd", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "rowEnd", "type": "Integer"}], "result": "void", "description": "Copy the content of the range to the given location."}, {"name": "copyValuesToRange", "parameters": [{"name": "sheet", "type": "Sheet"}, {"name": "column", "type": "Integer"}, {"name": "columnEnd", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "rowEnd", "type": "Integer"}], "result": "void", "description": "Copy the content of the range to the given location."}, {"name": "createDataSourcePivotTable", "parameters": [{"name": "dataSource", "type": "DataSource"}], "result": "DataSourcePivotTable", "description": "Creates an empty data source pivot table from the data source, anchored at the first cell in\nthis range."}, {"name": "createDataSourceTable", "parameters": [{"name": "dataSource", "type": "DataSource"}], "result": "DataSourceTable", "description": "Creates an empty data source table from the data source, anchored at the first cell in this\nrange."}, {"name": "createDeveloperMetadataFinder", "parameters": [], "result": "DeveloperMetadataFinder", "description": "Returns a DeveloperMetadataFinderApi for finding developer metadata within the scope of this\nrange."}, {"name": "createFilter", "parameters": [], "result": "Filter", "description": "Creates a filter applied to the range."}, {"name": "createPivotTable", "parameters": [{"name": "sourceData", "type": "Range"}], "result": "PivotTable", "description": "Creates an empty pivot table from the specified sourceData anchored at the first cell\nin this range."}, {"name": "createTextFinder", "parameters": [{"name": "findText", "type": "String"}], "result": "TextFinder", "description": "Creates a text finder for the range, which can find and replace text in this range."}, {"name": "deleteCells", "parameters": [{"name": "shiftDimension", "type": "Dimension"}], "result": "void", "description": "Deletes this range of cells."}, {"name": "expandGroups", "parameters": [], "result": "Range", "description": "Expands the collapsed groups whose range or control toggle intersects with this range."}, {"name": "getA1Notation", "parameters": [], "result": "String", "description": "Returns a string description of the range, in A1 notation."}, {"name": "getBackground", "parameters": [], "result": "String", "description": "Returns the background color of the top-left cell in the range (for example, '#ffffff')."}, {"name": "getBackgroundObject", "parameters": [], "result": "Color", "description": "Returns the background color of the top-left cell in the range."}, {"name": "getBackgroundObjects", "parameters": [], "result": "Color[][]", "description": "Returns the background colors of the cells in the range."}, {"name": "getBackgrounds", "parameters": [], "result": "String[][]", "description": "Returns the background colors of the cells in the range (for example, '#ffffff')."}, {"name": "getBandings", "parameters": [], "result": "Banding[]", "description": "Returns all the bandings that are applied to any cells in this range."}, {"name": "getCell", "parameters": [{"name": "row", "type": "Integer"}, {"name": "column", "type": "Integer"}], "result": "Range", "description": "Returns a given cell within a range."}, {"name": "getColumn", "parameters": [], "result": "Integer", "description": "Returns the starting column position for this range."}, {"name": "getDataRegion", "parameters": [], "result": "Range", "description": "Returns a copy of the range expanded in the four cardinal Directions to cover all\nadjacent cells with data in them."}, {"name": "getDataRegion", "parameters": [{"name": "dimension", "type": "Dimension"}], "result": "Range", "description": "Returns a copy of the range expanded Direction.UP and Direction.DOWN if the\nspecified dimension is Dimension.ROWS, or Direction.NEXT and Direction.PREVIOUS if the dimension is Dimension.COLUMNS."}, {"name": "getDataSourceFormula", "parameters": [], "result": "DataSourceFormula", "description": "Returns the DataSourceFormula for the first cell in the range, or null if\nthe cell doesn't contain a data source formula."}, {"name": "getDataSourceFormulas", "parameters": [], "result": "DataSourceFormula[]", "description": "Returns the DataSourceFormulas for the cells in the range."}, {"name": "getDataSourcePivotTables", "parameters": [], "result": "DataSourcePivotTable[]", "description": "Gets all the data source pivot tables intersecting with the range."}, {"name": "getDataSourceTables", "parameters": [], "result": "DataSourceTable[]", "description": "Gets all the data source tables intersecting with the range."}, {"name": "getDataSourceUrl", "parameters": [], "result": "String", "description": "Returns a URL for the data in this range, which can be used to create charts and queries."}, {"name": "getDataTable", "parameters": [], "result": "DataTable", "description": "Return the data inside this object as a DataTable."}, {"name": "getDataTable", "parameters": [{"name": "firstRowIsHeader", "type": "Boolean"}], "result": "DataTable", "description": "Return the data inside this range as a DataTable."}, {"name": "getDataValidation", "parameters": [], "result": "DataValidation", "description": "Returns the data validation rule for the top-left cell in the range."}, {"name": "getDataValidations", "parameters": [], "result": "DataValidation[][]", "description": "Returns the data validation rules for all cells in the range."}, {"name": "getDeveloperMetadata", "parameters": [], "result": "DeveloperMetadata[]", "description": "Get the developer metadata associated with this range."}, {"name": "getDisplayValue", "parameters": [], "result": "String", "description": "Returns the displayed value of the top-left cell in the range."}, {"name": "getDisplayValues", "parameters": [], "result": "String[][]", "description": "Returns the rectangular grid of values for this range."}, {"name": "getFilter", "parameters": [], "result": "Filter", "description": "Returns the filter in the sheet this range belongs to, or null if there is no filter on\nthe sheet."}, {"name": "getFontColor", "parameters": [], "result": "String", "description": "Returns the font color of the cell in the top-left corner of the range, in CSS notation (such\nas '#ffffff' or 'white')."}, {"name": "getFontColorObject", "parameters": [], "result": "Color", "description": "Returns the font color of the cell in the top-left corner of the range."}, {"name": "getFontColorObjects", "parameters": [], "result": "Color[][]", "description": "Returns the font colors of the cells in the range."}, {"name": "getFontColors", "parameters": [], "result": "String[][]", "description": "Returns the font colors of the cells in the range in CSS notation (such as '#ffffff' or\n'white')."}, {"name": "getFontFamilies", "parameters": [], "result": "String[][]", "description": "Returns the font families of the cells in the range."}, {"name": "getFontFamily", "parameters": [], "result": "String", "description": "Returns the font family of the cell in the top-left corner of the range."}, {"name": "getFontLine", "parameters": [], "result": "String", "description": "Gets the line style of the cell in the top-left corner of the range ('underline',\n'line-through', or 'none')."}, {"name": "getFontLines", "parameters": [], "result": "String[][]", "description": "Gets the line style of the cells in the range ('underline', 'line-through', or\n'none')."}, {"name": "getFontSize", "parameters": [], "result": "Integer", "description": "Returns the font size in point size of the cell in the top-left corner of the range."}, {"name": "getFontSizes", "parameters": [], "result": "Integer[][]", "description": "Returns the font sizes of the cells in the range."}, {"name": "getFontStyle", "parameters": [], "result": "String", "description": "Returns the font style ('italic' or 'normal') of the cell in the top-left\ncorner of the range."}, {"name": "getFontStyles", "parameters": [], "result": "String[][]", "description": "Returns the font styles of the cells in the range."}, {"name": "getFontWeight", "parameters": [], "result": "String", "description": "Returns the font weight (normal/bold) of the cell in the top-left corner of the range."}, {"name": "getFontWeights", "parameters": [], "result": "String[][]", "description": "Returns the font weights of the cells in the range."}, {"name": "getFormula", "parameters": [], "result": "String", "description": "Returns the formula (A1 notation) for the top-left cell of the range, or an empty string if the\ncell is empty or doesn't contain a formula."}, {"name": "getFormulaR1C1", "parameters": [], "result": "String", "description": "Returns the formula (R1C1 notation) for a given cell, or null if none."}, {"name": "getFormulas", "parameters": [], "result": "String[][]", "description": "Returns the formulas (A1 notation) for the cells in the range."}, {"name": "getFormulasR1C1", "parameters": [], "result": "String[][]", "description": "Returns the formulas (R1C1 notation) for the cells in the range."}, {"name": "getGridId", "parameters": [], "result": "Integer", "description": "Returns the grid ID of the range's parent sheet."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Returns the height of the range."}, {"name": "getHorizontalAlignment", "parameters": [], "result": "String", "description": "Returns the horizontal alignment of the text (left/center/right) of the cell in the top-left\ncorner of the range."}, {"name": "getHorizontalAlignments", "parameters": [], "result": "String[][]", "description": "Returns the horizontal alignments of the cells in the range."}, {"name": "getLastColumn", "parameters": [], "result": "Integer", "description": "Returns the end column position."}, {"name": "getLastRow", "parameters": [], "result": "Integer", "description": "Returns the end row position."}, {"name": "getMergedRanges", "parameters": [], "result": "Range[]", "description": "Returns an array of Range objects representing merged cells that either are fully\nwithin the current range, or contain at least one cell in the current range."}, {"name": "getNextDataCell", "parameters": [{"name": "direction", "type": "Direction"}], "result": "Range", "description": "Starting at the cell in the first column and row of the range, returns the next cell in the\ngiven direction that is the edge of a contiguous range of cells with data in them or the cell\nat the edge of the spreadsheet in that direction."}, {"name": "getNote", "parameters": [], "result": "String", "description": "Returns the note associated with the given range."}, {"name": "getNotes", "parameters": [], "result": "String[][]", "description": "Returns the notes associated with the cells in the range."}, {"name": "getNumColumns", "parameters": [], "result": "Integer", "description": "Returns the number of columns in this range."}, {"name": "getNumRows", "parameters": [], "result": "Integer", "description": "Returns the number of rows in this range."}, {"name": "getNumberFormat", "parameters": [], "result": "String", "description": "Get the number or date formatting of the top-left cell of the given range."}, {"name": "getNumberFormats", "parameters": [], "result": "String[][]", "description": "Returns the number or date formats for the cells in the range."}, {"name": "getRichTextValue", "parameters": [], "result": "RichTextValue", "description": "Returns the Rich Text value for the top left cell of the range, or null if the cell\nvalue is not text."}, {"name": "getRichTextValues", "parameters": [], "result": "RichTextValue[][]", "description": "Returns the Rich Text values for the cells in the range."}, {"name": "getRow", "parameters": [], "result": "Integer", "description": "Returns the row position for this range."}, {"name": "getRowIndex", "parameters": [], "result": "Integer", "description": "Returns the row position for this range."}, {"name": "getSheet", "parameters": [], "result": "Sheet", "description": "Returns the sheet this range belongs to."}, {"name": "getTextDirection", "parameters": [], "result": "TextDirection", "description": "Returns the text direction for the top left cell of the range."}, {"name": "getTextDirections", "parameters": [], "result": "TextDirection[][]", "description": "Returns the text directions for the cells in the range."}, {"name": "getTextRotation", "parameters": [], "result": "TextRotation", "description": "Returns the text rotation settings for the top left cell of the range."}, {"name": "getTextRotations", "parameters": [], "result": "TextRotation[][]", "description": "Returns the text rotation settings for the cells in the range."}, {"name": "getTextStyle", "parameters": [], "result": "TextStyle", "description": "Returns the text style for the top left cell of the range."}, {"name": "getTextStyles", "parameters": [], "result": "TextStyle[][]", "description": "Returns the text styles for the cells in the range."}, {"name": "getValue", "parameters": [], "result": "Object", "description": "Returns the value of the top-left cell in the range."}, {"name": "getValues", "parameters": [], "result": "Object[][]", "description": "Returns the rectangular grid of values for this range."}, {"name": "getVerticalAlignment", "parameters": [], "result": "String", "description": "Returns the vertical alignment (top/middle/bottom) of the cell in the top-left corner of the\nrange."}, {"name": "getVerticalAlignments", "parameters": [], "result": "String[][]", "description": "Returns the vertical alignments of the cells in the range."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Returns the width of the range in columns."}, {"name": "getWrap", "parameters": [], "result": "Boolean", "description": "Returns whether the text in the cell wraps."}, {"name": "getWrapStrategies", "parameters": [], "result": "WrapStrategy[][]", "description": "Returns the text wrapping strategies for the cells in the range."}, {"name": "getWrapStrategy", "parameters": [], "result": "WrapStrategy", "description": "Returns the text wrapping strategy for the top left cell of the range."}, {"name": "getWraps", "parameters": [], "result": "Boolean[][]", "description": "Returns whether the text in the cells wrap."}, {"name": "insertCells", "parameters": [{"name": "shiftDimension", "type": "Dimension"}], "result": "Range", "description": "Inserts empty cells into this range."}, {"name": "insertCheckboxes", "parameters": [], "result": "Range", "description": "Inserts checkboxes into each cell in the range, configured with true for checked and\nfalse for unchecked."}, {"name": "insertCheckboxes", "parameters": [{"name": "checkedValue", "type": "Object"}], "result": "Range", "description": "Inserts checkboxes into each cell in the range, configured with a custom value for checked and\nthe empty string for unchecked."}, {"name": "insertCheckboxes", "parameters": [{"name": "checkedValue", "type": "Object"}, {"name": "uncheckedValue", "type": "Object"}], "result": "Range", "description": "Inserts checkboxes into each cell in the range, configured with custom values for the checked\nand unchecked states."}, {"name": "isBlank", "parameters": [], "result": "Boolean", "description": "Returns true if the range is totally blank."}, {"name": "isChecked", "parameters": [], "result": "Boolean", "description": "Returns whether all cells in the range have their checkbox state as 'checked'."}, {"name": "isEndColumnBounded", "parameters": [], "result": "Boolean", "description": "Determines whether the end of the range is bound to a particular column."}, {"name": "isEndRowBounded", "parameters": [], "result": "Boolean", "description": "Determines whether the end of the range is bound to a particular row."}, {"name": "isPartOfMerge", "parameters": [], "result": "Boolean", "description": "Returns true if the cells in the current range overlap any merged cells."}, {"name": "isStartColumnBounded", "parameters": [], "result": "Boolean", "description": "Determines whether the start of the range is bound to a particular column."}, {"name": "isStartRowBounded", "parameters": [], "result": "Boolean", "description": "Determines whether the start of the range is bound to a particular row."}, {"name": "merge", "parameters": [], "result": "Range", "description": "Merges the cells in the range together into a single block."}, {"name": "mergeAcross", "parameters": [], "result": "Range", "description": "Merge the cells in the range across the columns of the range."}, {"name": "mergeVertically", "parameters": [], "result": "Range", "description": "Merges the cells in the range together."}, {"name": "moveTo", "parameters": [{"name": "target", "type": "Range"}], "result": "void", "description": "Cut and paste (both format and values) from this range to the target range."}, {"name": "offset", "parameters": [{"name": "rowOffset", "type": "Integer"}, {"name": "columnOffset", "type": "Integer"}], "result": "Range", "description": "Returns a new range that is offset from this range by the given number of rows and columns\n(which can be negative)."}, {"name": "offset", "parameters": [{"name": "rowOffset", "type": "Integer"}, {"name": "columnOffset", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "Range", "description": "Returns a new range that is relative to the current range, whose upper left point is offset\nfrom the current range by the given rows and columns, and with the given height in cells."}, {"name": "offset", "parameters": [{"name": "rowOffset", "type": "Integer"}, {"name": "columnOffset", "type": "Integer"}, {"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Range", "description": "Returns a new range that is relative to the current range, whose upper left point is offset\nfrom the current range by the given rows and columns, and with the given height and width in\ncells."}, {"name": "protect", "parameters": [], "result": "Protection", "description": "Creates an object that can protect the range from being edited except by users who have\npermission."}, {"name": "randomize", "parameters": [], "result": "Range", "description": "Randomizes the order of the rows in the given range."}, {"name": "removeCheckboxes", "parameters": [], "result": "Range", "description": "Removes all checkboxes from the range."}, {"name": "removeDuplicates", "parameters": [], "result": "Range", "description": "Removes rows within this range that contain values that are duplicates of values in any\nprevious row."}, {"name": "removeDuplicates", "parameters": [{"name": "columnsToCompare", "type": "Integer"}], "result": "Range", "description": "Removes rows within this range that contain values in the specified columns that are duplicates\nof values any previous row."}, {"name": "setBackground", "parameters": [{"name": "color", "type": "String"}], "result": "Range", "description": "Sets the background color of all cells in the range in CSS notation (such as '#ffffff'\nor 'white')."}, {"name": "setBackgroundObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Range", "description": "Sets the background color of all cells in the range."}, {"name": "setBackgroundObjects", "parameters": [{"name": "color", "type": "Color"}], "result": "Range", "description": "Sets a rectangular grid of background colors (must match dimensions of this range)."}, {"name": "setBackgroundRGB", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "Range", "description": "Sets the background to the given color using RGB values (integers between 0 and 255 inclusive)."}, {"name": "setBackgrounds", "parameters": [{"name": "color", "type": "String"}], "result": "Range", "description": "Sets a rectangular grid of background colors (must match dimensions of this range)."}, {"name": "setBorder", "parameters": [{"name": "top", "type": "Boolean"}, {"name": "left", "type": "Boolean"}, {"name": "bottom", "type": "Boolean"}, {"name": "right", "type": "Boolean"}, {"name": "vertical", "type": "Boolean"}, {"name": "horizontal", "type": "Boolean"}], "result": "Range", "description": "Sets the border property."}, {"name": "setBorder", "parameters": [{"name": "top", "type": "Boolean"}, {"name": "left", "type": "Boolean"}, {"name": "bottom", "type": "Boolean"}, {"name": "right", "type": "Boolean"}, {"name": "vertical", "type": "Boolean"}, {"name": "horizontal", "type": "Boolean"}, {"name": "color", "type": "String"}, {"name": "style", "type": "BorderStyle"}], "result": "Range", "description": "Sets the border property with color and/or style."}, {"name": "setDataValidation", "parameters": [{"name": "rule", "type": "DataValidation"}], "result": "Range", "description": "Sets one data validation rule for all cells in the range."}, {"name": "setDataValidations", "parameters": [{"name": "rules", "type": "DataValidation"}], "result": "Range", "description": "Sets the data validation rules for all cells in the range."}, {"name": "setFontColor", "parameters": [{"name": "color", "type": "String"}], "result": "Range", "description": "Sets the font color in CSS notation (such as '#ffffff' or 'white')."}, {"name": "setFontColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Range", "description": "Sets the font color of the given range."}, {"name": "setFontColorObjects", "parameters": [{"name": "colors", "type": "Color"}], "result": "Range", "description": "Sets a rectangular grid of font colors (must match dimensions of this range)."}, {"name": "setFontColors", "parameters": [{"name": "colors", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font colors (must match dimensions of this range)."}, {"name": "setFontFamilies", "parameters": [{"name": "fontFamilies", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font families (must match dimensions of this range)."}, {"name": "setFontFamily", "parameters": [{"name": "fontFamily", "type": "String"}], "result": "Range", "description": "Sets the font family, such as \"Arial\" or \"Helvetica\"."}, {"name": "setFontLine", "parameters": [{"name": "fontLine", "type": "String"}], "result": "Range", "description": "Sets the font line style of the given range ('underline', 'line-through', or\n'none')."}, {"name": "setFontLines", "parameters": [{"name": "fontLines", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of line styles (must match dimensions of this range)."}, {"name": "setFontSize", "parameters": [{"name": "size", "type": "Integer"}], "result": "Range", "description": "Sets the font size, with the size being the point size to use."}, {"name": "setFontSizes", "parameters": [{"name": "sizes", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font sizes (must match dimensions of this range)."}, {"name": "setFontStyle", "parameters": [{"name": "fontStyle", "type": "String"}], "result": "Range", "description": "Set the font style for the given range ('italic' or 'normal')."}, {"name": "setFontStyles", "parameters": [{"name": "fontStyles", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font styles (must match dimensions of this range)."}, {"name": "setFontWeight", "parameters": [{"name": "fontWeight", "type": "String"}], "result": "Range", "description": "Set the font weight for the given range (normal/bold)."}, {"name": "setFontWeights", "parameters": [{"name": "fontWeights", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font weights (must match dimensions of this range)."}, {"name": "setFormula", "parameters": [{"name": "formula", "type": "String"}], "result": "Range", "description": "Updates the formula for this range."}, {"name": "setFormulaR1C1", "parameters": [{"name": "formula", "type": "String"}], "result": "Range", "description": "Updates the formula for this range."}, {"name": "setFormulas", "parameters": [{"name": "formulas", "type": "String"}], "result": "Range", "description": "Sets a rectangular grid of formulas (must match dimensions of this range)."}, {"name": "setFormulasR1C1", "parameters": [{"name": "formulas", "type": "String"}], "result": "Range", "description": "Sets a rectangular grid of formulas (must match dimensions of this range)."}, {"name": "setHorizontalAlignment", "parameters": [{"name": "alignment", "type": "String"}], "result": "Range", "description": "Set the horizontal (left to right) alignment for the given range (left/center/right)."}, {"name": "setHorizontalAlignments", "parameters": [{"name": "alignments", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of horizontal alignments."}, {"name": "setNote", "parameters": [{"name": "note", "type": "String"}], "result": "Range", "description": "Sets the note to the given value."}, {"name": "setNotes", "parameters": [{"name": "notes", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of notes (must match dimensions of this range)."}, {"name": "setNumberFormat", "parameters": [{"name": "numberFormat", "type": "String"}], "result": "Range", "description": "Sets the number or date format to the given formatting string."}, {"name": "setNumberFormats", "parameters": [{"name": "numberFormats", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of number or date formats (must match dimensions of this range)."}, {"name": "setRichTextValue", "parameters": [{"name": "value", "type": "RichTextValue"}], "result": "Range", "description": "Sets the Rich Text value for the cells in the range."}, {"name": "setRichTextValues", "parameters": [{"name": "values", "type": "RichTextValue"}], "result": "Range", "description": "Sets a rectangular grid of Rich Text values."}, {"name": "setShowHyperlink", "parameters": [{"name": "showHyperlink", "type": "Boolean"}], "result": "Range", "description": "Sets whether or not the range should show hyperlinks."}, {"name": "setTextDirection", "parameters": [{"name": "direction", "type": "TextDirection"}], "result": "Range", "description": "Sets the text direction for the cells in the range."}, {"name": "setTextDirections", "parameters": [{"name": "directions", "type": "TextDirection"}], "result": "Range", "description": "Sets a rectangular grid of text directions."}, {"name": "setTextRotation", "parameters": [{"name": "degrees", "type": "Integer"}], "result": "Range", "description": "Sets the text rotation settings for the cells in the range."}, {"name": "setTextRotation", "parameters": [{"name": "rotation", "type": "TextRotation"}], "result": "Range", "description": "Sets the text rotation settings for the cells in the range."}, {"name": "setTextRotations", "parameters": [{"name": "rotations", "type": "TextRotation"}], "result": "Range", "description": "Sets a rectangular grid of text rotations."}, {"name": "setTextStyle", "parameters": [{"name": "style", "type": "TextStyle"}], "result": "Range", "description": "Sets the text style for the cells in the range."}, {"name": "setTextStyles", "parameters": [{"name": "styles", "type": "TextStyle"}], "result": "Range", "description": "Sets a rectangular grid of text styles."}, {"name": "setValue", "parameters": [{"name": "value", "type": "Object"}], "result": "Range", "description": "Sets the value of the range."}, {"name": "setValues", "parameters": [{"name": "values", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of values (must match dimensions of this range)."}, {"name": "setVerticalAlignment", "parameters": [{"name": "alignment", "type": "String"}], "result": "Range", "description": "Set the vertical (top to bottom) alignment for the given range (top/middle/bottom)."}, {"name": "setVerticalAlignments", "parameters": [{"name": "alignments", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of vertical alignments (must match dimensions of this range)."}, {"name": "setVerticalText", "parameters": [{"name": "isVertical", "type": "Boolean"}], "result": "Range", "description": "Sets whether or not to stack the text for the cells in the range."}, {"name": "setWrap", "parameters": [{"name": "isWrapEnabled", "type": "Boolean"}], "result": "Range", "description": "Set the cell wrap of the given range."}, {"name": "setWrapStrategies", "parameters": [{"name": "strategies", "type": "WrapStrategy"}], "result": "Range", "description": "Sets a rectangular grid of wrap strategies."}, {"name": "setWrapStrategy", "parameters": [{"name": "strategy", "type": "WrapStrategy"}], "result": "Range", "description": "Sets the text wrapping strategy for the cells in the range."}, {"name": "setWraps", "parameters": [{"name": "isWrapEnabled", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of word wrap policies (must match dimensions of this range)."}, {"name": "shiftColumnGroupDepth", "parameters": [{"name": "delta", "type": "Integer"}], "result": "Range", "description": "Changes the column grouping depth of the range by the specified amount."}, {"name": "shiftRowGroupDepth", "parameters": [{"name": "delta", "type": "Integer"}], "result": "Range", "description": "Changes the row grouping depth of the range by the specified amount."}, {"name": "sort", "parameters": [{"name": "sortSpecObj", "type": "Object"}], "result": "Range", "description": "Sorts the cells in the given range, by column and order specified."}, {"name": "splitTextToColumns", "parameters": [], "result": "void", "description": "Splits a column of text into multiple columns based on an auto-detected delimiter."}, {"name": "splitTextToColumns", "parameters": [{"name": "delimiter", "type": "String"}], "result": "void", "description": "Splits a column of text into multiple columns using the specified string as a custom delimiter."}, {"name": "splitTextToColumns", "parameters": [{"name": "delimiter", "type": "TextToColumnsDelimiter"}], "result": "void", "description": "Splits a column of text into multiple columns based on the specified delimiter."}, {"name": "trimWhitespace", "parameters": [], "result": "Range", "description": "Trims the whitespace (such as spaces, tabs, or new lines) in every cell in this range."}, {"name": "uncheck", "parameters": [], "result": "Range", "description": "Changes the state of the checkboxes in the range to \u201cunchecked\u201d."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/update-draft-to-recipients-action", "name": "UpdateDraftToRecipientsAction", "type": "class", "methods": [{"name": "addUpdateToRecipients", "parameters": [{"name": "toRecipientEmails", "type": "String"}], "result": "UpdateDraftToRecipientsAction", "description": "Updates the To recipients of an email draft."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/widget", "name": "Widget", "type": "class", "methods": [], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/update-draft-subject-action", "name": "UpdateDraftSubjectAction", "type": "class", "methods": [{"name": "addUpdateSubject", "parameters": [{"name": "subject", "type": "String"}], "result": "UpdateDraftSubjectAction", "description": "Updates the subject line of an email draft."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/icon", "name": "Icon", "type": "enum", "methods": [], "properties": [{"name": "NONE", "type": "Enum", "url": "", "description": "No icon. Default."}, {"name": "AIRPLANE", "type": "Enum", "url": "", "description": ""}, {"name": "BOOKMARK", "type": "Enum", "url": "", "description": ""}, {"name": "BUS", "type": "Enum", "url": "", "description": ""}, {"name": "CAR", "type": "Enum", "url": "", "description": ""}, {"name": "CLOCK", "type": "Enum", "url": "", "description": ""}, {"name": "CONFIRMATION_NUMBER_ICON", "type": "Enum", "url": "", "description": ""}, {"name": "DOLLAR", "type": "Enum", "url": "", "description": ""}, {"name": "DESCRIPTION", "type": "Enum", "url": "", "description": ""}, {"name": "EMAIL", "type": "Enum", "url": "", "description": ""}, {"name": "EVENT_PERFORMER", "type": "Enum", "url": "", "description": ""}, {"name": "EVENT_SEAT", "type": "Enum", "url": "", "description": ""}, {"name": "FLIGHT_ARRIVAL", "type": "Enum", "url": "", "description": ""}, {"name": "FLIGHT_DEPARTURE", "type": "Enum", "url": "", "description": ""}, {"name": "HOTEL", "type": "Enum", "url": "", "description": ""}, {"name": "HOTEL_ROOM_TYPE", "type": "Enum", "url": "", "description": ""}, {"name": "INVITE", "type": "Enum", "url": "", "description": ""}, {"name": "MAP_PIN", "type": "Enum", "url": "", "description": ""}, {"name": "MEMBERSHIP", "type": "Enum", "url": "", "description": ""}, {"name": "MULTIPLE_PEOPLE", "type": "Enum", "url": "", "description": ""}, {"name": "OFFER", "type": "Enum", "url": "", "description": ""}, {"name": "PERSON", "type": "Enum", "url": "", "description": ""}, {"name": "PHONE", "type": "Enum", "url": "", "description": ""}, {"name": "RESTAURANT_ICON", "type": "Enum", "url": "", "description": ""}, {"name": "SHOPPING_CART", "type": "Enum", "url": "", "description": ""}, {"name": "STAR", "type": "Enum", "url": "", "description": ""}, {"name": "STORE", "type": "Enum", "url": "", "description": ""}, {"name": "TICKET", "type": "Enum", "url": "", "description": ""}, {"name": "TRAIN", "type": "Enum", "url": "", "description": ""}, {"name": "VIDEO_CAMERA", "type": "Enum", "url": "", "description": ""}, {"name": "VIDEO_PLAY", "type": "Enum", "url": "", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/update-draft-cc-recipients-action", "name": "UpdateDraftCcRecipientsAction", "type": "class", "methods": [{"name": "addUpdateCcRecipients", "parameters": [{"name": "ccRecipientEmails", "type": "String"}], "result": "UpdateDraftCcRecipientsAction", "description": "Updates the Cc recipients of an email draft."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/update-draft-body-action", "name": "UpdateDraftBodyAction", "type": "class", "methods": [{"name": "addUpdateContent", "parameters": [{"name": "content", "type": "String"}, {"name": "contentType", "type": "ContentType"}], "result": "UpdateDraftBodyAction", "description": "Adds the specified content to the draft body."}, {"name": "setUpdateType", "parameters": [{"name": "updateType", "type": "UpdateDraftBodyType"}], "result": "UpdateDraftBodyAction", "description": "Sets the UpdateDraftBodyType of this update action on the draft body."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/update-draft-action-response-builder", "name": "UpdateDraftActionResponseBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "UpdateDraftActionResponse", "description": "Builds the current update draft action response and validates it."}, {"name": "setUpdateDraftBccRecipientsAction", "parameters": [{"name": "updateDraftBccRecipientsAction", "type": "UpdateDraftBccRecipientsAction"}], "result": "UpdateDraftActionResponseBuilder", "description": "Sets an action that updates the email Bcc recipients of a draft."}, {"name": "setUpdateDraftBodyAction", "parameters": [{"name": "updateDraftBodyAction", "type": "UpdateDraftBodyAction"}], "result": "UpdateDraftActionResponseBuilder", "description": "Set an action that updates the email body of a draft."}, {"name": "setUpdateDraftCcRecipientsAction", "parameters": [{"name": "updateDraftCcRecipientsAction", "type": "UpdateDraftCcRecipientsAction"}], "result": "UpdateDraftActionResponseBuilder", "description": "Sets an action that updates the Cc recipients of a draft."}, {"name": "setUpdateDraftSubjectAction", "parameters": [{"name": "updateDraftSubjectAction", "type": "UpdateDraftSubjectAction"}], "result": "UpdateDraftActionResponseBuilder", "description": "Sets an action that updates the subject line of a draft."}, {"name": "setUpdateDraftToRecipientsAction", "parameters": [{"name": "updateDraftToRecipientsAction", "type": "UpdateDraftToRecipientsAction"}], "result": "UpdateDraftActionResponseBuilder", "description": "Sets an action that updates the To recipients of a draft."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/update-draft-action-response", "name": "UpdateDraftActionResponse", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/update-draft-bcc-recipients-action", "name": "UpdateDraftBccRecipientsAction", "type": "class", "methods": [{"name": "addUpdateBccRecipients", "parameters": [{"name": "bccRecipientEmails", "type": "String"}], "result": "UpdateDraftBccRecipientsAction", "description": "Updates the Bcc recipients of an email draft."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/universal-action-response", "name": "UniversalActionResponse", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/time-picker", "name": "TimePicker", "type": "class", "methods": [{"name": "setFieldName", "parameters": [{"name": "fieldName", "type": "String"}], "result": "TimePicker", "description": "Sets the field name that identifies this picker in the event object that is generated when\nthere is a UI interaction."}, {"name": "setHours", "parameters": [{"name": "hours", "type": "Integer"}], "result": "TimePicker", "description": "Sets the prefilled hours value to set in the input field."}, {"name": "setMinutes", "parameters": [{"name": "minutes", "type": "Integer"}], "result": "TimePicker", "description": "Sets the prefilled minutes value to set in the input field."}, {"name": "setOnChangeAction", "parameters": [{"name": "action", "type": "Action"}], "result": "TimePicker", "description": "Sets an Action that the script performs whenever the picker input changes."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "TimePicker", "description": "Sets the title displayed above the input field."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/border-type", "name": "BorderType", "type": "enum", "methods": [], "properties": [{"name": "NO_BORDER", "type": "Enum", "url": "", "description": "No border style."}, {"name": "STROKE", "type": "Enum", "url": "", "description": "Stroke border style."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/switch", "name": "Switch", "type": "class", "methods": [{"name": "setControlType", "parameters": [{"name": "controlType", "type": "SwitchControlType"}], "result": "Switch", "description": "Sets the control type of the switch."}, {"name": "setFieldName", "parameters": [{"name": "fieldName", "type": "String"}], "result": "Switch", "description": "Sets the key that identifies this switch in the event object that is generated when there is a\nUI interaction."}, {"name": "setOnChangeAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Switch", "description": "Sets the action to take when the switch is toggled."}, {"name": "setSelected", "parameters": [{"name": "selected", "type": "Boolean"}], "result": "Switch", "description": "Sets whether this switch should start as selected or unselected."}, {"name": "setValue", "parameters": [{"name": "value", "type": "String"}], "result": "Switch", "description": "Sets the value that is sent as the form input when this switch is toggled on."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/text-paragraph", "name": "TextParagraph", "type": "class", "methods": [{"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "TextParagraph", "description": "Sets the text of the paragraph."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/text-button", "name": "TextButton", "type": "class", "methods": [{"name": "setAltText", "parameters": [{"name": "altText", "type": "String"}], "result": "TextButton", "description": "Sets the alternative text of the button for accessibility."}, {"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "TextButton", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setBackgroundColor", "parameters": [{"name": "backgroundColor", "type": "String"}], "result": "TextButton", "description": "Sets the background color for TextButtonStyle.FILLED button."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "TextButton", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setDisabled", "parameters": [{"name": "disabled", "type": "Boolean"}], "result": "TextButton", "description": "Sets whether the button is disabled."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "TextButton", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "TextButton", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "TextButton", "description": "Sets a URL to be opened when the object is clicked."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "TextButton", "description": "Sets the text that displays on the button."}, {"name": "setTextButtonStyle", "parameters": [{"name": "textButtonStyle", "type": "TextButtonStyle"}], "result": "TextButton", "description": "Sets the button style."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/universal-action-response-builder", "name": "UniversalActionResponseBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "UniversalActionResponse", "description": "Builds the current universal action response and validates it."}, {"name": "displayAddOnCards", "parameters": [{"name": "cardObjects", "type": "Object"}], "result": "UniversalActionResponseBuilder", "description": "Displays the add-on with the specified cards."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "UniversalActionResponseBuilder", "description": "Sets the URL to open when the universal action is selected."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/suggestions-response-builder", "name": "SuggestionsResponseBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "SuggestionsResponse", "description": "Builds the current suggestions response and validates it."}, {"name": "setSuggestions", "parameters": [{"name": "suggestions", "type": "Suggestions"}], "result": "SuggestionsResponseBuilder", "description": "Sets the suggestions used in auto complete in text fields."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/suggestions-response", "name": "SuggestionsResponse", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/text-input", "name": "TextInput", "type": "class", "methods": [{"name": "setFieldName", "parameters": [{"name": "fieldName", "type": "String"}], "result": "TextInput", "description": "Sets the key that identifies this text input in the event object that is generated when there\nis a UI interaction."}, {"name": "setHint", "parameters": [{"name": "hint", "type": "String"}], "result": "TextInput", "description": "Sets a hint for the text input."}, {"name": "setMultiline", "parameters": [{"name": "multiline", "type": "Boolean"}], "result": "TextInput", "description": "Sets whether the input text shows on one line or multiple lines."}, {"name": "setOnChangeAction", "parameters": [{"name": "action", "type": "Action"}], "result": "TextInput", "description": "Sets an action to be performed whenever the text input changes."}, {"name": "setSuggestions", "parameters": [{"name": "suggestions", "type": "Suggestions"}], "result": "TextInput", "description": "Sets the suggestions for autocompletion in the text field."}, {"name": "setSuggestionsAction", "parameters": [{"name": "suggestionsAction", "type": "Action"}], "result": "TextInput", "description": "Sets the callback action to fetch suggestions based on user input for autocompletion."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "TextInput", "description": "Sets the title to be shown above the input field."}, {"name": "setValue", "parameters": [{"name": "value", "type": "String"}], "result": "TextInput", "description": "Sets the pre-filled value to be set in the input field."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/suggestions", "name": "Suggestions", "type": "class", "methods": [{"name": "addSuggestion", "parameters": [{"name": "suggestion", "type": "String"}], "result": "Suggestions", "description": "Add a text suggestion."}, {"name": "addSuggestions", "parameters": [{"name": "suggestions", "type": "Object"}], "result": "Suggestions", "description": "Add a list of text suggestions."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/selection-input", "name": "SelectionInput", "type": "class", "methods": [{"name": "addItem", "parameters": [{"name": "text", "type": "Object"}, {"name": "value", "type": "Object"}, {"name": "selected", "type": "Boolean"}], "result": "SelectionInput", "description": "Adds a new item that can be selected."}, {"name": "setFieldName", "parameters": [{"name": "fieldName", "type": "String"}], "result": "SelectionInput", "description": "Sets the key that identifies this selection input in the event object that is generated when\nthere is a UI interaction."}, {"name": "setOnChangeAction", "parameters": [{"name": "action", "type": "Action"}], "result": "SelectionInput", "description": "Sets an Action to be performed whenever the selection input changes."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "SelectionInput", "description": "Sets the title to be shown ahead of the input field."}, {"name": "setType", "parameters": [{"name": "type", "type": "SelectionInputType"}], "result": "SelectionInput", "description": "Sets the type of this input."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/open-link", "name": "OpenLink", "type": "class", "methods": [{"name": "setOnClose", "parameters": [{"name": "onClose", "type": "OnClose"}], "result": "OpenLink", "description": "Sets the behavior of the URL action when the URL window or tab is closed."}, {"name": "setOpenAs", "parameters": [{"name": "openAs", "type": "OpenAs"}], "result": "OpenLink", "description": "Sets the behavior of URL when it is opened."}, {"name": "setUrl", "parameters": [{"name": "url", "type": "String"}], "result": "OpenLink", "description": "Sets the URL to be opened."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/notification", "name": "Notification", "type": "class", "methods": [{"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Notification", "description": "Sets the text to show in the notification."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/key-value", "name": "KeyValue", "type": "class", "methods": [{"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "KeyValue", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "KeyValue", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "KeyValue", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "KeyValue", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "KeyValue", "description": "Sets a URL to be opened when the object is clicked."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/image-crop-style", "name": "ImageCropStyle", "type": "class", "methods": [{"name": "setAspectRatio", "parameters": [{"name": "ratio", "type": "Number"}], "result": "ImageCropStyle", "description": "Sets the aspect ratio to use if the crop type is RECTANGLE_CUSTOM."}, {"name": "setImageCropType", "parameters": [{"name": "type", "type": "ImageCropType"}], "result": "ImageCropStyle", "description": "Sets the crop type for the image."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/navigation", "name": "Navigation", "type": "class", "methods": [{"name": "popCard", "parameters": [], "result": "Navigation", "description": "Pops a card from the navigation stack."}, {"name": "popToNamedCard", "parameters": [{"name": "cardName", "type": "String"}], "result": "Navigation", "description": "Pops to the specified card by its card name."}, {"name": "popToRoot", "parameters": [], "result": "Navigation", "description": "Pops the card stack to the root card."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "pushCard", "parameters": [{"name": "card", "type": "Card"}], "result": "Navigation", "description": "Pushes the given card onto the stack."}, {"name": "updateCard", "parameters": [{"name": "card", "type": "Card"}], "result": "Navigation", "description": "Does an in-place replacement of the current card."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/image-button", "name": "ImageButton", "type": "class", "methods": [{"name": "setAltText", "parameters": [{"name": "altText", "type": "String"}], "result": "ImageButton", "description": "Sets the alternative text of the button for accessibility."}, {"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "ImageButton", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "ImageButton", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setIcon", "parameters": [{"name": "icon", "type": "Icon"}], "result": "ImageButton", "description": "Sets a predefined Icon to display on the button."}, {"name": "setIconUrl", "parameters": [{"name": "url", "type": "String"}], "result": "ImageButton", "description": "Sets the URL of an image to use as this button's icon."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "ImageButton", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "ImageButton", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "ImageButton", "description": "Sets a URL to be opened when the object is clicked."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/grid-item", "name": "GridItem", "type": "class", "methods": [{"name": "setIdentifier", "parameters": [{"name": "id", "type": "String"}], "result": "GridItem", "description": "Sets the identifier for the grid item."}, {"name": "setImage", "parameters": [{"name": "image", "type": "ImageComponent"}], "result": "GridItem", "description": "Sets the image for this grid item."}, {"name": "setLayout", "parameters": [{"name": "layout", "type": "GridItemLayout"}], "result": "GridItem", "description": "Sets the layout of text and image for the grid item."}, {"name": "setSubtitle", "parameters": [{"name": "subtitle", "type": "String"}], "result": "GridItem", "description": "Sets the subtitle of the grid item."}, {"name": "setTextAlignment", "parameters": [{"name": "alignment", "type": "HorizontalAlignment"}], "result": "GridItem", "description": "Sets the horizontal alignment of the grid item."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "GridItem", "description": "Sets the title text of the grid item."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/image-component", "name": "ImageComponent", "type": "class", "methods": [{"name": "setAltText", "parameters": [{"name": "altText", "type": "String"}], "result": "ImageComponent", "description": "Sets the alternative text of the image."}, {"name": "setBorderStyle", "parameters": [{"name": "borderStyle", "type": "BorderStyle"}], "result": "ImageComponent", "description": "Sets the border style applied to the image."}, {"name": "setCropStyle", "parameters": [{"name": "imageCropStyle", "type": "ImageCropStyle"}], "result": "ImageComponent", "description": "Sets the crop style for the image."}, {"name": "setImageUrl", "parameters": [{"name": "url", "type": "String"}], "result": "ImageComponent", "description": "Sets the URL of the image."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/image", "name": "Image", "type": "class", "methods": [{"name": "setAltText", "parameters": [{"name": "altText", "type": "String"}], "result": "Image", "description": "Sets the alternative text of the image for accessibility."}, {"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "Image", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "Image", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setImageUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Image", "description": "Sets the image to use by providing its URL or data string."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Image", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Image", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "Image", "description": "Sets a URL to be opened when the object is clicked."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/fixed-footer", "name": "FixedFooter", "type": "class", "methods": [{"name": "setPrimaryButton", "parameters": [{"name": "button", "type": "TextButton"}], "result": "FixedFooter", "description": "Set the primary button in the fixed footer."}, {"name": "setSecondaryButton", "parameters": [{"name": "button", "type": "TextButton"}], "result": "FixedFooter", "description": "Set the secondary button in the fixed footer."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/editor-file-scope-action-response-builder", "name": "EditorFileScopeActionResponseBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "EditorFileScopeActionResponse", "description": "Builds the current Editor action response."}, {"name": "requestFileScopeForActiveDocument", "parameters": [], "result": "EditorFileScopeActionResponseBuilder", "description": "Requests the drive.file scope for the current active Editor document."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/grid", "name": "Grid", "type": "class", "methods": [{"name": "addItem", "parameters": [{"name": "gridItem", "type": "GridItem"}], "result": "Grid", "description": "Adds a new grid item to the grid."}, {"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "Grid", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setBorderStyle", "parameters": [{"name": "borderStyle", "type": "BorderStyle"}], "result": "Grid", "description": "Sets the border style applied to each grid item."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "Grid", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setNumColumns", "parameters": [{"name": "numColumns", "type": "Integer"}], "result": "Grid", "description": "The number of columns to display in the grid."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Grid", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Grid", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "Grid", "description": "Sets a URL to be opened when the object is clicked."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Grid", "description": "Sets the title text of the grid."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/date-time-picker", "name": "DateTimePicker", "type": "class", "methods": [{"name": "setFieldName", "parameters": [{"name": "fieldName", "type": "String"}], "result": "DateTimePicker", "description": "Sets the field name that identifies this picker in the event object that is generated when\nthere is a UI interaction."}, {"name": "setOnChangeAction", "parameters": [{"name": "action", "type": "Action"}], "result": "DateTimePicker", "description": "Sets an Action that the script performs whenever the picker input changes."}, {"name": "setTimeZoneOffsetInMins", "parameters": [{"name": "timeZoneOffsetMins", "type": "Integer"}], "result": "DateTimePicker", "description": "Sets the number of minutes that the time zone should be offset from UTC."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "DateTimePicker", "description": "Sets the title displayed above the input field."}, {"name": "setValueInMsSinceEpoch", "parameters": [{"name": "valueMsEpoch", "type": "Number"}], "result": "DateTimePicker", "description": "Sets the prefilled value to be set in the input field."}, {"name": "setValueInMsSinceEpoch", "parameters": [{"name": "valueMsEpoch", "type": "String"}], "result": "DateTimePicker", "description": "Sets the prefilled value to be set in the input field."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/decorated-text", "name": "DecoratedText", "type": "class", "methods": [{"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "DecoratedText", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setBottomLabel", "parameters": [{"name": "text", "type": "String"}], "result": "DecoratedText", "description": "Sets the label text to be used as the key and is displayed below the text content."}, {"name": "setButton", "parameters": [{"name": "button", "type": "Button"}], "result": "DecoratedText", "description": "Sets the Button that is displayed to the right of the text."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "DecoratedText", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setIcon", "parameters": [{"name": "icon", "type": "Icon"}], "result": "DecoratedText", "description": "Sets the icon to be used as the key."}, {"name": "setIconAltText", "parameters": [{"name": "altText", "type": "String"}], "result": "DecoratedText", "description": "Sets the alternative text for the icon."}, {"name": "setIconUrl", "parameters": [{"name": "url", "type": "String"}], "result": "DecoratedText", "description": "Sets the URL of the icon to be used as the key."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "DecoratedText", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "DecoratedText", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "DecoratedText", "description": "Sets a URL to be opened when the object is clicked."}, {"name": "setSwitchControl", "parameters": [{"name": "switchToSet", "type": "Switch"}], "result": "DecoratedText", "description": "Sets the Switch that is displayed to the right of the content."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "DecoratedText", "description": "Sets the text to be used as the value."}, {"name": "setTopLabel", "parameters": [{"name": "text", "type": "String"}], "result": "DecoratedText", "description": "Sets the label text to be used as the key and is displayed above the text content."}, {"name": "setWrapText", "parameters": [{"name": "wrapText", "type": "Boolean"}], "result": "DecoratedText", "description": "Sets whether the value text should be displayed on a single line or multiple lines."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/editor-file-scope-action-response", "name": "EditorFileScopeActionResponse", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/compose-action-response-builder", "name": "ComposeActionResponseBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "ComposeActionResponse", "description": "Builds the current compose action response and validates it."}, {"name": "setGmailDraft", "parameters": [{"name": "draft", "type": "GmailDraft"}], "result": "ComposeActionResponseBuilder", "description": "Sets the draft GmailMessage created\nusing GmailMessage.createDraftReply(body) or\nsimilar functions."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/date-picker", "name": "DatePicker", "type": "class", "methods": [{"name": "setFieldName", "parameters": [{"name": "fieldName", "type": "String"}], "result": "DatePicker", "description": "Sets the field name that identifies this picker in the event object that is generated when\nthere is a UI interaction."}, {"name": "setOnChangeAction", "parameters": [{"name": "action", "type": "Action"}], "result": "DatePicker", "description": "Sets an Action that the script performs whenever the picker input changes."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "DatePicker", "description": "Sets the title displayed above the input field."}, {"name": "setValueInMsSinceEpoch", "parameters": [{"name": "valueMsEpoch", "type": "Number"}], "result": "DatePicker", "description": "Sets the prefilled value to be set in the input field."}, {"name": "setValueInMsSinceEpoch", "parameters": [{"name": "valueMsEpoch", "type": "String"}], "result": "DatePicker", "description": "Sets the prefilled value to be set in the input field."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/drive-items-selected-action-response-builder", "name": "DriveItemsSelectedActionResponseBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "DriveItemsSelectedActionResponse", "description": "Builds the current Drive action response."}, {"name": "requestFileScope", "parameters": [{"name": "itemId", "type": "String"}], "result": "DriveItemsSelectedActionResponseBuilder", "description": "Specifies that the response requests file scope for the contextually-relevant item in Drive."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/card-section", "name": "CardSection", "type": "class", "methods": [{"name": "addWidget", "parameters": [{"name": "widget", "type": "Widget"}], "result": "CardSection", "description": "Adds the given widget to this section."}, {"name": "setCollapsible", "parameters": [{"name": "collapsible", "type": "Boolean"}], "result": "CardSection", "description": "Sets whether the section can be collapsed."}, {"name": "setHeader", "parameters": [{"name": "header", "type": "String"}], "result": "CardSection", "description": "Sets the header of the section."}, {"name": "setNumUncollapsibleWidgets", "parameters": [{"name": "numUncollapsibleWidgets", "type": "Integer"}], "result": "CardSection", "description": "Sets the number of widgets that are still shown when this section is collapsed."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/compose-action-response", "name": "ComposeActionResponse", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/drive-items-selected-action-response", "name": "DriveItemsSelectedActionResponse", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/card", "name": "Card", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/card-action", "name": "CardAction", "type": "class", "methods": [{"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "CardAction", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "CardAction", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "CardAction", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "CardAction", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "CardAction", "description": "Sets a URL to be opened when the object is clicked."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "CardAction", "description": "Sets the menu text for this action."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/card-header", "name": "CardHeader", "type": "class", "methods": [{"name": "setImageAltText", "parameters": [{"name": "imageAltText", "type": "String"}], "result": "CardHeader", "description": "Sets the alternative text for the header image."}, {"name": "setImageStyle", "parameters": [{"name": "imageStyle", "type": "ImageStyle"}], "result": "CardHeader", "description": "Sets the cropping of the icon in then card header."}, {"name": "setImageUrl", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "CardHeader", "description": "Sets the image to use in the header by providing its URL or data string."}, {"name": "setSubtitle", "parameters": [{"name": "subtitle", "type": "String"}], "result": "CardHeader", "description": "Sets the subtitle of the card header."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "CardHeader", "description": "Sets the title of the card header."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/calendar-event-action-response", "name": "CalendarEventActionResponse", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/calendar-event-action-response-builder", "name": "CalendarEventActionResponseBuilder", "type": "class", "methods": [{"name": "addAttendees", "parameters": [{"name": "emails", "type": "String"}], "result": "CalendarEventActionResponseBuilder", "description": "Specifies that the response should add the indicated attendees to the Calendar event when the\nassociated UI action is taken."}, {"name": "build", "parameters": [], "result": "CalendarEventActionResponse", "description": "Builds the current Calendar event action response and validates it."}, {"name": "setConferenceData", "parameters": [{"name": "conferenceData", "type": "ConferenceData"}], "result": "CalendarEventActionResponseBuilder", "description": "Specifies that the response should set the indicated conference data to the Calendar event when\nthe associated UI action is taken."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/button-set", "name": "ButtonSet", "type": "class", "methods": [{"name": "addButton", "parameters": [{"name": "button", "type": "Button"}], "result": "ButtonSet", "description": "Adds a button."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/data-table.html", "name": "DataTable", "type": "class", "methods": [], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/button", "name": "Button", "type": "class", "methods": [{"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "Button", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "Button", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Button", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Button", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "Button", "description": "Sets a URL to be opened when the object is clicked."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/card-builder", "name": "CardBuilder", "type": "class", "methods": [{"name": "addCardAction", "parameters": [{"name": "cardAction", "type": "CardAction"}], "result": "CardBuilder", "description": "Adds a CardAction to this Card."}, {"name": "addSection", "parameters": [{"name": "section", "type": "CardSection"}], "result": "CardBuilder", "description": "Adds a section to this card."}, {"name": "build", "parameters": [], "result": "Card", "description": "Builds the current card and validates it."}, {"name": "setDisplayStyle", "parameters": [{"name": "displayStyle", "type": "DisplayStyle"}], "result": "CardBuilder", "description": "Sets the display style for this card."}, {"name": "setFixedFooter", "parameters": [{"name": "fixedFooter", "type": "FixedFooter"}], "result": "CardBuilder", "description": "Sets a fixed footer for this card."}, {"name": "setHeader", "parameters": [{"name": "cardHeader", "type": "CardHeader"}], "result": "CardBuilder", "description": "Sets the header for this card."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "CardBuilder", "description": "Sets the name for this card."}, {"name": "setPeekCardHeader", "parameters": [{"name": "peekCardHeader", "type": "CardHeader"}], "result": "CardBuilder", "description": "Sets the peek card header."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/authorization-exception", "name": "AuthorizationException", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setAuthorizationUrl", "parameters": [{"name": "authUrl", "type": "String"}], "result": "AuthorizationException", "description": "Sets the authorization URL that user is taken to from the authorization prompt."}, {"name": "setCustomUiCallback", "parameters": [{"name": "callback", "type": "String"}], "result": "AuthorizationException", "description": "The name of a function to call to generate a custom authorization prompt."}, {"name": "setResourceDisplayName", "parameters": [{"name": "name", "type": "String"}], "result": "AuthorizationException", "description": "Sets the name that is displayed to the user when asking for authorization."}, {"name": "throwException", "parameters": [], "result": "void", "description": "Triggers this exception to be thrown."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/action-response", "name": "ActionResponse", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/action-response-builder", "name": "ActionResponseBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "ActionResponse", "description": "Builds the current action response and validates it."}, {"name": "setNavigation", "parameters": [{"name": "navigation", "type": "Navigation"}], "result": "ActionResponseBuilder", "description": "Sets the response to a Navigation action."}, {"name": "setNotification", "parameters": [{"name": "notification", "type": "Notification"}], "result": "ActionResponseBuilder", "description": "Sets the notification to display when the action is activated."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "ActionResponseBuilder", "description": "Sets the URL to navigate to when the action is activated."}, {"name": "setStateChanged", "parameters": [{"name": "stateChanged", "type": "Boolean"}], "result": "ActionResponseBuilder", "description": "Sets a flag to indicate that this action changed the existing data state."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/authorization-action", "name": "AuthorizationAction", "type": "class", "methods": [{"name": "setAuthorizationUrl", "parameters": [{"name": "authorizationUrl", "type": "String"}], "result": "AuthorizationAction", "description": "Sets the authorization URL that user is taken to from the authorization prompt."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service/border-style", "name": "BorderStyle", "type": "class", "methods": [{"name": "setCornerRadius", "parameters": [{"name": "radius", "type": "Integer"}], "result": "BorderStyle", "description": "Sets the corner radius of the border, for example 8."}, {"name": "setStrokeColor", "parameters": [{"name": "color", "type": "String"}], "result": "BorderStyle", "description": "Sets the color of the border."}, {"name": "setType", "parameters": [{"name": "type", "type": "BorderType"}], "result": "BorderStyle", "description": "Sets the type of the border."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/card-service", "name": "Card Service", "type": "card", "methods": [{"name": "setFunctionName", "parameters": [{"name": "functionName", "type": "String"}], "result": "Action", "description": "Sets the name of the callback function to be called."}, {"name": "setLoadIndicator", "parameters": [{"name": "loadIndicator", "type": "LoadIndicator"}], "result": "Action", "description": "Sets the loading indicator that displays while the action is in progress."}, {"name": "setParameters", "parameters": [{"name": "parameters", "type": "Object"}], "result": "Action", "description": "Allows custom parameters to be passed to the callback function."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "build", "parameters": [], "result": "ActionResponse", "description": "Builds the current action response and validates it."}, {"name": "setNavigation", "parameters": [{"name": "navigation", "type": "Navigation"}], "result": "ActionResponseBuilder", "description": "Sets the response to a Navigation action."}, {"name": "setNotification", "parameters": [{"name": "notification", "type": "Notification"}], "result": "ActionResponseBuilder", "description": "Sets the notification to display when the action is activated."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "ActionResponseBuilder", "description": "Sets the URL to navigate to when the action is activated."}, {"name": "setStateChanged", "parameters": [{"name": "stateChanged", "type": "Boolean"}], "result": "ActionResponseBuilder", "description": "Sets a flag to indicate that this action changed the existing data state."}, {"name": "setAuthorizationUrl", "parameters": [{"name": "authorizationUrl", "type": "String"}], "result": "AuthorizationAction", "description": "Sets the authorization URL that user is taken to from the authorization prompt."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setAuthorizationUrl", "parameters": [{"name": "authUrl", "type": "String"}], "result": "AuthorizationException", "description": "Sets the authorization URL that user is taken to from the authorization prompt."}, {"name": "setCustomUiCallback", "parameters": [{"name": "callback", "type": "String"}], "result": "AuthorizationException", "description": "The name of a function to call to generate a custom authorization prompt."}, {"name": "setResourceDisplayName", "parameters": [{"name": "name", "type": "String"}], "result": "AuthorizationException", "description": "Sets the name that is displayed to the user when asking for authorization."}, {"name": "throwException", "parameters": [], "result": "void", "description": "Triggers this exception to be thrown."}, {"name": "setCornerRadius", "parameters": [{"name": "radius", "type": "Integer"}], "result": "BorderStyle", "description": "Sets the corner radius of the border, for example 8."}, {"name": "setStrokeColor", "parameters": [{"name": "color", "type": "String"}], "result": "BorderStyle", "description": "Sets the color of the border."}, {"name": "setType", "parameters": [{"name": "type", "type": "BorderType"}], "result": "BorderStyle", "description": "Sets the type of the border."}, {"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "Button", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "Button", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Button", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Button", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "Button", "description": "Sets a URL to be opened when the object is clicked."}, {"name": "addButton", "parameters": [{"name": "button", "type": "Button"}], "result": "ButtonSet", "description": "Adds a button."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "addAttendees", "parameters": [{"name": "emails", "type": "String"}], "result": "CalendarEventActionResponseBuilder", "description": "Specifies that the response should add the indicated attendees to the Calendar event when the\nassociated UI action is taken."}, {"name": "build", "parameters": [], "result": "CalendarEventActionResponse", "description": "Builds the current Calendar event action response and validates it."}, {"name": "setConferenceData", "parameters": [{"name": "conferenceData", "type": "ConferenceData"}], "result": "CalendarEventActionResponseBuilder", "description": "Specifies that the response should set the indicated conference data to the Calendar event when\nthe associated UI action is taken."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "CardAction", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "CardAction", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "CardAction", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "CardAction", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "CardAction", "description": "Sets a URL to be opened when the object is clicked."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "CardAction", "description": "Sets the menu text for this action."}, {"name": "addCardAction", "parameters": [{"name": "cardAction", "type": "CardAction"}], "result": "CardBuilder", "description": "Adds a CardAction to this Card."}, {"name": "addSection", "parameters": [{"name": "section", "type": "CardSection"}], "result": "CardBuilder", "description": "Adds a section to this card."}, {"name": "build", "parameters": [], "result": "Card", "description": "Builds the current card and validates it."}, {"name": "setDisplayStyle", "parameters": [{"name": "displayStyle", "type": "DisplayStyle"}], "result": "CardBuilder", "description": "Sets the display style for this card."}, {"name": "setFixedFooter", "parameters": [{"name": "fixedFooter", "type": "FixedFooter"}], "result": "CardBuilder", "description": "Sets a fixed footer for this card."}, {"name": "setHeader", "parameters": [{"name": "cardHeader", "type": "CardHeader"}], "result": "CardBuilder", "description": "Sets the header for this card."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "CardBuilder", "description": "Sets the name for this card."}, {"name": "setPeekCardHeader", "parameters": [{"name": "peekCardHeader", "type": "CardHeader"}], "result": "CardBuilder", "description": "Sets the peek card header."}, {"name": "setImageAltText", "parameters": [{"name": "imageAltText", "type": "String"}], "result": "CardHeader", "description": "Sets the alternative text for the header image."}, {"name": "setImageStyle", "parameters": [{"name": "imageStyle", "type": "ImageStyle"}], "result": "CardHeader", "description": "Sets the cropping of the icon in then card header."}, {"name": "setImageUrl", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "CardHeader", "description": "Sets the image to use in the header by providing its URL or data string."}, {"name": "setSubtitle", "parameters": [{"name": "subtitle", "type": "String"}], "result": "CardHeader", "description": "Sets the subtitle of the card header."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "CardHeader", "description": "Sets the title of the card header."}, {"name": "addWidget", "parameters": [{"name": "widget", "type": "Widget"}], "result": "CardSection", "description": "Adds the given widget to this section."}, {"name": "setCollapsible", "parameters": [{"name": "collapsible", "type": "Boolean"}], "result": "CardSection", "description": "Sets whether the section can be collapsed."}, {"name": "setHeader", "parameters": [{"name": "header", "type": "String"}], "result": "CardSection", "description": "Sets the header of the section."}, {"name": "setNumUncollapsibleWidgets", "parameters": [{"name": "numUncollapsibleWidgets", "type": "Integer"}], "result": "CardSection", "description": "Sets the number of widgets that are still shown when this section is collapsed."}, {"name": "newAction", "parameters": [], "result": "Action", "description": "Creates a new Action."}, {"name": "newActionResponseBuilder", "parameters": [], "result": "ActionResponseBuilder", "description": "Creates a new ActionResponseBuilder."}, {"name": "newAuthorizationAction", "parameters": [], "result": "AuthorizationAction", "description": "Creates a new AuthorizationAction."}, {"name": "newAuthorizationException", "parameters": [], "result": "AuthorizationException", "description": "Creates a new AuthorizationException."}, {"name": "newBorderStyle", "parameters": [], "result": "BorderStyle", "description": "Creates a new BorderStyle."}, {"name": "newButtonSet", "parameters": [], "result": "ButtonSet", "description": "Creates a new ButtonSet."}, {"name": "newCalendarEventActionResponseBuilder", "parameters": [], "result": "CalendarEventActionResponseBuilder", "description": "Creates a new CalendarEventActionResponseBuilder."}, {"name": "newCardAction", "parameters": [], "result": "CardAction", "description": "Creates a new CardAction."}, {"name": "newCardBuilder", "parameters": [], "result": "CardBuilder", "description": "Creates a new CardBuilder."}, {"name": "newCardHeader", "parameters": [], "result": "CardHeader", "description": "Creates a new CardHeader."}, {"name": "newCardSection", "parameters": [], "result": "CardSection", "description": "Creates a new CardSection."}, {"name": "newComposeActionResponseBuilder", "parameters": [], "result": "ComposeActionResponseBuilder", "description": "Creates a new ComposeActionResponseBuilder."}, {"name": "newDatePicker", "parameters": [], "result": "DatePicker", "description": "Creates a new DatePicker."}, {"name": "newDateTimePicker", "parameters": [], "result": "DateTimePicker", "description": "Creates a new DateTimePicker."}, {"name": "newDecoratedText", "parameters": [], "result": "DecoratedText", "description": "Creates a new DecoratedText."}, {"name": "newDriveItemsSelectedActionResponseBuilder", "parameters": [], "result": "DriveItemsSelectedActionResponseBuilder", "description": "Creates a new DriveItemsSelectedActionResponseBuilder."}, {"name": "newEditorFileScopeActionResponseBuilder", "parameters": [], "result": "EditorFileScopeActionResponseBuilder", "description": "Creates a new EditorFileScopeActionResponseBuilder."}, {"name": "newFixedFooter", "parameters": [], "result": "FixedFooter", "description": "Creates a new FixedFooter."}, {"name": "newGrid", "parameters": [], "result": "Grid", "description": "Creates a new Grid."}, {"name": "newGridItem", "parameters": [], "result": "GridItem", "description": "Creates a new GridItem."}, {"name": "newImage", "parameters": [], "result": "Image", "description": "Creates a new Image."}, {"name": "newImageButton", "parameters": [], "result": "ImageButton", "description": "Creates a new ImageButton."}, {"name": "newImageComponent", "parameters": [], "result": "ImageComponent", "description": "Creates a new ImageComponent."}, {"name": "newImageCropStyle", "parameters": [], "result": "ImageCropStyle", "description": "Creates a new ImageCropStyle."}, {"name": "newKeyValue", "parameters": [], "result": "KeyValue", "description": "Creates a new KeyValue."}, {"name": "newNavigation", "parameters": [], "result": "Navigation", "description": "Creates a new Navigation."}, {"name": "newNotification", "parameters": [], "result": "Notification", "description": "Creates a new Notification."}, {"name": "newOpenLink", "parameters": [], "result": "OpenLink", "description": "Creates a new OpenLink."}, {"name": "newSelectionInput", "parameters": [], "result": "SelectionInput", "description": "Creates a new SelectionInput."}, {"name": "newSuggestions", "parameters": [], "result": "Suggestions", "description": "Creates a new Suggestions."}, {"name": "newSuggestionsResponseBuilder", "parameters": [], "result": "SuggestionsResponseBuilder", "description": "Creates a new SuggestionsResponseBuilder."}, {"name": "newSwitch", "parameters": [], "result": "Switch", "description": "Creates a new Switch."}, {"name": "newTextButton", "parameters": [], "result": "TextButton", "description": "Creates a new TextButton."}, {"name": "newTextInput", "parameters": [], "result": "TextInput", "description": "Creates a new TextInput."}, {"name": "newTextParagraph", "parameters": [], "result": "TextParagraph", "description": "Creates a new TextParagraph."}, {"name": "newTimePicker", "parameters": [], "result": "TimePicker", "description": "Creates a new TimePicker."}, {"name": "newUniversalActionResponseBuilder", "parameters": [], "result": "UniversalActionResponseBuilder", "description": "Creates a new UniversalActionResponseBuilder."}, {"name": "newUpdateDraftActionResponseBuilder", "parameters": [], "result": "UpdateDraftActionResponseBuilder", "description": "Creates a new UpdateDraftActionResponseBuilder."}, {"name": "newUpdateDraftBccRecipientsAction", "parameters": [], "result": "UpdateDraftBccRecipientsAction", "description": "Creates a new UpdateDraftBccRecipientsAction;"}, {"name": "newUpdateDraftBodyAction", "parameters": [], "result": "UpdateDraftBodyAction", "description": "Creates a new UpdateDraftBodyAction."}, {"name": "newUpdateDraftCcRecipientsAction", "parameters": [], "result": "UpdateDraftCcRecipientsAction", "description": "Creates a new UpdateDraftCcRecipientsAction."}, {"name": "newUpdateDraftSubjectAction", "parameters": [], "result": "UpdateDraftSubjectAction", "description": "Creates a new UpdateDraftSubjectAction."}, {"name": "newUpdateDraftToRecipientsAction", "parameters": [], "result": "UpdateDraftToRecipientsAction", "description": "Creates a new UpdateDraftToRecipientsAction."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "build", "parameters": [], "result": "ComposeActionResponse", "description": "Builds the current compose action response and validates it."}, {"name": "setGmailDraft", "parameters": [{"name": "draft", "type": "GmailDraft"}], "result": "ComposeActionResponseBuilder", "description": "Sets the draft GmailMessage created\nusing GmailMessage.createDraftReply(body) or\nsimilar functions."}, {"name": "setFieldName", "parameters": [{"name": "fieldName", "type": "String"}], "result": "DatePicker", "description": "Sets the field name that identifies this picker in the event object that is generated when\nthere is a UI interaction."}, {"name": "setOnChangeAction", "parameters": [{"name": "action", "type": "Action"}], "result": "DatePicker", "description": "Sets an Action that the script performs whenever the picker input changes."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "DatePicker", "description": "Sets the title displayed above the input field."}, {"name": "setValueInMsSinceEpoch", "parameters": [{"name": "valueMsEpoch", "type": "Number"}], "result": "DatePicker", "description": "Sets the prefilled value to be set in the input field."}, {"name": "setValueInMsSinceEpoch", "parameters": [{"name": "valueMsEpoch", "type": "String"}], "result": "DatePicker", "description": "Sets the prefilled value to be set in the input field."}, {"name": "setFieldName", "parameters": [{"name": "fieldName", "type": "String"}], "result": "DateTimePicker", "description": "Sets the field name that identifies this picker in the event object that is generated when\nthere is a UI interaction."}, {"name": "setOnChangeAction", "parameters": [{"name": "action", "type": "Action"}], "result": "DateTimePicker", "description": "Sets an Action that the script performs whenever the picker input changes."}, {"name": "setTimeZoneOffsetInMins", "parameters": [{"name": "timeZoneOffsetMins", "type": "Integer"}], "result": "DateTimePicker", "description": "Sets the number of minutes that the time zone should be offset from UTC."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "DateTimePicker", "description": "Sets the title displayed above the input field."}, {"name": "setValueInMsSinceEpoch", "parameters": [{"name": "valueMsEpoch", "type": "Number"}], "result": "DateTimePicker", "description": "Sets the prefilled value to be set in the input field."}, {"name": "setValueInMsSinceEpoch", "parameters": [{"name": "valueMsEpoch", "type": "String"}], "result": "DateTimePicker", "description": "Sets the prefilled value to be set in the input field."}, {"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "DecoratedText", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setBottomLabel", "parameters": [{"name": "text", "type": "String"}], "result": "DecoratedText", "description": "Sets the label text to be used as the key and is displayed below the text content."}, {"name": "setButton", "parameters": [{"name": "button", "type": "Button"}], "result": "DecoratedText", "description": "Sets the Button that is displayed to the right of the text."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "DecoratedText", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setIcon", "parameters": [{"name": "icon", "type": "Icon"}], "result": "DecoratedText", "description": "Sets the icon to be used as the key."}, {"name": "setIconAltText", "parameters": [{"name": "altText", "type": "String"}], "result": "DecoratedText", "description": "Sets the alternative text for the icon."}, {"name": "setIconUrl", "parameters": [{"name": "url", "type": "String"}], "result": "DecoratedText", "description": "Sets the URL of the icon to be used as the key."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "DecoratedText", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "DecoratedText", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "DecoratedText", "description": "Sets a URL to be opened when the object is clicked."}, {"name": "setSwitchControl", "parameters": [{"name": "switchToSet", "type": "Switch"}], "result": "DecoratedText", "description": "Sets the Switch that is displayed to the right of the content."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "DecoratedText", "description": "Sets the text to be used as the value."}, {"name": "setTopLabel", "parameters": [{"name": "text", "type": "String"}], "result": "DecoratedText", "description": "Sets the label text to be used as the key and is displayed above the text content."}, {"name": "setWrapText", "parameters": [{"name": "wrapText", "type": "Boolean"}], "result": "DecoratedText", "description": "Sets whether the value text should be displayed on a single line or multiple lines."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "build", "parameters": [], "result": "DriveItemsSelectedActionResponse", "description": "Builds the current Drive action response."}, {"name": "requestFileScope", "parameters": [{"name": "itemId", "type": "String"}], "result": "DriveItemsSelectedActionResponseBuilder", "description": "Specifies that the response requests file scope for the contextually-relevant item in Drive."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "build", "parameters": [], "result": "EditorFileScopeActionResponse", "description": "Builds the current Editor action response."}, {"name": "requestFileScopeForActiveDocument", "parameters": [], "result": "EditorFileScopeActionResponseBuilder", "description": "Requests the drive.file scope for the current active Editor document."}, {"name": "setPrimaryButton", "parameters": [{"name": "button", "type": "TextButton"}], "result": "FixedFooter", "description": "Set the primary button in the fixed footer."}, {"name": "setSecondaryButton", "parameters": [{"name": "button", "type": "TextButton"}], "result": "FixedFooter", "description": "Set the secondary button in the fixed footer."}, {"name": "addItem", "parameters": [{"name": "gridItem", "type": "GridItem"}], "result": "Grid", "description": "Adds a new grid item to the grid."}, {"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "Grid", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setBorderStyle", "parameters": [{"name": "borderStyle", "type": "BorderStyle"}], "result": "Grid", "description": "Sets the border style applied to each grid item."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "Grid", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setNumColumns", "parameters": [{"name": "numColumns", "type": "Integer"}], "result": "Grid", "description": "The number of columns to display in the grid."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Grid", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Grid", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "Grid", "description": "Sets a URL to be opened when the object is clicked."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Grid", "description": "Sets the title text of the grid."}, {"name": "setIdentifier", "parameters": [{"name": "id", "type": "String"}], "result": "GridItem", "description": "Sets the identifier for the grid item."}, {"name": "setImage", "parameters": [{"name": "image", "type": "ImageComponent"}], "result": "GridItem", "description": "Sets the image for this grid item."}, {"name": "setLayout", "parameters": [{"name": "layout", "type": "GridItemLayout"}], "result": "GridItem", "description": "Sets the layout of text and image for the grid item."}, {"name": "setSubtitle", "parameters": [{"name": "subtitle", "type": "String"}], "result": "GridItem", "description": "Sets the subtitle of the grid item."}, {"name": "setTextAlignment", "parameters": [{"name": "alignment", "type": "HorizontalAlignment"}], "result": "GridItem", "description": "Sets the horizontal alignment of the grid item."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "GridItem", "description": "Sets the title text of the grid item."}, {"name": "setAltText", "parameters": [{"name": "altText", "type": "String"}], "result": "Image", "description": "Sets the alternative text of the image for accessibility."}, {"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "Image", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "Image", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setImageUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Image", "description": "Sets the image to use by providing its URL or data string."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Image", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Image", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "Image", "description": "Sets a URL to be opened when the object is clicked."}, {"name": "setAltText", "parameters": [{"name": "altText", "type": "String"}], "result": "ImageButton", "description": "Sets the alternative text of the button for accessibility."}, {"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "ImageButton", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "ImageButton", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setIcon", "parameters": [{"name": "icon", "type": "Icon"}], "result": "ImageButton", "description": "Sets a predefined Icon to display on the button."}, {"name": "setIconUrl", "parameters": [{"name": "url", "type": "String"}], "result": "ImageButton", "description": "Sets the URL of an image to use as this button's icon."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "ImageButton", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "ImageButton", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "ImageButton", "description": "Sets a URL to be opened when the object is clicked."}, {"name": "setAltText", "parameters": [{"name": "altText", "type": "String"}], "result": "ImageComponent", "description": "Sets the alternative text of the image."}, {"name": "setBorderStyle", "parameters": [{"name": "borderStyle", "type": "BorderStyle"}], "result": "ImageComponent", "description": "Sets the border style applied to the image."}, {"name": "setCropStyle", "parameters": [{"name": "imageCropStyle", "type": "ImageCropStyle"}], "result": "ImageComponent", "description": "Sets the crop style for the image."}, {"name": "setImageUrl", "parameters": [{"name": "url", "type": "String"}], "result": "ImageComponent", "description": "Sets the URL of the image."}, {"name": "setAspectRatio", "parameters": [{"name": "ratio", "type": "Number"}], "result": "ImageCropStyle", "description": "Sets the aspect ratio to use if the crop type is RECTANGLE_CUSTOM."}, {"name": "setImageCropType", "parameters": [{"name": "type", "type": "ImageCropType"}], "result": "ImageCropStyle", "description": "Sets the crop type for the image."}, {"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "KeyValue", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "KeyValue", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "KeyValue", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "KeyValue", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "KeyValue", "description": "Sets a URL to be opened when the object is clicked."}, {"name": "popCard", "parameters": [], "result": "Navigation", "description": "Pops a card from the navigation stack."}, {"name": "popToNamedCard", "parameters": [{"name": "cardName", "type": "String"}], "result": "Navigation", "description": "Pops to the specified card by its card name."}, {"name": "popToRoot", "parameters": [], "result": "Navigation", "description": "Pops the card stack to the root card."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "pushCard", "parameters": [{"name": "card", "type": "Card"}], "result": "Navigation", "description": "Pushes the given card onto the stack."}, {"name": "updateCard", "parameters": [{"name": "card", "type": "Card"}], "result": "Navigation", "description": "Does an in-place replacement of the current card."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Notification", "description": "Sets the text to show in the notification."}, {"name": "setOnClose", "parameters": [{"name": "onClose", "type": "OnClose"}], "result": "OpenLink", "description": "Sets the behavior of the URL action when the URL window or tab is closed."}, {"name": "setOpenAs", "parameters": [{"name": "openAs", "type": "OpenAs"}], "result": "OpenLink", "description": "Sets the behavior of URL when it is opened."}, {"name": "setUrl", "parameters": [{"name": "url", "type": "String"}], "result": "OpenLink", "description": "Sets the URL to be opened."}, {"name": "addItem", "parameters": [{"name": "text", "type": "Object"}, {"name": "value", "type": "Object"}, {"name": "selected", "type": "Boolean"}], "result": "SelectionInput", "description": "Adds a new item that can be selected."}, {"name": "setFieldName", "parameters": [{"name": "fieldName", "type": "String"}], "result": "SelectionInput", "description": "Sets the key that identifies this selection input in the event object that is generated when\nthere is a UI interaction."}, {"name": "setOnChangeAction", "parameters": [{"name": "action", "type": "Action"}], "result": "SelectionInput", "description": "Sets an Action to be performed whenever the selection input changes."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "SelectionInput", "description": "Sets the title to be shown ahead of the input field."}, {"name": "setType", "parameters": [{"name": "type", "type": "SelectionInputType"}], "result": "SelectionInput", "description": "Sets the type of this input."}, {"name": "addSuggestion", "parameters": [{"name": "suggestion", "type": "String"}], "result": "Suggestions", "description": "Add a text suggestion."}, {"name": "addSuggestions", "parameters": [{"name": "suggestions", "type": "Object"}], "result": "Suggestions", "description": "Add a list of text suggestions."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "build", "parameters": [], "result": "SuggestionsResponse", "description": "Builds the current suggestions response and validates it."}, {"name": "setSuggestions", "parameters": [{"name": "suggestions", "type": "Suggestions"}], "result": "SuggestionsResponseBuilder", "description": "Sets the suggestions used in auto complete in text fields."}, {"name": "setControlType", "parameters": [{"name": "controlType", "type": "SwitchControlType"}], "result": "Switch", "description": "Sets the control type of the switch."}, {"name": "setFieldName", "parameters": [{"name": "fieldName", "type": "String"}], "result": "Switch", "description": "Sets the key that identifies this switch in the event object that is generated when there is a\nUI interaction."}, {"name": "setOnChangeAction", "parameters": [{"name": "action", "type": "Action"}], "result": "Switch", "description": "Sets the action to take when the switch is toggled."}, {"name": "setSelected", "parameters": [{"name": "selected", "type": "Boolean"}], "result": "Switch", "description": "Sets whether this switch should start as selected or unselected."}, {"name": "setValue", "parameters": [{"name": "value", "type": "String"}], "result": "Switch", "description": "Sets the value that is sent as the form input when this switch is toggled on."}, {"name": "setAltText", "parameters": [{"name": "altText", "type": "String"}], "result": "TextButton", "description": "Sets the alternative text of the button for accessibility."}, {"name": "setAuthorizationAction", "parameters": [{"name": "action", "type": "AuthorizationAction"}], "result": "TextButton", "description": "Sets an authorization action that opens a URL to the authorization flow when the object is\nclicked."}, {"name": "setBackgroundColor", "parameters": [{"name": "backgroundColor", "type": "String"}], "result": "TextButton", "description": "Sets the background color for TextButtonStyle.FILLED button."}, {"name": "setComposeAction", "parameters": [{"name": "action", "type": "Action"}, {"name": "composedEmailType", "type": "ComposedEmailType"}], "result": "TextButton", "description": "Sets an action that composes a draft email when the object is clicked."}, {"name": "setDisabled", "parameters": [{"name": "disabled", "type": "Boolean"}], "result": "TextButton", "description": "Sets whether the button is disabled."}, {"name": "setOnClickAction", "parameters": [{"name": "action", "type": "Action"}], "result": "TextButton", "description": "Sets an action that executes when the object is clicked."}, {"name": "setOnClickOpenLinkAction", "parameters": [{"name": "action", "type": "Action"}], "result": "TextButton", "description": "Sets an action that opens a URL in a tab when the object is clicked."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "TextButton", "description": "Sets a URL to be opened when the object is clicked."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "TextButton", "description": "Sets the text that displays on the button."}, {"name": "setTextButtonStyle", "parameters": [{"name": "textButtonStyle", "type": "TextButtonStyle"}], "result": "TextButton", "description": "Sets the button style."}, {"name": "setFieldName", "parameters": [{"name": "fieldName", "type": "String"}], "result": "TextInput", "description": "Sets the key that identifies this text input in the event object that is generated when there\nis a UI interaction."}, {"name": "setHint", "parameters": [{"name": "hint", "type": "String"}], "result": "TextInput", "description": "Sets a hint for the text input."}, {"name": "setMultiline", "parameters": [{"name": "multiline", "type": "Boolean"}], "result": "TextInput", "description": "Sets whether the input text shows on one line or multiple lines."}, {"name": "setOnChangeAction", "parameters": [{"name": "action", "type": "Action"}], "result": "TextInput", "description": "Sets an action to be performed whenever the text input changes."}, {"name": "setSuggestions", "parameters": [{"name": "suggestions", "type": "Suggestions"}], "result": "TextInput", "description": "Sets the suggestions for autocompletion in the text field."}, {"name": "setSuggestionsAction", "parameters": [{"name": "suggestionsAction", "type": "Action"}], "result": "TextInput", "description": "Sets the callback action to fetch suggestions based on user input for autocompletion."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "TextInput", "description": "Sets the title to be shown above the input field."}, {"name": "setValue", "parameters": [{"name": "value", "type": "String"}], "result": "TextInput", "description": "Sets the pre-filled value to be set in the input field."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "TextParagraph", "description": "Sets the text of the paragraph."}, {"name": "setFieldName", "parameters": [{"name": "fieldName", "type": "String"}], "result": "TimePicker", "description": "Sets the field name that identifies this picker in the event object that is generated when\nthere is a UI interaction."}, {"name": "setHours", "parameters": [{"name": "hours", "type": "Integer"}], "result": "TimePicker", "description": "Sets the prefilled hours value to set in the input field."}, {"name": "setMinutes", "parameters": [{"name": "minutes", "type": "Integer"}], "result": "TimePicker", "description": "Sets the prefilled minutes value to set in the input field."}, {"name": "setOnChangeAction", "parameters": [{"name": "action", "type": "Action"}], "result": "TimePicker", "description": "Sets an Action that the script performs whenever the picker input changes."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "TimePicker", "description": "Sets the title displayed above the input field."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "build", "parameters": [], "result": "UniversalActionResponse", "description": "Builds the current universal action response and validates it."}, {"name": "displayAddOnCards", "parameters": [{"name": "cardObjects", "type": "Object"}], "result": "UniversalActionResponseBuilder", "description": "Displays the add-on with the specified cards."}, {"name": "setOpenLink", "parameters": [{"name": "openLink", "type": "OpenLink"}], "result": "UniversalActionResponseBuilder", "description": "Sets the URL to open when the universal action is selected."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "build", "parameters": [], "result": "UpdateDraftActionResponse", "description": "Builds the current update draft action response and validates it."}, {"name": "setUpdateDraftBccRecipientsAction", "parameters": [{"name": "updateDraftBccRecipientsAction", "type": "UpdateDraftBccRecipientsAction"}], "result": "UpdateDraftActionResponseBuilder", "description": "Sets an action that updates the email Bcc recipients of a draft."}, {"name": "setUpdateDraftBodyAction", "parameters": [{"name": "updateDraftBodyAction", "type": "UpdateDraftBodyAction"}], "result": "UpdateDraftActionResponseBuilder", "description": "Set an action that updates the email body of a draft."}, {"name": "setUpdateDraftCcRecipientsAction", "parameters": [{"name": "updateDraftCcRecipientsAction", "type": "UpdateDraftCcRecipientsAction"}], "result": "UpdateDraftActionResponseBuilder", "description": "Sets an action that updates the Cc recipients of a draft."}, {"name": "setUpdateDraftSubjectAction", "parameters": [{"name": "updateDraftSubjectAction", "type": "UpdateDraftSubjectAction"}], "result": "UpdateDraftActionResponseBuilder", "description": "Sets an action that updates the subject line of a draft."}, {"name": "setUpdateDraftToRecipientsAction", "parameters": [{"name": "updateDraftToRecipientsAction", "type": "UpdateDraftToRecipientsAction"}], "result": "UpdateDraftActionResponseBuilder", "description": "Sets an action that updates the To recipients of a draft."}, {"name": "addUpdateBccRecipients", "parameters": [{"name": "bccRecipientEmails", "type": "String"}], "result": "UpdateDraftBccRecipientsAction", "description": "Updates the Bcc recipients of an email draft."}, {"name": "addUpdateContent", "parameters": [{"name": "content", "type": "String"}, {"name": "contentType", "type": "ContentType"}], "result": "UpdateDraftBodyAction", "description": "Adds the specified content to the draft body."}, {"name": "setUpdateType", "parameters": [{"name": "updateType", "type": "UpdateDraftBodyType"}], "result": "UpdateDraftBodyAction", "description": "Sets the UpdateDraftBodyType of this update action on the draft body."}, {"name": "addUpdateCcRecipients", "parameters": [{"name": "ccRecipientEmails", "type": "String"}], "result": "UpdateDraftCcRecipientsAction", "description": "Updates the Cc recipients of an email draft."}, {"name": "addUpdateSubject", "parameters": [{"name": "subject", "type": "String"}], "result": "UpdateDraftSubjectAction", "description": "Updates the subject line of an email draft."}, {"name": "addUpdateToRecipients", "parameters": [{"name": "toRecipientEmails", "type": "String"}], "result": "UpdateDraftToRecipientsAction", "description": "Updates the To recipients of an email draft."}], "properties": [{"name": "NO_BORDER", "type": "Enum", "url": "", "description": "No border style."}, {"name": "STROKE", "type": "Enum", "url": "", "description": "Stroke border style."}, {"name": "BorderType", "type": "BorderType", "url": "/apps-script/reference/card-service/border-type", "description": "The BorderType enumeration."}, {"name": "ComposedEmailType", "type": "ComposedEmailType", "url": "/apps-script/reference/card-service/composed-email-type", "description": "The ComposedEmailType enumeration."}, {"name": "ContentType", "type": "ContentType", "url": "/apps-script/reference/card-service/content-type", "description": "The ContentType enumeration."}, {"name": "GridItemLayout", "type": "GridItemLayout", "url": "/apps-script/reference/card-service/grid-item-layout", "description": "The GridItemLayout enumeration."}, {"name": "HorizontalAlignment", "type": "HorizontalAlignment", "url": "/apps-script/reference/card-service/horizontal-alignment", "description": "The HorizontalAlignment enumeration."}, {"name": "Icon", "type": "Icon", "url": "/apps-script/reference/card-service/icon", "description": "The Icon enumeration."}, {"name": "ImageCropType", "type": "ImageCropType", "url": "/apps-script/reference/card-service/image-crop-type", "description": "The ImageCropType enumeration."}, {"name": "ImageStyle", "type": "ImageStyle", "url": "/apps-script/reference/card-service/image-style", "description": "The ImageStyle enumeration."}, {"name": "LoadIndicator", "type": "LoadIndicator", "url": "/apps-script/reference/card-service/load-indicator", "description": "The LoadIndicator enumeration."}, {"name": "OnClose", "type": "OnClose", "url": "/apps-script/reference/card-service/on-close", "description": "The OnClose enumeration."}, {"name": "OpenAs", "type": "OpenAs", "url": "/apps-script/reference/card-service/open-as", "description": "The OpenAs enumeration."}, {"name": "SelectionInputType", "type": "SelectionInputType", "url": "/apps-script/reference/card-service/selection-input-type", "description": "The SelectionInputType enumeration."}, {"name": "TextButtonStyle", "type": "TextButtonStyle", "url": "/apps-script/reference/card-service/text-button-style", "description": "The TextButtonStyle enumeration."}, {"name": "UpdateDraftBodyType", "type": "UpdateDraftBodyType", "url": "/apps-script/reference/card-service/update-draft-body-type", "description": "The UpdateDraftBodyType enumeration."}, {"name": "REPLY_AS_DRAFT", "type": "Enum", "url": "", "description": "A draft that is a reply to another message."}, {"name": "STANDALONE_DRAFT", "type": "Enum", "url": "", "description": "A draft that is a standalone message."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "Indicates that the generated content is plain text."}, {"name": "MUTABLE_HTML", "type": "Enum", "url": "", "description": "Indicates that the generated content is formatted as HTML."}, {"name": "IMMUTABLE_HTML", "type": "Enum", "url": "", "description": "Indicates that the generated content is formatted as HTML, but this content cannot be edited\nafter it is generated."}, {"name": "PEEK", "type": "Enum", "url": "", "description": "Show the card header at the bottom of add-on content over existing content."}, {"name": "REPLACE", "type": "Enum", "url": "", "description": "Show the card by replacing existing content."}, {"name": "TEXT_BELOW", "type": "Enum", "url": "", "description": "The title and subtitle are shown below the grid item's image."}, {"name": "TEXT_ABOVE", "type": "Enum", "url": "", "description": "The title and subtitle are shown above the grid item's image."}, {"name": "START", "type": "Enum", "url": "", "description": "Align the widget to the start of the sentence side."}, {"name": "CENTER", "type": "Enum", "url": "", "description": "Align the widget to the center."}, {"name": "END", "type": "Enum", "url": "", "description": "Align the widget to the end of the sentence side."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No icon."}, {"name": "AIRPLANE", "type": "Enum", "url": "", "description": ""}, {"name": "BOOKMARK", "type": "Enum", "url": "", "description": ""}, {"name": "BUS", "type": "Enum", "url": "", "description": ""}, {"name": "CAR", "type": "Enum", "url": "", "description": ""}, {"name": "CLOCK", "type": "Enum", "url": "", "description": ""}, {"name": "CONFIRMATION_NUMBER_ICON", "type": "Enum", "url": "", "description": ""}, {"name": "DOLLAR", "type": "Enum", "url": "", "description": ""}, {"name": "DESCRIPTION", "type": "Enum", "url": "", "description": ""}, {"name": "EMAIL", "type": "Enum", "url": "", "description": ""}, {"name": "EVENT_PERFORMER", "type": "Enum", "url": "", "description": ""}, {"name": "EVENT_SEAT", "type": "Enum", "url": "", "description": ""}, {"name": "FLIGHT_ARRIVAL", "type": "Enum", "url": "", "description": ""}, {"name": "FLIGHT_DEPARTURE", "type": "Enum", "url": "", "description": ""}, {"name": "HOTEL", "type": "Enum", "url": "", "description": ""}, {"name": "HOTEL_ROOM_TYPE", "type": "Enum", "url": "", "description": ""}, {"name": "INVITE", "type": "Enum", "url": "", "description": ""}, {"name": "MAP_PIN", "type": "Enum", "url": "", "description": ""}, {"name": "MEMBERSHIP", "type": "Enum", "url": "", "description": ""}, {"name": "MULTIPLE_PEOPLE", "type": "Enum", "url": "", "description": ""}, {"name": "OFFER", "type": "Enum", "url": "", "description": ""}, {"name": "PERSON", "type": "Enum", "url": "", "description": ""}, {"name": "PHONE", "type": "Enum", "url": "", "description": ""}, {"name": "RESTAURANT_ICON", "type": "Enum", "url": "", "description": ""}, {"name": "SHOPPING_CART", "type": "Enum", "url": "", "description": ""}, {"name": "STAR", "type": "Enum", "url": "", "description": ""}, {"name": "STORE", "type": "Enum", "url": "", "description": ""}, {"name": "TICKET", "type": "Enum", "url": "", "description": ""}, {"name": "TRAIN", "type": "Enum", "url": "", "description": ""}, {"name": "VIDEO_CAMERA", "type": "Enum", "url": "", "description": ""}, {"name": "VIDEO_PLAY", "type": "Enum", "url": "", "description": ""}, {"name": "SQUARE", "type": "Enum", "url": "", "description": "Square shape crop style."}, {"name": "CIRCLE", "type": "Enum", "url": "", "description": "Circle shape crop style."}, {"name": "RECTANGLE_CUSTOM", "type": "Enum", "url": "", "description": "Rectangle shape crop style with custom ratio."}, {"name": "RECTANGLE_4_3", "type": "Enum", "url": "", "description": "Rectangle shape crop style with 4:3 ratio."}, {"name": "SQUARE", "type": "Enum", "url": "", "description": "No cropping."}, {"name": "CIRCLE", "type": "Enum", "url": "", "description": "Crop to a circle shape."}, {"name": "SPINNER", "type": "Enum", "url": "", "description": "Use a spinner indicator."}, {"name": "NONE", "type": "Enum", "url": "", "description": "Do not use an indicator."}, {"name": "NOTHING", "type": "Enum", "url": "", "description": "Do nothing on close."}, {"name": "RELOAD", "type": "Enum", "url": "", "description": "Reloads the add-on on when the window closes."}, {"name": "FULL_SIZE", "type": "Enum", "url": "", "description": "Open in a full window or tab."}, {"name": "OVERLAY", "type": "Enum", "url": "", "description": "Open as an overlay such as a pop-up."}, {"name": "CHECK_BOX", "type": "Enum", "url": "", "description": "Checkbox input style."}, {"name": "RADIO_BUTTON", "type": "Enum", "url": "", "description": "Radio buton input style."}, {"name": "DROPDOWN", "type": "Enum", "url": "", "description": "Dropdown menu selection input style."}, {"name": "SWITCH", "type": "Enum", "url": "", "description": "Toggle-styled control for a switch widget."}, {"name": "CHECK_BOX", "type": "Enum", "url": "", "description": "Checkbox-styled control for a switch widget."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "Normal text button with clear background."}, {"name": "FILLED", "type": "Enum", "url": "", "description": "Text button with colored background."}, {"name": "IN_PLACE_INSERT", "type": "Enum", "url": "", "description": "Default."}, {"name": "INSERT_AT_START", "type": "Enum", "url": "", "description": "Update actions insert content at the start of message body."}, {"name": "INSERT_AT_END", "type": "Enum", "url": "", "description": "Update actions insert content at the end of the message body."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/action", "name": "Action", "type": "class", "methods": [{"name": "setFunctionName", "parameters": [{"name": "functionName", "type": "String"}], "result": "Action", "description": "Sets the name of the callback function to be called."}, {"name": "setLoadIndicator", "parameters": [{"name": "loadIndicator", "type": "LoadIndicator"}], "result": "Action", "description": "Sets the loading indicator that displays while the action is in progress."}, {"name": "setParameters", "parameters": [{"name": "parameters", "type": "Object"}], "result": "Action", "description": "Allows custom parameters to be passed to the callback function."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/cache/cache-service", "name": "CacheService", "type": "class", "methods": [{"name": "getDocumentCache", "parameters": [], "result": "Cache", "description": "Gets the cache instance scoped to the current document and script."}, {"name": "getScriptCache", "parameters": [], "result": "Cache", "description": "Gets the cache instance scoped to the script."}, {"name": "getUserCache", "parameters": [], "result": "Cache", "description": "Gets the cache instance scoped to the current user and script."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/cache/cache", "name": "Cache", "type": "class", "methods": [{"name": "get", "parameters": [{"name": "key", "type": "String"}], "result": "String", "description": "Gets the cached value for the given key, or null if none is found."}, {"name": "getAll", "parameters": [{"name": "keys", "type": "String"}], "result": "Object", "description": "Returns a JavaScript Object containing all key/value pairs found in the cache for an array of\nkeys."}, {"name": "put", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "void", "description": "Adds a key/value pair to the cache."}, {"name": "put", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}, {"name": "expirationInSeconds", "type": "Integer"}], "result": "void", "description": "Adds a key/value pair to the cache, with an expiration time (in seconds)."}, {"name": "putAll", "parameters": [{"name": "values", "type": "Object"}], "result": "void", "description": "Adds a set of key/value pairs to the cache."}, {"name": "putAll", "parameters": [{"name": "values", "type": "Object"}, {"name": "expirationInSeconds", "type": "Integer"}], "result": "void", "description": "Adds a set of key/value pairs to the cache, with an expiration time (in seconds)."}, {"name": "remove", "parameters": [{"name": "key", "type": "String"}], "result": "void", "description": "Removes an entry from the cache using the given key."}, {"name": "removeAll", "parameters": [{"name": "keys", "type": "String"}], "result": "void", "description": "Removes a set of entries from the cache."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/cache", "name": "Cache", "type": "cache", "methods": [{"name": "get", "parameters": [{"name": "key", "type": "String"}], "result": "String", "description": "Gets the cached value for the given key, or null if none is found."}, {"name": "getAll", "parameters": [{"name": "keys", "type": "String"}], "result": "Object", "description": "Returns a JavaScript Object containing all key/value pairs found in the cache for an array of\nkeys."}, {"name": "put", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "void", "description": "Adds a key/value pair to the cache."}, {"name": "put", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}, {"name": "expirationInSeconds", "type": "Integer"}], "result": "void", "description": "Adds a key/value pair to the cache, with an expiration time (in seconds)."}, {"name": "putAll", "parameters": [{"name": "values", "type": "Object"}], "result": "void", "description": "Adds a set of key/value pairs to the cache."}, {"name": "putAll", "parameters": [{"name": "values", "type": "Object"}, {"name": "expirationInSeconds", "type": "Integer"}], "result": "void", "description": "Adds a set of key/value pairs to the cache, with an expiration time (in seconds)."}, {"name": "remove", "parameters": [{"name": "key", "type": "String"}], "result": "void", "description": "Removes an entry from the cache using the given key."}, {"name": "removeAll", "parameters": [{"name": "keys", "type": "String"}], "result": "void", "description": "Removes a set of entries from the cache."}, {"name": "getDocumentCache", "parameters": [], "result": "Cache", "description": "Gets the cache instance scoped to the current document and script."}, {"name": "getScriptCache", "parameters": [], "result": "Cache", "description": "Gets the cache instance scoped to the script."}, {"name": "getUserCache", "parameters": [], "result": "Cache", "description": "Gets the cache instance scoped to the current user and script."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/weekday", "name": "Weekday", "type": "enum", "methods": [], "properties": [{"name": "SUNDAY", "type": "Enum", "url": "", "description": "Sunday."}, {"name": "MONDAY", "type": "Enum", "url": "", "description": "Monday."}, {"name": "TUESDAY", "type": "Enum", "url": "", "description": "Tuesday."}, {"name": "WEDNESDAY", "type": "Enum", "url": "", "description": "Wednesday."}, {"name": "THURSDAY", "type": "Enum", "url": "", "description": "Thursday."}, {"name": "FRIDAY", "type": "Enum", "url": "", "description": "Friday."}, {"name": "SATURDAY", "type": "Enum", "url": "", "description": "Saturday."}]},
{"url": "https://developers.google.com/apps-script/reference/card-service/card-service", "name": "CardService", "type": "class", "methods": [{"name": "newAction", "parameters": [], "result": "Action", "description": "Creates a new Action."}, {"name": "newActionResponseBuilder", "parameters": [], "result": "ActionResponseBuilder", "description": "Creates a new ActionResponseBuilder."}, {"name": "newAuthorizationAction", "parameters": [], "result": "AuthorizationAction", "description": "Creates a new AuthorizationAction."}, {"name": "newAuthorizationException", "parameters": [], "result": "AuthorizationException", "description": "Creates a new AuthorizationException."}, {"name": "newBorderStyle", "parameters": [], "result": "BorderStyle", "description": "Creates a new BorderStyle."}, {"name": "newButtonSet", "parameters": [], "result": "ButtonSet", "description": "Creates a new ButtonSet."}, {"name": "newCalendarEventActionResponseBuilder", "parameters": [], "result": "CalendarEventActionResponseBuilder", "description": "Creates a new CalendarEventActionResponseBuilder."}, {"name": "newCardAction", "parameters": [], "result": "CardAction", "description": "Creates a new CardAction."}, {"name": "newCardBuilder", "parameters": [], "result": "CardBuilder", "description": "Creates a new CardBuilder."}, {"name": "newCardHeader", "parameters": [], "result": "CardHeader", "description": "Creates a new CardHeader."}, {"name": "newCardSection", "parameters": [], "result": "CardSection", "description": "Creates a new CardSection."}, {"name": "newComposeActionResponseBuilder", "parameters": [], "result": "ComposeActionResponseBuilder", "description": "Creates a new ComposeActionResponseBuilder."}, {"name": "newDatePicker", "parameters": [], "result": "DatePicker", "description": "Creates a new DatePicker."}, {"name": "newDateTimePicker", "parameters": [], "result": "DateTimePicker", "description": "Creates a new DateTimePicker."}, {"name": "newDecoratedText", "parameters": [], "result": "DecoratedText", "description": "Creates a new DecoratedText."}, {"name": "newDriveItemsSelectedActionResponseBuilder", "parameters": [], "result": "DriveItemsSelectedActionResponseBuilder", "description": "Creates a new DriveItemsSelectedActionResponseBuilder."}, {"name": "newEditorFileScopeActionResponseBuilder", "parameters": [], "result": "EditorFileScopeActionResponseBuilder", "description": "Creates a new EditorFileScopeActionResponseBuilder."}, {"name": "newFixedFooter", "parameters": [], "result": "FixedFooter", "description": "Creates a new FixedFooter."}, {"name": "newGrid", "parameters": [], "result": "Grid", "description": "Creates a new Grid."}, {"name": "newGridItem", "parameters": [], "result": "GridItem", "description": "Creates a new GridItem."}, {"name": "newImage", "parameters": [], "result": "Image", "description": "Creates a new Image."}, {"name": "newImageButton", "parameters": [], "result": "ImageButton", "description": "Creates a new ImageButton."}, {"name": "newImageComponent", "parameters": [], "result": "ImageComponent", "description": "Creates a new ImageComponent."}, {"name": "newImageCropStyle", "parameters": [], "result": "ImageCropStyle", "description": "Creates a new ImageCropStyle."}, {"name": "newKeyValue", "parameters": [], "result": "KeyValue", "description": "Creates a new KeyValue."}, {"name": "newNavigation", "parameters": [], "result": "Navigation", "description": "Creates a new Navigation."}, {"name": "newNotification", "parameters": [], "result": "Notification", "description": "Creates a new Notification."}, {"name": "newOpenLink", "parameters": [], "result": "OpenLink", "description": "Creates a new OpenLink."}, {"name": "newSelectionInput", "parameters": [], "result": "SelectionInput", "description": "Creates a new SelectionInput."}, {"name": "newSuggestions", "parameters": [], "result": "Suggestions", "description": "Creates a new Suggestions."}, {"name": "newSuggestionsResponseBuilder", "parameters": [], "result": "SuggestionsResponseBuilder", "description": "Creates a new SuggestionsResponseBuilder."}, {"name": "newSwitch", "parameters": [], "result": "Switch", "description": "Creates a new Switch."}, {"name": "newTextButton", "parameters": [], "result": "TextButton", "description": "Creates a new TextButton."}, {"name": "newTextInput", "parameters": [], "result": "TextInput", "description": "Creates a new TextInput."}, {"name": "newTextParagraph", "parameters": [], "result": "TextParagraph", "description": "Creates a new TextParagraph."}, {"name": "newTimePicker", "parameters": [], "result": "TimePicker", "description": "Creates a new TimePicker."}, {"name": "newUniversalActionResponseBuilder", "parameters": [], "result": "UniversalActionResponseBuilder", "description": "Creates a new UniversalActionResponseBuilder."}, {"name": "newUpdateDraftActionResponseBuilder", "parameters": [], "result": "UpdateDraftActionResponseBuilder", "description": "Creates a new UpdateDraftActionResponseBuilder."}, {"name": "newUpdateDraftBccRecipientsAction", "parameters": [], "result": "UpdateDraftBccRecipientsAction", "description": "Creates a new UpdateDraftBccRecipientsAction;"}, {"name": "newUpdateDraftBodyAction", "parameters": [], "result": "UpdateDraftBodyAction", "description": "Creates a new UpdateDraftBodyAction."}, {"name": "newUpdateDraftCcRecipientsAction", "parameters": [], "result": "UpdateDraftCcRecipientsAction", "description": "Creates a new UpdateDraftCcRecipientsAction."}, {"name": "newUpdateDraftSubjectAction", "parameters": [], "result": "UpdateDraftSubjectAction", "description": "Creates a new UpdateDraftSubjectAction."}, {"name": "newUpdateDraftToRecipientsAction", "parameters": [], "result": "UpdateDraftToRecipientsAction", "description": "Creates a new UpdateDraftToRecipientsAction."}], "properties": [{"name": "BorderType", "type": "BorderType", "url": "/apps-script/reference/card-service/border-type", "description": "The BorderType enumeration."}, {"name": "ComposedEmailType", "type": "ComposedEmailType", "url": "/apps-script/reference/card-service/composed-email-type", "description": "The ComposedEmailType enumeration."}, {"name": "ContentType", "type": "ContentType", "url": "/apps-script/reference/card-service/content-type", "description": "The ContentType enumeration."}, {"name": "GridItemLayout", "type": "GridItemLayout", "url": "/apps-script/reference/card-service/grid-item-layout", "description": "The GridItemLayout enumeration."}, {"name": "HorizontalAlignment", "type": "HorizontalAlignment", "url": "/apps-script/reference/card-service/horizontal-alignment", "description": "The HorizontalAlignment enumeration."}, {"name": "Icon", "type": "Icon", "url": "/apps-script/reference/card-service/icon", "description": "The Icon enumeration."}, {"name": "ImageCropType", "type": "ImageCropType", "url": "/apps-script/reference/card-service/image-crop-type", "description": "The ImageCropType enumeration."}, {"name": "ImageStyle", "type": "ImageStyle", "url": "/apps-script/reference/card-service/image-style", "description": "The ImageStyle enumeration."}, {"name": "LoadIndicator", "type": "LoadIndicator", "url": "/apps-script/reference/card-service/load-indicator", "description": "The LoadIndicator enumeration."}, {"name": "OnClose", "type": "OnClose", "url": "/apps-script/reference/card-service/on-close", "description": "The OnClose enumeration."}, {"name": "OpenAs", "type": "OpenAs", "url": "/apps-script/reference/card-service/open-as", "description": "The OpenAs enumeration."}, {"name": "SelectionInputType", "type": "SelectionInputType", "url": "/apps-script/reference/card-service/selection-input-type", "description": "The SelectionInputType enumeration."}, {"name": "TextButtonStyle", "type": "TextButtonStyle", "url": "/apps-script/reference/card-service/text-button-style", "description": "The TextButtonStyle enumeration."}, {"name": "UpdateDraftBodyType", "type": "UpdateDraftBodyType", "url": "/apps-script/reference/card-service/update-draft-body-type", "description": "The UpdateDraftBodyType enumeration."}]},
{"url": "https://developers.google.com/apps-script/reference/base/month", "name": "Month", "type": "enum", "methods": [], "properties": [{"name": "JANUARY", "type": "Enum", "url": "", "description": "January (month 1)."}, {"name": "FEBRUARY", "type": "Enum", "url": "", "description": "February (month 2)."}, {"name": "MARCH", "type": "Enum", "url": "", "description": "March (month 3)."}, {"name": "APRIL", "type": "Enum", "url": "", "description": "April (month 4)."}, {"name": "MAY", "type": "Enum", "url": "", "description": "May (month 5)."}, {"name": "JUNE", "type": "Enum", "url": "", "description": "June (month 6)."}, {"name": "JULY", "type": "Enum", "url": "", "description": "July (month 7)."}, {"name": "AUGUST", "type": "Enum", "url": "", "description": "August (month 8)."}, {"name": "SEPTEMBER", "type": "Enum", "url": "", "description": "September (month 9)."}, {"name": "OCTOBER", "type": "Enum", "url": "", "description": "October (month 10)."}, {"name": "NOVEMBER", "type": "Enum", "url": "", "description": "November (month 11)."}, {"name": "DECEMBER", "type": "Enum", "url": "", "description": "December (month 12)."}]},
{"url": "https://developers.google.com/apps-script/reference/gmail/gmail-draft.html", "name": "GmailDraft", "type": "class", "methods": [{"name": "deleteDraft", "parameters": [], "result": "void", "description": "Deletes this draft message."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of this draft message."}, {"name": "getMessage", "parameters": [], "result": "GmailMessage", "description": "Returns a GmailMessage representing this draft."}, {"name": "getMessageId", "parameters": [], "result": "String", "description": "Returns the ID of the GmailMessage representing this draft."}, {"name": "send", "parameters": [], "result": "GmailMessage", "description": "Sends this draft email message."}, {"name": "update", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Replaces the contents of this draft message."}, {"name": "update", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Replaces the contents of this draft message using optional arguments."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/blob-source", "name": "BlobSource", "type": "interface", "methods": [{"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/gmail/gmail-message.html", "name": "GmailMessage", "type": "class", "methods": [{"name": "createDraftReply", "parameters": [{"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of this message using the reply-to address."}, {"name": "createDraftReply", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of this message using the reply-to address, with\noptional arguments."}, {"name": "createDraftReplyAll", "parameters": [{"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender using the reply-to address and all recipients of\nthis message."}, {"name": "createDraftReplyAll", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of this message using the reply-to address and\nall recipients, with optional arguments."}, {"name": "forward", "parameters": [{"name": "recipient", "type": "String"}], "result": "GmailMessage", "description": "Forwards this message to new recipients."}, {"name": "forward", "parameters": [{"name": "recipient", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailMessage", "description": "Forwards this message to new recipients, with optional arguments."}, {"name": "getAttachments", "parameters": [], "result": "GmailAttachment[]", "description": "Gets all the attachments for this message."}, {"name": "getAttachments", "parameters": [{"name": "options", "type": "Object"}], "result": "GmailAttachment[]", "description": "Gets all the attachments for this message."}, {"name": "getBcc", "parameters": [], "result": "String", "description": "Gets the comma-separated recipients bcc'd on this message."}, {"name": "getBody", "parameters": [], "result": "String", "description": "Gets the HTML content of the body of this message."}, {"name": "getCc", "parameters": [], "result": "String", "description": "Gets the comma-separated recipients cc'd on this message."}, {"name": "getDate", "parameters": [], "result": "Date", "description": "Gets the date and time of this message."}, {"name": "getFrom", "parameters": [], "result": "String", "description": "Gets the sender of this message."}, {"name": "getHeader", "parameters": [{"name": "name", "type": "String"}], "result": "String", "description": "Gets the value of an RFC 2822 header given the header name."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of this message."}, {"name": "getPlainBody", "parameters": [], "result": "String", "description": "Gets the content of the body of this message without HTML formatting."}, {"name": "getRawContent", "parameters": [], "result": "String", "description": "Gets the raw content of this message."}, {"name": "getReplyTo", "parameters": [], "result": "String", "description": "Gets the reply-to address of this message (usually the sender)."}, {"name": "getSubject", "parameters": [], "result": "String", "description": "Gets the subject of this message."}, {"name": "getThread", "parameters": [], "result": "GmailThread", "description": "Gets the thread that contains this message."}, {"name": "getTo", "parameters": [], "result": "String", "description": "Gets the comma-separated recipients of this message."}, {"name": "isDraft", "parameters": [], "result": "Boolean", "description": "Gets whether this message is a draft."}, {"name": "isInChats", "parameters": [], "result": "Boolean", "description": "Gets whether this message is a chat."}, {"name": "isInInbox", "parameters": [], "result": "Boolean", "description": "Gets whether this message is in the inbox."}, {"name": "isInPriorityInbox", "parameters": [], "result": "Boolean", "description": "Returns true if this message is in the priority inbox; returns false otherwise."}, {"name": "isInTrash", "parameters": [], "result": "Boolean", "description": "Gets whether this message is in the trash."}, {"name": "isStarred", "parameters": [], "result": "Boolean", "description": "Gets whether this message is starred."}, {"name": "isUnread", "parameters": [], "result": "Boolean", "description": "Gets whether this message is unread."}, {"name": "markRead", "parameters": [], "result": "GmailMessage", "description": "Marks the message as read."}, {"name": "markUnread", "parameters": [], "result": "GmailMessage", "description": "Marks the message as unread."}, {"name": "moveToTrash", "parameters": [], "result": "GmailMessage", "description": "Moves the message to the trash."}, {"name": "refresh", "parameters": [], "result": "GmailMessage", "description": "Reloads this message and associated state from Gmail (useful in case the labels, read state,\netc., have changed)."}, {"name": "reply", "parameters": [{"name": "body", "type": "String"}], "result": "GmailMessage", "description": "Replies to the sender of this message using the reply-to address."}, {"name": "reply", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailMessage", "description": "Replies to the sender of this message using the reply-to address, with optional arguments."}, {"name": "replyAll", "parameters": [{"name": "body", "type": "String"}], "result": "GmailMessage", "description": "Replies to the sender using the reply-to address and all recipients of this message."}, {"name": "replyAll", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailMessage", "description": "Replies to the sender of this message using the reply-to address and all recipients, with\noptional arguments."}, {"name": "star", "parameters": [], "result": "GmailMessage", "description": "Stars the message."}, {"name": "unstar", "parameters": [], "result": "GmailMessage", "description": "Unstars the message."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/user", "name": "User", "type": "class", "methods": [{"name": "getEmail", "parameters": [], "result": "String", "description": "Gets the user's email address, if available."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/button", "name": "Button", "type": "enum", "methods": [], "properties": [{"name": "CLOSE", "type": "Enum", "url": "", "description": "The standard close button displayed in every dialog's title bar. This button is not explicitly\nadded to a dialog, and it cannot be removed."}, {"name": "OK", "type": "Enum", "url": "", "description": "An \"OK\" button, indicating that an operation should proceed."}, {"name": "CANCEL", "type": "Enum", "url": "", "description": "A \"Cancel\" button, indicating that an operation should not proceed."}, {"name": "YES", "type": "Enum", "url": "", "description": "A \"Yes\" button, indicating a positive response to a question."}, {"name": "NO", "type": "Enum", "url": "", "description": "A \"No\" button, indicating a negative response to a question."}]},
{"url": "https://developers.google.com/apps-script/reference/base/color-type", "name": "ColorType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A color type that is not supported."}, {"name": "RGB", "type": "Enum", "url": "", "description": "A color defined by red, green, blue color channels."}, {"name": "THEME", "type": "Enum", "url": "", "description": "A color that refers to an entry in the theme's color scheme."}]},
{"url": "https://developers.google.com/apps-script/reference/base/ui", "name": "Ui", "type": "class", "methods": [{"name": "alert", "parameters": [{"name": "prompt", "type": "String"}], "result": "Button", "description": "Opens a dialog box in the user's editor with the given message and an \"OK\" button."}, {"name": "alert", "parameters": [{"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "Button", "description": "Opens a dialog box in the user's editor with the given message and set of buttons."}, {"name": "alert", "parameters": [{"name": "title", "type": "String"}, {"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "Button", "description": "Opens a dialog box in the user's editor with the given title, message, and set of buttons."}, {"name": "createAddonMenu", "parameters": [], "result": "Menu", "description": "Creates a builder that can be used to insert a sub-menu into the editor's Add-on menu."}, {"name": "createMenu", "parameters": [{"name": "caption", "type": "String"}], "result": "Menu", "description": "Creates a builder that can be used to add a menu to the editor's user interface."}, {"name": "prompt", "parameters": [{"name": "prompt", "type": "String"}], "result": "PromptResponse", "description": "Opens an input dialog box in the user's editor with the given message and an \"OK\" button."}, {"name": "prompt", "parameters": [{"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "PromptResponse", "description": "Opens an input dialog box in the user's editor with the given message and set of buttons."}, {"name": "prompt", "parameters": [{"name": "title", "type": "String"}, {"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "PromptResponse", "description": "Opens an input dialog box in the user's editor with the given title, message, and set of\nbuttons."}, {"name": "showModalDialog", "parameters": [{"name": "userInterface", "type": "Object"}, {"name": "title", "type": "String"}], "result": "void", "description": "Opens a modal dialog box in the user's editor with custom client-side content."}, {"name": "showModelessDialog", "parameters": [{"name": "userInterface", "type": "Object"}, {"name": "title", "type": "String"}], "result": "void", "description": "Opens a modeless dialog box in the user's editor with custom client-side content."}, {"name": "showSidebar", "parameters": [{"name": "userInterface", "type": "Object"}], "result": "void", "description": "Opens a sidebar in the user's editor with custom client-side content."}], "properties": [{"name": "Button", "type": "Button", "url": "/apps-script/reference/base/button", "description": "An enum representing predetermined, localized dialog buttons returned by an alert or PromptResponse.getSelectedButton() to indicate\nwhich button in a dialog the user clicked."}, {"name": "ButtonSet", "type": "ButtonSet", "url": "/apps-script/reference/base/button-set", "description": "An enum representing predetermined, localized sets of one or more dialog buttons that can be\nadded to an alert or a prompt."}]},
{"url": "https://developers.google.com/apps-script/reference/base/button-set", "name": "ButtonSet", "type": "enum", "methods": [], "properties": [{"name": "OK", "type": "Enum", "url": "", "description": "A single \"OK\" button, indicating an informational message that can only be dismissed."}, {"name": "OK_CANCEL", "type": "Enum", "url": "", "description": "An \"OK\" button and a \"Cancel\" button, allowing the user to either proceed with or halt an\noperation."}, {"name": "YES_NO", "type": "Enum", "url": "", "description": "A \"Yes\" button and a \"No\" button, allowing the user to answer a yes/no question."}, {"name": "YES_NO_CANCEL", "type": "Enum", "url": "", "description": "A \"Yes\" button, a \"No\" button, and a \"Cancel\" button, allowing the user to either answer a\nyes/no question or halt an operation."}]},
{"url": "https://developers.google.com/apps-script/reference/base/rgb-color", "name": "RgbColor", "type": "class", "methods": [{"name": "asHexString", "parameters": [], "result": "String", "description": "Returns the color as a CSS-style 7 character hexadecimal string, #rrggbb."}, {"name": "getBlue", "parameters": [], "result": "Integer", "description": "The blue channel of this color, as a number from 0 to 255."}, {"name": "getColorType", "parameters": [], "result": "ColorType", "description": "Get the type of this color."}, {"name": "getGreen", "parameters": [], "result": "Integer", "description": "The green channel of this color, as a number from 0 to 255."}, {"name": "getRed", "parameters": [], "result": "Integer", "description": "The red channel of this color, as a number from 0 to 255."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/conference-data/conference-data.html", "name": "ConferenceData", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/menu", "name": "Menu", "type": "class", "methods": [{"name": "addItem", "parameters": [{"name": "caption", "type": "String"}, {"name": "functionName", "type": "String"}], "result": "Menu", "description": "Adds an item to the menu."}, {"name": "addSeparator", "parameters": [], "result": "Menu", "description": "Adds a visual separator to the menu."}, {"name": "addSubMenu", "parameters": [{"name": "menu", "type": "Menu"}], "result": "Menu", "description": "Adds a sub-menu to the menu."}, {"name": "addToUi", "parameters": [], "result": "void", "description": "Inserts the menu into the instance of the editor's user interface."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/blob", "name": "Blob", "type": "class", "methods": [{"name": "copyBlob", "parameters": [], "result": "Blob", "description": "Returns a copy of this blob."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBytes", "parameters": [], "result": "Byte[]", "description": "Gets the data stored in this blob."}, {"name": "getContentType", "parameters": [], "result": "String", "description": "Gets the content type of the bytes in this blob."}, {"name": "getDataAsString", "parameters": [], "result": "String", "description": "Gets the data of this blob as a String with UTF-8 encoding."}, {"name": "getDataAsString", "parameters": [{"name": "charset", "type": "String"}], "result": "String", "description": "Gets the data of this blob as a string with the specified encoding."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this blob."}, {"name": "isGoogleType", "parameters": [], "result": "Boolean", "description": "Returns whether this blob is a Google Workspace file (Sheets, Docs, etc.)."}, {"name": "setBytes", "parameters": [{"name": "data", "type": "Byte"}], "result": "Blob", "description": "Sets the data stored in this blob."}, {"name": "setContentType", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Sets the content type of the bytes in this blob."}, {"name": "setContentTypeFromExtension", "parameters": [], "result": "Blob", "description": "Sets the content type of the bytes in this blob based on the file extension."}, {"name": "setDataFromString", "parameters": [{"name": "string", "type": "String"}], "result": "Blob", "description": "Sets the data of this blob from a string with UTF-8 encoding."}, {"name": "setDataFromString", "parameters": [{"name": "string", "type": "String"}, {"name": "charset", "type": "String"}], "result": "Blob", "description": "Sets the data of this blob from a string with the specified encoding."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Blob", "description": "Sets the name of this blob."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/session", "name": "Session", "type": "class", "methods": [{"name": "getActiveUser", "parameters": [], "result": "User", "description": "Gets information about the current user."}, {"name": "getActiveUserLocale", "parameters": [], "result": "String", "description": "Gets the language setting of the current user as a string\u2014for example, en for English."}, {"name": "getEffectiveUser", "parameters": [], "result": "User", "description": "Gets information about the user under whose authority the script is running."}, {"name": "getScriptTimeZone", "parameters": [], "result": "String", "description": "Gets the time zone of the script."}, {"name": "getTemporaryActiveUserKey", "parameters": [], "result": "String", "description": "Gets a temporary key that is unique to the active user but does not reveal the user identity."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/console", "name": "console", "type": "class", "methods": [{"name": "error", "parameters": [], "result": "void", "description": "Outputs a blank ERROR level message to Stackdriver Logging."}, {"name": "error", "parameters": [{"name": "formatOrObject", "type": "Object"}, {"name": "values", "type": "Object..."}], "result": "void", "description": "Outputs an ERROR level message to Stackdriver Logging."}, {"name": "info", "parameters": [], "result": "void", "description": "Outputs blank INFO level message to Stackdriver Logging."}, {"name": "info", "parameters": [{"name": "formatOrObject", "type": "Object"}, {"name": "values", "type": "Object..."}], "result": "void", "description": "Outputs an INFO level message to Stackdriver Logging."}, {"name": "log", "parameters": [], "result": "void", "description": "Outputs a blank DEBUG level message to Stackdriver Logging."}, {"name": "log", "parameters": [{"name": "formatOrObject", "type": "Object"}, {"name": "values", "type": "Object..."}], "result": "void", "description": "Outputs a DEBUG level message to Stackdriver Logging."}, {"name": "time", "parameters": [{"name": "label", "type": "String"}], "result": "void", "description": "Starts a timer you can use to track how long an operation takes."}, {"name": "timeEnd", "parameters": [{"name": "label", "type": "String"}], "result": "void", "description": "Stops a timer that was previously started by calling console.time()."}, {"name": "warn", "parameters": [], "result": "void", "description": "Outputs a blank WARNING level message to Stackdriver Logging."}, {"name": "warn", "parameters": [{"name": "formatOrObject", "type": "Object"}, {"name": "values", "type": "Object..."}], "result": "void", "description": "Outputs a WARNING level message to Stackdriver Logging."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/browser", "name": "Browser", "type": "class", "methods": [{"name": "inputBox", "parameters": [{"name": "prompt", "type": "String"}], "result": "String", "description": "Pops up a dialog box with a text input box in the user's browser."}, {"name": "inputBox", "parameters": [{"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "String", "description": "Pops up a dialog box with a text input box in the user's browser."}, {"name": "inputBox", "parameters": [{"name": "title", "type": "String"}, {"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "String", "description": "Pops up a dialog box with a text input box in the user's browser."}, {"name": "msgBox", "parameters": [{"name": "prompt", "type": "String"}], "result": "String", "description": "Pops up a dialog box with the given message and an OK button in the user's browser."}, {"name": "msgBox", "parameters": [{"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "String", "description": "Pops up a dialog box with the given message and specified buttons in the user's browser."}, {"name": "msgBox", "parameters": [{"name": "title", "type": "String"}, {"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "String", "description": "Pops up a dialog box with the given title, message and specified buttons in the user's browser."}], "properties": [{"name": "Buttons", "type": "ButtonSet", "url": "/apps-script/reference/base/button-set", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/base/prompt-response", "name": "PromptResponse", "type": "class", "methods": [{"name": "getResponseText", "parameters": [], "result": "String", "description": "Gets the text that the user entered in the dialog's input field."}, {"name": "getSelectedButton", "parameters": [], "result": "Button", "description": "Gets the button that the user clicked to dismiss the dialog."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/mime-type", "name": "MimeType", "type": "enum", "methods": [], "properties": [{"name": "GOOGLE_APPS_SCRIPT", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Apps Script project."}, {"name": "GOOGLE_DRAWINGS", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Drawings file."}, {"name": "GOOGLE_DOCS", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Docs file."}, {"name": "GOOGLE_FORMS", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Forms file."}, {"name": "GOOGLE_SHEETS", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Sheets file."}, {"name": "GOOGLE_SITES", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Sites file."}, {"name": "GOOGLE_SLIDES", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Slides file."}, {"name": "FOLDER", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Drive folder."}, {"name": "SHORTCUT", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Drive shortcut."}, {"name": "BMP", "type": "Enum", "url": "", "description": "Representation of MIME type for a BMP image file (typically .bmp)."}, {"name": "GIF", "type": "Enum", "url": "", "description": "Representation of MIME type for a GIF image file (typically .gif)."}, {"name": "JPEG", "type": "Enum", "url": "", "description": "Representation of MIME type for a JPEG image file (typically .jpg)."}, {"name": "PNG", "type": "Enum", "url": "", "description": "Representation of MIME type for a PNG image file (typically .png)."}, {"name": "SVG", "type": "Enum", "url": "", "description": "Representation of MIME type for an SVG image file (typically .svg)."}, {"name": "PDF", "type": "Enum", "url": "", "description": "Representation of MIME type for a PDF file (typically .pdf)."}, {"name": "CSS", "type": "Enum", "url": "", "description": "Representation of MIME type for a CSS text file (typically .css)."}, {"name": "CSV", "type": "Enum", "url": "", "description": "Representation of MIME type for a CSV text file (typically .csv)."}, {"name": "HTML", "type": "Enum", "url": "", "description": "Representation of MIME type for an HTML text file (typically .html)."}, {"name": "JAVASCRIPT", "type": "Enum", "url": "", "description": "Representation of MIME type for a JavaScript text file (typically .js)."}, {"name": "PLAIN_TEXT", "type": "Enum", "url": "", "description": "Representation of MIME type for a plain text file (typically .txt)."}, {"name": "RTF", "type": "Enum", "url": "", "description": "Representation of MIME type for a rich text file (typically .rtf)."}, {"name": "OPENDOCUMENT_GRAPHICS", "type": "Enum", "url": "", "description": "Representation of MIME type for an OpenDocument graphics file (typically .odg)."}, {"name": "OPENDOCUMENT_PRESENTATION", "type": "Enum", "url": "", "description": "Representation of MIME type for an OpenDocument presentation file (typically .odp)."}, {"name": "OPENDOCUMENT_SPREADSHEET", "type": "Enum", "url": "", "description": "Representation of MIME type for an OpenDocument spreadsheet file (typically .ods)."}, {"name": "OPENDOCUMENT_TEXT", "type": "Enum", "url": "", "description": "Representation of MIME type for an OpenDocument word-processing file (typically .odt)."}, {"name": "MICROSOFT_EXCEL", "type": "Enum", "url": "", "description": "Representation of MIME type for a Microsoft Excel spreadsheet file (typically .xlsx)."}, {"name": "MICROSOFT_EXCEL_LEGACY", "type": "Enum", "url": "", "description": "Representation of MIME type for a Microsoft Excel legacy file (typically .xls)."}, {"name": "MICROSOFT_POWERPOINT", "type": "Enum", "url": "", "description": "Representation of MIME type for a Microsoft PowerPoint presentation file (typically .pptx)."}, {"name": "MICROSOFT_POWERPOINT_LEGACY", "type": "Enum", "url": "", "description": "Representation of MIME type for a Microsoft PowerPoint legacy file (typically .ppt)."}, {"name": "MICROSOFT_WORD", "type": "Enum", "url": "", "description": "Representation of MIME type for a Microsoft Word document file (typically .docx)."}, {"name": "MICROSOFT_WORD_LEGACY", "type": "Enum", "url": "", "description": "Representation of MIME type for a Microsoft Word legacy file (typically .doc)."}, {"name": "ZIP", "type": "Enum", "url": "", "description": "Representation of MIME type for a ZIP archive file (typically .zip)."}]},
{"url": "https://developers.google.com/apps-script/reference/base/logger", "name": "Logger", "type": "class", "methods": [{"name": "clear", "parameters": [], "result": "void", "description": "Clears the log."}, {"name": "getLog", "parameters": [], "result": "String", "description": "Returns a complete list of messages in the current log."}, {"name": "log", "parameters": [{"name": "data", "type": "Object"}], "result": "Logger", "description": "Writes the string to the logging console."}, {"name": "log", "parameters": [{"name": "format", "type": "String"}, {"name": "values", "type": "Object..."}], "result": "Logger", "description": "Writes a formatted string to the logging console, using the format and values provided."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/theme-color-type", "name": "ThemeColorType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "Represents a theme color that is not supported."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "Represents the text color."}, {"name": "BACKGROUND", "type": "Enum", "url": "", "description": "Represents the color to use for chart's background."}, {"name": "ACCENT1", "type": "Enum", "url": "", "description": "Represents the first accent color."}, {"name": "ACCENT2", "type": "Enum", "url": "", "description": "Represents the second accent color."}, {"name": "ACCENT3", "type": "Enum", "url": "", "description": "Represents the third accent color."}, {"name": "ACCENT4", "type": "Enum", "url": "", "description": "Represents the fourth accent color."}, {"name": "ACCENT5", "type": "Enum", "url": "", "description": "Represents the fifth accent color."}, {"name": "ACCENT6", "type": "Enum", "url": "", "description": "Represents the sixth accent color."}, {"name": "HYPERLINK", "type": "Enum", "url": "", "description": "Represents the color to use for hyperlinks."}]},
{"url": "https://developers.google.com/apps-script/reference/base", "name": "Base", "type": "base", "methods": [{"name": "copyBlob", "parameters": [], "result": "Blob", "description": "Returns a copy of this blob."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBytes", "parameters": [], "result": "Byte[]", "description": "Gets the data stored in this blob."}, {"name": "getContentType", "parameters": [], "result": "String", "description": "Gets the content type of the bytes in this blob."}, {"name": "getDataAsString", "parameters": [], "result": "String", "description": "Gets the data of this blob as a String with UTF-8 encoding."}, {"name": "getDataAsString", "parameters": [{"name": "charset", "type": "String"}], "result": "String", "description": "Gets the data of this blob as a string with the specified encoding."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this blob."}, {"name": "isGoogleType", "parameters": [], "result": "Boolean", "description": "Returns whether this blob is a Google Workspace file (Sheets, Docs, etc.)."}, {"name": "setBytes", "parameters": [{"name": "data", "type": "Byte"}], "result": "Blob", "description": "Sets the data stored in this blob."}, {"name": "setContentType", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Sets the content type of the bytes in this blob."}, {"name": "setContentTypeFromExtension", "parameters": [], "result": "Blob", "description": "Sets the content type of the bytes in this blob based on the file extension."}, {"name": "setDataFromString", "parameters": [{"name": "string", "type": "String"}], "result": "Blob", "description": "Sets the data of this blob from a string with UTF-8 encoding."}, {"name": "setDataFromString", "parameters": [{"name": "string", "type": "String"}, {"name": "charset", "type": "String"}], "result": "Blob", "description": "Sets the data of this blob from a string with the specified encoding."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Blob", "description": "Sets the name of this blob."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "inputBox", "parameters": [{"name": "prompt", "type": "String"}], "result": "String", "description": "Pops up a dialog box with a text input box in the user's browser."}, {"name": "inputBox", "parameters": [{"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "String", "description": "Pops up a dialog box with a text input box in the user's browser."}, {"name": "inputBox", "parameters": [{"name": "title", "type": "String"}, {"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "String", "description": "Pops up a dialog box with a text input box in the user's browser."}, {"name": "msgBox", "parameters": [{"name": "prompt", "type": "String"}], "result": "String", "description": "Pops up a dialog box with the given message and an OK button in the user's browser."}, {"name": "msgBox", "parameters": [{"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "String", "description": "Pops up a dialog box with the given message and specified buttons in the user's browser."}, {"name": "msgBox", "parameters": [{"name": "title", "type": "String"}, {"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "String", "description": "Pops up a dialog box with the given title, message and specified buttons in the user's browser."}, {"name": "clear", "parameters": [], "result": "void", "description": "Clears the log."}, {"name": "getLog", "parameters": [], "result": "String", "description": "Returns a complete list of messages in the current log."}, {"name": "log", "parameters": [{"name": "data", "type": "Object"}], "result": "Logger", "description": "Writes the string to the logging console."}, {"name": "log", "parameters": [{"name": "format", "type": "String"}, {"name": "values", "type": "Object..."}], "result": "Logger", "description": "Writes a formatted string to the logging console, using the format and values provided."}, {"name": "addItem", "parameters": [{"name": "caption", "type": "String"}, {"name": "functionName", "type": "String"}], "result": "Menu", "description": "Adds an item to the menu."}, {"name": "addSeparator", "parameters": [], "result": "Menu", "description": "Adds a visual separator to the menu."}, {"name": "addSubMenu", "parameters": [{"name": "menu", "type": "Menu"}], "result": "Menu", "description": "Adds a sub-menu to the menu."}, {"name": "addToUi", "parameters": [], "result": "void", "description": "Inserts the menu into the instance of the editor's user interface."}, {"name": "getResponseText", "parameters": [], "result": "String", "description": "Gets the text that the user entered in the dialog's input field."}, {"name": "getSelectedButton", "parameters": [], "result": "Button", "description": "Gets the button that the user clicked to dismiss the dialog."}, {"name": "asHexString", "parameters": [], "result": "String", "description": "Returns the color as a CSS-style 7 character hexadecimal string, #rrggbb."}, {"name": "getBlue", "parameters": [], "result": "Integer", "description": "The blue channel of this color, as a number from 0 to 255."}, {"name": "getColorType", "parameters": [], "result": "ColorType", "description": "Get the type of this color."}, {"name": "getGreen", "parameters": [], "result": "Integer", "description": "The green channel of this color, as a number from 0 to 255."}, {"name": "getRed", "parameters": [], "result": "Integer", "description": "The red channel of this color, as a number from 0 to 255."}, {"name": "getActiveUser", "parameters": [], "result": "User", "description": "Gets information about the current user."}, {"name": "getActiveUserLocale", "parameters": [], "result": "String", "description": "Gets the language setting of the current user as a string\u2014for example, en for English."}, {"name": "getEffectiveUser", "parameters": [], "result": "User", "description": "Gets information about the user under whose authority the script is running."}, {"name": "getScriptTimeZone", "parameters": [], "result": "String", "description": "Gets the time zone of the script."}, {"name": "getTemporaryActiveUserKey", "parameters": [], "result": "String", "description": "Gets a temporary key that is unique to the active user but does not reveal the user identity."}, {"name": "alert", "parameters": [{"name": "prompt", "type": "String"}], "result": "Button", "description": "Opens a dialog box in the user's editor with the given message and an \"OK\" button."}, {"name": "alert", "parameters": [{"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "Button", "description": "Opens a dialog box in the user's editor with the given message and set of buttons."}, {"name": "alert", "parameters": [{"name": "title", "type": "String"}, {"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "Button", "description": "Opens a dialog box in the user's editor with the given title, message, and set of buttons."}, {"name": "createAddonMenu", "parameters": [], "result": "Menu", "description": "Creates a builder that can be used to insert a sub-menu into the editor's Add-on menu."}, {"name": "createMenu", "parameters": [{"name": "caption", "type": "String"}], "result": "Menu", "description": "Creates a builder that can be used to add a menu to the editor's user interface."}, {"name": "prompt", "parameters": [{"name": "prompt", "type": "String"}], "result": "PromptResponse", "description": "Opens an input dialog box in the user's editor with the given message and an \"OK\" button."}, {"name": "prompt", "parameters": [{"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "PromptResponse", "description": "Opens an input dialog box in the user's editor with the given message and set of buttons."}, {"name": "prompt", "parameters": [{"name": "title", "type": "String"}, {"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "PromptResponse", "description": "Opens an input dialog box in the user's editor with the given title, message, and set of\nbuttons."}, {"name": "showModalDialog", "parameters": [{"name": "userInterface", "type": "Object"}, {"name": "title", "type": "String"}], "result": "void", "description": "Opens a modal dialog box in the user's editor with custom client-side content."}, {"name": "showModelessDialog", "parameters": [{"name": "userInterface", "type": "Object"}, {"name": "title", "type": "String"}], "result": "void", "description": "Opens a modeless dialog box in the user's editor with custom client-side content."}, {"name": "showSidebar", "parameters": [{"name": "userInterface", "type": "Object"}], "result": "void", "description": "Opens a sidebar in the user's editor with custom client-side content."}, {"name": "getEmail", "parameters": [], "result": "String", "description": "Gets the user's email address, if available."}, {"name": "error", "parameters": [], "result": "void", "description": "Outputs a blank ERROR level message to Stackdriver Logging."}, {"name": "error", "parameters": [{"name": "formatOrObject", "type": "Object"}, {"name": "values", "type": "Object..."}], "result": "void", "description": "Outputs an ERROR level message to Stackdriver Logging."}, {"name": "info", "parameters": [], "result": "void", "description": "Outputs blank INFO level message to Stackdriver Logging."}, {"name": "info", "parameters": [{"name": "formatOrObject", "type": "Object"}, {"name": "values", "type": "Object..."}], "result": "void", "description": "Outputs an INFO level message to Stackdriver Logging."}, {"name": "log", "parameters": [], "result": "void", "description": "Outputs a blank DEBUG level message to Stackdriver Logging."}, {"name": "log", "parameters": [{"name": "formatOrObject", "type": "Object"}, {"name": "values", "type": "Object..."}], "result": "void", "description": "Outputs a DEBUG level message to Stackdriver Logging."}, {"name": "time", "parameters": [{"name": "label", "type": "String"}], "result": "void", "description": "Starts a timer you can use to track how long an operation takes."}, {"name": "timeEnd", "parameters": [{"name": "label", "type": "String"}], "result": "void", "description": "Stops a timer that was previously started by calling console.time()."}, {"name": "warn", "parameters": [], "result": "void", "description": "Outputs a blank WARNING level message to Stackdriver Logging."}, {"name": "warn", "parameters": [{"name": "formatOrObject", "type": "Object"}, {"name": "values", "type": "Object..."}], "result": "void", "description": "Outputs a WARNING level message to Stackdriver Logging."}], "properties": [{"name": "Buttons", "type": "ButtonSet", "url": "/apps-script/reference/base/button-set", "description": ""}, {"name": "CLOSE", "type": "Enum", "url": "", "description": "The standard close button displayed in every dialog's title bar."}, {"name": "OK", "type": "Enum", "url": "", "description": "An \"OK\" button, indicating that an operation should proceed."}, {"name": "CANCEL", "type": "Enum", "url": "", "description": "A \"Cancel\" button, indicating that an operation should not proceed."}, {"name": "YES", "type": "Enum", "url": "", "description": "A \"Yes\" button, indicating a positive response to a question."}, {"name": "NO", "type": "Enum", "url": "", "description": "A \"No\" button, indicating a negative response to a question."}, {"name": "OK", "type": "Enum", "url": "", "description": "A single \"OK\" button, indicating an informational message that can only be dismissed."}, {"name": "OK_CANCEL", "type": "Enum", "url": "", "description": "An \"OK\" button and a \"Cancel\" button, allowing the user to either proceed with or halt an\noperation."}, {"name": "YES_NO", "type": "Enum", "url": "", "description": "A \"Yes\" button and a \"No\" button, allowing the user to answer a yes/no question."}, {"name": "YES_NO_CANCEL", "type": "Enum", "url": "", "description": "A \"Yes\" button, a \"No\" button, and a \"Cancel\" button, allowing the user to either answer a\nyes/no question or halt an operation."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A color type that is not supported."}, {"name": "RGB", "type": "Enum", "url": "", "description": "A color defined by red, green, blue color channels."}, {"name": "THEME", "type": "Enum", "url": "", "description": "A color that refers to an entry in the theme's color scheme."}, {"name": "GOOGLE_APPS_SCRIPT", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Apps Script project."}, {"name": "GOOGLE_DRAWINGS", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Drawings file."}, {"name": "GOOGLE_DOCS", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Docs file."}, {"name": "GOOGLE_FORMS", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Forms file."}, {"name": "GOOGLE_SHEETS", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Sheets file."}, {"name": "GOOGLE_SITES", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Sites file."}, {"name": "GOOGLE_SLIDES", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Slides file."}, {"name": "FOLDER", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Drive folder."}, {"name": "SHORTCUT", "type": "Enum", "url": "", "description": "Representation of MIME type for a Google Drive shortcut."}, {"name": "BMP", "type": "Enum", "url": "", "description": "Representation of MIME type for a BMP image file (typically .bmp)."}, {"name": "GIF", "type": "Enum", "url": "", "description": "Representation of MIME type for a GIF image file (typically .gif)."}, {"name": "JPEG", "type": "Enum", "url": "", "description": "Representation of MIME type for a JPEG image file (typically .jpg)."}, {"name": "PNG", "type": "Enum", "url": "", "description": "Representation of MIME type for a PNG image file (typically .png)."}, {"name": "SVG", "type": "Enum", "url": "", "description": "Representation of MIME type for an SVG image file (typically .svg)."}, {"name": "PDF", "type": "Enum", "url": "", "description": "Representation of MIME type for a PDF file (typically .pdf)."}, {"name": "CSS", "type": "Enum", "url": "", "description": "Representation of MIME type for a CSS text file (typically .css)."}, {"name": "CSV", "type": "Enum", "url": "", "description": "Representation of MIME type for a CSV text file (typically .csv)."}, {"name": "HTML", "type": "Enum", "url": "", "description": "Representation of MIME type for an HTML text file (typically .html)."}, {"name": "JAVASCRIPT", "type": "Enum", "url": "", "description": "Representation of MIME type for a JavaScript text file (typically .js)."}, {"name": "PLAIN_TEXT", "type": "Enum", "url": "", "description": "Representation of MIME type for a plain text file (typically .txt)."}, {"name": "RTF", "type": "Enum", "url": "", "description": "Representation of MIME type for a rich text file (typically .rtf)."}, {"name": "OPENDOCUMENT_GRAPHICS", "type": "Enum", "url": "", "description": "Representation of MIME type for an OpenDocument graphics file (typically .odg)."}, {"name": "OPENDOCUMENT_PRESENTATION", "type": "Enum", "url": "", "description": "Representation of MIME type for an OpenDocument presentation file (typically .odp)."}, {"name": "OPENDOCUMENT_SPREADSHEET", "type": "Enum", "url": "", "description": "Representation of MIME type for an OpenDocument spreadsheet file (typically .ods)."}, {"name": "OPENDOCUMENT_TEXT", "type": "Enum", "url": "", "description": "Representation of MIME type for an OpenDocument word-processing file (typically .odt)."}, {"name": "MICROSOFT_EXCEL", "type": "Enum", "url": "", "description": "Representation of MIME type for a Microsoft Excel spreadsheet file (typically .xlsx)."}, {"name": "MICROSOFT_EXCEL_LEGACY", "type": "Enum", "url": "", "description": "Representation of MIME type for a Microsoft Excel legacy file (typically .xls)."}, {"name": "MICROSOFT_POWERPOINT", "type": "Enum", "url": "", "description": "Representation of MIME type for a Microsoft PowerPoint presentation file (typically .pptx)."}, {"name": "MICROSOFT_POWERPOINT_LEGACY", "type": "Enum", "url": "", "description": "Representation of MIME type for a Microsoft PowerPoint legacy file (typically .ppt)."}, {"name": "MICROSOFT_WORD", "type": "Enum", "url": "", "description": "Representation of MIME type for a Microsoft Word document file (typically .docx)."}, {"name": "MICROSOFT_WORD_LEGACY", "type": "Enum", "url": "", "description": "Representation of MIME type for a Microsoft Word legacy file (typically .doc)."}, {"name": "ZIP", "type": "Enum", "url": "", "description": "Representation of MIME type for a ZIP archive file (typically .zip)."}, {"name": "JANUARY", "type": "Enum", "url": "", "description": "January (month 1)."}, {"name": "FEBRUARY", "type": "Enum", "url": "", "description": "February (month 2)."}, {"name": "MARCH", "type": "Enum", "url": "", "description": "March (month 3)."}, {"name": "APRIL", "type": "Enum", "url": "", "description": "April (month 4)."}, {"name": "MAY", "type": "Enum", "url": "", "description": "May (month 5)."}, {"name": "JUNE", "type": "Enum", "url": "", "description": "June (month 6)."}, {"name": "JULY", "type": "Enum", "url": "", "description": "July (month 7)."}, {"name": "AUGUST", "type": "Enum", "url": "", "description": "August (month 8)."}, {"name": "SEPTEMBER", "type": "Enum", "url": "", "description": "September (month 9)."}, {"name": "OCTOBER", "type": "Enum", "url": "", "description": "October (month 10)."}, {"name": "NOVEMBER", "type": "Enum", "url": "", "description": "November (month 11)."}, {"name": "DECEMBER", "type": "Enum", "url": "", "description": "December (month 12)."}, {"name": "Button", "type": "Button", "url": "/apps-script/reference/base/button", "description": "An enum representing predetermined, localized dialog buttons returned by an alert or PromptResponse.getSelectedButton() to indicate\nwhich button in a dialog the user clicked."}, {"name": "ButtonSet", "type": "ButtonSet", "url": "/apps-script/reference/base/button-set", "description": "An enum representing predetermined, localized sets of one or more dialog buttons that can be\nadded to an alert or a prompt."}, {"name": "SUNDAY", "type": "Enum", "url": "", "description": "Sunday."}, {"name": "MONDAY", "type": "Enum", "url": "", "description": "Monday."}, {"name": "TUESDAY", "type": "Enum", "url": "", "description": "Tuesday."}, {"name": "WEDNESDAY", "type": "Enum", "url": "", "description": "Wednesday."}, {"name": "THURSDAY", "type": "Enum", "url": "", "description": "Thursday."}, {"name": "FRIDAY", "type": "Enum", "url": "", "description": "Friday."}, {"name": "SATURDAY", "type": "Enum", "url": "", "description": "Saturday."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/text-to-columns-delimiter", "name": "TextToColumnsDelimiter", "type": "enum", "methods": [], "properties": [{"name": "COMMA", "type": "Enum", "url": "", "description": "\",\" delimiter."}, {"name": "SEMICOLON", "type": "Enum", "url": "", "description": "\";\" delimiter."}, {"name": "PERIOD", "type": "Enum", "url": "", "description": "\".\" delimiter."}, {"name": "SPACE", "type": "Enum", "url": "", "description": "\" \" delimiter."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/sort-order", "name": "SortOrder", "type": "enum", "methods": [], "properties": [{"name": "ASCENDING", "type": "Enum", "url": "", "description": "Ascending sort order."}, {"name": "DESCENDING", "type": "Enum", "url": "", "description": "Descending sort order."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/text-direction", "name": "TextDirection", "type": "enum", "methods": [], "properties": [{"name": "LEFT_TO_RIGHT", "type": "Enum", "url": "", "description": "Left-to-right text direction."}, {"name": "RIGHT_TO_LEFT", "type": "Enum", "url": "", "description": "Right-to-left text direction."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet-type", "name": "SheetType", "type": "enum", "methods": [], "properties": [{"name": "GRID", "type": "Enum", "url": "", "description": "A sheet containing a grid. This is the default type."}, {"name": "OBJECT", "type": "Enum", "url": "", "description": "A sheet containing a single embedded object such as an EmbeddedChart."}, {"name": "DATASOURCE", "type": "Enum", "url": "", "description": "A sheet containing a DataSource."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-value-display-type", "name": "PivotValueDisplayType", "type": "enum", "methods": [], "properties": [{"name": "DEFAULT", "type": "Enum", "url": "", "description": "Default. Displays pivot values as the actual value and not as a function of another value."}, {"name": "PERCENT_OF_ROW_TOTAL", "type": "Enum", "url": "", "description": "Displays pivot values as a percent of the total for that row."}, {"name": "PERCENT_OF_COLUMN_TOTAL", "type": "Enum", "url": "", "description": "Displays pivot values as a percent of the total for that column."}, {"name": "PERCENT_OF_GRAND_TOTAL", "type": "Enum", "url": "", "description": "Displays pivot values as a percent of the grand total."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/protection-type", "name": "ProtectionType", "type": "enum", "methods": [], "properties": [{"name": "RANGE", "type": "Enum", "url": "", "description": "Protection for a range."}, {"name": "SHEET", "type": "Enum", "url": "", "description": "Protection for a sheet."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/group-control-toggle-position", "name": "GroupControlTogglePosition", "type": "enum", "methods": [], "properties": [{"name": "BEFORE", "type": "Enum", "url": "", "description": "The position where the control toggle is before the group (at lower indices)."}, {"name": "AFTER", "type": "Enum", "url": "", "description": "The position where the control toggle is after the group (at higher indices)."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table-summarize-function", "name": "PivotTableSummarizeFunction", "type": "enum", "methods": [], "properties": [{"name": "CUSTOM", "type": "Enum", "url": "", "description": "A custom fuction, this value is only valid for calcuated fields."}, {"name": "SUM", "type": "Enum", "url": "", "description": "The SUM function"}, {"name": "COUNTA", "type": "Enum", "url": "", "description": "The COUNTA function"}, {"name": "COUNT", "type": "Enum", "url": "", "description": "The COUNT function"}, {"name": "COUNTUNIQUE", "type": "Enum", "url": "", "description": "The COUNTUNIQUE function"}, {"name": "AVERAGE", "type": "Enum", "url": "", "description": "The AVERAGE function"}, {"name": "MAX", "type": "Enum", "url": "", "description": "The MAX function"}, {"name": "MIN", "type": "Enum", "url": "", "description": "The MIN function"}, {"name": "MEDIAN", "type": "Enum", "url": "", "description": "The MEDIAN function"}, {"name": "PRODUCT", "type": "Enum", "url": "", "description": "The PRODUCT function"}, {"name": "STDEV", "type": "Enum", "url": "", "description": "The STDEV function"}, {"name": "STDEVP", "type": "Enum", "url": "", "description": "The STDEVP function"}, {"name": "VAR", "type": "Enum", "url": "", "description": "The VAR function"}, {"name": "VARP", "type": "Enum", "url": "", "description": "The VARP function"}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/recalculation-interval", "name": "RecalculationInterval", "type": "enum", "methods": [], "properties": [{"name": "ON_CHANGE", "type": "Enum", "url": "", "description": "Recalculate only when values are changed."}, {"name": "MINUTE", "type": "Enum", "url": "", "description": "Recalculate when values are changed, and every minute."}, {"name": "HOUR", "type": "Enum", "url": "", "description": "Recalculate when values are changed, and every hour."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/wrap-strategy", "name": "WrapStrategy", "type": "enum", "methods": [], "properties": [{"name": "WRAP", "type": "Enum", "url": "", "description": "Wrap lines that are longer than the cell width onto a new line. Single words that are longer\nthan a line are wrapped at the character level."}, {"name": "OVERFLOW", "type": "Enum", "url": "", "description": "Overflow lines into the next cell, so long as that cell is empty. If the next cell over is\nnon-empty, this behaves the same as CLIP."}, {"name": "CLIP", "type": "Enum", "url": "", "description": "Clip lines that are longer than the cell width."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/interpolation-type", "name": "InterpolationType", "type": "enum", "methods": [], "properties": [{"name": "NUMBER", "type": "Enum", "url": "", "description": "Use the number as as specific interpolation point for a gradient condition."}, {"name": "PERCENT", "type": "Enum", "url": "", "description": "Use the number as a percentage interpolation point for a gradient condition."}, {"name": "PERCENTILE", "type": "Enum", "url": "", "description": "Use the number as a percentile interpolation point for a gradient condition."}, {"name": "MIN", "type": "Enum", "url": "", "description": "Infer the minimum number as a specific interpolation point for a gradient condition."}, {"name": "MAX", "type": "Enum", "url": "", "description": "Infer the maximum number as a specific interpolation point for a gradient condition."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/direction", "name": "Direction", "type": "enum", "methods": [], "properties": [{"name": "UP", "type": "Enum", "url": "", "description": "The direction of decreasing row indices."}, {"name": "DOWN", "type": "Enum", "url": "", "description": "The direction of increasing row indices."}, {"name": "PREVIOUS", "type": "Enum", "url": "", "description": "The direction of decreasing column indices."}, {"name": "NEXT", "type": "Enum", "url": "", "description": "The direction of increasing column indices."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/relative-date", "name": "RelativeDate", "type": "enum", "methods": [], "properties": [{"name": "TODAY", "type": "Enum", "url": "", "description": "Dates compared against the current date."}, {"name": "TOMORROW", "type": "Enum", "url": "", "description": "Dates compared against the date after the current date."}, {"name": "YESTERDAY", "type": "Enum", "url": "", "description": "Dates compared against the date before the current date."}, {"name": "PAST_WEEK", "type": "Enum", "url": "", "description": "Dates that fall within the past week period."}, {"name": "PAST_MONTH", "type": "Enum", "url": "", "description": "Dates that fall within the past month period."}, {"name": "PAST_YEAR", "type": "Enum", "url": "", "description": "Dates that fall within the past year period."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/dimension", "name": "Dimension", "type": "enum", "methods": [], "properties": [{"name": "COLUMNS", "type": "Enum", "url": "", "description": "The column (vertical) dimension."}, {"name": "ROWS", "type": "Enum", "url": "", "description": "The row (horizontal) dimension."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/date-time-grouping-rule-type", "name": "DateTimeGroupingRuleType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A date-time grouping rule type that is not supported."}, {"name": "SECOND", "type": "Enum", "url": "", "description": "Group date-time by second, from 0 to 59."}, {"name": "MINUTE", "type": "Enum", "url": "", "description": "Group date-time by minute, from 0 to 59."}, {"name": "HOUR", "type": "Enum", "url": "", "description": "Group date-time by hour using a 24-hour system, from 0 to 23."}, {"name": "HOUR_MINUTE", "type": "Enum", "url": "", "description": "Group date-time by hour and minute using a 24-hour system, for example 19:45."}, {"name": "HOUR_MINUTE_AMPM", "type": "Enum", "url": "", "description": "Group date-time by hour and minute using a 12-hour system, for example 7:45 PM."}, {"name": "DAY_OF_WEEK", "type": "Enum", "url": "", "description": "Group date-time by day of week, for example Sunday."}, {"name": "DAY_OF_YEAR", "type": "Enum", "url": "", "description": "Group date-time by day of year, from 1 to 366."}, {"name": "DAY_OF_MONTH", "type": "Enum", "url": "", "description": "Group date-time by day of month, from 1 to 31."}, {"name": "DAY_MONTH", "type": "Enum", "url": "", "description": "Group date-time by day and month, for example 22-Nov."}, {"name": "MONTH", "type": "Enum", "url": "", "description": "Group date-time by month, for example Nov."}, {"name": "QUARTER", "type": "Enum", "url": "", "description": "Group date-time by quarter, for example Q1 (which represents Jan-Mar)."}, {"name": "YEAR", "type": "Enum", "url": "", "description": "Group date-time by year, for example 2008."}, {"name": "YEAR_MONTH", "type": "Enum", "url": "", "description": "Group date-time by year and month, for example 2008-Nov."}, {"name": "YEAR_QUARTER", "type": "Enum", "url": "", "description": "Group date-time by year and quarter, for example 2008 Q4 ."}, {"name": "YEAR_MONTH_DAY", "type": "Enum", "url": "", "description": "Group date-time by year, month, and day, for example 2008-11-22."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation-criteria", "name": "DataValidationCriteria", "type": "enum", "methods": [], "properties": [{"name": "DATE_AFTER", "type": "Enum", "url": "", "description": "Requires a date that is after the given value."}, {"name": "DATE_BEFORE", "type": "Enum", "url": "", "description": "Requires a date that is before the given value."}, {"name": "DATE_BETWEEN", "type": "Enum", "url": "", "description": "Requires a date that is between the given values."}, {"name": "DATE_EQUAL_TO", "type": "Enum", "url": "", "description": "Requires a date that is equal to the given value."}, {"name": "DATE_IS_VALID_DATE", "type": "Enum", "url": "", "description": "Requires a date."}, {"name": "DATE_NOT_BETWEEN", "type": "Enum", "url": "", "description": "Requires a date that is not between the given values."}, {"name": "DATE_ON_OR_AFTER", "type": "Enum", "url": "", "description": "Require a date that is on or after the given value."}, {"name": "DATE_ON_OR_BEFORE", "type": "Enum", "url": "", "description": "Requires a date that is on or before the given value."}, {"name": "NUMBER_BETWEEN", "type": "Enum", "url": "", "description": "Requires a number that is between the given values."}, {"name": "NUMBER_EQUAL_TO", "type": "Enum", "url": "", "description": "Requires a number that is equal to the given value."}, {"name": "NUMBER_GREATER_THAN", "type": "Enum", "url": "", "description": "Require a number that is greater than the given value."}, {"name": "NUMBER_GREATER_THAN_OR_EQUAL_TO", "type": "Enum", "url": "", "description": "Requires a number that is greater than or equal to the given value."}, {"name": "NUMBER_LESS_THAN", "type": "Enum", "url": "", "description": "Requires a number that is less than the given value."}, {"name": "NUMBER_LESS_THAN_OR_EQUAL_TO", "type": "Enum", "url": "", "description": "Requires a number that is less than or equal to the given value."}, {"name": "NUMBER_NOT_BETWEEN", "type": "Enum", "url": "", "description": "Requires a number that is not between the given values."}, {"name": "NUMBER_NOT_EQUAL_TO", "type": "Enum", "url": "", "description": "Requires a number that is not equal to the given value."}, {"name": "TEXT_CONTAINS", "type": "Enum", "url": "", "description": "Requires that the input contains the given value."}, {"name": "TEXT_DOES_NOT_CONTAIN", "type": "Enum", "url": "", "description": "Requires that the input does not contain the given value."}, {"name": "TEXT_EQUAL_TO", "type": "Enum", "url": "", "description": "Requires that the input is equal to the given value."}, {"name": "TEXT_IS_VALID_EMAIL", "type": "Enum", "url": "", "description": "Requires that the input is in the form of an email address."}, {"name": "TEXT_IS_VALID_URL", "type": "Enum", "url": "", "description": "Requires that the input is in the form of a URL."}, {"name": "VALUE_IN_LIST", "type": "Enum", "url": "", "description": "Requires that the input is equal to one of the given values."}, {"name": "VALUE_IN_RANGE", "type": "Enum", "url": "", "description": "Requires that the input is equal to a value in the given range."}, {"name": "CUSTOM_FORMULA", "type": "Enum", "url": "", "description": "Requires that the input makes the given formula evaluate to true."}, {"name": "CHECKBOX", "type": "Enum", "url": "", "description": "Requires that the input is a custom value or a boolean; rendered as a checkbox."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/frequency-type", "name": "FrequencyType", "type": "enum", "methods": [], "properties": [{"name": "FREQUENCY_TYPE_UNSUPPORTED", "type": "Enum", "url": "", "description": "The frequency type is unsupported."}, {"name": "DAILY", "type": "Enum", "url": "", "description": "Refresh daily."}, {"name": "WEEKLY", "type": "Enum", "url": "", "description": "Refresh weekly, on given days of the week."}, {"name": "MONTHLY", "type": "Enum", "url": "", "description": "Refresh monthly, on given days of the month."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-location-type", "name": "DeveloperMetadataLocationType", "type": "enum", "methods": [], "properties": [{"name": "SPREADSHEET", "type": "Enum", "url": "", "description": "The location type for developer metadata associated with the top-level spreadsheet."}, {"name": "SHEET", "type": "Enum", "url": "", "description": "The location type for developer metadata associated with a whole sheet."}, {"name": "ROW", "type": "Enum", "url": "", "description": "The location type for developer metadata associated with a row."}, {"name": "COLUMN", "type": "Enum", "url": "", "description": "The location type for developer metadata associated with a column."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-refresh-scope", "name": "DataSourceRefreshScope", "type": "enum", "methods": [], "properties": [{"name": "DATA_SOURCE_REFRESH_SCOPE_UNSUPPORTED", "type": "Enum", "url": "", "description": "The data source refresh scope is unsupported."}, {"name": "ALL_DATA_SOURCES", "type": "Enum", "url": "", "description": "The refresh applies to all data sources in the spreadsheet."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-type", "name": "DataSourceType", "type": "enum", "methods": [], "properties": [{"name": "DATA_SOURCE_TYPE_UNSUPPORTED", "type": "Enum", "url": "", "description": "A data source type that is not supported in Apps Script."}, {"name": "BIGQUERY", "type": "Enum", "url": "", "description": "A BigQuery data source."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-visibility", "name": "DeveloperMetadataVisibility", "type": "enum", "methods": [], "properties": [{"name": "DOCUMENT", "type": "Enum", "url": "", "description": "Document-visible metadata is accessible from any developer project with access to the document."}, {"name": "PROJECT", "type": "Enum", "url": "", "description": "Project-visible metadata is only visible to and accessible by the developer project that\ncreated the metadata. Do not use project-visible developer metadata as a security mechanism or\nto store secrets. It can be exposed to users with view access to the document."}]},
{"url": "https://developers.google.com/apps-script/reference/lock/lock-service.html", "name": "LockService", "type": "class", "methods": [{"name": "getDocumentLock", "parameters": [], "result": "Lock", "description": "Gets a lock that prevents any user of the current document from concurrently running a section\nof code."}, {"name": "getScriptLock", "parameters": [], "result": "Lock", "description": "Gets a lock that prevents any user from concurrently running a section of code."}, {"name": "getUserLock", "parameters": [], "result": "Lock", "description": "Gets a lock that prevents the current user from concurrently running a section of code."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/jdbc/jdbc.html", "name": "Jdbc", "type": "class", "methods": [{"name": "getCloudSqlConnection", "parameters": [{"name": "url", "type": "String"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given Google Cloud SQL URL."}, {"name": "getCloudSqlConnection", "parameters": [{"name": "url", "type": "String"}, {"name": "info", "type": "Object"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given Google Cloud SQL URL."}, {"name": "getCloudSqlConnection", "parameters": [{"name": "url", "type": "String"}, {"name": "userName", "type": "String"}, {"name": "password", "type": "String"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given Google Cloud SQL URL."}, {"name": "getConnection", "parameters": [{"name": "url", "type": "String"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given database URL."}, {"name": "getConnection", "parameters": [{"name": "url", "type": "String"}, {"name": "info", "type": "Object"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given database URL."}, {"name": "getConnection", "parameters": [{"name": "url", "type": "String"}, {"name": "userName", "type": "String"}, {"name": "password", "type": "String"}], "result": "JdbcConnection", "description": "Attempts to establish a connection to the given database using a username and password."}, {"name": "newDate", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "JdbcDate", "description": "Create a date from milliseconds since epoch."}, {"name": "newTime", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "JdbcTime", "description": "Create a time from milliseconds since epoch."}, {"name": "newTimestamp", "parameters": [{"name": "milliseconds", "type": "Integer"}], "result": "JdbcTimestamp", "description": "Create a timestamp from milliseconds since epoch."}, {"name": "parseDate", "parameters": [{"name": "date", "type": "String"}], "result": "JdbcDate", "description": "Create a date by parsing the SQL date string."}, {"name": "parseTime", "parameters": [{"name": "time", "type": "String"}], "result": "JdbcTime", "description": "Create a time by parsing the SQL time string."}, {"name": "parseTimestamp", "parameters": [{"name": "timestamp", "type": "String"}], "result": "JdbcTimestamp", "description": "Create a timestamp by parsing the SQL timestamp string."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-parameter-type", "name": "DataSourceParameterType", "type": "enum", "methods": [], "properties": [{"name": "DATA_SOURCE_PARAMETER_TYPE_UNSUPPORTED", "type": "Enum", "url": "", "description": "A data source parameter type that is not supported in Apps Script."}, {"name": "CELL", "type": "Enum", "url": "", "description": "The data source parameter is valued based on a cell."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-state", "name": "DataExecutionState", "type": "enum", "methods": [], "properties": [{"name": "DATA_EXECUTION_STATE_UNSUPPORTED", "type": "Enum", "url": "", "description": "A data execution state is not supported in Apps Script."}, {"name": "RUNNING", "type": "Enum", "url": "", "description": "The data execution has started and is running."}, {"name": "SUCCESS", "type": "Enum", "url": "", "description": "The data execution is completed and successful."}, {"name": "ERROR", "type": "Enum", "url": "", "description": "The data execution is completed and has errors."}, {"name": "NOT_STARTED", "type": "Enum", "url": "", "description": "The data execution has not started."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-error-code", "name": "DataExecutionErrorCode", "type": "enum", "methods": [], "properties": [{"name": "DATA_EXECUTION_ERROR_CODE_UNSUPPORTED", "type": "Enum", "url": "", "description": "A data execution error code that is not supported in Apps Script."}, {"name": "NONE", "type": "Enum", "url": "", "description": "The data execution has no error."}, {"name": "TIME_OUT", "type": "Enum", "url": "", "description": "The data execution timed out. Please update the data source specification."}, {"name": "TOO_MANY_ROWS", "type": "Enum", "url": "", "description": "The data execution returns more rows than the limit. Please update the data source specification."}, {"name": "TOO_MANY_CELLS", "type": "Enum", "url": "", "description": "The data execution returns more cells than the limit. Please update the data source specification."}, {"name": "ENGINE", "type": "Enum", "url": "", "description": "Data execution engine error. Use DataExecutionStatus.getErrorMessage() for details."}, {"name": "PARAMETER_INVALID", "type": "Enum", "url": "", "description": "Invalid data execution parameter. The source cell must exist and contain only a number or text.\nPlease update the data source specification."}, {"name": "UNSUPPORTED_DATA_TYPE", "type": "Enum", "url": "", "description": "The data execution returns unsupported data type. Please update the data source specification.\n\nFor BigQuery, ARRAY or STRUCT type is not supported.\n"}, {"name": "DUPLICATE_COLUMN_NAMES", "type": "Enum", "url": "", "description": "The data execution returns duplicate column names. Please update the data source specification."}, {"name": "INTERRUPTED", "type": "Enum", "url": "", "description": "The data execution is interrupted. Please refresh later."}, {"name": "OTHER", "type": "Enum", "url": "", "description": "Other errors."}, {"name": "TOO_MANY_CHARS_PER_CELL", "type": "Enum", "url": "", "description": "The data execution returns values that exceed the maximum characters allowed in a single cell.\nPlease update the data source specification."}, {"name": "DATA_NOT_FOUND", "type": "Enum", "url": "", "description": "The database referenced by the data source is not found. Please update the data source specification."}, {"name": "PERMISSION_DENIED", "type": "Enum", "url": "", "description": "The user does not have access to the database referenced by the data source. Please update the\ndata source specification or contact the owner of the billing\nproject to request access."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/border-style", "name": "BorderStyle", "type": "enum", "methods": [], "properties": [{"name": "DOTTED", "type": "Enum", "url": "", "description": "Dotted line borders."}, {"name": "DASHED", "type": "Enum", "url": "", "description": "Dashed line borders."}, {"name": "SOLID", "type": "Enum", "url": "", "description": "Thin solid line borders."}, {"name": "SOLID_MEDIUM", "type": "Enum", "url": "", "description": "Medium solid line borders."}, {"name": "SOLID_THICK", "type": "Enum", "url": "", "description": "Thick solid line borders."}, {"name": "DOUBLE", "type": "Enum", "url": "", "description": "Two solid line borders."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/copy-paste-type", "name": "CopyPasteType", "type": "enum", "methods": [], "properties": [{"name": "PASTE_NORMAL", "type": "Enum", "url": "", "description": "Paste values, formulas, formats and merges."}, {"name": "PASTE_NO_BORDERS", "type": "Enum", "url": "", "description": "Paste values, formulas, formats and merges but without borders."}, {"name": "PASTE_FORMAT", "type": "Enum", "url": "", "description": "Paste the format and data validation only."}, {"name": "PASTE_FORMULA", "type": "Enum", "url": "", "description": "Paste the formulas only."}, {"name": "PASTE_DATA_VALIDATION", "type": "Enum", "url": "", "description": "Paste the data validation only."}, {"name": "PASTE_VALUES", "type": "Enum", "url": "", "description": "Paste the values ONLY without formats, formulas or merges."}, {"name": "PASTE_CONDITIONAL_FORMATTING", "type": "Enum", "url": "", "description": "Paste the color rules only."}, {"name": "PASTE_COLUMN_WIDTHS", "type": "Enum", "url": "", "description": "Paste the column widths only."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/boolean-criteria", "name": "BooleanCriteria", "type": "enum", "methods": [], "properties": [{"name": "CELL_EMPTY", "type": "Enum", "url": "", "description": "The criteria is met when a cell is empty."}, {"name": "CELL_NOT_EMPTY", "type": "Enum", "url": "", "description": "The criteria is met when a cell is not empty."}, {"name": "DATE_AFTER", "type": "Enum", "url": "", "description": "The criteria is met when a date is after the given value."}, {"name": "DATE_BEFORE", "type": "Enum", "url": "", "description": "The criteria is met when a date is before the given value."}, {"name": "DATE_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when a date is equal to the given value."}, {"name": "DATE_NOT_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when a date is not equal to the given value."}, {"name": "DATE_AFTER_RELATIVE", "type": "Enum", "url": "", "description": "The criteria is met when a date is after the relative date value."}, {"name": "DATE_BEFORE_RELATIVE", "type": "Enum", "url": "", "description": "The criteria is met when a date is before the relative date value."}, {"name": "DATE_EQUAL_TO_RELATIVE", "type": "Enum", "url": "", "description": "The criteria is met when a date is equal to the relative date value."}, {"name": "NUMBER_BETWEEN", "type": "Enum", "url": "", "description": "The criteria is met when a number that is between the given values."}, {"name": "NUMBER_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when a number that is equal to the given value."}, {"name": "NUMBER_GREATER_THAN", "type": "Enum", "url": "", "description": "The criteria is met when a number that is greater than the given value."}, {"name": "NUMBER_GREATER_THAN_OR_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when a number that is greater than or equal to the given value."}, {"name": "NUMBER_LESS_THAN", "type": "Enum", "url": "", "description": "The criteria is met when a number that is less than the given value."}, {"name": "NUMBER_LESS_THAN_OR_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when a number that is less than or equal to the given value."}, {"name": "NUMBER_NOT_BETWEEN", "type": "Enum", "url": "", "description": "The criteria is met when a number that is not between the given values."}, {"name": "NUMBER_NOT_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when a number that is not equal to the given value."}, {"name": "TEXT_CONTAINS", "type": "Enum", "url": "", "description": "The criteria is met when the input contains the given value."}, {"name": "TEXT_DOES_NOT_CONTAIN", "type": "Enum", "url": "", "description": "The criteria is met when the input does not contain the given value."}, {"name": "TEXT_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when the input is equal to the given value."}, {"name": "TEXT_NOT_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when the input is not equal to the given value."}, {"name": "TEXT_STARTS_WITH", "type": "Enum", "url": "", "description": "The criteria is met when the input begins with the given value."}, {"name": "TEXT_ENDS_WITH", "type": "Enum", "url": "", "description": "The criteria is met when the input ends with the given value."}, {"name": "CUSTOM_FORMULA", "type": "Enum", "url": "", "description": "The criteria is met when the input makes the given formula evaluate to true."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/auto-fill-series", "name": "AutoFillSeries", "type": "enum", "methods": [], "properties": [{"name": "DEFAULT_SERIES", "type": "Enum", "url": "", "description": "Default. Auto-filling with this setting results in the empty cells in the expanded range being\nfilled with increments of the existing values."}, {"name": "ALTERNATE_SERIES", "type": "Enum", "url": "", "description": "Auto-filling with this setting results in the empty cells in the expanded range being filled\nwith copies of the existing values."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style-builder", "name": "TextStyleBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "TextStyle", "description": "Creates a text style from this builder."}, {"name": "setBold", "parameters": [{"name": "bold", "type": "Boolean"}], "result": "TextStyleBuilder", "description": "Sets whether or not the text is bold."}, {"name": "setFontFamily", "parameters": [{"name": "fontFamily", "type": "String"}], "result": "TextStyleBuilder", "description": "Sets the text font family, such as \"Arial\"."}, {"name": "setFontSize", "parameters": [{"name": "fontSize", "type": "Integer"}], "result": "TextStyleBuilder", "description": "Sets the text font size in points."}, {"name": "setForegroundColor", "parameters": [{"name": "cssString", "type": "String"}], "result": "TextStyleBuilder", "description": "Sets the text font color."}, {"name": "setForegroundColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "TextStyleBuilder", "description": "Sets the text font color."}, {"name": "setItalic", "parameters": [{"name": "italic", "type": "Boolean"}], "result": "TextStyleBuilder", "description": "Sets whether or not the text is italic."}, {"name": "setStrikethrough", "parameters": [{"name": "strikethrough", "type": "Boolean"}], "result": "TextStyleBuilder", "description": "Sets whether or not the text has strikethrough."}, {"name": "setUnderline", "parameters": [{"name": "underline", "type": "Boolean"}], "result": "TextStyleBuilder", "description": "Sets whether or not the text is underlined."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/banding-theme", "name": "BandingTheme", "type": "enum", "methods": [], "properties": [{"name": "LIGHT_GREY", "type": "Enum", "url": "", "description": "A light grey banding theme."}, {"name": "CYAN", "type": "Enum", "url": "", "description": "A cyan banding theme."}, {"name": "GREEN", "type": "Enum", "url": "", "description": "A green banding theme."}, {"name": "YELLOW", "type": "Enum", "url": "", "description": "A yellow banding theme."}, {"name": "ORANGE", "type": "Enum", "url": "", "description": "An orange banding theme."}, {"name": "BLUE", "type": "Enum", "url": "", "description": "A blue banding theme."}, {"name": "TEAL", "type": "Enum", "url": "", "description": "A teal banding theme."}, {"name": "GREY", "type": "Enum", "url": "", "description": "A grey banding theme."}, {"name": "BROWN", "type": "Enum", "url": "", "description": "A brown banding theme."}, {"name": "LIGHT_GREEN", "type": "Enum", "url": "", "description": "A light green banding theme."}, {"name": "INDIGO", "type": "Enum", "url": "", "description": "An indigo banding theme."}, {"name": "PINK", "type": "Enum", "url": "", "description": "A pink banding theme."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/theme-color", "name": "ThemeColor", "type": "class", "methods": [{"name": "getColorType", "parameters": [], "result": "ColorType", "description": "Get the type of this color."}, {"name": "getThemeColorType", "parameters": [], "result": "ThemeColorType", "description": "Gets the theme color type of this color."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/text-finder", "name": "TextFinder", "type": "class", "methods": [{"name": "findAll", "parameters": [], "result": "Range[]", "description": "Returns all cells matching the search criteria."}, {"name": "findNext", "parameters": [], "result": "Range", "description": "Returns the next cell matching the search criteria."}, {"name": "findPrevious", "parameters": [], "result": "Range", "description": "Returns the previous cell matching the search criteria."}, {"name": "getCurrentMatch", "parameters": [], "result": "Range", "description": "Returns the current cell matching the search criteria."}, {"name": "ignoreDiacritics", "parameters": [{"name": "ignoreDiacritics", "type": "Boolean"}], "result": "TextFinder", "description": "If true, configures the search to ignore diacritics while matching; otherwise the\nsearch matches diacritics."}, {"name": "matchCase", "parameters": [{"name": "matchCase", "type": "Boolean"}], "result": "TextFinder", "description": "If true, configures the search to match the search text's case exactly, otherwise the\nsearch defaults to case-insensitive matching."}, {"name": "matchEntireCell", "parameters": [{"name": "matchEntireCell", "type": "Boolean"}], "result": "TextFinder", "description": "If true, configures the search to match the entire contents of a cell; otherwise, the\nsearch defaults to partial matching."}, {"name": "matchFormulaText", "parameters": [{"name": "matchFormulaText", "type": "Boolean"}], "result": "TextFinder", "description": "If true, configures the search to return matches that appear within formula text;\notherwise cells with formulas are considered based on their displayed value."}, {"name": "replaceAllWith", "parameters": [{"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all matches with the specified text."}, {"name": "replaceWith", "parameters": [{"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces the search text in the currently matched cell with the specified text and returns the\nnumber of occurrences replaced."}, {"name": "startFrom", "parameters": [{"name": "startRange", "type": "Range"}], "result": "TextFinder", "description": "Configures the search to start searching immediately after the specified cell range."}, {"name": "useRegularExpression", "parameters": [{"name": "useRegEx", "type": "Boolean"}], "result": "TextFinder", "description": "If true, configures the search to interpret the search string as a regular expression;\notherwise the search interprets the search string as normal text."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-theme", "name": "SpreadsheetTheme", "type": "class", "methods": [{"name": "getConcreteColor", "parameters": [{"name": "themeColorType", "type": "ThemeColorType"}], "result": "Color", "description": "Returns the concrete Color for a valid theme color type."}, {"name": "getFontFamily", "parameters": [], "result": "String", "description": "Returns the font family of the theme, or null if it's a null theme."}, {"name": "getThemeColors", "parameters": [], "result": "ThemeColorType[]", "description": "Returns a list of all possible theme color types for the current theme."}, {"name": "setConcreteColor", "parameters": [{"name": "themeColorType", "type": "ThemeColorType"}, {"name": "color", "type": "Color"}], "result": "SpreadsheetTheme", "description": "Sets the concrete color associated with the ThemeColorType in this color scheme to the\ngiven color."}, {"name": "setConcreteColor", "parameters": [{"name": "themeColorType", "type": "ThemeColorType"}, {"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "SpreadsheetTheme", "description": "Sets the concrete color associated with the ThemeColorType in this color scheme to the\ngiven color in RGB format."}, {"name": "setFontFamily", "parameters": [{"name": "fontFamily", "type": "String"}], "result": "SpreadsheetTheme", "description": "Sets the font family for the theme."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/text-style", "name": "TextStyle", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "TextStyleBuilder", "description": "Creates a text style builder initialized with the values of this text style."}, {"name": "getFontFamily", "parameters": [], "result": "String", "description": "Gets the font family of the text."}, {"name": "getFontSize", "parameters": [], "result": "Integer", "description": "Gets the font size of the text in points."}, {"name": "getForegroundColor", "parameters": [], "result": "String", "description": "Gets the font color of the text."}, {"name": "getForegroundColorObject", "parameters": [], "result": "Color", "description": "Gets the font color of the text."}, {"name": "isBold", "parameters": [], "result": "Boolean", "description": "Gets whether or not the text is bold."}, {"name": "isItalic", "parameters": [], "result": "Boolean", "description": "Gets whether or not the cell is italic."}, {"name": "isStrikethrough", "parameters": [], "result": "Boolean", "description": "Gets whether or not the cell has strikethrough."}, {"name": "isUnderline", "parameters": [], "result": "Boolean", "description": "Gets whether or not the cell is underlined."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet", "name": "Spreadsheet", "type": "class", "methods": [{"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}], "result": "Spreadsheet", "description": "Adds developer metadata with the specified key to the top-level spreadsheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Spreadsheet", "description": "Adds developer metadata with the specified key and visibility to the spreadsheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "Spreadsheet", "description": "Adds developer metadata with the specified key and value to the spreadsheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Spreadsheet", "description": "Adds developer metadata with the specified key, value, and visibility to the spreadsheet."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Spreadsheet", "description": "Adds the given user to the list of editors for the Spreadsheet."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Spreadsheet", "description": "Adds the given user to the list of editors for the Spreadsheet."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Spreadsheet", "description": "Adds the given array of users to the list of editors for the Spreadsheet."}, {"name": "addMenu", "parameters": [{"name": "name", "type": "String"}, {"name": "subMenus", "type": "Object"}], "result": "void", "description": "Creates a new menu in the Spreadsheet UI."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Spreadsheet", "description": "Adds the given user to the list of viewers for the Spreadsheet."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Spreadsheet", "description": "Adds the given user to the list of viewers for the Spreadsheet."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Spreadsheet", "description": "Adds the given array of users to the list of viewers for the Spreadsheet."}, {"name": "appendRow", "parameters": [{"name": "rowContents", "type": "Object"}], "result": "Sheet", "description": "Appends a row to the spreadsheet."}, {"name": "autoResizeColumn", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of the given column to fit its contents."}, {"name": "copy", "parameters": [{"name": "name", "type": "String"}], "result": "Spreadsheet", "description": "Copies the spreadsheet and returns the new one."}, {"name": "createDeveloperMetadataFinder", "parameters": [], "result": "DeveloperMetadataFinder", "description": "Returns a DeveloperMetadataFinder for finding developer metadata within the scope of\nthis spreadsheet."}, {"name": "createTextFinder", "parameters": [{"name": "findText", "type": "String"}], "result": "TextFinder", "description": "Creates a text finder for the spreadsheet, which can be used to find and replace text within\nthe spreadsheet."}, {"name": "deleteActiveSheet", "parameters": [], "result": "Sheet", "description": "Deletes the currently active sheet."}, {"name": "deleteColumn", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Deletes the column at the given column position."}, {"name": "deleteColumns", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "void", "description": "Deletes a number of columns starting at the given column position."}, {"name": "deleteRow", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Sheet", "description": "Deletes the row at the given row position."}, {"name": "deleteRows", "parameters": [{"name": "rowPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "void", "description": "Deletes a number of rows starting at the given row position."}, {"name": "deleteSheet", "parameters": [{"name": "sheet", "type": "Sheet"}], "result": "void", "description": "Deletes the specified sheet."}, {"name": "duplicateActiveSheet", "parameters": [], "result": "Sheet", "description": "Duplicates the active sheet and makes it the active sheet."}, {"name": "getActiveCell", "parameters": [], "result": "Range", "description": "Returns the active cell in this sheet."}, {"name": "getActiveRange", "parameters": [], "result": "Range", "description": "Returns the selected range in the active sheet, or null if there is no active range."}, {"name": "getActiveRangeList", "parameters": [], "result": "RangeList", "description": "Returns the list of active ranges in the active sheet or null if there are no active\nranges."}, {"name": "getActiveSheet", "parameters": [], "result": "Sheet", "description": "Gets the active sheet in a spreadsheet."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBandings", "parameters": [], "result": "Banding[]", "description": "Returns all the bandings in this spreadsheet."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getColumnWidth", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Integer", "description": "Gets the width in pixels of the given column."}, {"name": "getCurrentCell", "parameters": [], "result": "Range", "description": "Returns the current cell in the active sheet or null if there is no current cell."}, {"name": "getDataRange", "parameters": [], "result": "Range", "description": "Returns a Range corresponding to the dimensions in which data is present."}, {"name": "getDataSourceFormulas", "parameters": [], "result": "DataSourceFormula[]", "description": "Gets all the data source formulas."}, {"name": "getDataSourcePivotTables", "parameters": [], "result": "DataSourcePivotTable[]", "description": "Gets all the data source pivot tables."}, {"name": "getDataSourceRefreshSchedules", "parameters": [], "result": "DataSourceRefreshSchedule[]", "description": "Gets the refresh schedules of this spreadsheet."}, {"name": "getDataSourceSheets", "parameters": [], "result": "DataSourceSheet[]", "description": "Returns all the data source sheets in the spreadsheet."}, {"name": "getDataSourceTables", "parameters": [], "result": "DataSourceTable[]", "description": "Gets all the data source tables."}, {"name": "getDataSources", "parameters": [], "result": "DataSource[]", "description": "Returns all the data sources in the spreadsheet."}, {"name": "getDeveloperMetadata", "parameters": [], "result": "DeveloperMetadata[]", "description": "Get the developer metadata associated with the top-level spreadsheet."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Spreadsheet."}, {"name": "getFormUrl", "parameters": [], "result": "String", "description": "Returns the URL for the form that sends its responses to this spreadsheet, or null if\nthis spreadsheet has no associated form."}, {"name": "getFrozenColumns", "parameters": [], "result": "Integer", "description": "Returns the number of frozen columns."}, {"name": "getFrozenRows", "parameters": [], "result": "Integer", "description": "Returns the number of frozen rows."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets a unique identifier for this spreadsheet."}, {"name": "getImages", "parameters": [], "result": "OverGridImage[]", "description": "Returns all over-the-grid images on the sheet."}, {"name": "getIterativeCalculationConvergenceThreshold", "parameters": [], "result": "Number", "description": "Returns the threshold value used during iterative calculation."}, {"name": "getLastColumn", "parameters": [], "result": "Integer", "description": "Returns the position of the last column that has content."}, {"name": "getLastRow", "parameters": [], "result": "Integer", "description": "Returns the position of the last row that has content."}, {"name": "getMaxIterativeCalculationCycles", "parameters": [], "result": "Integer", "description": "Returns the maximum number of iterations to use during iterative calculation."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the document."}, {"name": "getNamedRanges", "parameters": [], "result": "NamedRange[]", "description": "Gets all the named ranges in this spreadsheet."}, {"name": "getNumSheets", "parameters": [], "result": "Integer", "description": "Returns the number of sheets in this spreadsheet."}, {"name": "getOwner", "parameters": [], "result": "User", "description": "Returns the owner of the document, or null for a document in a shared drive."}, {"name": "getPredefinedSpreadsheetThemes", "parameters": [], "result": "SpreadsheetTheme[]", "description": "Returns the list of predefined themes."}, {"name": "getProtections", "parameters": [{"name": "type", "type": "ProtectionType"}], "result": "Protection[]", "description": "Gets an array of objects representing all protected ranges or sheets in the spreadsheet."}, {"name": "getRange", "parameters": [{"name": "a1Notation", "type": "String"}], "result": "Range", "description": "Returns the range as specified in A1 notation or R1C1 notation."}, {"name": "getRangeByName", "parameters": [{"name": "name", "type": "String"}], "result": "Range", "description": "Returns a named range, or null if no range with the given name is found."}, {"name": "getRangeList", "parameters": [{"name": "a1Notations", "type": "String"}], "result": "RangeList", "description": "Returns the RangeList collection representing the ranges in the same sheet specified\nby a non-empty list of A1 notations or R1C1 notations."}, {"name": "getRecalculationInterval", "parameters": [], "result": "RecalculationInterval", "description": "Returns the calculation interval for this spreadsheet."}, {"name": "getRowHeight", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Integer", "description": "Gets the height in pixels of the given row."}, {"name": "getSelection", "parameters": [], "result": "Selection", "description": "Returns the current Selection in the spreadsheet."}, {"name": "getSheetByName", "parameters": [{"name": "name", "type": "String"}], "result": "Sheet", "description": "Returns a sheet with the given name."}, {"name": "getSheetId", "parameters": [], "result": "Integer", "description": "Returns the ID of the sheet represented by this object."}, {"name": "getSheetName", "parameters": [], "result": "String", "description": "Returns the sheet name."}, {"name": "getSheetValues", "parameters": [{"name": "startRow", "type": "Integer"}, {"name": "startColumn", "type": "Integer"}, {"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Object[][]", "description": "Returns the rectangular grid of values for this range starting at the given coordinates."}, {"name": "getSheets", "parameters": [], "result": "Sheet[]", "description": "Gets all the sheets in this spreadsheet."}, {"name": "getSpreadsheetLocale", "parameters": [], "result": "String", "description": "Gets the spreadsheet locale."}, {"name": "getSpreadsheetTheme", "parameters": [], "result": "SpreadsheetTheme", "description": "Returns the current theme of the spreadsheet, or null if no theme is applied."}, {"name": "getSpreadsheetTimeZone", "parameters": [], "result": "String", "description": "Gets the time zone for the spreadsheet."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Returns the URL for the given spreadsheet."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this Spreadsheet."}, {"name": "hideColumn", "parameters": [{"name": "column", "type": "Range"}], "result": "void", "description": "Hides the columns in the given range."}, {"name": "hideRow", "parameters": [{"name": "row", "type": "Range"}], "result": "void", "description": "Hides the rows in the given range."}, {"name": "insertColumnAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a column after the given column position."}, {"name": "insertColumnBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a column before the given column position."}, {"name": "insertColumnsAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of columns after the given column position."}, {"name": "insertColumnsBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of columns before the given column position."}, {"name": "insertDataSourceSheet", "parameters": [{"name": "spec", "type": "DataSourceSpec"}], "result": "DataSourceSheet", "description": "Inserts a new DataSourceSheet in the spreadsheet and starts data execution."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts a Spreadsheet as an image in the document at a given row and column."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts a Spreadsheet as an image in the document at a given row and column, with a\npixel offset."}, {"name": "insertImage", "parameters": [{"name": "url", "type": "String"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts an image in the document at a given row and column."}, {"name": "insertImage", "parameters": [{"name": "url", "type": "String"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts an image in the document at a given row and column, with a pixel offset."}, {"name": "insertRowAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a row after the given row position."}, {"name": "insertRowBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a row before the given row position."}, {"name": "insertRowsAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of rows after the given row position."}, {"name": "insertRowsBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of rows before the given row position."}, {"name": "insertSheet", "parameters": [], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet, using a default sheet name."}, {"name": "insertSheet", "parameters": [{"name": "sheetIndex", "type": "Integer"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet at the given index."}, {"name": "insertSheet", "parameters": [{"name": "sheetIndex", "type": "Integer"}, {"name": "options", "type": "Object"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet at the given index and uses optional advanced\narguments."}, {"name": "insertSheet", "parameters": [{"name": "options", "type": "Object"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet, using a default sheet name and optional advanced\narguments."}, {"name": "insertSheet", "parameters": [{"name": "sheetName", "type": "String"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet with the given name."}, {"name": "insertSheet", "parameters": [{"name": "sheetName", "type": "String"}, {"name": "sheetIndex", "type": "Integer"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet with the given name at the given index."}, {"name": "insertSheet", "parameters": [{"name": "sheetName", "type": "String"}, {"name": "sheetIndex", "type": "Integer"}, {"name": "options", "type": "Object"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet with the given name at the given index and uses\noptional advanced arguments."}, {"name": "insertSheet", "parameters": [{"name": "sheetName", "type": "String"}, {"name": "options", "type": "Object"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet with the given name and uses optional advanced\narguments."}, {"name": "insertSheetWithDataSourceTable", "parameters": [{"name": "spec", "type": "DataSourceSpec"}], "result": "Sheet", "description": "Inserts a new sheet in the spreadsheet, creates a DataSourceTable spanning the\nentire sheet with the given data source specification, and starts data execution."}, {"name": "isColumnHiddenByUser", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given column is hidden by the user."}, {"name": "isIterativeCalculationEnabled", "parameters": [], "result": "Boolean", "description": "Returns whether iterative calculation is enabled in this spreadsheet."}, {"name": "isRowHiddenByFilter", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given row is hidden by a filter (not a filter view)."}, {"name": "isRowHiddenByUser", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given row is hidden by the user."}, {"name": "moveActiveSheet", "parameters": [{"name": "pos", "type": "Integer"}], "result": "void", "description": "Moves the active sheet to the given position in the list of sheets."}, {"name": "moveChartToObjectSheet", "parameters": [{"name": "chart", "type": "EmbeddedChart"}], "result": "Sheet", "description": "Creates a new SheetType.OBJECT sheet and moves the provided chart to it."}, {"name": "refreshAllDataSources", "parameters": [], "result": "void", "description": "Refreshes all supported data sources and their linked data source objects, skipping invalid\ndata source objects."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Spreadsheet", "description": "Removes the given user from the list of editors for the Spreadsheet."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Spreadsheet", "description": "Removes the given user from the list of editors for the Spreadsheet."}, {"name": "removeMenu", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "Removes a menu that was added by addMenu(name, subMenus)."}, {"name": "removeNamedRange", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "Deletes a named range with the given name."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Spreadsheet", "description": "Removes the given user from the list of viewers and commenters for the Spreadsheet."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Spreadsheet", "description": "Removes the given user from the list of viewers and commenters for the Spreadsheet."}, {"name": "rename", "parameters": [{"name": "newName", "type": "String"}], "result": "void", "description": "Renames the document."}, {"name": "renameActiveSheet", "parameters": [{"name": "newName", "type": "String"}], "result": "void", "description": "Renames the current active sheet to the given new name."}, {"name": "resetSpreadsheetTheme", "parameters": [], "result": "SpreadsheetTheme", "description": "Removes the applied theme and sets the default theme on the spreadsheet."}, {"name": "setActiveRange", "parameters": [{"name": "range", "type": "Range"}], "result": "Range", "description": "Sets the specified range as the active range in the active sheet, with\nthe top left cell in the range as the current cell."}, {"name": "setActiveRangeList", "parameters": [{"name": "rangeList", "type": "RangeList"}], "result": "RangeList", "description": "Sets the specified list of ranges as the active ranges in the\nactive sheet."}, {"name": "setActiveSelection", "parameters": [{"name": "range", "type": "Range"}], "result": "Range", "description": "Sets the active selection region for this sheet."}, {"name": "setActiveSelection", "parameters": [{"name": "a1Notation", "type": "String"}], "result": "Range", "description": "Sets the active selection, as specified in A1 notation or R1C1 notation."}, {"name": "setActiveSheet", "parameters": [{"name": "sheet", "type": "Sheet"}], "result": "Sheet", "description": "Sets the given sheet to be the active sheet in the spreadsheet."}, {"name": "setActiveSheet", "parameters": [{"name": "sheet", "type": "Sheet"}, {"name": "restoreSelection", "type": "Boolean"}], "result": "Sheet", "description": "Sets the given sheet to be the active sheet in the spreadsheet, with an option to restore the\nmost recent selection within that sheet."}, {"name": "setColumnWidth", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "width", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of the given column in pixels."}, {"name": "setCurrentCell", "parameters": [{"name": "cell", "type": "Range"}], "result": "Range", "description": "Sets the specified cell as the current cell."}, {"name": "setFrozenColumns", "parameters": [{"name": "columns", "type": "Integer"}], "result": "void", "description": "Freezes the given number of columns."}, {"name": "setFrozenRows", "parameters": [{"name": "rows", "type": "Integer"}], "result": "void", "description": "Freezes the given number of rows."}, {"name": "setIterativeCalculationConvergenceThreshold", "parameters": [{"name": "minThreshold", "type": "Number"}], "result": "Spreadsheet", "description": "Sets the minimum threshold value for iterative calculation."}, {"name": "setIterativeCalculationEnabled", "parameters": [{"name": "isEnabled", "type": "Boolean"}], "result": "Spreadsheet", "description": "Sets whether iterative calculation is enabled in this spreadsheet."}, {"name": "setMaxIterativeCalculationCycles", "parameters": [{"name": "maxIterations", "type": "Integer"}], "result": "Spreadsheet", "description": "Sets the maximum number of calculation iterations that should be performed during iterative\ncalculation."}, {"name": "setNamedRange", "parameters": [{"name": "name", "type": "String"}, {"name": "range", "type": "Range"}], "result": "void", "description": "Names a range."}, {"name": "setRecalculationInterval", "parameters": [{"name": "recalculationInterval", "type": "RecalculationInterval"}], "result": "Spreadsheet", "description": "Sets how often this spreadsheet should recalculate."}, {"name": "setRowHeight", "parameters": [{"name": "rowPosition", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "Sheet", "description": "Sets the row height of the given row in pixels."}, {"name": "setSpreadsheetLocale", "parameters": [{"name": "locale", "type": "String"}], "result": "void", "description": "Sets the spreadsheet locale."}, {"name": "setSpreadsheetTheme", "parameters": [{"name": "theme", "type": "SpreadsheetTheme"}], "result": "SpreadsheetTheme", "description": "Sets a theme on the spreadsheet."}, {"name": "setSpreadsheetTimeZone", "parameters": [{"name": "timezone", "type": "String"}], "result": "void", "description": "Sets the time zone for the spreadsheet."}, {"name": "show", "parameters": [{"name": "userInterface", "type": "Object"}], "result": "void", "description": "Displays a custom user interface component in a dialog centered in the user's browser's\nviewport."}, {"name": "sort", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Sorts a sheet by column, ascending."}, {"name": "sort", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "ascending", "type": "Boolean"}], "result": "Sheet", "description": "Sorts a sheet by column."}, {"name": "toast", "parameters": [{"name": "msg", "type": "String"}], "result": "void", "description": "Shows a popup window in the lower right corner of the spreadsheet with the given message."}, {"name": "toast", "parameters": [{"name": "msg", "type": "String"}, {"name": "title", "type": "String"}], "result": "void", "description": "Shows a popup window in the lower right corner of the spreadsheet with the given message and\ntitle."}, {"name": "toast", "parameters": [{"name": "msg", "type": "String"}, {"name": "title", "type": "String"}, {"name": "timeoutSeconds", "type": "Number"}], "result": "void", "description": "Shows a popup window in the lower right corner of the spreadsheet with the given title and\nmessage, that stays visible for a certain length of time."}, {"name": "unhideColumn", "parameters": [{"name": "column", "type": "Range"}], "result": "void", "description": "Unhides the column in the given range."}, {"name": "unhideRow", "parameters": [{"name": "row", "type": "Range"}], "result": "void", "description": "Unhides the row in the given range."}, {"name": "updateMenu", "parameters": [{"name": "name", "type": "String"}, {"name": "subMenus", "type": "Object"}], "result": "void", "description": "Updates a menu that was added by addMenu(name, subMenus)."}, {"name": "waitForAllDataExecutionsCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "void", "description": "Waits until all the current executions in the spreadsheet complete, timing out after the\nprovided number of seconds."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/sheet", "name": "Sheet", "type": "class", "methods": [{"name": "activate", "parameters": [], "result": "Sheet", "description": "Activates this sheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}], "result": "Sheet", "description": "Adds developer metadata with the specified key to the sheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Sheet", "description": "Adds developer metadata with the specified key and visibility to the sheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "Sheet", "description": "Adds developer metadata with the specified key and value to the sheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Sheet", "description": "Adds developer metadata with the specified key, value, and visibility to the sheet."}, {"name": "appendRow", "parameters": [{"name": "rowContents", "type": "Object"}], "result": "Sheet", "description": "Appends a row to the spreadsheet."}, {"name": "asDataSourceSheet", "parameters": [], "result": "DataSourceSheet", "description": "Returns the sheet as a DataSourceSheet if the sheet is of type SheetType.DATASOURCE, or null otherwise."}, {"name": "autoResizeColumn", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of the given column to fit its contents."}, {"name": "autoResizeColumns", "parameters": [{"name": "startColumn", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of all columns starting at the given column position to fit their contents."}, {"name": "autoResizeRows", "parameters": [{"name": "startRow", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "Sheet", "description": "Sets the height of all rows starting at the given row position to fit their contents."}, {"name": "clear", "parameters": [], "result": "Sheet", "description": "Clears the sheet of content and formatting information."}, {"name": "clear", "parameters": [{"name": "options", "type": "Object"}], "result": "Sheet", "description": "Clears the sheet of contents and/or format, as specified with the given advanced options."}, {"name": "clearConditionalFormatRules", "parameters": [], "result": "void", "description": "Removes all conditional format rules from the sheet."}, {"name": "clearContents", "parameters": [], "result": "Sheet", "description": "Clears the sheet of contents, while preserving formatting information."}, {"name": "clearFormats", "parameters": [], "result": "Sheet", "description": "Clears the sheet of formatting, while preserving contents."}, {"name": "clearNotes", "parameters": [], "result": "Sheet", "description": "Clears the sheet of all notes."}, {"name": "collapseAllColumnGroups", "parameters": [], "result": "Sheet", "description": "Collapses all column groups on the sheet."}, {"name": "collapseAllRowGroups", "parameters": [], "result": "Sheet", "description": "Collapses all row groups on the sheet."}, {"name": "copyTo", "parameters": [{"name": "spreadsheet", "type": "Spreadsheet"}], "result": "Sheet", "description": "Copies the sheet to a given spreadsheet, which can be the same spreadsheet as the source."}, {"name": "createDeveloperMetadataFinder", "parameters": [], "result": "DeveloperMetadataFinder", "description": "Returns a DeveloperMetadataFinder for finding developer metadata within the scope of\nthis sheet."}, {"name": "createTextFinder", "parameters": [{"name": "findText", "type": "String"}], "result": "TextFinder", "description": "Creates a text finder for the sheet, which can find and replace text within the sheet."}, {"name": "deleteColumn", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Deletes the column at the given column position."}, {"name": "deleteColumns", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "void", "description": "Deletes a number of columns starting at the given column position."}, {"name": "deleteRow", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Sheet", "description": "Deletes the row at the given row position."}, {"name": "deleteRows", "parameters": [{"name": "rowPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "void", "description": "Deletes a number of rows starting at the given row position."}, {"name": "expandAllColumnGroups", "parameters": [], "result": "Sheet", "description": "Expands all column groups on the sheet."}, {"name": "expandAllRowGroups", "parameters": [], "result": "Sheet", "description": "Expands all row groups on the sheet."}, {"name": "expandColumnGroupsUpToDepth", "parameters": [{"name": "groupDepth", "type": "Integer"}], "result": "Sheet", "description": "Expands all column groups up to the given depth, and collapses all others."}, {"name": "expandRowGroupsUpToDepth", "parameters": [{"name": "groupDepth", "type": "Integer"}], "result": "Sheet", "description": "Expands all row groups up to the given depth, and collapses all others."}, {"name": "getActiveCell", "parameters": [], "result": "Range", "description": "Returns the active cell in this sheet."}, {"name": "getActiveRange", "parameters": [], "result": "Range", "description": "Returns the selected range in the active sheet, or null if there is no active range."}, {"name": "getActiveRangeList", "parameters": [], "result": "RangeList", "description": "Returns the list of active ranges in the active sheet or null if there are no active\nranges."}, {"name": "getBandings", "parameters": [], "result": "Banding[]", "description": "Returns all the bandings in this sheet."}, {"name": "getCharts", "parameters": [], "result": "EmbeddedChart[]", "description": "Returns an array of charts on this sheet."}, {"name": "getColumnGroup", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "groupDepth", "type": "Integer"}], "result": "Group", "description": "Returns the column group at the given index and group depth."}, {"name": "getColumnGroupControlPosition", "parameters": [], "result": "GroupControlTogglePosition", "description": "Returns the GroupControlTogglePosition for all column groups on the sheet."}, {"name": "getColumnGroupDepth", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Integer", "description": "Returns the group depth of the column at the given index."}, {"name": "getColumnWidth", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Integer", "description": "Gets the width in pixels of the given column."}, {"name": "getConditionalFormatRules", "parameters": [], "result": "ConditionalFormatRule[]", "description": "Get all conditional format rules in this sheet."}, {"name": "getCurrentCell", "parameters": [], "result": "Range", "description": "Returns the current cell in the active sheet or null if there is no current cell."}, {"name": "getDataRange", "parameters": [], "result": "Range", "description": "Returns a Range corresponding to the dimensions in which data is present."}, {"name": "getDataSourceFormulas", "parameters": [], "result": "DataSourceFormula[]", "description": "Gets all the data source formulas."}, {"name": "getDataSourcePivotTables", "parameters": [], "result": "DataSourcePivotTable[]", "description": "Gets all the data source pivot tables."}, {"name": "getDataSourceTables", "parameters": [], "result": "DataSourceTable[]", "description": "Gets all the data source tables."}, {"name": "getDeveloperMetadata", "parameters": [], "result": "DeveloperMetadata[]", "description": "Get all developer metadata associated with this sheet."}, {"name": "getDrawings", "parameters": [], "result": "Drawing[]", "description": "Returns an array of drawings on the sheet."}, {"name": "getFilter", "parameters": [], "result": "Filter", "description": "Returns the filter in this sheet, or null if there is no filter."}, {"name": "getFormUrl", "parameters": [], "result": "String", "description": "Returns the URL for the form that sends its responses to this sheet, or null if this\nsheet has no associated form."}, {"name": "getFrozenColumns", "parameters": [], "result": "Integer", "description": "Returns the number of frozen columns."}, {"name": "getFrozenRows", "parameters": [], "result": "Integer", "description": "Returns the number of frozen rows."}, {"name": "getImages", "parameters": [], "result": "OverGridImage[]", "description": "Returns all over-the-grid images on the sheet."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the position of the sheet in its parent spreadsheet."}, {"name": "getLastColumn", "parameters": [], "result": "Integer", "description": "Returns the position of the last column that has content."}, {"name": "getLastRow", "parameters": [], "result": "Integer", "description": "Returns the position of the last row that has content."}, {"name": "getMaxColumns", "parameters": [], "result": "Integer", "description": "Returns the current number of columns in the sheet, regardless of content."}, {"name": "getMaxRows", "parameters": [], "result": "Integer", "description": "Returns the current number of rows in the sheet, regardless of content."}, {"name": "getName", "parameters": [], "result": "String", "description": "Returns the name of the sheet."}, {"name": "getNamedRanges", "parameters": [], "result": "NamedRange[]", "description": "Gets all the named ranges in this sheet."}, {"name": "getParent", "parameters": [], "result": "Spreadsheet", "description": "Returns the Spreadsheet that contains this sheet."}, {"name": "getPivotTables", "parameters": [], "result": "PivotTable[]", "description": "Returns all the pivot tables on this sheet."}, {"name": "getProtections", "parameters": [{"name": "type", "type": "ProtectionType"}], "result": "Protection[]", "description": "Gets an array of objects representing all protected ranges in the sheet, or a single-element\narray representing the protection on the sheet itself."}, {"name": "getRange", "parameters": [{"name": "row", "type": "Integer"}, {"name": "column", "type": "Integer"}], "result": "Range", "description": "Returns the range with the top left cell at the given coordinates."}, {"name": "getRange", "parameters": [{"name": "row", "type": "Integer"}, {"name": "column", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "Range", "description": "Returns the range with the top left cell at the given coordinates, and with the given number of\nrows."}, {"name": "getRange", "parameters": [{"name": "row", "type": "Integer"}, {"name": "column", "type": "Integer"}, {"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Range", "description": "Returns the range with the top left cell at the given coordinates with the given number of rows\nand columns."}, {"name": "getRange", "parameters": [{"name": "a1Notation", "type": "String"}], "result": "Range", "description": "Returns the range as specified in A1 notation or R1C1 notation."}, {"name": "getRangeList", "parameters": [{"name": "a1Notations", "type": "String"}], "result": "RangeList", "description": "Returns the RangeList collection representing the ranges in the same sheet specified\nby a non-empty list of A1 notations or R1C1 notations."}, {"name": "getRowGroup", "parameters": [{"name": "rowIndex", "type": "Integer"}, {"name": "groupDepth", "type": "Integer"}], "result": "Group", "description": "Returns the row group at the given index and group depth."}, {"name": "getRowGroupControlPosition", "parameters": [], "result": "GroupControlTogglePosition", "description": "Returns the GroupControlTogglePosition for all row groups on the sheet."}, {"name": "getRowGroupDepth", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "Integer", "description": "Returns the group depth of the row at the given index."}, {"name": "getRowHeight", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Integer", "description": "Gets the height in pixels of the given row."}, {"name": "getSelection", "parameters": [], "result": "Selection", "description": "Returns the current Selection in the spreadsheet."}, {"name": "getSheetId", "parameters": [], "result": "Integer", "description": "Returns the ID of the sheet represented by this object."}, {"name": "getSheetName", "parameters": [], "result": "String", "description": "Returns the sheet name."}, {"name": "getSheetValues", "parameters": [{"name": "startRow", "type": "Integer"}, {"name": "startColumn", "type": "Integer"}, {"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Object[][]", "description": "Returns the rectangular grid of values for this range starting at the given coordinates."}, {"name": "getSlicers", "parameters": [], "result": "Slicer[]", "description": "Returns an array of slicers on the sheet."}, {"name": "getTabColor", "parameters": [], "result": "String", "description": "Gets the sheet tab color, or null if the sheet tab has no color."}, {"name": "getTabColorObject", "parameters": [], "result": "Color", "description": "Gets the sheet tab color, or null if the sheet tab has no color."}, {"name": "getType", "parameters": [], "result": "SheetType", "description": "Returns the type of the sheet."}, {"name": "hasHiddenGridlines", "parameters": [], "result": "Boolean", "description": "Returns true if the sheet's gridlines are hidden; otherwise returns false."}, {"name": "hideColumn", "parameters": [{"name": "column", "type": "Range"}], "result": "void", "description": "Hides the columns in the given range."}, {"name": "hideColumns", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "void", "description": "Hides the column at the given index."}, {"name": "hideColumns", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "void", "description": "Hides one or more consecutive columns starting at the given index."}, {"name": "hideRow", "parameters": [{"name": "row", "type": "Range"}], "result": "void", "description": "Hides the rows in the given range."}, {"name": "hideRows", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "void", "description": "Hides the row at the given index."}, {"name": "hideRows", "parameters": [{"name": "rowIndex", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "void", "description": "Hides one or more consecutive rows starting at the given index."}, {"name": "hideSheet", "parameters": [], "result": "Sheet", "description": "Hides this sheet."}, {"name": "insertChart", "parameters": [{"name": "chart", "type": "EmbeddedChart"}], "result": "void", "description": "Adds a new chart to this sheet."}, {"name": "insertColumnAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a column after the given column position."}, {"name": "insertColumnBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a column before the given column position."}, {"name": "insertColumns", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "void", "description": "Inserts a blank column in a sheet at the specified location."}, {"name": "insertColumns", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "void", "description": "Inserts one or more consecutive blank columns in a sheet starting at the specified location."}, {"name": "insertColumnsAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of columns after the given column position."}, {"name": "insertColumnsBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of columns before the given column position."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts a BlobSource as an image in the document at a given row and column."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts a BlobSource as an image in the document at a given row and column, with a\npixel offset."}, {"name": "insertImage", "parameters": [{"name": "url", "type": "String"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts an image in the document at a given row and column."}, {"name": "insertImage", "parameters": [{"name": "url", "type": "String"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts an image in the document at a given row and column, with a pixel offset."}, {"name": "insertRowAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a row after the given row position."}, {"name": "insertRowBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a row before the given row position."}, {"name": "insertRows", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "void", "description": "Inserts a blank row in a sheet at the specified location."}, {"name": "insertRows", "parameters": [{"name": "rowIndex", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "void", "description": "Inserts one or more consecutive blank rows in a sheet starting at the specified location."}, {"name": "insertRowsAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of rows after the given row position."}, {"name": "insertRowsBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of rows before the given row position."}, {"name": "insertSlicer", "parameters": [{"name": "range", "type": "Range"}, {"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}], "result": "Slicer", "description": "Adds a new slicer to this sheet."}, {"name": "insertSlicer", "parameters": [{"name": "range", "type": "Range"}, {"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "Slicer", "description": "Adds a new slicer to this sheet."}, {"name": "isColumnHiddenByUser", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given column is hidden by the user."}, {"name": "isRightToLeft", "parameters": [], "result": "Boolean", "description": "Returns true if this sheet layout is right-to-left."}, {"name": "isRowHiddenByFilter", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given row is hidden by a filter (not a filter view)."}, {"name": "isRowHiddenByUser", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given row is hidden by the user."}, {"name": "isSheetHidden", "parameters": [], "result": "Boolean", "description": "Returns true if the sheet is currently hidden."}, {"name": "moveColumns", "parameters": [{"name": "columnSpec", "type": "Range"}, {"name": "destinationIndex", "type": "Integer"}], "result": "void", "description": "Moves the columns selected by the given range to the position indicated by the destinationIndex."}, {"name": "moveRows", "parameters": [{"name": "rowSpec", "type": "Range"}, {"name": "destinationIndex", "type": "Integer"}], "result": "void", "description": "Moves the rows selected by the given range to the position indicated by the destinationIndex."}, {"name": "newChart", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Returns a builder to create a new chart for this sheet."}, {"name": "protect", "parameters": [], "result": "Protection", "description": "Creates an object that can protect the sheet from being edited except by users who have\npermission."}, {"name": "removeChart", "parameters": [{"name": "chart", "type": "EmbeddedChart"}], "result": "void", "description": "Removes a chart from the parent sheet."}, {"name": "setActiveRange", "parameters": [{"name": "range", "type": "Range"}], "result": "Range", "description": "Sets the specified range as the active range in the active sheet, with\nthe top left cell in the range as the current cell."}, {"name": "setActiveRangeList", "parameters": [{"name": "rangeList", "type": "RangeList"}], "result": "RangeList", "description": "Sets the specified list of ranges as the active ranges in the\nactive sheet."}, {"name": "setActiveSelection", "parameters": [{"name": "range", "type": "Range"}], "result": "Range", "description": "Sets the active selection region for this sheet."}, {"name": "setActiveSelection", "parameters": [{"name": "a1Notation", "type": "String"}], "result": "Range", "description": "Sets the active selection, as specified in A1 notation or R1C1 notation."}, {"name": "setColumnGroupControlPosition", "parameters": [{"name": "position", "type": "GroupControlTogglePosition"}], "result": "Sheet", "description": "Sets the position of the column group control toggle on the sheet."}, {"name": "setColumnWidth", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "width", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of the given column in pixels."}, {"name": "setColumnWidths", "parameters": [{"name": "startColumn", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}, {"name": "width", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of the given columns in pixels."}, {"name": "setConditionalFormatRules", "parameters": [{"name": "rules", "type": "ConditionalFormatRule"}], "result": "void", "description": "Replaces all currently existing conditional format rules in the sheet with the input rules."}, {"name": "setCurrentCell", "parameters": [{"name": "cell", "type": "Range"}], "result": "Range", "description": "Sets the specified cell as the current cell."}, {"name": "setFrozenColumns", "parameters": [{"name": "columns", "type": "Integer"}], "result": "void", "description": "Freezes the given number of columns."}, {"name": "setFrozenRows", "parameters": [{"name": "rows", "type": "Integer"}], "result": "void", "description": "Freezes the given number of rows."}, {"name": "setHiddenGridlines", "parameters": [{"name": "hideGridlines", "type": "Boolean"}], "result": "Sheet", "description": "Hides or reveals the sheet gridlines."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Sheet", "description": "Sets the sheet name."}, {"name": "setRightToLeft", "parameters": [{"name": "rightToLeft", "type": "Boolean"}], "result": "Sheet", "description": "Sets or unsets the sheet layout to right-to-left."}, {"name": "setRowGroupControlPosition", "parameters": [{"name": "position", "type": "GroupControlTogglePosition"}], "result": "Sheet", "description": "Sets the position of the row group control toggle on the sheet."}, {"name": "setRowHeight", "parameters": [{"name": "rowPosition", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "Sheet", "description": "Sets the row height of the given row in pixels."}, {"name": "setRowHeights", "parameters": [{"name": "startRow", "type": "Integer"}, {"name": "numRows", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "Sheet", "description": "Sets the height of the given rows in pixels."}, {"name": "setTabColor", "parameters": [{"name": "color", "type": "String"}], "result": "Sheet", "description": "Sets the sheet tab color."}, {"name": "setTabColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Sheet", "description": "Sets the sheet tab color."}, {"name": "showColumns", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "void", "description": "Unhides the column at the given index."}, {"name": "showColumns", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "void", "description": "Unhides one or more consecutive columns starting at the given index."}, {"name": "showRows", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "void", "description": "Unhides the row at the given index."}, {"name": "showRows", "parameters": [{"name": "rowIndex", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "void", "description": "Unhides one or more consecutive rows starting at the given index."}, {"name": "showSheet", "parameters": [], "result": "Sheet", "description": "Makes the sheet visible."}, {"name": "sort", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Sorts a sheet by column, ascending."}, {"name": "sort", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "ascending", "type": "Boolean"}], "result": "Sheet", "description": "Sorts a sheet by column."}, {"name": "unhideColumn", "parameters": [{"name": "column", "type": "Range"}], "result": "void", "description": "Unhides the column in the given range."}, {"name": "unhideRow", "parameters": [{"name": "row", "type": "Range"}], "result": "void", "description": "Unhides the row in the given range."}, {"name": "updateChart", "parameters": [{"name": "chart", "type": "EmbeddedChart"}], "result": "void", "description": "Updates the chart on this sheet."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/rich-text-value", "name": "RichTextValue", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "RichTextValueBuilder", "description": "Returns a builder for a Rich Text value initialized with the values of this Rich Text value."}, {"name": "getEndIndex", "parameters": [], "result": "Integer", "description": "Gets the end index of this value in the cell."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Returns the link URL for this value."}, {"name": "getLinkUrl", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffset", "type": "Integer"}], "result": "String", "description": "Returns the link URL for the text from startOffset to endOffset."}, {"name": "getRuns", "parameters": [], "result": "RichTextValue[]", "description": "Returns the Rich Text string split into an array of runs, wherein each run is the longest\npossible substring having a consistent text style."}, {"name": "getStartIndex", "parameters": [], "result": "Integer", "description": "Gets the start index of this value in the cell."}, {"name": "getText", "parameters": [], "result": "String", "description": "Returns the text of this value."}, {"name": "getTextStyle", "parameters": [], "result": "TextStyle", "description": "Returns the text style of this value."}, {"name": "getTextStyle", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffset", "type": "Integer"}], "result": "TextStyle", "description": "Returns the text style of the text from startOffset to endOffset."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/sort-spec", "name": "SortSpec", "type": "class", "methods": [{"name": "getBackgroundColor", "parameters": [], "result": "Color", "description": "Returns the background color used for sorting, or null if absent."}, {"name": "getDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Gets the data source column the sort spec acts on."}, {"name": "getDimensionIndex", "parameters": [], "result": "Integer", "description": "Returns the dimension index or null if not linked to a local filter."}, {"name": "getForegroundColor", "parameters": [], "result": "Color", "description": "Returns the foreground color used for sorting, or null if absent."}, {"name": "getSortOrder", "parameters": [], "result": "SortOrder", "description": "Returns the sort order."}, {"name": "isAscending", "parameters": [], "result": "Boolean", "description": "Returns whether the sort order is ascending."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/selection", "name": "Selection", "type": "class", "methods": [{"name": "getActiveRange", "parameters": [], "result": "Range", "description": "Returns the selected range in the active sheet, or null if there is no active range."}, {"name": "getActiveRangeList", "parameters": [], "result": "RangeList", "description": "Returns the list of active ranges in the active sheet or null if there are no active\nranges."}, {"name": "getActiveSheet", "parameters": [], "result": "Sheet", "description": "Returns the active sheet in the spreadsheet."}, {"name": "getCurrentCell", "parameters": [], "result": "Range", "description": "Returns the current (highlighted) cell that is selected in one of the active ranges or null if there is no current cell."}, {"name": "getNextDataRange", "parameters": [{"name": "direction", "type": "Direction"}], "result": "Range", "description": "Starting from the current cell and active range\nand moving in the given direction, returns an adjusted range where the appropriate edge of the\nrange has been shifted to cover the next data cell while still\ncovering the current cell."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/slicer", "name": "Slicer", "type": "class", "methods": [{"name": "getBackgroundColor", "parameters": [], "result": "String", "description": "Returns the background color of the slicer in CSS notation (such as '#ffffff')."}, {"name": "getBackgroundColorObject", "parameters": [], "result": "Color", "description": "Return the background Color of the slicer."}, {"name": "getColumnPosition", "parameters": [], "result": "Integer", "description": "Returns the column position (relative to the data range of the slicer) on which the filter is\napplied in the slicer, or null if the column position is not set."}, {"name": "getContainerInfo", "parameters": [], "result": "ContainerInfo", "description": "Gets information about where the slicer is positioned in the sheet."}, {"name": "getFilterCriteria", "parameters": [], "result": "FilterCriteria", "description": "Returns the filter criteria of the slicer, or null if the filter criteria is not set."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Gets the data range on which the slicer is applied to."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the title of the slicer."}, {"name": "getTitleHorizontalAlignment", "parameters": [], "result": "String", "description": "Gets the horizontal alignment of the title."}, {"name": "getTitleTextStyle", "parameters": [], "result": "TextStyle", "description": "Returns the text style of the slicer's title."}, {"name": "isAppliedToPivotTables", "parameters": [], "result": "Boolean", "description": "Returns whether the given slicer is applied to pivot tables."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes the slicer."}, {"name": "setApplyToPivotTables", "parameters": [{"name": "applyToPivotTables", "type": "Boolean"}], "result": "Slicer", "description": "Sets if the given slicer should be applied to pivot tables in the worksheet."}, {"name": "setBackgroundColor", "parameters": [{"name": "color", "type": "String"}], "result": "Slicer", "description": "Sets the background color of the slicer."}, {"name": "setBackgroundColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Slicer", "description": "Sets the background Color of the slicer."}, {"name": "setColumnFilterCriteria", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "filterCriteria", "type": "FilterCriteria"}], "result": "Slicer", "description": "Sets the column index and filtering criteria of the slicer."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "Slicer", "description": "Sets the position where the slicer appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "rangeApi", "type": "Range"}], "result": "Slicer", "description": "Sets the data range on which the slicer is applied."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Slicer", "description": "Sets the title of the slicer."}, {"name": "setTitleHorizontalAlignment", "parameters": [{"name": "horizontalAlignment", "type": "String"}], "result": "Slicer", "description": "Sets the horizontal alignment of the title in the slicer."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "Slicer", "description": "Sets the text style of the slicer."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-value", "name": "PivotValue", "type": "class", "methods": [{"name": "getDisplayType", "parameters": [], "result": "PivotValueDisplayType", "description": "Returns the display type describing how this pivot value is currently displayed in the table."}, {"name": "getFormula", "parameters": [], "result": "String", "description": "Returns the formula used to calculate this value."}, {"name": "getPivotTable", "parameters": [], "result": "PivotTable", "description": "Returns the PivotTable which this value belongs to."}, {"name": "getSourceDataColumn", "parameters": [], "result": "Integer", "description": "Returns the number of the source data column the pivot value summarizes."}, {"name": "getSourceDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Returns the data source column the pivot value summarizes."}, {"name": "getSummarizedBy", "parameters": [], "result": "PivotTableSummarizeFunction", "description": "Returns this group\u2019s summarization function."}, {"name": "remove", "parameters": [], "result": "void", "description": "Remove this value from the pivot table."}, {"name": "setDisplayName", "parameters": [{"name": "name", "type": "String"}], "result": "PivotValue", "description": "Sets the display name for this value in the pivot table."}, {"name": "setFormula", "parameters": [{"name": "formula", "type": "String"}], "result": "PivotValue", "description": "Sets the formula used to calculate this value."}, {"name": "showAs", "parameters": [{"name": "displayType", "type": "PivotValueDisplayType"}], "result": "PivotValue", "description": "Displays this value in the pivot table as a function of another value."}, {"name": "summarizeBy", "parameters": [{"name": "summarizeFunction", "type": "PivotTableSummarizeFunction"}], "result": "PivotValue", "description": "Sets the summarization function."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/text-rotation", "name": "TextRotation", "type": "class", "methods": [{"name": "getDegrees", "parameters": [], "result": "Integer", "description": "Gets the angle between standard text orientation and the current text orientation."}, {"name": "isVertical", "parameters": [], "result": "Boolean", "description": "Returns true if the text is stacked vertically; returns false otherwise."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/rich-text-value-builder", "name": "RichTextValueBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "RichTextValue", "description": "Creates a Rich Text value from this builder."}, {"name": "setLinkUrl", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffset", "type": "Integer"}, {"name": "linkUrl", "type": "String"}], "result": "RichTextValueBuilder", "description": "Sets the link URL for the given substring of this value, or clears it if linkUrl is\nnull."}, {"name": "setLinkUrl", "parameters": [{"name": "linkUrl", "type": "String"}], "result": "RichTextValueBuilder", "description": "Sets the link URL for the entire value, or clears it if linkUrl is null."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "RichTextValueBuilder", "description": "Sets the text for this value and clears any existing text style."}, {"name": "setTextStyle", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffset", "type": "Integer"}, {"name": "textStyle", "type": "TextStyle"}], "result": "RichTextValueBuilder", "description": "Applies a text style to the given substring of this value."}, {"name": "setTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "RichTextValueBuilder", "description": "Applies a text style to the entire value."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-group-limit", "name": "PivotGroupLimit", "type": "class", "methods": [{"name": "getCountLimit", "parameters": [], "result": "Integer", "description": "Gets the count limit on rows or columns in the pivot group."}, {"name": "getPivotGroup", "parameters": [], "result": "PivotGroup", "description": "Returns the pivot group the limit belongs to."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the pivot group limit."}, {"name": "setCountLimit", "parameters": [{"name": "countLimit", "type": "Integer"}], "result": "PivotGroupLimit", "description": "Sets the count limit on rows or columns in the pivot group."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-table", "name": "PivotTable", "type": "class", "methods": [{"name": "addCalculatedPivotValue", "parameters": [{"name": "name", "type": "String"}, {"name": "formula", "type": "String"}], "result": "PivotValue", "description": "Creates a new pivot value in the pivot table calculated from the specified formula with\nthe specified name."}, {"name": "addColumnGroup", "parameters": [{"name": "sourceDataColumn", "type": "Integer"}], "result": "PivotGroup", "description": "Defines a new pivot column grouping in the pivot table."}, {"name": "addFilter", "parameters": [{"name": "sourceDataColumn", "type": "Integer"}, {"name": "filterCriteria", "type": "FilterCriteria"}], "result": "PivotFilter", "description": "Creates a new pivot filter for the pivot table."}, {"name": "addPivotValue", "parameters": [{"name": "sourceDataColumn", "type": "Integer"}, {"name": "summarizeFunction", "type": "PivotTableSummarizeFunction"}], "result": "PivotValue", "description": "Defines a new pivot value in the pivot table with the specified summarizeFunction."}, {"name": "addRowGroup", "parameters": [{"name": "sourceDataColumn", "type": "Integer"}], "result": "PivotGroup", "description": "Defines a new pivot row grouping in the pivot table."}, {"name": "asDataSourcePivotTable", "parameters": [], "result": "DataSourcePivotTable", "description": "Returns the pivot table as a data source pivot table if the pivot table is linked to a DataSource, or null otherwise."}, {"name": "getAnchorCell", "parameters": [], "result": "Range", "description": "Returns the Range representing the cell where this pivot table is anchored."}, {"name": "getColumnGroups", "parameters": [], "result": "PivotGroup[]", "description": "Returns an ordered list of the column groups in this pivot table."}, {"name": "getFilters", "parameters": [], "result": "PivotFilter[]", "description": "Returns an ordered list of the filters in this pivot table."}, {"name": "getPivotValues", "parameters": [], "result": "PivotValue[]", "description": "Returns an ordered list of the pivot values in this pivot table."}, {"name": "getRowGroups", "parameters": [], "result": "PivotGroup[]", "description": "Returns an ordered list of the row groups in this pivot table."}, {"name": "getSourceDataRange", "parameters": [], "result": "Range", "description": "Returns the source data range on which the pivot table is constructed."}, {"name": "getValuesDisplayOrientation", "parameters": [], "result": "Dimension", "description": "Returns whether values are displayed as rows or columns."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes this pivot table."}, {"name": "setValuesDisplayOrientation", "parameters": [{"name": "dimension", "type": "Dimension"}], "result": "PivotTable", "description": "Sets the layout of this pivot table to display values as columns or rows."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/range-list", "name": "RangeList", "type": "class", "methods": [{"name": "activate", "parameters": [], "result": "RangeList", "description": "Selects the list of Range instances."}, {"name": "breakApart", "parameters": [], "result": "RangeList", "description": "Break all horizontally- or vertically-merged cells contained within the range list into\nindividual cells again."}, {"name": "check", "parameters": [], "result": "RangeList", "description": "Changes the state of the checkboxes in the range to \u201cchecked\u201d."}, {"name": "clear", "parameters": [], "result": "RangeList", "description": "Clears the range of contents, formats, and data validation rules for each Range in\nthe range list."}, {"name": "clear", "parameters": [{"name": "options", "type": "Object"}], "result": "RangeList", "description": "Clears the range of contents, format, data validation rules, and comments, as specified with\nthe given options."}, {"name": "clearContent", "parameters": [], "result": "RangeList", "description": "Clears the content of each Range in the range list, leaving the formatting intact."}, {"name": "clearDataValidations", "parameters": [], "result": "RangeList", "description": "Clears the data validation rules for each Range in the range list."}, {"name": "clearFormat", "parameters": [], "result": "RangeList", "description": "Clears text formatting for each Range in the range list."}, {"name": "clearNote", "parameters": [], "result": "RangeList", "description": "Clears the note for each Range in the range list."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a list of one or more Range instances in the same sheet."}, {"name": "insertCheckboxes", "parameters": [], "result": "RangeList", "description": "Inserts checkboxes into each cell in the range, configured with true for checked and\nfalse for unchecked."}, {"name": "insertCheckboxes", "parameters": [{"name": "checkedValue", "type": "Object"}], "result": "RangeList", "description": "Inserts checkboxes into each cell in the range, configured with a custom value for checked and\nthe empty string for unchecked."}, {"name": "insertCheckboxes", "parameters": [{"name": "checkedValue", "type": "Object"}, {"name": "uncheckedValue", "type": "Object"}], "result": "RangeList", "description": "Inserts checkboxes into each cell in the range, configured with custom values for the checked\nand unchecked states."}, {"name": "removeCheckboxes", "parameters": [], "result": "RangeList", "description": "Removes all checkboxes from the range."}, {"name": "setBackground", "parameters": [{"name": "color", "type": "String"}], "result": "RangeList", "description": "Sets the background color for each Range in the range list."}, {"name": "setBackgroundRGB", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "RangeList", "description": "Sets the background to the given RGB color."}, {"name": "setBorder", "parameters": [{"name": "top", "type": "Boolean"}, {"name": "left", "type": "Boolean"}, {"name": "bottom", "type": "Boolean"}, {"name": "right", "type": "Boolean"}, {"name": "vertical", "type": "Boolean"}, {"name": "horizontal", "type": "Boolean"}], "result": "RangeList", "description": "Sets the border property for each Range in the range list."}, {"name": "setBorder", "parameters": [{"name": "top", "type": "Boolean"}, {"name": "left", "type": "Boolean"}, {"name": "bottom", "type": "Boolean"}, {"name": "right", "type": "Boolean"}, {"name": "vertical", "type": "Boolean"}, {"name": "horizontal", "type": "Boolean"}, {"name": "color", "type": "String"}, {"name": "style", "type": "BorderStyle"}], "result": "RangeList", "description": "Sets the border property with color and/or style for each Range in the range list."}, {"name": "setFontColor", "parameters": [{"name": "color", "type": "String"}], "result": "RangeList", "description": "Sets the font color for each Range in the range list."}, {"name": "setFontFamily", "parameters": [{"name": "fontFamily", "type": "String"}], "result": "RangeList", "description": "Sets the font family for each Range in the range list."}, {"name": "setFontLine", "parameters": [{"name": "fontLine", "type": "String"}], "result": "RangeList", "description": "Sets the font line style for each Range in the range list."}, {"name": "setFontSize", "parameters": [{"name": "size", "type": "Integer"}], "result": "RangeList", "description": "Sets the font size (in points) for each Range in the range list."}, {"name": "setFontStyle", "parameters": [{"name": "fontStyle", "type": "String"}], "result": "RangeList", "description": "Set the font style for each Range in the range list."}, {"name": "setFontWeight", "parameters": [{"name": "fontWeight", "type": "String"}], "result": "RangeList", "description": "Set the font weight for each Range in the range list."}, {"name": "setFormula", "parameters": [{"name": "formula", "type": "String"}], "result": "RangeList", "description": "Updates the formula for each Range in the range list."}, {"name": "setFormulaR1C1", "parameters": [{"name": "formula", "type": "String"}], "result": "RangeList", "description": "Updates the formula for each Range in the range list."}, {"name": "setHorizontalAlignment", "parameters": [{"name": "alignment", "type": "String"}], "result": "RangeList", "description": "Set the horizontal alignment for each Range in the range list."}, {"name": "setNote", "parameters": [{"name": "note", "type": "String"}], "result": "RangeList", "description": "Sets the note text for each Range in the range list."}, {"name": "setNumberFormat", "parameters": [{"name": "numberFormat", "type": "String"}], "result": "RangeList", "description": "Sets the number or date format for each Range in the range list."}, {"name": "setShowHyperlink", "parameters": [{"name": "showHyperlink", "type": "Boolean"}], "result": "RangeList", "description": "Sets whether or not each Range in the range list should show hyperlinks."}, {"name": "setTextDirection", "parameters": [{"name": "direction", "type": "TextDirection"}], "result": "RangeList", "description": "Sets the text direction for the cells in each Range in the range list."}, {"name": "setTextRotation", "parameters": [{"name": "degrees", "type": "Integer"}], "result": "RangeList", "description": "Sets the text rotation settings for the cells in each Range in the range list."}, {"name": "setValue", "parameters": [{"name": "value", "type": "Object"}], "result": "RangeList", "description": "Sets the value for each Range in the range list."}, {"name": "setVerticalAlignment", "parameters": [{"name": "alignment", "type": "String"}], "result": "RangeList", "description": "Set the vertical alignment for each Range in the range list."}, {"name": "setVerticalText", "parameters": [{"name": "isVertical", "type": "Boolean"}], "result": "RangeList", "description": "Sets whether or not to stack the text for the cells for each Range in the range\nlist."}, {"name": "setWrap", "parameters": [{"name": "isWrapEnabled", "type": "Boolean"}], "result": "RangeList", "description": "Set text wrapping for each Range in the range list."}, {"name": "setWrapStrategy", "parameters": [{"name": "strategy", "type": "WrapStrategy"}], "result": "RangeList", "description": "Sets the text wrapping strategy for each Range in the range list."}, {"name": "trimWhitespace", "parameters": [], "result": "RangeList", "description": "Trims the whitespace (such as spaces, tabs, or new lines) in every cell in this range list."}, {"name": "uncheck", "parameters": [], "result": "RangeList", "description": "Changes the state of the checkboxes in the range to \u201cunchecked\u201d."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-filter", "name": "PivotFilter", "type": "class", "methods": [{"name": "getFilterCriteria", "parameters": [], "result": "FilterCriteria", "description": "Returns the filter criteria for this pivot filter."}, {"name": "getPivotTable", "parameters": [], "result": "PivotTable", "description": "Returns the PivotTable that this filter belongs to."}, {"name": "getSourceDataColumn", "parameters": [], "result": "Integer", "description": "Returns the number of the source data column this filter operates on."}, {"name": "getSourceDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Returns the data source column the filter operates on."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this pivot filter from the pivot table."}, {"name": "setFilterCriteria", "parameters": [{"name": "filterCriteria", "type": "FilterCriteria"}], "result": "PivotFilter", "description": "Sets the filter criteria for this pivot filter."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/protection", "name": "Protection", "type": "class", "methods": [{"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Protection", "description": "Adds the given user to the list of editors for the protected sheet or range."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Protection", "description": "Adds the given user to the list of editors for the protected sheet or range."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Protection", "description": "Adds the given array of users to the list of editors for the protected sheet or range."}, {"name": "addTargetAudience", "parameters": [{"name": "audienceId", "type": "String"}], "result": "Protection", "description": "Adds the specified target audience as an editor of the protected range."}, {"name": "canDomainEdit", "parameters": [], "result": "Boolean", "description": "Determines whether all users in the domain that owns the spreadsheet have permission to edit\nthe protected range or sheet."}, {"name": "canEdit", "parameters": [], "result": "Boolean", "description": "Determines whether the user has permission to edit the protected range or sheet."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description of the protected range or sheet."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for the protected range or sheet."}, {"name": "getProtectionType", "parameters": [], "result": "ProtectionType", "description": "Gets the type of the protected area, either RANGE or SHEET."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Gets the range that is being protected."}, {"name": "getRangeName", "parameters": [], "result": "String", "description": "Gets the name of the protected range if it is associated with a named range."}, {"name": "getTargetAudiences", "parameters": [], "result": "TargetAudience[]", "description": "Returns the IDs of the target audiences that can edit the protected range."}, {"name": "getUnprotectedRanges", "parameters": [], "result": "Range[]", "description": "Gets an array of unprotected ranges within a protected sheet."}, {"name": "isWarningOnly", "parameters": [], "result": "Boolean", "description": "Determines if the protected area is using \"warning based\" protection."}, {"name": "remove", "parameters": [], "result": "void", "description": "Unprotects the range or sheet."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Protection", "description": "Removes the given user from the list of editors for the protected sheet or range."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Protection", "description": "Removes the given user from the list of editors for the protected sheet or range."}, {"name": "removeEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Protection", "description": "Removes the given array of users from the list of editors for the protected sheet or range."}, {"name": "removeTargetAudience", "parameters": [{"name": "audienceId", "type": "String"}], "result": "Protection", "description": "Removes the specified target audience as an editor of the protected range."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Protection", "description": "Sets the description of the protected range or sheet."}, {"name": "setDomainEdit", "parameters": [{"name": "editable", "type": "Boolean"}], "result": "Protection", "description": "Sets whether all users in the domain that owns the spreadsheet have permission to edit the\nprotected range or sheet."}, {"name": "setNamedRange", "parameters": [{"name": "namedRange", "type": "NamedRange"}], "result": "Protection", "description": "Associates the protected range with an existing named range."}, {"name": "setRange", "parameters": [{"name": "range", "type": "Range"}], "result": "Protection", "description": "Adjusts the range that is being protected."}, {"name": "setRangeName", "parameters": [{"name": "rangeName", "type": "String"}], "result": "Protection", "description": "Associates the protected range with an existing named range."}, {"name": "setUnprotectedRanges", "parameters": [{"name": "ranges", "type": "Range"}], "result": "Protection", "description": "Unprotects the given array of ranges within a protected sheet."}, {"name": "setWarningOnly", "parameters": [{"name": "warningOnly", "type": "Boolean"}], "result": "Protection", "description": "Sets whether or not this protected range is using \"warning based\" protection."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/over-grid-image", "name": "OverGridImage", "type": "class", "methods": [{"name": "assignScript", "parameters": [{"name": "functionName", "type": "String"}], "result": "OverGridImage", "description": "Assigns the function with the specified function name to this image."}, {"name": "getAltTextDescription", "parameters": [], "result": "String", "description": "Returns the alt text description for this image."}, {"name": "getAltTextTitle", "parameters": [], "result": "String", "description": "Returns the alt text title for this image."}, {"name": "getAnchorCell", "parameters": [], "result": "Range", "description": "Returns the cell where an image is anchored."}, {"name": "getAnchorCellXOffset", "parameters": [], "result": "Integer", "description": "Returns the horizontal pixel offset from the anchor cell."}, {"name": "getAnchorCellYOffset", "parameters": [], "result": "Integer", "description": "Returns the vertical pixel offset from the anchor cell."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Returns the actual height of this image in pixels."}, {"name": "getInherentHeight", "parameters": [], "result": "Integer", "description": "Returns the inherent height of this image in pixels."}, {"name": "getInherentWidth", "parameters": [], "result": "Integer", "description": "Returns the inherent height of this image in pixels."}, {"name": "getScript", "parameters": [], "result": "String", "description": "Returns the name of the function assigned to this image."}, {"name": "getSheet", "parameters": [], "result": "Sheet", "description": "Returns the sheet this image appears on."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Gets the image's source URL; returns null if the URL is unavailable."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Returns the actual width of this image in pixels."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes this image from the spreadsheet."}, {"name": "replace", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "OverGridImage", "description": "Replaces this image with the one specified by the provided BlobSource."}, {"name": "replace", "parameters": [{"name": "url", "type": "String"}], "result": "OverGridImage", "description": "Replaces this image with the one from the specified URL."}, {"name": "resetSize", "parameters": [], "result": "OverGridImage", "description": "Resets this image to its inherent dimensions."}, {"name": "setAltTextDescription", "parameters": [{"name": "description", "type": "String"}], "result": "OverGridImage", "description": "Sets the alt-text description for this image."}, {"name": "setAltTextTitle", "parameters": [{"name": "title", "type": "String"}], "result": "OverGridImage", "description": "Sets the alt text title for this image."}, {"name": "setAnchorCell", "parameters": [{"name": "cell", "type": "Range"}], "result": "OverGridImage", "description": "Sets the cell where an image is anchored."}, {"name": "setAnchorCellXOffset", "parameters": [{"name": "offset", "type": "Integer"}], "result": "OverGridImage", "description": "Sets the horizontal pixel offset from the anchor cell."}, {"name": "setAnchorCellYOffset", "parameters": [{"name": "offset", "type": "Integer"}], "result": "OverGridImage", "description": "Sets the vertical pixel offset from the anchor cell."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Integer"}], "result": "OverGridImage", "description": "Sets the actual height of this image in pixels."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "OverGridImage", "description": "Sets the actual width of this image in pixels."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/page-protection", "name": "PageProtection", "type": "class", "methods": [], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/named-range", "name": "NamedRange", "type": "class", "methods": [{"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this named range."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Gets the range referenced by this named range."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes this named range."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "NamedRange", "description": "Sets/updates the name of the named range."}, {"name": "setRange", "parameters": [{"name": "range", "type": "Range"}], "result": "NamedRange", "description": "Sets/updates the range for this named range."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/range", "name": "Range", "type": "class", "methods": [{"name": "activate", "parameters": [], "result": "Range", "description": "Sets the specified range as the active range, with the top\nleft cell in the range as the current cell."}, {"name": "activateAsCurrentCell", "parameters": [], "result": "Range", "description": "Sets the specified cell as the current cell."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}], "result": "Range", "description": "Adds developer metadata with the specified key to the range."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Range", "description": "Adds developer metadata with the specified key and visibility to the range."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "Range", "description": "Adds developer metadata with the specified key and value to the range."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Range", "description": "Adds developer metadata with the specified key, value, and visibility to the range."}, {"name": "applyColumnBanding", "parameters": [], "result": "Banding", "description": "Applies a default column banding theme to the range."}, {"name": "applyColumnBanding", "parameters": [{"name": "bandingTheme", "type": "BandingTheme"}], "result": "Banding", "description": "Applies a specified column banding theme to the range."}, {"name": "applyColumnBanding", "parameters": [{"name": "bandingTheme", "type": "BandingTheme"}, {"name": "showHeader", "type": "Boolean"}, {"name": "showFooter", "type": "Boolean"}], "result": "Banding", "description": "Applies a specified column banding theme to the range with specified header and footer\nsettings."}, {"name": "applyRowBanding", "parameters": [], "result": "Banding", "description": "Applies a default row banding theme to the range."}, {"name": "applyRowBanding", "parameters": [{"name": "bandingTheme", "type": "BandingTheme"}], "result": "Banding", "description": "Applies a specified row banding theme to the range."}, {"name": "applyRowBanding", "parameters": [{"name": "bandingTheme", "type": "BandingTheme"}, {"name": "showHeader", "type": "Boolean"}, {"name": "showFooter", "type": "Boolean"}], "result": "Banding", "description": "Applies a specified row banding theme to the range with specified header and footer settings."}, {"name": "autoFill", "parameters": [{"name": "destination", "type": "Range"}, {"name": "series", "type": "AutoFillSeries"}], "result": "void", "description": "Fills the destinationRange with data based on the data in this range."}, {"name": "autoFillToNeighbor", "parameters": [{"name": "series", "type": "AutoFillSeries"}], "result": "void", "description": "Calculates a range to fill with new data based on neighboring cells and automatically fills\nthat range with new values based on the data contained in this range."}, {"name": "breakApart", "parameters": [], "result": "Range", "description": "Break any multi-column cells in the range into individual cells again."}, {"name": "canEdit", "parameters": [], "result": "Boolean", "description": "Determines whether the user has permission to edit every cell in the range."}, {"name": "check", "parameters": [], "result": "Range", "description": "Changes the state of the checkboxes in the range to \u201cchecked\u201d."}, {"name": "clear", "parameters": [], "result": "Range", "description": "Clears the range of contents, formats, and data validation rules."}, {"name": "clear", "parameters": [{"name": "options", "type": "Object"}], "result": "Range", "description": "Clears the range of contents, format, data validation rules, and/or comments, as specified with\nthe given advanced options."}, {"name": "clearContent", "parameters": [], "result": "Range", "description": "Clears the content of the range, leaving the formatting intact."}, {"name": "clearDataValidations", "parameters": [], "result": "Range", "description": "Clears the data validation rules for the range."}, {"name": "clearFormat", "parameters": [], "result": "Range", "description": "Clears formatting for this range."}, {"name": "clearNote", "parameters": [], "result": "Range", "description": "Clears the note in the given cell or cells."}, {"name": "collapseGroups", "parameters": [], "result": "Range", "description": "Collapses all groups that are wholly contained within the range."}, {"name": "copyFormatToRange", "parameters": [{"name": "gridId", "type": "Integer"}, {"name": "column", "type": "Integer"}, {"name": "columnEnd", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "rowEnd", "type": "Integer"}], "result": "void", "description": "Copy the formatting of the range to the given location."}, {"name": "copyFormatToRange", "parameters": [{"name": "sheet", "type": "Sheet"}, {"name": "column", "type": "Integer"}, {"name": "columnEnd", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "rowEnd", "type": "Integer"}], "result": "void", "description": "Copy the formatting of the range to the given location."}, {"name": "copyTo", "parameters": [{"name": "destination", "type": "Range"}], "result": "void", "description": "Copies the data from a range of cells to another range of cells."}, {"name": "copyTo", "parameters": [{"name": "destination", "type": "Range"}, {"name": "copyPasteType", "type": "CopyPasteType"}, {"name": "transposed", "type": "Boolean"}], "result": "void", "description": "Copies the data from a range of cells to another range of cells."}, {"name": "copyTo", "parameters": [{"name": "destination", "type": "Range"}, {"name": "options", "type": "Object"}], "result": "void", "description": "Copies the data from a range of cells to another range of cells."}, {"name": "copyValuesToRange", "parameters": [{"name": "gridId", "type": "Integer"}, {"name": "column", "type": "Integer"}, {"name": "columnEnd", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "rowEnd", "type": "Integer"}], "result": "void", "description": "Copy the content of the range to the given location."}, {"name": "copyValuesToRange", "parameters": [{"name": "sheet", "type": "Sheet"}, {"name": "column", "type": "Integer"}, {"name": "columnEnd", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "rowEnd", "type": "Integer"}], "result": "void", "description": "Copy the content of the range to the given location."}, {"name": "createDataSourcePivotTable", "parameters": [{"name": "dataSource", "type": "DataSource"}], "result": "DataSourcePivotTable", "description": "Creates an empty data source pivot table from the data source, anchored at the first cell in\nthis range."}, {"name": "createDataSourceTable", "parameters": [{"name": "dataSource", "type": "DataSource"}], "result": "DataSourceTable", "description": "Creates an empty data source table from the data source, anchored at the first cell in this\nrange."}, {"name": "createDeveloperMetadataFinder", "parameters": [], "result": "DeveloperMetadataFinder", "description": "Returns a DeveloperMetadataFinderApi for finding developer metadata within the scope of this\nrange."}, {"name": "createFilter", "parameters": [], "result": "Filter", "description": "Creates a filter applied to the range."}, {"name": "createPivotTable", "parameters": [{"name": "sourceData", "type": "Range"}], "result": "PivotTable", "description": "Creates an empty pivot table from the specified sourceData anchored at the first cell\nin this range."}, {"name": "createTextFinder", "parameters": [{"name": "findText", "type": "String"}], "result": "TextFinder", "description": "Creates a text finder for the range, which can find and replace text in this range."}, {"name": "deleteCells", "parameters": [{"name": "shiftDimension", "type": "Dimension"}], "result": "void", "description": "Deletes this range of cells."}, {"name": "expandGroups", "parameters": [], "result": "Range", "description": "Expands the collapsed groups whose range or control toggle intersects with this range."}, {"name": "getA1Notation", "parameters": [], "result": "String", "description": "Returns a string description of the range, in A1 notation."}, {"name": "getBackground", "parameters": [], "result": "String", "description": "Returns the background color of the top-left cell in the range (for example, '#ffffff')."}, {"name": "getBackgroundObject", "parameters": [], "result": "Color", "description": "Returns the background color of the top-left cell in the range."}, {"name": "getBackgroundObjects", "parameters": [], "result": "Color[][]", "description": "Returns the background colors of the cells in the range."}, {"name": "getBackgrounds", "parameters": [], "result": "String[][]", "description": "Returns the background colors of the cells in the range (for example, '#ffffff')."}, {"name": "getBandings", "parameters": [], "result": "Banding[]", "description": "Returns all the bandings that are applied to any cells in this range."}, {"name": "getCell", "parameters": [{"name": "row", "type": "Integer"}, {"name": "column", "type": "Integer"}], "result": "Range", "description": "Returns a given cell within a range."}, {"name": "getColumn", "parameters": [], "result": "Integer", "description": "Returns the starting column position for this range."}, {"name": "getDataRegion", "parameters": [], "result": "Range", "description": "Returns a copy of the range expanded in the four cardinal Directions to cover all\nadjacent cells with data in them."}, {"name": "getDataRegion", "parameters": [{"name": "dimension", "type": "Dimension"}], "result": "Range", "description": "Returns a copy of the range expanded Direction.UP and Direction.DOWN if the\nspecified dimension is Dimension.ROWS, or Direction.NEXT and Direction.PREVIOUS if the dimension is Dimension.COLUMNS."}, {"name": "getDataSourceFormula", "parameters": [], "result": "DataSourceFormula", "description": "Returns the DataSourceFormula for the first cell in the range, or null if\nthe cell doesn't contain a data source formula."}, {"name": "getDataSourceFormulas", "parameters": [], "result": "DataSourceFormula[]", "description": "Returns the DataSourceFormulas for the cells in the range."}, {"name": "getDataSourcePivotTables", "parameters": [], "result": "DataSourcePivotTable[]", "description": "Gets all the data source pivot tables intersecting with the range."}, {"name": "getDataSourceTables", "parameters": [], "result": "DataSourceTable[]", "description": "Gets all the data source tables intersecting with the range."}, {"name": "getDataSourceUrl", "parameters": [], "result": "String", "description": "Returns a URL for the data in this range, which can be used to create charts and queries."}, {"name": "getDataTable", "parameters": [], "result": "DataTable", "description": "Return the data inside this object as a DataTable."}, {"name": "getDataTable", "parameters": [{"name": "firstRowIsHeader", "type": "Boolean"}], "result": "DataTable", "description": "Return the data inside this range as a DataTable."}, {"name": "getDataValidation", "parameters": [], "result": "DataValidation", "description": "Returns the data validation rule for the top-left cell in the range."}, {"name": "getDataValidations", "parameters": [], "result": "DataValidation[][]", "description": "Returns the data validation rules for all cells in the range."}, {"name": "getDeveloperMetadata", "parameters": [], "result": "DeveloperMetadata[]", "description": "Get the developer metadata associated with this range."}, {"name": "getDisplayValue", "parameters": [], "result": "String", "description": "Returns the displayed value of the top-left cell in the range."}, {"name": "getDisplayValues", "parameters": [], "result": "String[][]", "description": "Returns the rectangular grid of values for this range."}, {"name": "getFilter", "parameters": [], "result": "Filter", "description": "Returns the filter in the sheet this range belongs to, or null if there is no filter on\nthe sheet."}, {"name": "getFontColor", "parameters": [], "result": "String", "description": "Returns the font color of the cell in the top-left corner of the range, in CSS notation (such\nas '#ffffff' or 'white')."}, {"name": "getFontColorObject", "parameters": [], "result": "Color", "description": "Returns the font color of the cell in the top-left corner of the range."}, {"name": "getFontColorObjects", "parameters": [], "result": "Color[][]", "description": "Returns the font colors of the cells in the range."}, {"name": "getFontColors", "parameters": [], "result": "String[][]", "description": "Returns the font colors of the cells in the range in CSS notation (such as '#ffffff' or\n'white')."}, {"name": "getFontFamilies", "parameters": [], "result": "String[][]", "description": "Returns the font families of the cells in the range."}, {"name": "getFontFamily", "parameters": [], "result": "String", "description": "Returns the font family of the cell in the top-left corner of the range."}, {"name": "getFontLine", "parameters": [], "result": "String", "description": "Gets the line style of the cell in the top-left corner of the range ('underline',\n'line-through', or 'none')."}, {"name": "getFontLines", "parameters": [], "result": "String[][]", "description": "Gets the line style of the cells in the range ('underline', 'line-through', or\n'none')."}, {"name": "getFontSize", "parameters": [], "result": "Integer", "description": "Returns the font size in point size of the cell in the top-left corner of the range."}, {"name": "getFontSizes", "parameters": [], "result": "Integer[][]", "description": "Returns the font sizes of the cells in the range."}, {"name": "getFontStyle", "parameters": [], "result": "String", "description": "Returns the font style ('italic' or 'normal') of the cell in the top-left\ncorner of the range."}, {"name": "getFontStyles", "parameters": [], "result": "String[][]", "description": "Returns the font styles of the cells in the range."}, {"name": "getFontWeight", "parameters": [], "result": "String", "description": "Returns the font weight (normal/bold) of the cell in the top-left corner of the range."}, {"name": "getFontWeights", "parameters": [], "result": "String[][]", "description": "Returns the font weights of the cells in the range."}, {"name": "getFormula", "parameters": [], "result": "String", "description": "Returns the formula (A1 notation) for the top-left cell of the range, or an empty string if the\ncell is empty or doesn't contain a formula."}, {"name": "getFormulaR1C1", "parameters": [], "result": "String", "description": "Returns the formula (R1C1 notation) for a given cell, or null if none."}, {"name": "getFormulas", "parameters": [], "result": "String[][]", "description": "Returns the formulas (A1 notation) for the cells in the range."}, {"name": "getFormulasR1C1", "parameters": [], "result": "String[][]", "description": "Returns the formulas (R1C1 notation) for the cells in the range."}, {"name": "getGridId", "parameters": [], "result": "Integer", "description": "Returns the grid ID of the range's parent sheet."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Returns the height of the range."}, {"name": "getHorizontalAlignment", "parameters": [], "result": "String", "description": "Returns the horizontal alignment of the text (left/center/right) of the cell in the top-left\ncorner of the range."}, {"name": "getHorizontalAlignments", "parameters": [], "result": "String[][]", "description": "Returns the horizontal alignments of the cells in the range."}, {"name": "getLastColumn", "parameters": [], "result": "Integer", "description": "Returns the end column position."}, {"name": "getLastRow", "parameters": [], "result": "Integer", "description": "Returns the end row position."}, {"name": "getMergedRanges", "parameters": [], "result": "Range[]", "description": "Returns an array of Range objects representing merged cells that either are fully\nwithin the current range, or contain at least one cell in the current range."}, {"name": "getNextDataCell", "parameters": [{"name": "direction", "type": "Direction"}], "result": "Range", "description": "Starting at the cell in the first column and row of the range, returns the next cell in the\ngiven direction that is the edge of a contiguous range of cells with data in them or the cell\nat the edge of the spreadsheet in that direction."}, {"name": "getNote", "parameters": [], "result": "String", "description": "Returns the note associated with the given range."}, {"name": "getNotes", "parameters": [], "result": "String[][]", "description": "Returns the notes associated with the cells in the range."}, {"name": "getNumColumns", "parameters": [], "result": "Integer", "description": "Returns the number of columns in this range."}, {"name": "getNumRows", "parameters": [], "result": "Integer", "description": "Returns the number of rows in this range."}, {"name": "getNumberFormat", "parameters": [], "result": "String", "description": "Get the number or date formatting of the top-left cell of the given range."}, {"name": "getNumberFormats", "parameters": [], "result": "String[][]", "description": "Returns the number or date formats for the cells in the range."}, {"name": "getRichTextValue", "parameters": [], "result": "RichTextValue", "description": "Returns the Rich Text value for the top left cell of the range, or null if the cell\nvalue is not text."}, {"name": "getRichTextValues", "parameters": [], "result": "RichTextValue[][]", "description": "Returns the Rich Text values for the cells in the range."}, {"name": "getRow", "parameters": [], "result": "Integer", "description": "Returns the row position for this range."}, {"name": "getRowIndex", "parameters": [], "result": "Integer", "description": "Returns the row position for this range."}, {"name": "getSheet", "parameters": [], "result": "Sheet", "description": "Returns the sheet this range belongs to."}, {"name": "getTextDirection", "parameters": [], "result": "TextDirection", "description": "Returns the text direction for the top left cell of the range."}, {"name": "getTextDirections", "parameters": [], "result": "TextDirection[][]", "description": "Returns the text directions for the cells in the range."}, {"name": "getTextRotation", "parameters": [], "result": "TextRotation", "description": "Returns the text rotation settings for the top left cell of the range."}, {"name": "getTextRotations", "parameters": [], "result": "TextRotation[][]", "description": "Returns the text rotation settings for the cells in the range."}, {"name": "getTextStyle", "parameters": [], "result": "TextStyle", "description": "Returns the text style for the top left cell of the range."}, {"name": "getTextStyles", "parameters": [], "result": "TextStyle[][]", "description": "Returns the text styles for the cells in the range."}, {"name": "getValue", "parameters": [], "result": "Object", "description": "Returns the value of the top-left cell in the range."}, {"name": "getValues", "parameters": [], "result": "Object[][]", "description": "Returns the rectangular grid of values for this range."}, {"name": "getVerticalAlignment", "parameters": [], "result": "String", "description": "Returns the vertical alignment (top/middle/bottom) of the cell in the top-left corner of the\nrange."}, {"name": "getVerticalAlignments", "parameters": [], "result": "String[][]", "description": "Returns the vertical alignments of the cells in the range."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Returns the width of the range in columns."}, {"name": "getWrap", "parameters": [], "result": "Boolean", "description": "Returns whether the text in the cell wraps."}, {"name": "getWrapStrategies", "parameters": [], "result": "WrapStrategy[][]", "description": "Returns the text wrapping strategies for the cells in the range."}, {"name": "getWrapStrategy", "parameters": [], "result": "WrapStrategy", "description": "Returns the text wrapping strategy for the top left cell of the range."}, {"name": "getWraps", "parameters": [], "result": "Boolean[][]", "description": "Returns whether the text in the cells wrap."}, {"name": "insertCells", "parameters": [{"name": "shiftDimension", "type": "Dimension"}], "result": "Range", "description": "Inserts empty cells into this range."}, {"name": "insertCheckboxes", "parameters": [], "result": "Range", "description": "Inserts checkboxes into each cell in the range, configured with true for checked and\nfalse for unchecked."}, {"name": "insertCheckboxes", "parameters": [{"name": "checkedValue", "type": "Object"}], "result": "Range", "description": "Inserts checkboxes into each cell in the range, configured with a custom value for checked and\nthe empty string for unchecked."}, {"name": "insertCheckboxes", "parameters": [{"name": "checkedValue", "type": "Object"}, {"name": "uncheckedValue", "type": "Object"}], "result": "Range", "description": "Inserts checkboxes into each cell in the range, configured with custom values for the checked\nand unchecked states."}, {"name": "isBlank", "parameters": [], "result": "Boolean", "description": "Returns true if the range is totally blank."}, {"name": "isChecked", "parameters": [], "result": "Boolean", "description": "Returns whether all cells in the range have their checkbox state as 'checked'."}, {"name": "isEndColumnBounded", "parameters": [], "result": "Boolean", "description": "Determines whether the end of the range is bound to a particular column."}, {"name": "isEndRowBounded", "parameters": [], "result": "Boolean", "description": "Determines whether the end of the range is bound to a particular row."}, {"name": "isPartOfMerge", "parameters": [], "result": "Boolean", "description": "Returns true if the cells in the current range overlap any merged cells."}, {"name": "isStartColumnBounded", "parameters": [], "result": "Boolean", "description": "Determines whether the start of the range is bound to a particular column."}, {"name": "isStartRowBounded", "parameters": [], "result": "Boolean", "description": "Determines whether the start of the range is bound to a particular row."}, {"name": "merge", "parameters": [], "result": "Range", "description": "Merges the cells in the range together into a single block."}, {"name": "mergeAcross", "parameters": [], "result": "Range", "description": "Merge the cells in the range across the columns of the range."}, {"name": "mergeVertically", "parameters": [], "result": "Range", "description": "Merges the cells in the range together."}, {"name": "moveTo", "parameters": [{"name": "target", "type": "Range"}], "result": "void", "description": "Cut and paste (both format and values) from this range to the target range."}, {"name": "offset", "parameters": [{"name": "rowOffset", "type": "Integer"}, {"name": "columnOffset", "type": "Integer"}], "result": "Range", "description": "Returns a new range that is offset from this range by the given number of rows and columns\n(which can be negative)."}, {"name": "offset", "parameters": [{"name": "rowOffset", "type": "Integer"}, {"name": "columnOffset", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "Range", "description": "Returns a new range that is relative to the current range, whose upper left point is offset\nfrom the current range by the given rows and columns, and with the given height in cells."}, {"name": "offset", "parameters": [{"name": "rowOffset", "type": "Integer"}, {"name": "columnOffset", "type": "Integer"}, {"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Range", "description": "Returns a new range that is relative to the current range, whose upper left point is offset\nfrom the current range by the given rows and columns, and with the given height and width in\ncells."}, {"name": "protect", "parameters": [], "result": "Protection", "description": "Creates an object that can protect the range from being edited except by users who have\npermission."}, {"name": "randomize", "parameters": [], "result": "Range", "description": "Randomizes the order of the rows in the given range."}, {"name": "removeCheckboxes", "parameters": [], "result": "Range", "description": "Removes all checkboxes from the range."}, {"name": "removeDuplicates", "parameters": [], "result": "Range", "description": "Removes rows within this range that contain values that are duplicates of values in any\nprevious row."}, {"name": "removeDuplicates", "parameters": [{"name": "columnsToCompare", "type": "Integer"}], "result": "Range", "description": "Removes rows within this range that contain values in the specified columns that are duplicates\nof values any previous row."}, {"name": "setBackground", "parameters": [{"name": "color", "type": "String"}], "result": "Range", "description": "Sets the background color of all cells in the range in CSS notation (such as '#ffffff'\nor 'white')."}, {"name": "setBackgroundObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Range", "description": "Sets the background color of all cells in the range."}, {"name": "setBackgroundObjects", "parameters": [{"name": "color", "type": "Color"}], "result": "Range", "description": "Sets a rectangular grid of background colors (must match dimensions of this range)."}, {"name": "setBackgroundRGB", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "Range", "description": "Sets the background to the given color using RGB values (integers between 0 and 255 inclusive)."}, {"name": "setBackgrounds", "parameters": [{"name": "color", "type": "String"}], "result": "Range", "description": "Sets a rectangular grid of background colors (must match dimensions of this range)."}, {"name": "setBorder", "parameters": [{"name": "top", "type": "Boolean"}, {"name": "left", "type": "Boolean"}, {"name": "bottom", "type": "Boolean"}, {"name": "right", "type": "Boolean"}, {"name": "vertical", "type": "Boolean"}, {"name": "horizontal", "type": "Boolean"}], "result": "Range", "description": "Sets the border property."}, {"name": "setBorder", "parameters": [{"name": "top", "type": "Boolean"}, {"name": "left", "type": "Boolean"}, {"name": "bottom", "type": "Boolean"}, {"name": "right", "type": "Boolean"}, {"name": "vertical", "type": "Boolean"}, {"name": "horizontal", "type": "Boolean"}, {"name": "color", "type": "String"}, {"name": "style", "type": "BorderStyle"}], "result": "Range", "description": "Sets the border property with color and/or style."}, {"name": "setDataValidation", "parameters": [{"name": "rule", "type": "DataValidation"}], "result": "Range", "description": "Sets one data validation rule for all cells in the range."}, {"name": "setDataValidations", "parameters": [{"name": "rules", "type": "DataValidation"}], "result": "Range", "description": "Sets the data validation rules for all cells in the range."}, {"name": "setFontColor", "parameters": [{"name": "color", "type": "String"}], "result": "Range", "description": "Sets the font color in CSS notation (such as '#ffffff' or 'white')."}, {"name": "setFontColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Range", "description": "Sets the font color of the given range."}, {"name": "setFontColorObjects", "parameters": [{"name": "colors", "type": "Color"}], "result": "Range", "description": "Sets a rectangular grid of font colors (must match dimensions of this range)."}, {"name": "setFontColors", "parameters": [{"name": "colors", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font colors (must match dimensions of this range)."}, {"name": "setFontFamilies", "parameters": [{"name": "fontFamilies", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font families (must match dimensions of this range)."}, {"name": "setFontFamily", "parameters": [{"name": "fontFamily", "type": "String"}], "result": "Range", "description": "Sets the font family, such as \"Arial\" or \"Helvetica\"."}, {"name": "setFontLine", "parameters": [{"name": "fontLine", "type": "String"}], "result": "Range", "description": "Sets the font line style of the given range ('underline', 'line-through', or\n'none')."}, {"name": "setFontLines", "parameters": [{"name": "fontLines", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of line styles (must match dimensions of this range)."}, {"name": "setFontSize", "parameters": [{"name": "size", "type": "Integer"}], "result": "Range", "description": "Sets the font size, with the size being the point size to use."}, {"name": "setFontSizes", "parameters": [{"name": "sizes", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font sizes (must match dimensions of this range)."}, {"name": "setFontStyle", "parameters": [{"name": "fontStyle", "type": "String"}], "result": "Range", "description": "Set the font style for the given range ('italic' or 'normal')."}, {"name": "setFontStyles", "parameters": [{"name": "fontStyles", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font styles (must match dimensions of this range)."}, {"name": "setFontWeight", "parameters": [{"name": "fontWeight", "type": "String"}], "result": "Range", "description": "Set the font weight for the given range (normal/bold)."}, {"name": "setFontWeights", "parameters": [{"name": "fontWeights", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font weights (must match dimensions of this range)."}, {"name": "setFormula", "parameters": [{"name": "formula", "type": "String"}], "result": "Range", "description": "Updates the formula for this range."}, {"name": "setFormulaR1C1", "parameters": [{"name": "formula", "type": "String"}], "result": "Range", "description": "Updates the formula for this range."}, {"name": "setFormulas", "parameters": [{"name": "formulas", "type": "String"}], "result": "Range", "description": "Sets a rectangular grid of formulas (must match dimensions of this range)."}, {"name": "setFormulasR1C1", "parameters": [{"name": "formulas", "type": "String"}], "result": "Range", "description": "Sets a rectangular grid of formulas (must match dimensions of this range)."}, {"name": "setHorizontalAlignment", "parameters": [{"name": "alignment", "type": "String"}], "result": "Range", "description": "Set the horizontal (left to right) alignment for the given range (left/center/right)."}, {"name": "setHorizontalAlignments", "parameters": [{"name": "alignments", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of horizontal alignments."}, {"name": "setNote", "parameters": [{"name": "note", "type": "String"}], "result": "Range", "description": "Sets the note to the given value."}, {"name": "setNotes", "parameters": [{"name": "notes", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of notes (must match dimensions of this range)."}, {"name": "setNumberFormat", "parameters": [{"name": "numberFormat", "type": "String"}], "result": "Range", "description": "Sets the number or date format to the given formatting string."}, {"name": "setNumberFormats", "parameters": [{"name": "numberFormats", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of number or date formats (must match dimensions of this range)."}, {"name": "setRichTextValue", "parameters": [{"name": "value", "type": "RichTextValue"}], "result": "Range", "description": "Sets the Rich Text value for the cells in the range."}, {"name": "setRichTextValues", "parameters": [{"name": "values", "type": "RichTextValue"}], "result": "Range", "description": "Sets a rectangular grid of Rich Text values."}, {"name": "setShowHyperlink", "parameters": [{"name": "showHyperlink", "type": "Boolean"}], "result": "Range", "description": "Sets whether or not the range should show hyperlinks."}, {"name": "setTextDirection", "parameters": [{"name": "direction", "type": "TextDirection"}], "result": "Range", "description": "Sets the text direction for the cells in the range."}, {"name": "setTextDirections", "parameters": [{"name": "directions", "type": "TextDirection"}], "result": "Range", "description": "Sets a rectangular grid of text directions."}, {"name": "setTextRotation", "parameters": [{"name": "degrees", "type": "Integer"}], "result": "Range", "description": "Sets the text rotation settings for the cells in the range."}, {"name": "setTextRotation", "parameters": [{"name": "rotation", "type": "TextRotation"}], "result": "Range", "description": "Sets the text rotation settings for the cells in the range."}, {"name": "setTextRotations", "parameters": [{"name": "rotations", "type": "TextRotation"}], "result": "Range", "description": "Sets a rectangular grid of text rotations."}, {"name": "setTextStyle", "parameters": [{"name": "style", "type": "TextStyle"}], "result": "Range", "description": "Sets the text style for the cells in the range."}, {"name": "setTextStyles", "parameters": [{"name": "styles", "type": "TextStyle"}], "result": "Range", "description": "Sets a rectangular grid of text styles."}, {"name": "setValue", "parameters": [{"name": "value", "type": "Object"}], "result": "Range", "description": "Sets the value of the range."}, {"name": "setValues", "parameters": [{"name": "values", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of values (must match dimensions of this range)."}, {"name": "setVerticalAlignment", "parameters": [{"name": "alignment", "type": "String"}], "result": "Range", "description": "Set the vertical (top to bottom) alignment for the given range (top/middle/bottom)."}, {"name": "setVerticalAlignments", "parameters": [{"name": "alignments", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of vertical alignments (must match dimensions of this range)."}, {"name": "setVerticalText", "parameters": [{"name": "isVertical", "type": "Boolean"}], "result": "Range", "description": "Sets whether or not to stack the text for the cells in the range."}, {"name": "setWrap", "parameters": [{"name": "isWrapEnabled", "type": "Boolean"}], "result": "Range", "description": "Set the cell wrap of the given range."}, {"name": "setWrapStrategies", "parameters": [{"name": "strategies", "type": "WrapStrategy"}], "result": "Range", "description": "Sets a rectangular grid of wrap strategies."}, {"name": "setWrapStrategy", "parameters": [{"name": "strategy", "type": "WrapStrategy"}], "result": "Range", "description": "Sets the text wrapping strategy for the cells in the range."}, {"name": "setWraps", "parameters": [{"name": "isWrapEnabled", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of word wrap policies (must match dimensions of this range)."}, {"name": "shiftColumnGroupDepth", "parameters": [{"name": "delta", "type": "Integer"}], "result": "Range", "description": "Changes the column grouping depth of the range by the specified amount."}, {"name": "shiftRowGroupDepth", "parameters": [{"name": "delta", "type": "Integer"}], "result": "Range", "description": "Changes the row grouping depth of the range by the specified amount."}, {"name": "sort", "parameters": [{"name": "sortSpecObj", "type": "Object"}], "result": "Range", "description": "Sorts the cells in the given range, by column and order specified."}, {"name": "splitTextToColumns", "parameters": [], "result": "void", "description": "Splits a column of text into multiple columns based on an auto-detected delimiter."}, {"name": "splitTextToColumns", "parameters": [{"name": "delimiter", "type": "String"}], "result": "void", "description": "Splits a column of text into multiple columns using the specified string as a custom delimiter."}, {"name": "splitTextToColumns", "parameters": [{"name": "delimiter", "type": "TextToColumnsDelimiter"}], "result": "void", "description": "Splits a column of text into multiple columns based on the specified delimiter."}, {"name": "trimWhitespace", "parameters": [], "result": "Range", "description": "Trims the whitespace (such as spaces, tabs, or new lines) in every cell in this range."}, {"name": "uncheck", "parameters": [], "result": "Range", "description": "Changes the state of the checkboxes in the range to \u201cunchecked\u201d."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/group", "name": "Group", "type": "class", "methods": [{"name": "collapse", "parameters": [], "result": "Group", "description": "Collapses this group."}, {"name": "expand", "parameters": [], "result": "Group", "description": "Expands this group."}, {"name": "getControlIndex", "parameters": [], "result": "Integer", "description": "Returns the control toggle index of this group."}, {"name": "getDepth", "parameters": [], "result": "Integer", "description": "Returns the depth of this group."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Returns the range over which this group exists."}, {"name": "isCollapsed", "parameters": [], "result": "Boolean", "description": "Returns true if this group is collapsed."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this group from the sheet, reducing the group depth of the range by\none."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/base/color-type.html", "name": "ColorType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A color type that is not supported."}, {"name": "RGB", "type": "Enum", "url": "", "description": "A color defined by red, green, blue color channels."}, {"name": "THEME", "type": "Enum", "url": "", "description": "A color that refers to an entry in the theme's color scheme."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria-builder", "name": "FilterCriteriaBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "FilterCriteria", "description": "Constructs a filter criteria from the settings supplied to the builder."}, {"name": "copy", "parameters": [], "result": "FilterCriteriaBuilder", "description": "Creates a builder for a filter criteria based on this filter criteria's settings."}, {"name": "getCriteriaType", "parameters": [], "result": "BooleanCriteria", "description": "Returns the boolean criteria type as defined in the BooleanCriteria enum."}, {"name": "getCriteriaValues", "parameters": [], "result": "Object[]", "description": "Returns an array of arguments for the boolean criteria."}, {"name": "getHiddenValues", "parameters": [], "result": "String[]", "description": "Returns the values to hide."}, {"name": "getVisibleBackgroundColor", "parameters": [], "result": "Color", "description": "Returns the background color used as a filter criteria."}, {"name": "getVisibleForegroundColor", "parameters": [], "result": "Color", "description": "Returns the foreground color used as a filter criteria."}, {"name": "getVisibleValues", "parameters": [], "result": "String[]", "description": "Returns the values to show."}, {"name": "setHiddenValues", "parameters": [{"name": "values", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the values to hide."}, {"name": "setVisibleBackgroundColor", "parameters": [{"name": "visibleBackgroundColor", "type": "Color"}], "result": "FilterCriteriaBuilder", "description": "Sets the background color used as a filter criteria."}, {"name": "setVisibleForegroundColor", "parameters": [{"name": "visibleForegroundColor", "type": "Color"}], "result": "FilterCriteriaBuilder", "description": "Sets the foreground color used as a filter criteria."}, {"name": "setVisibleValues", "parameters": [{"name": "values", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the values to show."}, {"name": "whenCellEmpty", "parameters": [], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell is empty."}, {"name": "whenCellNotEmpty", "parameters": [], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell is not empty."}, {"name": "whenDateAfter", "parameters": [{"name": "date", "type": "Date"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell date is after the specified value."}, {"name": "whenDateAfter", "parameters": [{"name": "date", "type": "RelativeDate"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell date is after the specified relative\ndate."}, {"name": "whenDateBefore", "parameters": [{"name": "date", "type": "Date"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell date is before the specified date."}, {"name": "whenDateBefore", "parameters": [{"name": "date", "type": "RelativeDate"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where a cell date is before the specified relative date."}, {"name": "whenDateEqualTo", "parameters": [{"name": "date", "type": "Date"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where a cell date is equal to the specified date."}, {"name": "whenDateEqualTo", "parameters": [{"name": "date", "type": "RelativeDate"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where a cell date is equal to the specified relative\ndate."}, {"name": "whenDateEqualToAny", "parameters": [{"name": "dates", "type": "Date"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell date is equal to any of the specified\ndates."}, {"name": "whenDateNotEqualTo", "parameters": [{"name": "date", "type": "Date"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell date is not equal to the specified date."}, {"name": "whenDateNotEqualToAny", "parameters": [{"name": "dates", "type": "Date"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell date is not equal to any of the specified\ndates."}, {"name": "whenFormulaSatisfied", "parameters": [{"name": "formula", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the specified formula (such as =B:B<C:C)\nevaluates to true."}, {"name": "whenNumberBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is falls between, or is either of,\ntwo specified numbers."}, {"name": "whenNumberEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is equal to the specified value."}, {"name": "whenNumberEqualToAny", "parameters": [{"name": "numbers", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is equal to any of the specified\nnumbers."}, {"name": "whenNumberGreaterThan", "parameters": [{"name": "number", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is greater than the specified\nvalue."}, {"name": "whenNumberGreaterThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is greater than or equal to the\nspecified value."}, {"name": "whenNumberLessThan", "parameters": [{"name": "number", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the conditional conditional format rule to show cells where the cell number is less than\nthe specified value."}, {"name": "whenNumberLessThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is less than or equal to the\nspecified value."}, {"name": "whenNumberNotBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number does not fall between, and is\nneither of, two specified numbers."}, {"name": "whenNumberNotEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is not equal to the specified\nvalue."}, {"name": "whenNumberNotEqualToAny", "parameters": [{"name": "numbers", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is not equal to any of the\nspecified numbers."}, {"name": "whenTextContains", "parameters": [{"name": "text", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text contains the specified text."}, {"name": "whenTextDoesNotContain", "parameters": [{"name": "text", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text does not contain the specified text."}, {"name": "whenTextEndsWith", "parameters": [{"name": "text", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text ends with the specified text."}, {"name": "whenTextEqualTo", "parameters": [{"name": "text", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text is equal to the specified text."}, {"name": "whenTextEqualToAny", "parameters": [{"name": "texts", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text is equal to any of the specified\nvalues."}, {"name": "whenTextNotEqualTo", "parameters": [{"name": "text", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text is not equal to the specified text."}, {"name": "whenTextNotEqualToAny", "parameters": [{"name": "texts", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text is not equal to any of the specified\nvalues."}, {"name": "whenTextStartsWith", "parameters": [{"name": "text", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text starts with the specified text."}, {"name": "withCriteria", "parameters": [{"name": "criteria", "type": "BooleanCriteria"}, {"name": "args", "type": "Object"}], "result": "FilterCriteriaBuilder", "description": "Sets the boolean criteria to criteria defined by BooleanCriteria values, typically\ntaken from the criteria and arguments of an existing criteria."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/filter-criteria", "name": "FilterCriteria", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "FilterCriteriaBuilder", "description": "Creates a builder for a filter criteria based on this filter criteria's settings."}, {"name": "getCriteriaType", "parameters": [], "result": "BooleanCriteria", "description": "Returns the boolean criteria type as defined in the BooleanCriteria enum."}, {"name": "getCriteriaValues", "parameters": [], "result": "Object[]", "description": "Returns an array of arguments for the boolean criteria."}, {"name": "getHiddenValues", "parameters": [], "result": "String[]", "description": "Returns the values to hide."}, {"name": "getVisibleBackgroundColor", "parameters": [], "result": "Color", "description": "Returns the background color used as a filter criteria."}, {"name": "getVisibleForegroundColor", "parameters": [], "result": "Color", "description": "Returns the foreground color used as a filter criteria."}, {"name": "getVisibleValues", "parameters": [], "result": "String[]", "description": "Returns the values to show."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/pivot-group", "name": "PivotGroup", "type": "class", "methods": [{"name": "addManualGroupingRule", "parameters": [{"name": "groupName", "type": "String"}, {"name": "groupMembers", "type": "Object"}], "result": "PivotGroup", "description": "Adds a manual grouping rule for this pivot group."}, {"name": "areLabelsRepeated", "parameters": [], "result": "Boolean", "description": "Returns whether labels are displayed as repeated."}, {"name": "clearGroupingRule", "parameters": [], "result": "PivotGroup", "description": "Removes any grouping rules from this pivot group."}, {"name": "clearSort", "parameters": [], "result": "PivotGroup", "description": "Removes any sorting applied to this group."}, {"name": "getDateTimeGroupingRule", "parameters": [], "result": "DateTimeGroupingRule", "description": "Returns the date-time grouping rule on the pivot group, or null if no date-time\ngrouping rule is set."}, {"name": "getDimension", "parameters": [], "result": "Dimension", "description": "Returns whether this is a row or column group."}, {"name": "getGroupLimit", "parameters": [], "result": "PivotGroupLimit", "description": "Returns the pivot group limit on the pivot group."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Returns the index of this pivot group in the current group order."}, {"name": "getPivotTable", "parameters": [], "result": "PivotTable", "description": "Returns the PivotTable which this grouping belongs to."}, {"name": "getSourceDataColumn", "parameters": [], "result": "Integer", "description": "Returns the number of the source data column this group summarizes."}, {"name": "getSourceDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Returns the data source column the pivot group operates on."}, {"name": "hideRepeatedLabels", "parameters": [], "result": "PivotGroup", "description": "Hides repeated labels for this grouping."}, {"name": "isSortAscending", "parameters": [], "result": "Boolean", "description": "Returns true if the sort is ascending, returns false if the sort order is\ndescending."}, {"name": "moveToIndex", "parameters": [{"name": "index", "type": "Integer"}], "result": "PivotGroup", "description": "Moves this group to the specified position in the current list of row or column groups."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this pivot group from the table."}, {"name": "removeManualGroupingRule", "parameters": [{"name": "groupName", "type": "String"}], "result": "PivotGroup", "description": "Removes the manual grouping rule with the specified groupName."}, {"name": "resetDisplayName", "parameters": [], "result": "PivotGroup", "description": "Resets the display name of this group in the pivot table to its default value."}, {"name": "setDateTimeGroupingRule", "parameters": [{"name": "dateTimeGroupingRuleType", "type": "DateTimeGroupingRuleType"}], "result": "PivotGroup", "description": "Sets the date-time grouping rule on the pivot group."}, {"name": "setDisplayName", "parameters": [{"name": "name", "type": "String"}], "result": "PivotGroup", "description": "Sets the display name of this group in the pivot table."}, {"name": "setGroupLimit", "parameters": [{"name": "countLimit", "type": "Integer"}], "result": "PivotGroup", "description": "Sets the pivot group limit on the pivot group."}, {"name": "setHistogramGroupingRule", "parameters": [{"name": "minValue", "type": "Integer"}, {"name": "maxValue", "type": "Integer"}, {"name": "intervalSize", "type": "Integer"}], "result": "PivotGroup", "description": "Sets a histogram grouping rule for this pivot group."}, {"name": "showRepeatedLabels", "parameters": [], "result": "PivotGroup", "description": "When there is more than one row or column grouping, this method displays this grouping's label\nfor each entry of the subsequent grouping."}, {"name": "showTotals", "parameters": [{"name": "showTotals", "type": "Boolean"}], "result": "PivotGroup", "description": "Sets whether to show total values for this pivot group in the table."}, {"name": "sortAscending", "parameters": [], "result": "PivotGroup", "description": "Sets the sort order to be ascending."}, {"name": "sortBy", "parameters": [{"name": "value", "type": "PivotValue"}, {"name": "oppositeGroupValues", "type": "Object"}], "result": "PivotGroup", "description": "Sorts this group by the specified PivotValue for the values from the oppositeGroupValues."}, {"name": "sortDescending", "parameters": [], "result": "PivotGroup", "description": "Sets the sort order to be descending."}, {"name": "totalsAreShown", "parameters": [], "result": "Boolean", "description": "Returns whether total values are currently shown for this pivot group."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/gradient-condition", "name": "GradientCondition", "type": "class", "methods": [{"name": "getMaxColor", "parameters": [], "result": "String", "description": "Gets the color set for the maximum value of this gradient condition."}, {"name": "getMaxColorObject", "parameters": [], "result": "Color", "description": "Gets the color set for the maximum value of this gradient condition."}, {"name": "getMaxType", "parameters": [], "result": "InterpolationType", "description": "Gets the interpolation type for the maximum value of this gradient condition."}, {"name": "getMaxValue", "parameters": [], "result": "String", "description": "Gets the max value of this gradient condition."}, {"name": "getMidColor", "parameters": [], "result": "String", "description": "Gets the color set for the mid-point value of this gradient condition."}, {"name": "getMidColorObject", "parameters": [], "result": "Color", "description": "Gets the color set for the midpoint value of this gradient condition."}, {"name": "getMidType", "parameters": [], "result": "InterpolationType", "description": "Gets the interpolation type for the mid-point value of this gradient condition."}, {"name": "getMidValue", "parameters": [], "result": "String", "description": "Gets the mid-point value of this gradient condition."}, {"name": "getMinColor", "parameters": [], "result": "String", "description": "Gets the color set for the minimum value of this gradient condition."}, {"name": "getMinColorObject", "parameters": [], "result": "Color", "description": "Gets the color set for the minimum value of this gradient condition."}, {"name": "getMinType", "parameters": [], "result": "InterpolationType", "description": "Gets the interpolation type for the minimum value of this gradient condition."}, {"name": "getMinValue", "parameters": [], "result": "String", "description": "Gets the minimum value of this gradient condition."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-table-chart-builder", "name": "EmbeddedTableChartBuilder", "type": "class", "methods": [{"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "enablePaging", "parameters": [{"name": "enablePaging", "type": "Boolean"}], "result": "EmbeddedTableChartBuilder", "description": "Sets whether to enable paging through the data."}, {"name": "enablePaging", "parameters": [{"name": "pageSize", "type": "Integer"}], "result": "EmbeddedTableChartBuilder", "description": "Enables paging and sets the number of rows in each page."}, {"name": "enablePaging", "parameters": [{"name": "pageSize", "type": "Integer"}, {"name": "startPage", "type": "Integer"}], "result": "EmbeddedTableChartBuilder", "description": "Enables paging, sets the number of rows in each page and the first table page to display (page\nnumbers are zero based)."}, {"name": "enableRtlTable", "parameters": [{"name": "rtlEnabled", "type": "Boolean"}], "result": "EmbeddedTableChartBuilder", "description": "Adds basic support for right-to-left languages (such as Arabic or Hebrew) by reversing the\ncolumn order of the table, so that column zero is the right-most column, and the last column is\nthe left-most column."}, {"name": "enableSorting", "parameters": [{"name": "enableSorting", "type": "Boolean"}], "result": "EmbeddedTableChartBuilder", "description": "Sets whether to sort columns when the user clicks a column heading."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setFirstRowNumber", "parameters": [{"name": "number", "type": "Integer"}], "result": "EmbeddedTableChartBuilder", "description": "Sets the row number for the first row in the data table."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setInitialSortingAscending", "parameters": [{"name": "column", "type": "Integer"}], "result": "EmbeddedTableChartBuilder", "description": "Sets the index of the column according to which the table should be initially sorted\n(ascending)."}, {"name": "setInitialSortingDescending", "parameters": [{"name": "column", "type": "Integer"}], "result": "EmbeddedTableChartBuilder", "description": "Sets the index of the column according to which the table should be initially sorted\n(descending)."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "showRowNumberColumn", "parameters": [{"name": "showRowNumber", "type": "Boolean"}], "result": "EmbeddedTableChartBuilder", "description": "Sets whether to show the row number as the first column of the table."}, {"name": "useAlternatingRowStyle", "parameters": [{"name": "alternate", "type": "Boolean"}], "result": "EmbeddedTableChartBuilder", "description": "Sets whether alternating color style is assigned to odd and even rows of a table chart."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/filter", "name": "Filter", "type": "class", "methods": [{"name": "getColumnFilterCriteria", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "FilterCriteria", "description": "Gets the filter criteria on the specified column, or null if no filter criteria is set."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Gets the range this filter is applied to."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this filter."}, {"name": "removeColumnFilterCriteria", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Filter", "description": "Removes the filter criteria from the specified column."}, {"name": "setColumnFilterCriteria", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "filterCriteria", "type": "FilterCriteria"}], "result": "Filter", "description": "Sets the filter criteria on the specified column."}, {"name": "sort", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "ascending", "type": "Boolean"}], "result": "Filter", "description": "Sorts the filtered range by the specified column, excluding the first row (the header row) in\nthe range this filter is applied to."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-scatter-chart-builder", "name": "EmbeddedScatterChartBuilder", "type": "class", "methods": [{"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPointStyle", "parameters": [{"name": "style", "type": "PointStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the style for points in the line."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisLogScale", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Makes the horizontal axis into a logarithmic scale (requires all values to be positive)."}, {"name": "setXAxisRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the range for the horizontal axis of the chart."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedScatterChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisLogScale", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Makes the vertical axis into a logarithmic scale (requires all values to be positive)."}, {"name": "setYAxisRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the range for the vertical axis of the chart."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedScatterChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the vertical axis title text style."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-line-chart-builder", "name": "EmbeddedLineChartBuilder", "type": "class", "methods": [{"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setCurveStyle", "parameters": [{"name": "style", "type": "CurveStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the style to use for curves in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPointStyle", "parameters": [{"name": "style", "type": "PointStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the style for points in the line."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the range for the chart."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedLineChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedLineChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-pie-chart-builder", "name": "EmbeddedPieChartBuilder", "type": "class", "methods": [{"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "set3D", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart to be three-dimensional."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedPieChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedPieChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedPieChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedPieChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedPieChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedPieChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-combo-chart-builder", "name": "EmbeddedComboChartBuilder", "type": "class", "methods": [{"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedComboChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedComboChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-histogram-chart-builder", "name": "EmbeddedHistogramChartBuilder", "type": "class", "methods": [{"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedHistogramChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedHistogramChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-column-chart-builder", "name": "EmbeddedColumnChartBuilder", "type": "class", "methods": [{"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedColumnChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedColumnChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart", "name": "EmbeddedChart", "type": "class", "methods": [{"name": "asDataSourceChart", "parameters": [], "result": "DataSourceChart", "description": "Casts to a data source chart instance if the chart is a data source chart, or null\notherwise."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getChartId", "parameters": [], "result": "Integer", "description": "Returns a stable identifier for the chart that is unique across the spreadsheet containing the\nchart or null if the chart is not in a spreadsheet."}, {"name": "getContainerInfo", "parameters": [], "result": "ContainerInfo", "description": "Returns information about where the chart is positioned within a sheet."}, {"name": "getHiddenDimensionStrategy", "parameters": [], "result": "ChartHiddenDimensionStrategy", "description": "Returns the strategy to use for handling hidden rows and columns."}, {"name": "getMergeStrategy", "parameters": [], "result": "ChartMergeStrategy", "description": "Returns the merge strategy used when more than one range exists."}, {"name": "getNumHeaders", "parameters": [], "result": "Integer", "description": "Returns the number of rows or columns the range that are treated as headers."}, {"name": "getOptions", "parameters": [], "result": "ChartOptions", "description": "Returns the options for this chart, such as height, colors, and axes."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns the ranges that this chart uses as a data source."}, {"name": "getTransposeRowsAndColumns", "parameters": [], "result": "Boolean", "description": "If true, the rows and columns used to populate the chart are switched."}, {"name": "modify", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Returns an EmbeddedChartBuilder that can be used to modify this chart."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-bar-chart-builder", "name": "EmbeddedBarChartBuilder", "type": "class", "methods": [{"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "reverseDirection", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Reverses the direction in which the bars grow along the horizontal axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedBarChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedBarChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/drawing", "name": "Drawing", "type": "class", "methods": [{"name": "getContainerInfo", "parameters": [], "result": "ContainerInfo", "description": "Gets information about where the drawing is positioned in the sheet."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Returns the actual height of this drawing in pixels."}, {"name": "getOnAction", "parameters": [], "result": "String", "description": "Returns the name of the macro attached to this drawing."}, {"name": "getSheet", "parameters": [], "result": "Sheet", "description": "Returns the sheet this drawing appears on."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Returns the actual width of this drawing in pixels."}, {"name": "getZIndex", "parameters": [], "result": "Number", "description": "Returns the z-index of this drawing."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes this drawing from the spreadsheet."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Integer"}], "result": "Drawing", "description": "Sets the actual height of this drawing in pixels."}, {"name": "setOnAction", "parameters": [{"name": "macroName", "type": "String"}], "result": "Drawing", "description": "Assigns a macro function to this drawing."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "Drawing", "description": "Sets the position where the drawing appears on the sheet."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "Drawing", "description": "Sets the actual width of this drawing in pixels."}, {"name": "setZIndex", "parameters": [{"name": "zIndex", "type": "Number"}], "result": "Drawing", "description": "Sets the z-index of this drawing."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-location", "name": "DeveloperMetadataLocation", "type": "class", "methods": [{"name": "getColumn", "parameters": [], "result": "Range", "description": "Returns the Range for the column location of this metadata, or null if the\nlocation type is not DeveloperMetadataLocationType.COLUMN."}, {"name": "getLocationType", "parameters": [], "result": "DeveloperMetadataLocationType", "description": "Gets the type of location."}, {"name": "getRow", "parameters": [], "result": "Range", "description": "Returns the Range for the row location of this metadata, or null if the\nlocation type is not DeveloperMetadataLocationType.ROW."}, {"name": "getSheet", "parameters": [], "result": "Sheet", "description": "Returns the Sheet location of this metadata, or null if the location type is\nnot DeveloperMetadataLocationType.SHEET."}, {"name": "getSpreadsheet", "parameters": [], "result": "Spreadsheet", "description": "Returns the Spreadsheet location of this metadata, or null if the location\ntype is not DeveloperMetadataLocationType.SPREADSHEET."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/date-time-grouping-rule", "name": "DateTimeGroupingRule", "type": "class", "methods": [{"name": "getRuleType", "parameters": [], "result": "DateTimeGroupingRuleType", "description": "Gets the type of the date-time grouping rule."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-area-chart-builder", "name": "EmbeddedAreaChartBuilder", "type": "class", "methods": [{"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPointStyle", "parameters": [{"name": "style", "type": "PointStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the style for points in the line."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedAreaChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedAreaChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/embedded-chart-builder", "name": "EmbeddedChartBuilder", "type": "class", "methods": [{"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata", "name": "DeveloperMetadata", "type": "class", "methods": [{"name": "getId", "parameters": [], "result": "Integer", "description": "Returns the unique ID associated with this developer metadata."}, {"name": "getKey", "parameters": [], "result": "String", "description": "Returns the key associated with this developer metadata."}, {"name": "getLocation", "parameters": [], "result": "DeveloperMetadataLocation", "description": "Returns the location of this developer metadata."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Returns the value associated with this developer metadata, or null if this metadata has\nno value."}, {"name": "getVisibility", "parameters": [], "result": "DeveloperMetadataVisibility", "description": "Returns the visibility of this developer metadata."}, {"name": "moveToColumn", "parameters": [{"name": "column", "type": "Range"}], "result": "DeveloperMetadata", "description": "Moves this developer metadata to the specified column."}, {"name": "moveToRow", "parameters": [{"name": "row", "type": "Range"}], "result": "DeveloperMetadata", "description": "Moves this developer metadata to the specified row."}, {"name": "moveToSheet", "parameters": [{"name": "sheet", "type": "Sheet"}], "result": "DeveloperMetadata", "description": "Moves this developer metadata to the specified sheet."}, {"name": "moveToSpreadsheet", "parameters": [], "result": "DeveloperMetadata", "description": "Moves this developer metadata to the top-level spreadsheet."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes this metadata."}, {"name": "setKey", "parameters": [{"name": "key", "type": "String"}], "result": "DeveloperMetadata", "description": "Sets the key of this developer metadata to the specified value."}, {"name": "setValue", "parameters": [{"name": "value", "type": "String"}], "result": "DeveloperMetadata", "description": "Sets the value associated with this developer metadata to the specified value."}, {"name": "setVisibility", "parameters": [{"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "DeveloperMetadata", "description": "Sets the visibility of this developer metadata to the specified visibility."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation", "name": "DataValidation", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "DataValidationBuilder", "description": "Creates a builder for a data validation rule based on this rule's settings."}, {"name": "getAllowInvalid", "parameters": [], "result": "Boolean", "description": "Returns true if the rule shows a warning when input fails data validation, or false if it rejects the input entirely."}, {"name": "getCriteriaType", "parameters": [], "result": "DataValidationCriteria", "description": "Gets the rule's criteria type as defined in the DataValidationCriteria enum."}, {"name": "getCriteriaValues", "parameters": [], "result": "Object[]", "description": "Gets an array of arguments for the rule's criteria."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the rule's help text, or null if no help text is set."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table-filter", "name": "DataSourceTableFilter", "type": "class", "methods": [{"name": "getDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Returns the data source column this filter applies to."}, {"name": "getDataSourceTable", "parameters": [], "result": "DataSourceTable", "description": "Returns the DataSourceTable that this filter belongs to."}, {"name": "getFilterCriteria", "parameters": [], "result": "FilterCriteria", "description": "Returns the filter criteria for this filter."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this filter from the data source object."}, {"name": "setFilterCriteria", "parameters": [{"name": "filterCriteria", "type": "FilterCriteria"}], "result": "DataSourceTableFilter", "description": "Sets the filter criteria for this filter."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table-column", "name": "DataSourceTableColumn", "type": "class", "methods": [{"name": "getDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Gets the data souce column."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the column from the DataSourceTable."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-validation-builder", "name": "DataValidationBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "DataValidation", "description": "Constructs a data validation rule from the settings applied to the builder."}, {"name": "copy", "parameters": [], "result": "DataValidationBuilder", "description": "Creates a builder for a data validation rule based on this rule's settings."}, {"name": "getAllowInvalid", "parameters": [], "result": "Boolean", "description": "Returns true if the rule shows a warning when input fails data validation, or false if it rejects the input entirely."}, {"name": "getCriteriaType", "parameters": [], "result": "DataValidationCriteria", "description": "Gets the rule's criteria type as defined in the DataValidationCriteria enum."}, {"name": "getCriteriaValues", "parameters": [], "result": "Object[]", "description": "Gets an array of arguments for the rule's criteria."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the rule's help text, or null if no help text is set."}, {"name": "requireCheckbox", "parameters": [], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is a boolean value; this value is\nrendered as a checkbox."}, {"name": "requireCheckbox", "parameters": [{"name": "checkedValue", "type": "Object"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is the specified value or blank."}, {"name": "requireCheckbox", "parameters": [{"name": "checkedValue", "type": "Object"}, {"name": "uncheckedValue", "type": "Object"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is one of the specified values."}, {"name": "requireDate", "parameters": [], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date."}, {"name": "requireDateAfter", "parameters": [{"name": "date", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date after the given value."}, {"name": "requireDateBefore", "parameters": [{"name": "date", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date before the given value."}, {"name": "requireDateBetween", "parameters": [{"name": "start", "type": "Date"}, {"name": "end", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date that falls between, or is either of, two\nspecified dates."}, {"name": "requireDateEqualTo", "parameters": [{"name": "date", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date equal to the given value."}, {"name": "requireDateNotBetween", "parameters": [{"name": "start", "type": "Date"}, {"name": "end", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date that does not fall between, and is neither of,\ntwo specified dates."}, {"name": "requireDateOnOrAfter", "parameters": [{"name": "date", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date on or after the given value."}, {"name": "requireDateOnOrBefore", "parameters": [{"name": "date", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date on or before the given value."}, {"name": "requireFormulaSatisfied", "parameters": [{"name": "formula", "type": "String"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the given formula evaluates to true."}, {"name": "requireNumberBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number that falls between, or is either of, two\nspecified numbers."}, {"name": "requireNumberEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number equal to the given value."}, {"name": "requireNumberGreaterThan", "parameters": [{"name": "number", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number greater than the given value."}, {"name": "requireNumberGreaterThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number greater than or equal to the given value."}, {"name": "requireNumberLessThan", "parameters": [{"name": "number", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number less than the given value."}, {"name": "requireNumberLessThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number less than or equal to the given value."}, {"name": "requireNumberNotBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number that does not fall between, and is neither\nof, two specified numbers."}, {"name": "requireNumberNotEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number not equal to the given value."}, {"name": "requireTextContains", "parameters": [{"name": "text", "type": "String"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input contains the given value."}, {"name": "requireTextDoesNotContain", "parameters": [{"name": "text", "type": "String"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input does not contain the given value."}, {"name": "requireTextEqualTo", "parameters": [{"name": "text", "type": "String"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is equal to the given value."}, {"name": "requireTextIsEmail", "parameters": [], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is in the form of an email address."}, {"name": "requireTextIsUrl", "parameters": [], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is in the form of a URL."}, {"name": "requireValueInList", "parameters": [{"name": "values", "type": "String"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is equal to one of the given values."}, {"name": "requireValueInList", "parameters": [{"name": "values", "type": "String"}, {"name": "showDropdown", "type": "Boolean"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is equal to one of the given values,\nwith an option to hide the dropdown menu."}, {"name": "requireValueInRange", "parameters": [{"name": "range", "type": "Range"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is equal to a value in the given range."}, {"name": "requireValueInRange", "parameters": [{"name": "range", "type": "Range"}, {"name": "showDropdown", "type": "Boolean"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is equal to a value in the given range,\nwith an option to hide the dropdown menu."}, {"name": "setAllowInvalid", "parameters": [{"name": "allowInvalidData", "type": "Boolean"}], "result": "DataValidationBuilder", "description": "Sets whether to show a warning when input fails data validation or whether to reject the input\nentirely."}, {"name": "setHelpText", "parameters": [{"name": "helpText", "type": "String"}], "result": "DataValidationBuilder", "description": "Sets the help text that appears when the user hovers over the cell on which data validation is\nset."}, {"name": "withCriteria", "parameters": [{"name": "criteria", "type": "DataValidationCriteria"}, {"name": "args", "type": "Object"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to criteria defined by DataValidationCriteria values,\ntypically taken from the criteria and arguments of an existing rule."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec-builder", "name": "DataSourceSpecBuilder", "type": "class", "methods": [{"name": "asBigQuery", "parameters": [], "result": "BigQueryDataSourceSpecBuilder", "description": "Gets the builder for BigQuery data source."}, {"name": "build", "parameters": [], "result": "DataSourceSpec", "description": "Builds a data source specification from the settings in this builder."}, {"name": "copy", "parameters": [], "result": "DataSourceSpecBuilder", "description": "Creates a DataSourceSpecBuilder based on this data source's settings."}, {"name": "getParameters", "parameters": [], "result": "DataSourceParameter[]", "description": "Gets the parameters of the data source."}, {"name": "getType", "parameters": [], "result": "DataSourceType", "description": "Gets the type of the data source."}, {"name": "removeAllParameters", "parameters": [], "result": "DataSourceSpecBuilder", "description": "Removes all the parameters."}, {"name": "removeParameter", "parameters": [{"name": "parameterName", "type": "String"}], "result": "DataSourceSpecBuilder", "description": "Removes the specified parameter."}, {"name": "setParameterFromCell", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sourceCell", "type": "String"}], "result": "DataSourceSpecBuilder", "description": "Adds a parameter, or if the parameter with the name exists, updates its source cell."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/developer-metadata-finder", "name": "DeveloperMetadataFinder", "type": "class", "methods": [{"name": "find", "parameters": [], "result": "DeveloperMetadata[]", "description": "Executes this search and returns the matching metadata."}, {"name": "onIntersectingLocations", "parameters": [], "result": "DeveloperMetadataFinder", "description": "Configures the search to consider intersecting locations that have metadata."}, {"name": "withId", "parameters": [{"name": "id", "type": "Integer"}], "result": "DeveloperMetadataFinder", "description": "Limits this search to consider only metadata that match the specified ID."}, {"name": "withKey", "parameters": [{"name": "key", "type": "String"}], "result": "DeveloperMetadataFinder", "description": "Limits this search to consider only metadata that match the specified key."}, {"name": "withLocationType", "parameters": [{"name": "locationType", "type": "DeveloperMetadataLocationType"}], "result": "DeveloperMetadataFinder", "description": "Limits this search to consider only metadata that match the specified location type."}, {"name": "withValue", "parameters": [{"name": "value", "type": "String"}], "result": "DeveloperMetadataFinder", "description": "Limits this search to consider only metadata that match the specified value."}, {"name": "withVisibility", "parameters": [{"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "DeveloperMetadataFinder", "description": "Limits this search to consider only metadata that match the specified visibility."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-sheet-filter", "name": "DataSourceSheetFilter", "type": "class", "methods": [{"name": "getDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Returns the data source column this filter applies to."}, {"name": "getDataSourceSheet", "parameters": [], "result": "DataSourceSheet", "description": "Returns the DataSourceSheet that this filter belongs to."}, {"name": "getFilterCriteria", "parameters": [], "result": "FilterCriteria", "description": "Returns the filter criteria for this filter."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this filter from the data source object."}, {"name": "setFilterCriteria", "parameters": [{"name": "filterCriteria", "type": "FilterCriteria"}], "result": "DataSourceSheetFilter", "description": "Sets the filter criteria for this filter."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-sheet", "name": "DataSourceSheet", "type": "class", "methods": [{"name": "addFilter", "parameters": [{"name": "columnName", "type": "String"}, {"name": "filterCriteria", "type": "FilterCriteria"}], "result": "DataSourceSheet", "description": "Adds a filter applied to the data source sheet."}, {"name": "asSheet", "parameters": [], "result": "Sheet", "description": "Returns the data source sheet as a regular sheet object."}, {"name": "autoResizeColumn", "parameters": [{"name": "columnName", "type": "String"}], "result": "DataSourceSheet", "description": "Auto resizes the width of the specified column."}, {"name": "autoResizeColumns", "parameters": [{"name": "columnNames", "type": "String"}], "result": "DataSourceSheet", "description": "Auto resizes the width of the specified columns."}, {"name": "forceRefreshData", "parameters": [], "result": "DataSourceSheet", "description": "Refreshes the data of this object regardless of the current state."}, {"name": "getColumnWidth", "parameters": [{"name": "columnName", "type": "String"}], "result": "Integer", "description": "Returns the width of the specified column."}, {"name": "getDataSource", "parameters": [], "result": "DataSource", "description": "Gets the data source the object is linked to."}, {"name": "getFilters", "parameters": [], "result": "DataSourceSheetFilter[]", "description": "Returns all filters applied to the data source sheet."}, {"name": "getSheetValues", "parameters": [{"name": "columnName", "type": "String"}], "result": "Object[]", "description": "Returns all the values for the data source sheet for the provided column name."}, {"name": "getSheetValues", "parameters": [{"name": "columnName", "type": "String"}, {"name": "startRow", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "Object[]", "description": "Returns all the values for the data source sheet for the provided column name from the provided\nstart row (based-1) and up to the provided numRows."}, {"name": "getSortSpecs", "parameters": [], "result": "SortSpec[]", "description": "Gets all the sort specs in the data source sheet."}, {"name": "getStatus", "parameters": [], "result": "DataExecutionStatus", "description": "Gets the data execution status of the object."}, {"name": "refreshData", "parameters": [], "result": "DataSourceSheet", "description": "Refreshes the data of the object."}, {"name": "removeFilters", "parameters": [{"name": "columnName", "type": "String"}], "result": "DataSourceSheet", "description": "Removes all filters applied to the data source sheet column."}, {"name": "removeSortSpec", "parameters": [{"name": "columnName", "type": "String"}], "result": "DataSourceSheet", "description": "Removes the sort spec on a column in the data source sheet."}, {"name": "setColumnWidth", "parameters": [{"name": "columnName", "type": "String"}, {"name": "width", "type": "Integer"}], "result": "DataSourceSheet", "description": "Sets the width of the specified column."}, {"name": "setColumnWidths", "parameters": [{"name": "columnNames", "type": "String"}, {"name": "width", "type": "Integer"}], "result": "DataSourceSheet", "description": "Sets the width of the specified columns."}, {"name": "setSortSpec", "parameters": [{"name": "columnName", "type": "String"}, {"name": "ascending", "type": "Boolean"}], "result": "DataSourceSheet", "description": "Sets the sort spec on a column in the data source sheet."}, {"name": "setSortSpec", "parameters": [{"name": "columnName", "type": "String"}, {"name": "sortOrder", "type": "SortOrder"}], "result": "DataSourceSheet", "description": "Sets the sort spec on a column in the data source sheet."}, {"name": "waitForCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "DataExecutionStatus", "description": "Waits until the current execution completes, timing out after the provided number of seconds."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-refresh-schedule-frequency", "name": "DataSourceRefreshScheduleFrequency", "type": "class", "methods": [{"name": "getDaysOfTheMonth", "parameters": [], "result": "Integer[]", "description": "Gets the days of the month as numbers (1-28) on which to refresh the data source."}, {"name": "getDaysOfTheWeek", "parameters": [], "result": "Weekday[]", "description": "Gets the days of the week on which to refresh the data source."}, {"name": "getFrequencyType", "parameters": [], "result": "FrequencyType", "description": "Gets the frequency type."}, {"name": "getStartHour", "parameters": [], "result": "Integer", "description": "Gets the start hour (as a number 0-23) of the time interval during which the refresh schedule\nruns."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-table", "name": "DataSourceTable", "type": "class", "methods": [{"name": "addColumns", "parameters": [{"name": "columnNames", "type": "String"}], "result": "DataSourceTable", "description": "Adds columns to the data source table."}, {"name": "addFilter", "parameters": [{"name": "columnName", "type": "String"}, {"name": "filterCriteria", "type": "FilterCriteria"}], "result": "DataSourceTable", "description": "Adds a filter applied to the data source table."}, {"name": "addSortSpec", "parameters": [{"name": "columnName", "type": "String"}, {"name": "ascending", "type": "Boolean"}], "result": "DataSourceTable", "description": "Adds a sort spec on a column in the data source table."}, {"name": "addSortSpec", "parameters": [{"name": "columnName", "type": "String"}, {"name": "sortOrder", "type": "SortOrder"}], "result": "DataSourceTable", "description": "Adds a sort spec on a column in the data source table."}, {"name": "forceRefreshData", "parameters": [], "result": "DataSourceTable", "description": "Refreshes the data of this object regardless of the current state."}, {"name": "getColumns", "parameters": [], "result": "DataSourceTableColumn[]", "description": "Gets all the data source columns added to the data source table."}, {"name": "getDataSource", "parameters": [], "result": "DataSource", "description": "Gets the data source the object is linked to."}, {"name": "getFilters", "parameters": [], "result": "DataSourceTableFilter[]", "description": "Returns all filters applied to the data source table."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Gets the Range this data source table spans."}, {"name": "getRowLimit", "parameters": [], "result": "Integer", "description": "Returns the row limit for the data source table."}, {"name": "getSortSpecs", "parameters": [], "result": "SortSpec[]", "description": "Gets all the sort specs in the data source table."}, {"name": "getStatus", "parameters": [], "result": "DataExecutionStatus", "description": "Gets the data execution status of the object."}, {"name": "isSyncingAllColumns", "parameters": [], "result": "Boolean", "description": "Returns whether the data source table is syncing all columns in the associated data source."}, {"name": "refreshData", "parameters": [], "result": "DataSourceTable", "description": "Refreshes the data of the object."}, {"name": "removeAllColumns", "parameters": [], "result": "DataSourceTable", "description": "Removes all the columns in the data source table."}, {"name": "removeAllSortSpecs", "parameters": [], "result": "DataSourceTable", "description": "Removes all the sort specs in the data source table."}, {"name": "setRowLimit", "parameters": [{"name": "rowLimit", "type": "Integer"}], "result": "DataSourceTable", "description": "Updates the row limit for the data source table."}, {"name": "syncAllColumns", "parameters": [], "result": "DataSourceTable", "description": "Sync all current and future columns in the associated data source to the data source table."}, {"name": "waitForCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "DataExecutionStatus", "description": "Waits until the current execution completes, timing out after the provided number of seconds."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-spec", "name": "DataSourceSpec", "type": "class", "methods": [{"name": "asBigQuery", "parameters": [], "result": "BigQueryDataSourceSpec", "description": "Gets the spec for BigQuery data source."}, {"name": "copy", "parameters": [], "result": "DataSourceSpecBuilder", "description": "Creates a DataSourceSpecBuilder based on this data source's settings."}, {"name": "getParameters", "parameters": [], "result": "DataSourceParameter[]", "description": "Gets the parameters of the data source."}, {"name": "getType", "parameters": [], "result": "DataSourceType", "description": "Gets the type of the data source."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/chart-type.html", "name": "ChartType", "type": "enum", "methods": [], "properties": [{"name": "TIMELINE", "type": "Enum", "url": "", "description": "Timeline chart."}, {"name": "AREA", "type": "Enum", "url": "", "description": "Area chart"}, {"name": "BAR", "type": "Enum", "url": "", "description": "Bar chart"}, {"name": "BUBBLE", "type": "Enum", "url": "", "description": "Bubble chart."}, {"name": "CANDLESTICK", "type": "Enum", "url": "", "description": "Candlestick chart."}, {"name": "COLUMN", "type": "Enum", "url": "", "description": "Column chart"}, {"name": "COMBO", "type": "Enum", "url": "", "description": "Combo chart"}, {"name": "GAUGE", "type": "Enum", "url": "", "description": "Gauge chart."}, {"name": "GEO", "type": "Enum", "url": "", "description": "Geo chart."}, {"name": "HISTOGRAM", "type": "Enum", "url": "", "description": "Histogram"}, {"name": "RADAR", "type": "Enum", "url": "", "description": "Radar chart."}, {"name": "LINE", "type": "Enum", "url": "", "description": "Line chart"}, {"name": "ORG", "type": "Enum", "url": "", "description": "Org chart."}, {"name": "PIE", "type": "Enum", "url": "", "description": "Pie chart"}, {"name": "SCATTER", "type": "Enum", "url": "", "description": "Scatter chart"}, {"name": "SPARKLINE", "type": "Enum", "url": "", "description": "Sparkline chart."}, {"name": "STEPPED_AREA", "type": "Enum", "url": "", "description": "Stepped area chart."}, {"name": "TABLE", "type": "Enum", "url": "", "description": "Table chart"}, {"name": "TREEMAP", "type": "Enum", "url": "", "description": "Treemap chart."}, {"name": "WATERFALL", "type": "Enum", "url": "", "description": "Waterfall chart."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-refresh-schedule", "name": "DataSourceRefreshSchedule", "type": "class", "methods": [{"name": "getFrequency", "parameters": [], "result": "DataSourceRefreshScheduleFrequency", "description": "Gets the refresh schedule frequency, which specifies how often and when to refresh."}, {"name": "getScope", "parameters": [], "result": "DataSourceRefreshScope", "description": "Gets the scope of this refresh schedule."}, {"name": "getTimeIntervalOfNextRun", "parameters": [], "result": "TimeInterval", "description": "Gets the time window of the next run of this refresh schedule."}, {"name": "isEnabled", "parameters": [], "result": "Boolean", "description": "Determines whether this refresh schedule is enabled."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-pivot-table", "name": "DataSourcePivotTable", "type": "class", "methods": [{"name": "addColumnGroup", "parameters": [{"name": "columnName", "type": "String"}], "result": "PivotGroup", "description": "Adds a new pivot column group based on the specified data source column."}, {"name": "addFilter", "parameters": [{"name": "columnName", "type": "String"}, {"name": "filterCriteria", "type": "FilterCriteria"}], "result": "PivotFilter", "description": "Adds a new filter based on the specified data source column with the specified filter criteria."}, {"name": "addPivotValue", "parameters": [{"name": "columnName", "type": "String"}, {"name": "summarizeFunction", "type": "PivotTableSummarizeFunction"}], "result": "PivotValue", "description": "Adds a new pivot value based on the specified data source column with the specified summarize\nfunction."}, {"name": "addRowGroup", "parameters": [{"name": "columnName", "type": "String"}], "result": "PivotGroup", "description": "Adds a new pivot row group based on the specified data source column."}, {"name": "asPivotTable", "parameters": [], "result": "PivotTable", "description": "Returns the data source pivot table as a regular pivot table object."}, {"name": "forceRefreshData", "parameters": [], "result": "DataSourcePivotTable", "description": "Refreshes the data of this object regardless of the current state."}, {"name": "getDataSource", "parameters": [], "result": "DataSource", "description": "Gets the data source the object is linked to."}, {"name": "getStatus", "parameters": [], "result": "DataExecutionStatus", "description": "Gets the data execution status of the object."}, {"name": "refreshData", "parameters": [], "result": "DataSourcePivotTable", "description": "Refreshes the data of the object."}, {"name": "waitForCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "DataExecutionStatus", "description": "Waits until the current execution completes, timing out after the provided number of seconds."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-formula", "name": "DataSourceFormula", "type": "class", "methods": [{"name": "forceRefreshData", "parameters": [], "result": "DataSourceFormula", "description": "Refreshes the data of this object regardless of the current state."}, {"name": "getAnchorCell", "parameters": [], "result": "Range", "description": "Returns the Range representing the cell where this data source formula is anchored."}, {"name": "getDataSource", "parameters": [], "result": "DataSource", "description": "Gets the data source the object is linked to."}, {"name": "getDisplayValue", "parameters": [], "result": "String", "description": "Returns the display value of the data source formula."}, {"name": "getFormula", "parameters": [], "result": "String", "description": "Returns the formula for this data source formula."}, {"name": "getStatus", "parameters": [], "result": "DataExecutionStatus", "description": "Gets the data execution status of the object."}, {"name": "refreshData", "parameters": [], "result": "DataSourceFormula", "description": "Refreshes the data of the object."}, {"name": "setFormula", "parameters": [{"name": "formula", "type": "String"}], "result": "DataSourceFormula", "description": "Updates the formula."}, {"name": "waitForCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "DataExecutionStatus", "description": "Waits until the current execution completes, timing out after the provided number of seconds."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/text-style.html", "name": "TextStyle", "type": "class", "methods": [{"name": "getColor", "parameters": [], "result": "String", "description": "Gets the color of the text style."}, {"name": "getFontName", "parameters": [], "result": "String", "description": "Gets the font name of the text style."}, {"name": "getFontSize", "parameters": [], "result": "Number", "description": "Gets the font size of the text style."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-parameter", "name": "DataSourceParameter", "type": "class", "methods": [{"name": "getName", "parameters": [], "result": "String", "description": "Gets the parameter name."}, {"name": "getSourceCell", "parameters": [], "result": "String", "description": "Gets the source cell the parameter is valued based on, or null if the parameter type is\nnot DataSourceParameterType.CELL."}, {"name": "getType", "parameters": [], "result": "DataSourceParameterType", "description": "Gets the parameter type."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/text-style-builder.html", "name": "TextStyleBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "TextStyle", "description": "Builds and returns a text style configuration object that was built using this builder."}, {"name": "setColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "TextStyleBuilder", "description": "Sets the color of the text style."}, {"name": "setFontName", "parameters": [{"name": "fontName", "type": "String"}], "result": "TextStyleBuilder", "description": "Sets the font name of the text style"}, {"name": "setFontSize", "parameters": [{"name": "fontSize", "type": "Number"}], "result": "TextStyleBuilder", "description": "Sets the font size of the text style."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-column", "name": "DataSourceColumn", "type": "class", "methods": [{"name": "getDataSource", "parameters": [], "result": "DataSource", "description": "Gets the data source associated with the data source column."}, {"name": "getFormula", "parameters": [], "result": "String", "description": "Gets the formula for the data source column."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name for the data source column."}, {"name": "hasArrayDependency", "parameters": [], "result": "Boolean", "description": "Returns whether the column has an array dependency."}, {"name": "isCalculatedColumn", "parameters": [], "result": "Boolean", "description": "Returns whether the column is a calculated column."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the data source column."}, {"name": "setFormula", "parameters": [{"name": "formula", "type": "String"}], "result": "DataSourceColumn", "description": "Sets the formula for the data source column."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "DataSourceColumn", "description": "Sets the name of the data source column."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/point-style.html", "name": "PointStyle", "type": "enum", "methods": [], "properties": [{"name": "NONE", "type": "Enum", "url": "", "description": "Do not display line points."}, {"name": "TINY", "type": "Enum", "url": "", "description": "Use tiny line points."}, {"name": "MEDIUM", "type": "Enum", "url": "", "description": "Use medium sized line points."}, {"name": "LARGE", "type": "Enum", "url": "", "description": "Use large sized line points."}, {"name": "HUGE", "type": "Enum", "url": "", "description": "Use largest sized line points."}]},
{"url": "https://developers.google.com/apps-script/reference/charts/charts.html#newTextStyle()", "name": "Charts", "type": "class", "methods": [{"name": "newAreaChart", "parameters": [], "result": "AreaChartBuilder", "description": "Starts building an area chart, as described in the Google Chart\nTools documentation."}, {"name": "newBarChart", "parameters": [], "result": "BarChartBuilder", "description": "Starts building a bar chart, as described in the Google Chart\nTools documentation."}, {"name": "newColumnChart", "parameters": [], "result": "ColumnChartBuilder", "description": "Starts building a column chart, as described in the Google Chart\nTools documentation."}, {"name": "newDataTable", "parameters": [], "result": "DataTableBuilder", "description": "Creates an empty data table, which can have its values set manually."}, {"name": "newDataViewDefinition", "parameters": [], "result": "DataViewDefinitionBuilder", "description": "Creates a new data view definition."}, {"name": "newLineChart", "parameters": [], "result": "LineChartBuilder", "description": "Starts building a line chart, as described in the Google Chart\nTools documentation."}, {"name": "newPieChart", "parameters": [], "result": "PieChartBuilder", "description": "Starts building a pie chart, as described in the Google Chart\nTools documentation."}, {"name": "newScatterChart", "parameters": [], "result": "ScatterChartBuilder", "description": "Starts building a scatter chart, as described in the Google Chart\nTools documentation."}, {"name": "newTableChart", "parameters": [], "result": "TableChartBuilder", "description": "Starts building a table chart, as described in the Google Chart\nTools documentation."}, {"name": "newTextStyle", "parameters": [], "result": "TextStyleBuilder", "description": "Creates a new text style builder."}], "properties": [{"name": "ChartHiddenDimensionStrategy", "type": "ChartHiddenDimensionStrategy", "url": "/apps-script/reference/charts/chart-hidden-dimension-strategy", "description": "An enumeration of how hidden dimensions in a source are expressed in a chart."}, {"name": "ChartMergeStrategy", "type": "ChartMergeStrategy", "url": "/apps-script/reference/charts/chart-merge-strategy", "description": "An enumeration of how multiple ranges in the source are expressed in a chart."}, {"name": "ChartType", "type": "ChartType", "url": "/apps-script/reference/charts/chart-type", "description": "An enumeration of chart types supported by the Charts service."}, {"name": "ColumnType", "type": "ColumnType", "url": "/apps-script/reference/charts/column-type", "description": "An enumeration of the valid data types for columns in a DataTable."}, {"name": "CurveStyle", "type": "CurveStyle", "url": "/apps-script/reference/charts/curve-style", "description": "An enumeration of the styles for curves in a chart."}, {"name": "PointStyle", "type": "PointStyle", "url": "/apps-script/reference/charts/point-style", "description": "An enumeration of the styles of points in a line."}, {"name": "Position", "type": "Position", "url": "/apps-script/reference/charts/position", "description": "An enumeration of legend positions within a chart."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source-chart", "name": "DataSourceChart", "type": "class", "methods": [{"name": "forceRefreshData", "parameters": [], "result": "DataSourceChart", "description": "Refreshes the data of this object regardless of the current state."}, {"name": "getDataSource", "parameters": [], "result": "DataSource", "description": "Gets the data source the object is linked to."}, {"name": "getStatus", "parameters": [], "result": "DataExecutionStatus", "description": "Gets the data execution status of the object."}, {"name": "refreshData", "parameters": [], "result": "DataSourceChart", "description": "Refreshes the data of the object."}, {"name": "waitForCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "DataExecutionStatus", "description": "Waits until the current execution completes, timing out after the provided number of seconds."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/curve-style.html", "name": "CurveStyle", "type": "enum", "methods": [], "properties": [{"name": "NORMAL", "type": "Enum", "url": "", "description": "Straight lines without curve."}, {"name": "SMOOTH", "type": "Enum", "url": "", "description": "The angles of the line are smoothed."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-execution-status", "name": "DataExecutionStatus", "type": "class", "methods": [{"name": "getErrorCode", "parameters": [], "result": "DataExecutionErrorCode", "description": "Gets the error code of the data execution."}, {"name": "getErrorMessage", "parameters": [], "result": "String", "description": "Gets the error message of the data execution."}, {"name": "getExecutionState", "parameters": [], "result": "DataExecutionState", "description": "Gets the state of the data execution."}, {"name": "getLastExecutionTime", "parameters": [], "result": "Date", "description": "Gets the time the last data execution completed regardless of the execution state."}, {"name": "getLastRefreshedTime", "parameters": [], "result": "Date", "description": "Gets the time the data last successfully refreshed."}, {"name": "isTruncated", "parameters": [], "result": "Boolean", "description": "Returns true if the data from last successful execution is truncated, or false\notherwise."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule-builder", "name": "ConditionalFormatRuleBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "ConditionalFormatRule", "description": "Constructs a conditional format rule from the settings applied to the builder."}, {"name": "copy", "parameters": [], "result": "ConditionalFormatRuleBuilder", "description": "Returns a rule builder preset with this rule's settings."}, {"name": "getBooleanCondition", "parameters": [], "result": "BooleanCondition", "description": "Retrieves the rule's BooleanCondition information if this rule uses\nboolean condition criteria."}, {"name": "getGradientCondition", "parameters": [], "result": "GradientCondition", "description": "Retrieves the rule's GradientCondition information, if this rule\nuses gradient condition criteria."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Retrieves the ranges to which this conditional format rule is applied."}, {"name": "setBackground", "parameters": [{"name": "color", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the background color for the conditional format rule's format."}, {"name": "setBackgroundObject", "parameters": [{"name": "color", "type": "Color"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the background color for the conditional format rule's format."}, {"name": "setBold", "parameters": [{"name": "bold", "type": "Boolean"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets text bolding for the conditional format rule's format."}, {"name": "setFontColor", "parameters": [{"name": "color", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the font color for the conditional format rule's format."}, {"name": "setFontColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the font color for the conditional format rule's format."}, {"name": "setGradientMaxpoint", "parameters": [{"name": "color", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Clears the conditional format rule's gradient maxpoint value, and instead uses the maximum\nvalue in the rule's ranges."}, {"name": "setGradientMaxpointObject", "parameters": [{"name": "color", "type": "Color"}], "result": "ConditionalFormatRuleBuilder", "description": "Clears the conditional format rule's gradient maxpoint value, and instead uses the maximum\nvalue in the rule's ranges."}, {"name": "setGradientMaxpointObjectWithValue", "parameters": [{"name": "color", "type": "Color"}, {"name": "type", "type": "InterpolationType"}, {"name": "value", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule's gradient maxpoint fields."}, {"name": "setGradientMaxpointWithValue", "parameters": [{"name": "color", "type": "String"}, {"name": "type", "type": "InterpolationType"}, {"name": "value", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule's gradient maxpoint fields."}, {"name": "setGradientMidpointObjectWithValue", "parameters": [{"name": "color", "type": "Color"}, {"name": "type", "type": "InterpolationType"}, {"name": "value", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule's gradient midpoint fields."}, {"name": "setGradientMidpointWithValue", "parameters": [{"name": "color", "type": "String"}, {"name": "type", "type": "InterpolationType"}, {"name": "value", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule's gradient midpoint fields."}, {"name": "setGradientMinpoint", "parameters": [{"name": "color", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Clears the conditional format rule's gradient minpoint value, and instead uses the minimum\nvalue in the rule's ranges."}, {"name": "setGradientMinpointObject", "parameters": [{"name": "color", "type": "Color"}], "result": "ConditionalFormatRuleBuilder", "description": "Clears the conditional format rule's gradient minpoint value, and instead uses the minimum\nvalue in the rule's ranges."}, {"name": "setGradientMinpointObjectWithValue", "parameters": [{"name": "color", "type": "Color"}, {"name": "type", "type": "InterpolationType"}, {"name": "value", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule's gradient minpoint fields."}, {"name": "setGradientMinpointWithValue", "parameters": [{"name": "color", "type": "String"}, {"name": "type", "type": "InterpolationType"}, {"name": "value", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule's gradient minpoint fields."}, {"name": "setItalic", "parameters": [{"name": "italic", "type": "Boolean"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets text italics for the conditional format rule's format."}, {"name": "setRanges", "parameters": [{"name": "ranges", "type": "Range"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets one or more ranges to which this conditional format rule is applied."}, {"name": "setStrikethrough", "parameters": [{"name": "strikethrough", "type": "Boolean"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets text strikethrough for the conditional format rule's format."}, {"name": "setUnderline", "parameters": [{"name": "underline", "type": "Boolean"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets text underlining for the conditional format rule's format."}, {"name": "whenCellEmpty", "parameters": [], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when the cell is empty."}, {"name": "whenCellNotEmpty", "parameters": [], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when the cell is not empty."}, {"name": "whenDateAfter", "parameters": [{"name": "date", "type": "Date"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a date is after the given value."}, {"name": "whenDateAfter", "parameters": [{"name": "date", "type": "RelativeDate"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a date is after the given relative date."}, {"name": "whenDateBefore", "parameters": [{"name": "date", "type": "Date"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a date is before the given date."}, {"name": "whenDateBefore", "parameters": [{"name": "date", "type": "RelativeDate"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a date is before the given relative date."}, {"name": "whenDateEqualTo", "parameters": [{"name": "date", "type": "Date"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a date is equal to the given date."}, {"name": "whenDateEqualTo", "parameters": [{"name": "date", "type": "RelativeDate"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a date is equal to the given relative date."}, {"name": "whenFormulaSatisfied", "parameters": [{"name": "formula", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when that the given formula evaluates to true."}, {"name": "whenNumberBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number falls between, or is either of, two\nspecified values."}, {"name": "whenNumberEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number is equal to the given value."}, {"name": "whenNumberGreaterThan", "parameters": [{"name": "number", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number is greater than the given value."}, {"name": "whenNumberGreaterThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number is greater than or equal to the given\nvalue."}, {"name": "whenNumberLessThan", "parameters": [{"name": "number", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional conditional format rule to trigger when a number less than the given\nvalue."}, {"name": "whenNumberLessThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number less than or equal to the given\nvalue."}, {"name": "whenNumberNotBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number does not fall between, and is neither\nof, two specified values."}, {"name": "whenNumberNotEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number is not equal to the given value."}, {"name": "whenTextContains", "parameters": [{"name": "text", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when that the input contains the given value."}, {"name": "whenTextDoesNotContain", "parameters": [{"name": "text", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when that the input does not contain the given\nvalue."}, {"name": "whenTextEndsWith", "parameters": [{"name": "text", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when that the input ends with the given value."}, {"name": "whenTextEqualTo", "parameters": [{"name": "text", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when that the input is equal to the given value."}, {"name": "whenTextStartsWith", "parameters": [{"name": "text", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when that the input starts with the given value."}, {"name": "withCriteria", "parameters": [{"name": "criteria", "type": "BooleanCriteria"}, {"name": "args", "type": "Object"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to criteria defined by BooleanCriteria values,\ntypically taken from the criteria and arguments of an\nexisting rule."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/container-info", "name": "ContainerInfo", "type": "class", "methods": [{"name": "getAnchorColumn", "parameters": [], "result": "Integer", "description": "The chart's left side is anchored in this column."}, {"name": "getAnchorRow", "parameters": [], "result": "Integer", "description": "The chart's top side is anchored in this row."}, {"name": "getOffsetX", "parameters": [], "result": "Integer", "description": "The chart's upper left hand corner is offset from the anchor column by this many pixels."}, {"name": "getOffsetY", "parameters": [], "result": "Integer", "description": "The chart's upper left hand corner is offset from the anchor row by this many pixels."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/color-builder", "name": "ColorBuilder", "type": "class", "methods": [{"name": "asRgbColor", "parameters": [], "result": "RgbColor", "description": "Converts this color to an RgbColor."}, {"name": "asThemeColor", "parameters": [], "result": "ThemeColor", "description": "Converts this color to a ThemeColor."}, {"name": "build", "parameters": [], "result": "Color", "description": "Creates a color object from the settings supplied to the builder."}, {"name": "getColorType", "parameters": [], "result": "ColorType", "description": "Get the type of this color."}, {"name": "setRgbColor", "parameters": [{"name": "cssString", "type": "String"}], "result": "ColorBuilder", "description": "Sets as RGB color."}, {"name": "setThemeColor", "parameters": [{"name": "themeColorType", "type": "ThemeColorType"}], "result": "ColorBuilder", "description": "Sets as theme color."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/data-source", "name": "DataSource", "type": "class", "methods": [{"name": "createCalculatedColumn", "parameters": [{"name": "name", "type": "String"}, {"name": "formula", "type": "String"}], "result": "DataSourceColumn", "description": "Creates a calculated column."}, {"name": "createDataSourcePivotTableOnNewSheet", "parameters": [], "result": "DataSourcePivotTable", "description": "Creates a data source pivot table from this data source in the first cell of a new sheet."}, {"name": "createDataSourceTableOnNewSheet", "parameters": [], "result": "DataSourceTable", "description": "Creates a data source table from this data source in the first cell of a new sheet."}, {"name": "getCalculatedColumnByName", "parameters": [{"name": "columnName", "type": "String"}], "result": "DataSourceColumn", "description": "Returns the calculated column in the data source that matches the column name."}, {"name": "getCalculatedColumns", "parameters": [], "result": "DataSourceColumn[]", "description": "Returns all the calculated columns in the data source."}, {"name": "getColumns", "parameters": [], "result": "DataSourceColumn[]", "description": "Returns all the columns in the data source."}, {"name": "getDataSourceSheets", "parameters": [], "result": "DataSourceSheet[]", "description": "Returns the data source sheets associated with this data source."}, {"name": "getSpec", "parameters": [], "result": "DataSourceSpec", "description": "Gets the data source specification."}, {"name": "refreshAllLinkedDataSourceObjects", "parameters": [], "result": "void", "description": "Refreshes all data source objects linked to the data source."}, {"name": "updateSpec", "parameters": [{"name": "spec", "type": "DataSourceSpec"}], "result": "DataSource", "description": "Updates the data source specification and refreshes the data source objects linked with this\ndata source with the new specification."}, {"name": "updateSpec", "parameters": [{"name": "spec", "type": "DataSourceSpec"}, {"name": "refreshAllLinkedObjects", "type": "Boolean"}], "result": "DataSource", "description": "Updates the data source specification and refreshes the linked data\nsource sheets with the new specification."}, {"name": "waitForAllDataExecutionsCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "void", "description": "Waits until all the current executions of the linked data source objects complete, timing out\nafter the provided number of seconds."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/charts/position.html", "name": "Position", "type": "enum", "methods": [], "properties": [{"name": "TOP", "type": "Enum", "url": "", "description": "Above the chart."}, {"name": "RIGHT", "type": "Enum", "url": "", "description": "To the right of the chart."}, {"name": "BOTTOM", "type": "Enum", "url": "", "description": "Below the chart."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No legend is displayed."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/color", "name": "Color", "type": "class", "methods": [{"name": "asRgbColor", "parameters": [], "result": "RgbColor", "description": "Converts this color to an RgbColor."}, {"name": "asThemeColor", "parameters": [], "result": "ThemeColor", "description": "Converts this color to a ThemeColor."}, {"name": "getColorType", "parameters": [], "result": "ColorType", "description": "Get the type of this color."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/conditional-format-rule", "name": "ConditionalFormatRule", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "ConditionalFormatRuleBuilder", "description": "Returns a rule builder preset with this rule's settings."}, {"name": "getBooleanCondition", "parameters": [], "result": "BooleanCondition", "description": "Retrieves the rule's BooleanCondition information if this rule uses\nboolean condition criteria."}, {"name": "getGradientCondition", "parameters": [], "result": "GradientCondition", "description": "Retrieves the rule's GradientCondition information, if this rule\nuses gradient condition criteria."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Retrieves the ranges to which this conditional format rule is applied."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/boolean-condition", "name": "BooleanCondition", "type": "class", "methods": [{"name": "getBackground", "parameters": [], "result": "String", "description": "Gets the background color string for this boolean condition."}, {"name": "getBackgroundObject", "parameters": [], "result": "Color", "description": "Gets the background color for this boolean condition."}, {"name": "getBold", "parameters": [], "result": "Boolean", "description": "Returns true if this boolean condition bolds the text and returns false if this\nboolean condition removes bolding from the text."}, {"name": "getCriteriaType", "parameters": [], "result": "BooleanCriteria", "description": "Gets the rule's criteria type as defined in the BooleanCriteria enum."}, {"name": "getCriteriaValues", "parameters": [], "result": "Object[]", "description": "Gets an array of arguments for the rule's criteria."}, {"name": "getFontColor", "parameters": [], "result": "String", "description": "Gets the font color string for this boolean condition."}, {"name": "getFontColorObject", "parameters": [], "result": "Color", "description": "Gets the font color for this boolean condition."}, {"name": "getItalic", "parameters": [], "result": "Boolean", "description": "Returns true if this boolean condition italicises the text and returns false if\nthis boolean condition removes italics from the text."}, {"name": "getStrikethrough", "parameters": [], "result": "Boolean", "description": "Returns true if this boolean condition strikes through the text and returns false if this boolean condition removes strikethrough from the text."}, {"name": "getUnderline", "parameters": [], "result": "Boolean", "description": "Returns true if this boolean condition underlines the text and returns false if\nthis boolean condition removes underlining from the text."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/big-query-data-source-spec-builder", "name": "BigQueryDataSourceSpecBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "DataSourceSpec", "description": "Builds a data source specification from the settings in this builder."}, {"name": "copy", "parameters": [], "result": "DataSourceSpecBuilder", "description": "Creates a DataSourceSpecBuilder based on this data source's settings."}, {"name": "getDatasetId", "parameters": [], "result": "String", "description": "Gets the BigQuery dataset ID."}, {"name": "getParameters", "parameters": [], "result": "DataSourceParameter[]", "description": "Gets the parameters of the data source."}, {"name": "getProjectId", "parameters": [], "result": "String", "description": "Gets the billing project ID."}, {"name": "getRawQuery", "parameters": [], "result": "String", "description": "Gets the raw query string."}, {"name": "getTableId", "parameters": [], "result": "String", "description": "Gets the BigQuery table ID."}, {"name": "getTableProjectId", "parameters": [], "result": "String", "description": "Gets the BigQuery project ID for the table."}, {"name": "getType", "parameters": [], "result": "DataSourceType", "description": "Gets the type of the data source."}, {"name": "removeAllParameters", "parameters": [], "result": "BigQueryDataSourceSpecBuilder", "description": "Removes all the parameters."}, {"name": "removeParameter", "parameters": [{"name": "parameterName", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Removes the specified parameter."}, {"name": "setDatasetId", "parameters": [{"name": "datasetId", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Sets the BigQuery dataset ID."}, {"name": "setParameterFromCell", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sourceCell", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Adds a parameter, or if the parameter with the name exists, updates its source cell."}, {"name": "setProjectId", "parameters": [{"name": "projectId", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Sets the billing BigQuery project ID."}, {"name": "setRawQuery", "parameters": [{"name": "rawQuery", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Sets the raw query string."}, {"name": "setTableId", "parameters": [{"name": "tableId", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Sets the BigQuery table ID."}, {"name": "setTableProjectId", "parameters": [{"name": "projectId", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Sets the BigQuery project ID for the table."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/big-query-data-source-spec", "name": "BigQueryDataSourceSpec", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "DataSourceSpecBuilder", "description": "Creates a DataSourceSpecBuilder based on this data source's settings."}, {"name": "getDatasetId", "parameters": [], "result": "String", "description": "Gets the BigQuery dataset ID."}, {"name": "getParameters", "parameters": [], "result": "DataSourceParameter[]", "description": "Gets the parameters of the data source."}, {"name": "getProjectId", "parameters": [], "result": "String", "description": "Gets the billing project ID."}, {"name": "getRawQuery", "parameters": [], "result": "String", "description": "Gets the raw query string."}, {"name": "getTableId", "parameters": [], "result": "String", "description": "Gets the BigQuery table ID."}, {"name": "getTableProjectId", "parameters": [], "result": "String", "description": "Gets the BigQuery project ID for the table."}, {"name": "getType", "parameters": [], "result": "DataSourceType", "description": "Gets the type of the data source."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/spreadsheet-app", "name": "SpreadsheetApp", "type": "class", "methods": [{"name": "create", "parameters": [{"name": "name", "type": "String"}], "result": "Spreadsheet", "description": "Creates a new spreadsheet with the given name."}, {"name": "create", "parameters": [{"name": "name", "type": "String"}, {"name": "rows", "type": "Integer"}, {"name": "columns", "type": "Integer"}], "result": "Spreadsheet", "description": "Creates a new spreadsheet with the given name and the specified number of rows and columns."}, {"name": "enableAllDataSourcesExecution", "parameters": [], "result": "void", "description": "Enables data execution for all types of data sources."}, {"name": "enableBigQueryExecution", "parameters": [], "result": "void", "description": "Enables data execution for BigQuery data source."}, {"name": "flush", "parameters": [], "result": "void", "description": "Applies all pending Spreadsheet changes."}, {"name": "getActive", "parameters": [], "result": "Spreadsheet", "description": "Returns the currently active spreadsheet, or null if there is none."}, {"name": "getActiveRange", "parameters": [], "result": "Range", "description": "Returns the selected range in the active sheet, or null if there is no active range."}, {"name": "getActiveRangeList", "parameters": [], "result": "RangeList", "description": "Returns the list of active ranges in the active sheet or null if there are no ranges\nselected."}, {"name": "getActiveSheet", "parameters": [], "result": "Sheet", "description": "Gets the active sheet in a spreadsheet."}, {"name": "getActiveSpreadsheet", "parameters": [], "result": "Spreadsheet", "description": "Returns the currently active spreadsheet, or null if there is none."}, {"name": "getCurrentCell", "parameters": [], "result": "Range", "description": "Returns the current (highlighted) cell that is selected in one of the active ranges in the\nactive sheet or null if there is no current cell."}, {"name": "getSelection", "parameters": [], "result": "Selection", "description": "Returns the current Selection in the spreadsheet."}, {"name": "getUi", "parameters": [], "result": "Ui", "description": "Returns an instance of the spreadsheet's user-interface environment that allows the script to\nadd features like menus, dialogs, and sidebars."}, {"name": "newColor", "parameters": [], "result": "ColorBuilder", "description": "Creates a builder for a Color."}, {"name": "newConditionalFormatRule", "parameters": [], "result": "ConditionalFormatRuleBuilder", "description": "Creates a builder for a conditional formatting rule."}, {"name": "newDataSourceSpec", "parameters": [], "result": "DataSourceSpecBuilder", "description": "Creates a builder for a DataSourceSpec."}, {"name": "newDataValidation", "parameters": [], "result": "DataValidationBuilder", "description": "Creates a builder for a data validation rule."}, {"name": "newFilterCriteria", "parameters": [], "result": "FilterCriteriaBuilder", "description": "Creates a builder for a FilterCriteria."}, {"name": "newRichTextValue", "parameters": [], "result": "RichTextValueBuilder", "description": "Creates a builder for a Rich Text value."}, {"name": "newTextStyle", "parameters": [], "result": "TextStyleBuilder", "description": "Creates a builder for a text style."}, {"name": "open", "parameters": [{"name": "file", "type": "File"}], "result": "Spreadsheet", "description": "Opens the spreadsheet that corresponds to the given File object."}, {"name": "openById", "parameters": [{"name": "id", "type": "String"}], "result": "Spreadsheet", "description": "Opens the spreadsheet with the given ID."}, {"name": "openByUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Spreadsheet", "description": "Opens the spreadsheet with the given URL."}, {"name": "setActiveRange", "parameters": [{"name": "range", "type": "Range"}], "result": "Range", "description": "Sets the specified range as the active range, with the top\nleft cell in the range as the current cell."}, {"name": "setActiveRangeList", "parameters": [{"name": "rangeList", "type": "RangeList"}], "result": "RangeList", "description": "Sets the specified list of ranges as the active ranges."}, {"name": "setActiveSheet", "parameters": [{"name": "sheet", "type": "Sheet"}], "result": "Sheet", "description": "Sets the active sheet in a spreadsheet."}, {"name": "setActiveSheet", "parameters": [{"name": "sheet", "type": "Sheet"}, {"name": "restoreSelection", "type": "Boolean"}], "result": "Sheet", "description": "Sets the active sheet in a spreadsheet, with the option to restore the most recent selection\nwithin that sheet."}, {"name": "setActiveSpreadsheet", "parameters": [{"name": "newActiveSpreadsheet", "type": "Spreadsheet"}], "result": "void", "description": "Sets the active spreadsheet."}, {"name": "setCurrentCell", "parameters": [{"name": "cell", "type": "Range"}], "result": "Range", "description": "Sets the specified cell as the current cell."}], "properties": [{"name": "AutoFillSeries", "type": "AutoFillSeries", "url": "/apps-script/reference/spreadsheet/auto-fill-series", "description": "An enumeration of the types of series used to calculate auto-filled values."}, {"name": "BandingTheme", "type": "BandingTheme", "url": "/apps-script/reference/spreadsheet/banding-theme", "description": "An enumeration of the possible banding themes."}, {"name": "BooleanCriteria", "type": "BooleanCriteria", "url": "/apps-script/reference/spreadsheet/boolean-criteria", "description": "An enumeration of conditional formatting boolean criteria."}, {"name": "BorderStyle", "type": "BorderStyle", "url": "/apps-script/reference/spreadsheet/border-style", "description": "An enumeration of the valid styles for setting borders on a Range."}, {"name": "ColorType", "type": "ColorType", "url": "https://developers.google.com/apps-script/reference/base/color-type.html", "description": "An enumeration of possible color types."}, {"name": "CopyPasteType", "type": "CopyPasteType", "url": "/apps-script/reference/spreadsheet/copy-paste-type", "description": "An enumeration of the possible paste types."}, {"name": "DataExecutionErrorCode", "type": "DataExecutionErrorCode", "url": "/apps-script/reference/spreadsheet/data-execution-error-code", "description": "An enumeration of the possible data execution error codes."}, {"name": "DataExecutionState", "type": "DataExecutionState", "url": "/apps-script/reference/spreadsheet/data-execution-state", "description": "An enumeration of the possible data execution states."}, {"name": "DataSourceParameterType", "type": "DataSourceParameterType", "url": "/apps-script/reference/spreadsheet/data-source-parameter-type", "description": "An enumeration of the possible data source parameter types."}, {"name": "DataSourceRefreshScope", "type": "DataSourceRefreshScope", "url": "/apps-script/reference/spreadsheet/data-source-refresh-scope", "description": "An enumeration of possible data source refresh scopes."}, {"name": "DataSourceType", "type": "DataSourceType", "url": "/apps-script/reference/spreadsheet/data-source-type", "description": "An enumeration of the possible data source types."}, {"name": "DataValidationCriteria", "type": "DataValidationCriteria", "url": "/apps-script/reference/spreadsheet/data-validation-criteria", "description": "An enumeration representing the data validation criteria that can be set on a range."}, {"name": "DateTimeGroupingRuleType", "type": "DateTimeGroupingRuleType", "url": "/apps-script/reference/spreadsheet/date-time-grouping-rule-type", "description": "An enumeration of date time grouping rule."}, {"name": "DeveloperMetadataLocationType", "type": "DeveloperMetadataLocationType", "url": "/apps-script/reference/spreadsheet/developer-metadata-location-type", "description": "An enumeration of possible developer metadata location types."}, {"name": "DeveloperMetadataVisibility", "type": "DeveloperMetadataVisibility", "url": "/apps-script/reference/spreadsheet/developer-metadata-visibility", "description": "An enumeration of the possible developer metadata visibilities."}, {"name": "Dimension", "type": "Dimension", "url": "/apps-script/reference/spreadsheet/dimension", "description": "An enumeration of the possible dimensions of a spreadsheet."}, {"name": "Direction", "type": "Direction", "url": "/apps-script/reference/spreadsheet/direction", "description": "A enumeration of the possible directions that one can move within a spreadsheet using the arrow\nkeys."}, {"name": "FrequencyType", "type": "FrequencyType", "url": "/apps-script/reference/spreadsheet/frequency-type", "description": "An enumeration of possible frequency types."}, {"name": "GroupControlTogglePosition", "type": "GroupControlTogglePosition", "url": "/apps-script/reference/spreadsheet/group-control-toggle-position", "description": "An enumeration of the positions that the group control toggle can be in."}, {"name": "InterpolationType", "type": "InterpolationType", "url": "/apps-script/reference/spreadsheet/interpolation-type", "description": "An enumeration of conditional format gradient interpolation types."}, {"name": "PivotTableSummarizeFunction", "type": "PivotTableSummarizeFunction", "url": "/apps-script/reference/spreadsheet/pivot-table-summarize-function", "description": "An enumeration of the functions that may be used to summarize values in a pivot table."}, {"name": "PivotValueDisplayType", "type": "PivotValueDisplayType", "url": "/apps-script/reference/spreadsheet/pivot-value-display-type", "description": "An enumeration of the ways that a pivot value may be displayed."}, {"name": "ProtectionType", "type": "ProtectionType", "url": "/apps-script/reference/spreadsheet/protection-type", "description": "An enumeration representing the parts of a spreadsheet that can be protected from edits."}, {"name": "RecalculationInterval", "type": "RecalculationInterval", "url": "/apps-script/reference/spreadsheet/recalculation-interval", "description": "An enumeration of the possible intervals that can be used in spreadsheet recalculation."}, {"name": "RelativeDate", "type": "RelativeDate", "url": "/apps-script/reference/spreadsheet/relative-date", "description": "An enumeration of relative date options for calculating a value to be used in date-based BooleanCriteria."}, {"name": "SheetType", "type": "SheetType", "url": "/apps-script/reference/spreadsheet/sheet-type", "description": "An enumeration of the different types of sheets that can exist in a spreadsheet."}, {"name": "SortOrder", "type": "SortOrder", "url": "/apps-script/reference/spreadsheet/sort-order", "description": "An enumeration of sort order."}, {"name": "TextDirection", "type": "TextDirection", "url": "/apps-script/reference/spreadsheet/text-direction", "description": "An enumeration of valid text directions."}, {"name": "TextToColumnsDelimiter", "type": "TextToColumnsDelimiter", "url": "/apps-script/reference/spreadsheet/text-to-columns-delimiter", "description": "An enumeration of the preset delimiters for split text to columns."}, {"name": "ThemeColorType", "type": "ThemeColorType", "url": "/apps-script/reference/spreadsheet/theme-color-type", "description": "An enumeration of possible theme color types."}, {"name": "WrapStrategy", "type": "WrapStrategy", "url": "/apps-script/reference/spreadsheet/wrap-strategy", "description": "An enumeration of the strategies used for wrapping cells."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet/banding", "name": "Banding", "type": "class", "methods": [{"name": "copyTo", "parameters": [{"name": "range", "type": "Range"}], "result": "Banding", "description": "Copies this banding to another range."}, {"name": "getFirstColumnColor", "parameters": [], "result": "String", "description": "Returns the first column color that is alternating, or null if no color is set."}, {"name": "getFirstColumnColorObject", "parameters": [], "result": "Color", "description": "Returns the first alternating column color in the banding, or null if no color is set."}, {"name": "getFirstRowColor", "parameters": [], "result": "String", "description": "Returns the first row color that is alternating or null if no color is set."}, {"name": "getFirstRowColorObject", "parameters": [], "result": "Color", "description": "Returns the first alternating row color, or null if no color is set."}, {"name": "getFooterColumnColor", "parameters": [], "result": "String", "description": "Returns the color of the last column, or null if no color is set."}, {"name": "getFooterColumnColorObject", "parameters": [], "result": "Color", "description": "Returns the color of the last column in the banding, or null if no color is set."}, {"name": "getFooterRowColor", "parameters": [], "result": "String", "description": "Returns the color of the last row, or null if no color is set."}, {"name": "getFooterRowColorObject", "parameters": [], "result": "Color", "description": "Returns the last row color in the banding, or null if no color is set."}, {"name": "getHeaderColumnColor", "parameters": [], "result": "String", "description": "Returns the color of the header column, or null if no color is set."}, {"name": "getHeaderColumnColorObject", "parameters": [], "result": "Color", "description": "Returns the color of the first column in the banding, or null if no color is set."}, {"name": "getHeaderRowColor", "parameters": [], "result": "String", "description": "Returns the color of the header row or null if no color is set."}, {"name": "getHeaderRowColorObject", "parameters": [], "result": "Color", "description": "Returns the color of the header row or null if no color is set."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Returns the range for this banding."}, {"name": "getSecondColumnColor", "parameters": [], "result": "String", "description": "Returns the second column color that is alternating, or null if no color is set."}, {"name": "getSecondColumnColorObject", "parameters": [], "result": "Color", "description": "Returns the second alternating column color in the banding, or null if no color is set."}, {"name": "getSecondRowColor", "parameters": [], "result": "String", "description": "Returns the second row color that is alternating or null if no color is set."}, {"name": "getSecondRowColorObject", "parameters": [], "result": "Color", "description": "Returns the second alternating row color, or null if no color is set."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this banding."}, {"name": "setFirstColumnColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the first column color that is alternating."}, {"name": "setFirstColumnColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the first alternating column color in the banding."}, {"name": "setFirstRowColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the first row color that is alternating."}, {"name": "setFirstRowColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the first alternating row color in the banding."}, {"name": "setFooterColumnColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the color of the last column."}, {"name": "setFooterColumnColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the color of the last column in the banding."}, {"name": "setFooterRowColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the color of the last row."}, {"name": "setFooterRowColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the color of the footer row in the banding."}, {"name": "setHeaderColumnColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the color of the header column."}, {"name": "setHeaderColumnColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the color of the header column."}, {"name": "setHeaderRowColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the color of the header row."}, {"name": "setHeaderRowColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the color of the header row."}, {"name": "setRange", "parameters": [{"name": "range", "type": "Range"}], "result": "Banding", "description": "Sets the range for this banding."}, {"name": "setSecondColumnColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the second column color that is alternating."}, {"name": "setSecondColumnColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the second alternating column color in the banding."}, {"name": "setSecondRowColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the second row color that is alternating."}, {"name": "setSecondRowColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the second alternating color in the banding."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/theme-color-type", "name": "ThemeColorType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "Represents a theme color that is not supported."}, {"name": "DARK1", "type": "Enum", "url": "", "description": "Represents the first dark color."}, {"name": "LIGHT1", "type": "Enum", "url": "", "description": "Represents the first light color."}, {"name": "DARK2", "type": "Enum", "url": "", "description": "Represents the second dark color."}, {"name": "LIGHT2", "type": "Enum", "url": "", "description": "Represents the second light color."}, {"name": "ACCENT1", "type": "Enum", "url": "", "description": "Represents the first accent color."}, {"name": "ACCENT2", "type": "Enum", "url": "", "description": "Represents the second accent color."}, {"name": "ACCENT3", "type": "Enum", "url": "", "description": "Represents the third accent color."}, {"name": "ACCENT4", "type": "Enum", "url": "", "description": "Represents the fourth accent color."}, {"name": "ACCENT5", "type": "Enum", "url": "", "description": "Represents the fifth accent color."}, {"name": "ACCENT6", "type": "Enum", "url": "", "description": "Represents the sixth accent color."}, {"name": "HYPERLINK", "type": "Enum", "url": "", "description": "Represents the color to use for hyperlinks."}, {"name": "FOLLOWED_HYPERLINK", "type": "Enum", "url": "", "description": "Represents the color to use for visited hyperlinks."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/text-direction", "name": "TextDirection", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A text direction that is not supported."}, {"name": "LEFT_TO_RIGHT", "type": "Enum", "url": "", "description": "The text goes from left to right."}, {"name": "RIGHT_TO_LEFT", "type": "Enum", "url": "", "description": "The text goes from right to left."}]},
{"url": "https://developers.google.com/apps-script/reference/spreadsheet", "name": "Spreadsheet", "type": "spreadsheet", "methods": [{"name": "copyTo", "parameters": [{"name": "range", "type": "Range"}], "result": "Banding", "description": "Copies this banding to another range."}, {"name": "getFirstColumnColor", "parameters": [], "result": "String", "description": "Returns the first column color that is alternating, or null if no color is set."}, {"name": "getFirstColumnColorObject", "parameters": [], "result": "Color", "description": "Returns the first alternating column color in the banding, or null if no color is set."}, {"name": "getFirstRowColor", "parameters": [], "result": "String", "description": "Returns the first row color that is alternating or null if no color is set."}, {"name": "getFirstRowColorObject", "parameters": [], "result": "Color", "description": "Returns the first alternating row color, or null if no color is set."}, {"name": "getFooterColumnColor", "parameters": [], "result": "String", "description": "Returns the color of the last column, or null if no color is set."}, {"name": "getFooterColumnColorObject", "parameters": [], "result": "Color", "description": "Returns the color of the last column in the banding, or null if no color is set."}, {"name": "getFooterRowColor", "parameters": [], "result": "String", "description": "Returns the color of the last row, or null if no color is set."}, {"name": "getFooterRowColorObject", "parameters": [], "result": "Color", "description": "Returns the last row color in the banding, or null if no color is set."}, {"name": "getHeaderColumnColor", "parameters": [], "result": "String", "description": "Returns the color of the header column, or null if no color is set."}, {"name": "getHeaderColumnColorObject", "parameters": [], "result": "Color", "description": "Returns the color of the first column in the banding, or null if no color is set."}, {"name": "getHeaderRowColor", "parameters": [], "result": "String", "description": "Returns the color of the header row or null if no color is set."}, {"name": "getHeaderRowColorObject", "parameters": [], "result": "Color", "description": "Returns the color of the header row or null if no color is set."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Returns the range for this banding."}, {"name": "getSecondColumnColor", "parameters": [], "result": "String", "description": "Returns the second column color that is alternating, or null if no color is set."}, {"name": "getSecondColumnColorObject", "parameters": [], "result": "Color", "description": "Returns the second alternating column color in the banding, or null if no color is set."}, {"name": "getSecondRowColor", "parameters": [], "result": "String", "description": "Returns the second row color that is alternating or null if no color is set."}, {"name": "getSecondRowColorObject", "parameters": [], "result": "Color", "description": "Returns the second alternating row color, or null if no color is set."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this banding."}, {"name": "setFirstColumnColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the first column color that is alternating."}, {"name": "setFirstColumnColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the first alternating column color in the banding."}, {"name": "setFirstRowColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the first row color that is alternating."}, {"name": "setFirstRowColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the first alternating row color in the banding."}, {"name": "setFooterColumnColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the color of the last column."}, {"name": "setFooterColumnColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the color of the last column in the banding."}, {"name": "setFooterRowColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the color of the last row."}, {"name": "setFooterRowColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the color of the footer row in the banding."}, {"name": "setHeaderColumnColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the color of the header column."}, {"name": "setHeaderColumnColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the color of the header column."}, {"name": "setHeaderRowColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the color of the header row."}, {"name": "setHeaderRowColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the color of the header row."}, {"name": "setRange", "parameters": [{"name": "range", "type": "Range"}], "result": "Banding", "description": "Sets the range for this banding."}, {"name": "setSecondColumnColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the second column color that is alternating."}, {"name": "setSecondColumnColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the second alternating column color in the banding."}, {"name": "setSecondRowColor", "parameters": [{"name": "color", "type": "String"}], "result": "Banding", "description": "Sets the second row color that is alternating."}, {"name": "setSecondRowColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Banding", "description": "Sets the second alternating color in the banding."}, {"name": "copy", "parameters": [], "result": "DataSourceSpecBuilder", "description": "Creates a DataSourceSpecBuilder based on this data source's settings."}, {"name": "getDatasetId", "parameters": [], "result": "String", "description": "Gets the BigQuery dataset ID."}, {"name": "getParameters", "parameters": [], "result": "DataSourceParameter[]", "description": "Gets the parameters of the data source."}, {"name": "getProjectId", "parameters": [], "result": "String", "description": "Gets the billing project ID."}, {"name": "getRawQuery", "parameters": [], "result": "String", "description": "Gets the raw query string."}, {"name": "getTableId", "parameters": [], "result": "String", "description": "Gets the BigQuery table ID."}, {"name": "getTableProjectId", "parameters": [], "result": "String", "description": "Gets the BigQuery project ID for the table."}, {"name": "getType", "parameters": [], "result": "DataSourceType", "description": "Gets the type of the data source."}, {"name": "build", "parameters": [], "result": "DataSourceSpec", "description": "Builds a data source specification from the settings in this builder."}, {"name": "copy", "parameters": [], "result": "DataSourceSpecBuilder", "description": "Creates a DataSourceSpecBuilder based on this data source's settings."}, {"name": "getDatasetId", "parameters": [], "result": "String", "description": "Gets the BigQuery dataset ID."}, {"name": "getParameters", "parameters": [], "result": "DataSourceParameter[]", "description": "Gets the parameters of the data source."}, {"name": "getProjectId", "parameters": [], "result": "String", "description": "Gets the billing project ID."}, {"name": "getRawQuery", "parameters": [], "result": "String", "description": "Gets the raw query string."}, {"name": "getTableId", "parameters": [], "result": "String", "description": "Gets the BigQuery table ID."}, {"name": "getTableProjectId", "parameters": [], "result": "String", "description": "Gets the BigQuery project ID for the table."}, {"name": "getType", "parameters": [], "result": "DataSourceType", "description": "Gets the type of the data source."}, {"name": "removeAllParameters", "parameters": [], "result": "BigQueryDataSourceSpecBuilder", "description": "Removes all the parameters."}, {"name": "removeParameter", "parameters": [{"name": "parameterName", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Removes the specified parameter."}, {"name": "setDatasetId", "parameters": [{"name": "datasetId", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Sets the BigQuery dataset ID."}, {"name": "setParameterFromCell", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sourceCell", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Adds a parameter, or if the parameter with the name exists, updates its source cell."}, {"name": "setProjectId", "parameters": [{"name": "projectId", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Sets the billing BigQuery project ID."}, {"name": "setRawQuery", "parameters": [{"name": "rawQuery", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Sets the raw query string."}, {"name": "setTableId", "parameters": [{"name": "tableId", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Sets the BigQuery table ID."}, {"name": "setTableProjectId", "parameters": [{"name": "projectId", "type": "String"}], "result": "BigQueryDataSourceSpecBuilder", "description": "Sets the BigQuery project ID for the table."}, {"name": "getBackground", "parameters": [], "result": "String", "description": "Gets the background color string for this boolean condition."}, {"name": "getBackgroundObject", "parameters": [], "result": "Color", "description": "Gets the background color for this boolean condition."}, {"name": "getBold", "parameters": [], "result": "Boolean", "description": "Returns true if this boolean condition bolds the text and returns false if this\nboolean condition removes bolding from the text."}, {"name": "getCriteriaType", "parameters": [], "result": "BooleanCriteria", "description": "Gets the rule's criteria type as defined in the BooleanCriteria enum."}, {"name": "getCriteriaValues", "parameters": [], "result": "Object[]", "description": "Gets an array of arguments for the rule's criteria."}, {"name": "getFontColor", "parameters": [], "result": "String", "description": "Gets the font color string for this boolean condition."}, {"name": "getFontColorObject", "parameters": [], "result": "Color", "description": "Gets the font color for this boolean condition."}, {"name": "getItalic", "parameters": [], "result": "Boolean", "description": "Returns true if this boolean condition italicises the text and returns false if\nthis boolean condition removes italics from the text."}, {"name": "getStrikethrough", "parameters": [], "result": "Boolean", "description": "Returns true if this boolean condition strikes through the text and returns false if this boolean condition removes strikethrough from the text."}, {"name": "getUnderline", "parameters": [], "result": "Boolean", "description": "Returns true if this boolean condition underlines the text and returns false if\nthis boolean condition removes underlining from the text."}, {"name": "asRgbColor", "parameters": [], "result": "RgbColor", "description": "Converts this color to an RgbColor."}, {"name": "asThemeColor", "parameters": [], "result": "ThemeColor", "description": "Converts this color to a ThemeColor."}, {"name": "getColorType", "parameters": [], "result": "ColorType", "description": "Get the type of this color."}, {"name": "asRgbColor", "parameters": [], "result": "RgbColor", "description": "Converts this color to an RgbColor."}, {"name": "asThemeColor", "parameters": [], "result": "ThemeColor", "description": "Converts this color to a ThemeColor."}, {"name": "build", "parameters": [], "result": "Color", "description": "Creates a color object from the settings supplied to the builder."}, {"name": "getColorType", "parameters": [], "result": "ColorType", "description": "Get the type of this color."}, {"name": "setRgbColor", "parameters": [{"name": "cssString", "type": "String"}], "result": "ColorBuilder", "description": "Sets as RGB color."}, {"name": "setThemeColor", "parameters": [{"name": "themeColorType", "type": "ThemeColorType"}], "result": "ColorBuilder", "description": "Sets as theme color."}, {"name": "copy", "parameters": [], "result": "ConditionalFormatRuleBuilder", "description": "Returns a rule builder preset with this rule's settings."}, {"name": "getBooleanCondition", "parameters": [], "result": "BooleanCondition", "description": "Retrieves the rule's BooleanCondition information if this rule uses\nboolean condition criteria."}, {"name": "getGradientCondition", "parameters": [], "result": "GradientCondition", "description": "Retrieves the rule's GradientCondition information, if this rule\nuses gradient condition criteria."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Retrieves the ranges to which this conditional format rule is applied."}, {"name": "build", "parameters": [], "result": "ConditionalFormatRule", "description": "Constructs a conditional format rule from the settings applied to the builder."}, {"name": "copy", "parameters": [], "result": "ConditionalFormatRuleBuilder", "description": "Returns a rule builder preset with this rule's settings."}, {"name": "getBooleanCondition", "parameters": [], "result": "BooleanCondition", "description": "Retrieves the rule's BooleanCondition information if this rule uses\nboolean condition criteria."}, {"name": "getGradientCondition", "parameters": [], "result": "GradientCondition", "description": "Retrieves the rule's GradientCondition information, if this rule\nuses gradient condition criteria."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Retrieves the ranges to which this conditional format rule is applied."}, {"name": "setBackground", "parameters": [{"name": "color", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the background color for the conditional format rule's format."}, {"name": "setBackgroundObject", "parameters": [{"name": "color", "type": "Color"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the background color for the conditional format rule's format."}, {"name": "setBold", "parameters": [{"name": "bold", "type": "Boolean"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets text bolding for the conditional format rule's format."}, {"name": "setFontColor", "parameters": [{"name": "color", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the font color for the conditional format rule's format."}, {"name": "setFontColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the font color for the conditional format rule's format."}, {"name": "setGradientMaxpoint", "parameters": [{"name": "color", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Clears the conditional format rule's gradient maxpoint value, and instead uses the maximum\nvalue in the rule's ranges."}, {"name": "setGradientMaxpointObject", "parameters": [{"name": "color", "type": "Color"}], "result": "ConditionalFormatRuleBuilder", "description": "Clears the conditional format rule's gradient maxpoint value, and instead uses the maximum\nvalue in the rule's ranges."}, {"name": "setGradientMaxpointObjectWithValue", "parameters": [{"name": "color", "type": "Color"}, {"name": "type", "type": "InterpolationType"}, {"name": "value", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule's gradient maxpoint fields."}, {"name": "setGradientMaxpointWithValue", "parameters": [{"name": "color", "type": "String"}, {"name": "type", "type": "InterpolationType"}, {"name": "value", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule's gradient maxpoint fields."}, {"name": "setGradientMidpointObjectWithValue", "parameters": [{"name": "color", "type": "Color"}, {"name": "type", "type": "InterpolationType"}, {"name": "value", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule's gradient midpoint fields."}, {"name": "setGradientMidpointWithValue", "parameters": [{"name": "color", "type": "String"}, {"name": "type", "type": "InterpolationType"}, {"name": "value", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule's gradient midpoint fields."}, {"name": "setGradientMinpoint", "parameters": [{"name": "color", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Clears the conditional format rule's gradient minpoint value, and instead uses the minimum\nvalue in the rule's ranges."}, {"name": "setGradientMinpointObject", "parameters": [{"name": "color", "type": "Color"}], "result": "ConditionalFormatRuleBuilder", "description": "Clears the conditional format rule's gradient minpoint value, and instead uses the minimum\nvalue in the rule's ranges."}, {"name": "setGradientMinpointObjectWithValue", "parameters": [{"name": "color", "type": "Color"}, {"name": "type", "type": "InterpolationType"}, {"name": "value", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule's gradient minpoint fields."}, {"name": "setGradientMinpointWithValue", "parameters": [{"name": "color", "type": "String"}, {"name": "type", "type": "InterpolationType"}, {"name": "value", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule's gradient minpoint fields."}, {"name": "setItalic", "parameters": [{"name": "italic", "type": "Boolean"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets text italics for the conditional format rule's format."}, {"name": "setRanges", "parameters": [{"name": "ranges", "type": "Range"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets one or more ranges to which this conditional format rule is applied."}, {"name": "setStrikethrough", "parameters": [{"name": "strikethrough", "type": "Boolean"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets text strikethrough for the conditional format rule's format."}, {"name": "setUnderline", "parameters": [{"name": "underline", "type": "Boolean"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets text underlining for the conditional format rule's format."}, {"name": "whenCellEmpty", "parameters": [], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when the cell is empty."}, {"name": "whenCellNotEmpty", "parameters": [], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when the cell is not empty."}, {"name": "whenDateAfter", "parameters": [{"name": "date", "type": "Date"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a date is after the given value."}, {"name": "whenDateAfter", "parameters": [{"name": "date", "type": "RelativeDate"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a date is after the given relative date."}, {"name": "whenDateBefore", "parameters": [{"name": "date", "type": "Date"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a date is before the given date."}, {"name": "whenDateBefore", "parameters": [{"name": "date", "type": "RelativeDate"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a date is before the given relative date."}, {"name": "whenDateEqualTo", "parameters": [{"name": "date", "type": "Date"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a date is equal to the given date."}, {"name": "whenDateEqualTo", "parameters": [{"name": "date", "type": "RelativeDate"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a date is equal to the given relative date."}, {"name": "whenFormulaSatisfied", "parameters": [{"name": "formula", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when that the given formula evaluates to true."}, {"name": "whenNumberBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number falls between, or is either of, two\nspecified values."}, {"name": "whenNumberEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number is equal to the given value."}, {"name": "whenNumberGreaterThan", "parameters": [{"name": "number", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number is greater than the given value."}, {"name": "whenNumberGreaterThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number is greater than or equal to the given\nvalue."}, {"name": "whenNumberLessThan", "parameters": [{"name": "number", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional conditional format rule to trigger when a number less than the given\nvalue."}, {"name": "whenNumberLessThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number less than or equal to the given\nvalue."}, {"name": "whenNumberNotBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number does not fall between, and is neither\nof, two specified values."}, {"name": "whenNumberNotEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when a number is not equal to the given value."}, {"name": "whenTextContains", "parameters": [{"name": "text", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when that the input contains the given value."}, {"name": "whenTextDoesNotContain", "parameters": [{"name": "text", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when that the input does not contain the given\nvalue."}, {"name": "whenTextEndsWith", "parameters": [{"name": "text", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when that the input ends with the given value."}, {"name": "whenTextEqualTo", "parameters": [{"name": "text", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when that the input is equal to the given value."}, {"name": "whenTextStartsWith", "parameters": [{"name": "text", "type": "String"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to trigger when that the input starts with the given value."}, {"name": "withCriteria", "parameters": [{"name": "criteria", "type": "BooleanCriteria"}, {"name": "args", "type": "Object"}], "result": "ConditionalFormatRuleBuilder", "description": "Sets the conditional format rule to criteria defined by BooleanCriteria values,\ntypically taken from the criteria and arguments of an\nexisting rule."}, {"name": "getAnchorColumn", "parameters": [], "result": "Integer", "description": "The chart's left side is anchored in this column."}, {"name": "getAnchorRow", "parameters": [], "result": "Integer", "description": "The chart's top side is anchored in this row."}, {"name": "getOffsetX", "parameters": [], "result": "Integer", "description": "The chart's upper left hand corner is offset from the anchor column by this many pixels."}, {"name": "getOffsetY", "parameters": [], "result": "Integer", "description": "The chart's upper left hand corner is offset from the anchor row by this many pixels."}, {"name": "getErrorCode", "parameters": [], "result": "DataExecutionErrorCode", "description": "Gets the error code of the data execution."}, {"name": "getErrorMessage", "parameters": [], "result": "String", "description": "Gets the error message of the data execution."}, {"name": "getExecutionState", "parameters": [], "result": "DataExecutionState", "description": "Gets the state of the data execution."}, {"name": "getLastExecutionTime", "parameters": [], "result": "Date", "description": "Gets the time the last data execution completed regardless of the execution state."}, {"name": "getLastRefreshedTime", "parameters": [], "result": "Date", "description": "Gets the time the data last successfully refreshed."}, {"name": "isTruncated", "parameters": [], "result": "Boolean", "description": "Returns true if the data from last successful execution is truncated, or false\notherwise."}, {"name": "createCalculatedColumn", "parameters": [{"name": "name", "type": "String"}, {"name": "formula", "type": "String"}], "result": "DataSourceColumn", "description": "Creates a calculated column."}, {"name": "createDataSourcePivotTableOnNewSheet", "parameters": [], "result": "DataSourcePivotTable", "description": "Creates a data source pivot table from this data source in the first cell of a new sheet."}, {"name": "createDataSourceTableOnNewSheet", "parameters": [], "result": "DataSourceTable", "description": "Creates a data source table from this data source in the first cell of a new sheet."}, {"name": "getCalculatedColumnByName", "parameters": [{"name": "columnName", "type": "String"}], "result": "DataSourceColumn", "description": "Returns the calculated column in the data source that matches the column name."}, {"name": "getCalculatedColumns", "parameters": [], "result": "DataSourceColumn[]", "description": "Returns all the calculated columns in the data source."}, {"name": "getColumns", "parameters": [], "result": "DataSourceColumn[]", "description": "Returns all the columns in the data source."}, {"name": "getDataSourceSheets", "parameters": [], "result": "DataSourceSheet[]", "description": "Returns the data source sheets associated with this data source."}, {"name": "getSpec", "parameters": [], "result": "DataSourceSpec", "description": "Gets the data source specification."}, {"name": "refreshAllLinkedDataSourceObjects", "parameters": [], "result": "void", "description": "Refreshes all data source objects linked to the data source."}, {"name": "updateSpec", "parameters": [{"name": "spec", "type": "DataSourceSpec"}], "result": "DataSource", "description": "Updates the data source specification and refreshes the data source objects linked with this\ndata source with the new specification."}, {"name": "updateSpec", "parameters": [{"name": "spec", "type": "DataSourceSpec"}, {"name": "refreshAllLinkedObjects", "type": "Boolean"}], "result": "DataSource", "description": "Updates the data source specification and refreshes the linked data\nsource sheets with the new specification."}, {"name": "waitForAllDataExecutionsCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "void", "description": "Waits until all the current executions of the linked data source objects complete, timing out\nafter the provided number of seconds."}, {"name": "forceRefreshData", "parameters": [], "result": "DataSourceChart", "description": "Refreshes the data of this object regardless of the current state."}, {"name": "getDataSource", "parameters": [], "result": "DataSource", "description": "Gets the data source the object is linked to."}, {"name": "getStatus", "parameters": [], "result": "DataExecutionStatus", "description": "Gets the data execution status of the object."}, {"name": "refreshData", "parameters": [], "result": "DataSourceChart", "description": "Refreshes the data of the object."}, {"name": "waitForCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "DataExecutionStatus", "description": "Waits until the current execution completes, timing out after the provided number of seconds."}, {"name": "getDataSource", "parameters": [], "result": "DataSource", "description": "Gets the data source associated with the data source column."}, {"name": "getFormula", "parameters": [], "result": "String", "description": "Gets the formula for the data source column."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name for the data source column."}, {"name": "hasArrayDependency", "parameters": [], "result": "Boolean", "description": "Returns whether the column has an array dependency."}, {"name": "isCalculatedColumn", "parameters": [], "result": "Boolean", "description": "Returns whether the column is a calculated column."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the data source column."}, {"name": "setFormula", "parameters": [{"name": "formula", "type": "String"}], "result": "DataSourceColumn", "description": "Sets the formula for the data source column."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "DataSourceColumn", "description": "Sets the name of the data source column."}, {"name": "forceRefreshData", "parameters": [], "result": "DataSourceFormula", "description": "Refreshes the data of this object regardless of the current state."}, {"name": "getAnchorCell", "parameters": [], "result": "Range", "description": "Returns the Range representing the cell where this data source formula is anchored."}, {"name": "getDataSource", "parameters": [], "result": "DataSource", "description": "Gets the data source the object is linked to."}, {"name": "getDisplayValue", "parameters": [], "result": "String", "description": "Returns the display value of the data source formula."}, {"name": "getFormula", "parameters": [], "result": "String", "description": "Returns the formula for this data source formula."}, {"name": "getStatus", "parameters": [], "result": "DataExecutionStatus", "description": "Gets the data execution status of the object."}, {"name": "refreshData", "parameters": [], "result": "DataSourceFormula", "description": "Refreshes the data of the object."}, {"name": "setFormula", "parameters": [{"name": "formula", "type": "String"}], "result": "DataSourceFormula", "description": "Updates the formula."}, {"name": "waitForCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "DataExecutionStatus", "description": "Waits until the current execution completes, timing out after the provided number of seconds."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the parameter name."}, {"name": "getSourceCell", "parameters": [], "result": "String", "description": "Gets the source cell the parameter is valued based on, or null if the parameter type is\nnot DataSourceParameterType.CELL."}, {"name": "getType", "parameters": [], "result": "DataSourceParameterType", "description": "Gets the parameter type."}, {"name": "addColumnGroup", "parameters": [{"name": "columnName", "type": "String"}], "result": "PivotGroup", "description": "Adds a new pivot column group based on the specified data source column."}, {"name": "addFilter", "parameters": [{"name": "columnName", "type": "String"}, {"name": "filterCriteria", "type": "FilterCriteria"}], "result": "PivotFilter", "description": "Adds a new filter based on the specified data source column with the specified filter criteria."}, {"name": "addPivotValue", "parameters": [{"name": "columnName", "type": "String"}, {"name": "summarizeFunction", "type": "PivotTableSummarizeFunction"}], "result": "PivotValue", "description": "Adds a new pivot value based on the specified data source column with the specified summarize\nfunction."}, {"name": "addRowGroup", "parameters": [{"name": "columnName", "type": "String"}], "result": "PivotGroup", "description": "Adds a new pivot row group based on the specified data source column."}, {"name": "asPivotTable", "parameters": [], "result": "PivotTable", "description": "Returns the data source pivot table as a regular pivot table object."}, {"name": "forceRefreshData", "parameters": [], "result": "DataSourcePivotTable", "description": "Refreshes the data of this object regardless of the current state."}, {"name": "getDataSource", "parameters": [], "result": "DataSource", "description": "Gets the data source the object is linked to."}, {"name": "getStatus", "parameters": [], "result": "DataExecutionStatus", "description": "Gets the data execution status of the object."}, {"name": "refreshData", "parameters": [], "result": "DataSourcePivotTable", "description": "Refreshes the data of the object."}, {"name": "waitForCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "DataExecutionStatus", "description": "Waits until the current execution completes, timing out after the provided number of seconds."}, {"name": "getFrequency", "parameters": [], "result": "DataSourceRefreshScheduleFrequency", "description": "Gets the refresh schedule frequency, which specifies how often and when to refresh."}, {"name": "getScope", "parameters": [], "result": "DataSourceRefreshScope", "description": "Gets the scope of this refresh schedule."}, {"name": "getTimeIntervalOfNextRun", "parameters": [], "result": "TimeInterval", "description": "Gets the time window of the next run of this refresh schedule."}, {"name": "isEnabled", "parameters": [], "result": "Boolean", "description": "Determines whether this refresh schedule is enabled."}, {"name": "getDaysOfTheMonth", "parameters": [], "result": "Integer[]", "description": "Gets the days of the month as numbers (1-28) on which to refresh the data source."}, {"name": "getDaysOfTheWeek", "parameters": [], "result": "Weekday[]", "description": "Gets the days of the week on which to refresh the data source."}, {"name": "getFrequencyType", "parameters": [], "result": "FrequencyType", "description": "Gets the frequency type."}, {"name": "getStartHour", "parameters": [], "result": "Integer", "description": "Gets the start hour (as a number 0-23) of the time interval during which the refresh schedule\nruns."}, {"name": "addFilter", "parameters": [{"name": "columnName", "type": "String"}, {"name": "filterCriteria", "type": "FilterCriteria"}], "result": "DataSourceSheet", "description": "Adds a filter applied to the data source sheet."}, {"name": "asSheet", "parameters": [], "result": "Sheet", "description": "Returns the data source sheet as a regular sheet object."}, {"name": "autoResizeColumn", "parameters": [{"name": "columnName", "type": "String"}], "result": "DataSourceSheet", "description": "Auto resizes the width of the specified column."}, {"name": "autoResizeColumns", "parameters": [{"name": "columnNames", "type": "String"}], "result": "DataSourceSheet", "description": "Auto resizes the width of the specified columns."}, {"name": "forceRefreshData", "parameters": [], "result": "DataSourceSheet", "description": "Refreshes the data of this object regardless of the current state."}, {"name": "getColumnWidth", "parameters": [{"name": "columnName", "type": "String"}], "result": "Integer", "description": "Returns the width of the specified column."}, {"name": "getDataSource", "parameters": [], "result": "DataSource", "description": "Gets the data source the object is linked to."}, {"name": "getFilters", "parameters": [], "result": "DataSourceSheetFilter[]", "description": "Returns all filters applied to the data source sheet."}, {"name": "getSheetValues", "parameters": [{"name": "columnName", "type": "String"}], "result": "Object[]", "description": "Returns all the values for the data source sheet for the provided column name."}, {"name": "getSheetValues", "parameters": [{"name": "columnName", "type": "String"}, {"name": "startRow", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "Object[]", "description": "Returns all the values for the data source sheet for the provided column name from the provided\nstart row (based-1) and up to the provided numRows."}, {"name": "getSortSpecs", "parameters": [], "result": "SortSpec[]", "description": "Gets all the sort specs in the data source sheet."}, {"name": "getStatus", "parameters": [], "result": "DataExecutionStatus", "description": "Gets the data execution status of the object."}, {"name": "refreshData", "parameters": [], "result": "DataSourceSheet", "description": "Refreshes the data of the object."}, {"name": "removeFilters", "parameters": [{"name": "columnName", "type": "String"}], "result": "DataSourceSheet", "description": "Removes all filters applied to the data source sheet column."}, {"name": "removeSortSpec", "parameters": [{"name": "columnName", "type": "String"}], "result": "DataSourceSheet", "description": "Removes the sort spec on a column in the data source sheet."}, {"name": "setColumnWidth", "parameters": [{"name": "columnName", "type": "String"}, {"name": "width", "type": "Integer"}], "result": "DataSourceSheet", "description": "Sets the width of the specified column."}, {"name": "setColumnWidths", "parameters": [{"name": "columnNames", "type": "String"}, {"name": "width", "type": "Integer"}], "result": "DataSourceSheet", "description": "Sets the width of the specified columns."}, {"name": "setSortSpec", "parameters": [{"name": "columnName", "type": "String"}, {"name": "ascending", "type": "Boolean"}], "result": "DataSourceSheet", "description": "Sets the sort spec on a column in the data source sheet."}, {"name": "setSortSpec", "parameters": [{"name": "columnName", "type": "String"}, {"name": "sortOrder", "type": "SortOrder"}], "result": "DataSourceSheet", "description": "Sets the sort spec on a column in the data source sheet."}, {"name": "waitForCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "DataExecutionStatus", "description": "Waits until the current execution completes, timing out after the provided number of seconds."}, {"name": "getDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Returns the data source column this filter applies to."}, {"name": "getDataSourceSheet", "parameters": [], "result": "DataSourceSheet", "description": "Returns the DataSourceSheet that this filter belongs to."}, {"name": "getFilterCriteria", "parameters": [], "result": "FilterCriteria", "description": "Returns the filter criteria for this filter."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this filter from the data source object."}, {"name": "setFilterCriteria", "parameters": [{"name": "filterCriteria", "type": "FilterCriteria"}], "result": "DataSourceSheetFilter", "description": "Sets the filter criteria for this filter."}, {"name": "asBigQuery", "parameters": [], "result": "BigQueryDataSourceSpec", "description": "Gets the spec for BigQuery data source."}, {"name": "copy", "parameters": [], "result": "DataSourceSpecBuilder", "description": "Creates a DataSourceSpecBuilder based on this data source's settings."}, {"name": "getParameters", "parameters": [], "result": "DataSourceParameter[]", "description": "Gets the parameters of the data source."}, {"name": "getType", "parameters": [], "result": "DataSourceType", "description": "Gets the type of the data source."}, {"name": "asBigQuery", "parameters": [], "result": "BigQueryDataSourceSpecBuilder", "description": "Gets the builder for BigQuery data source."}, {"name": "build", "parameters": [], "result": "DataSourceSpec", "description": "Builds a data source specification from the settings in this builder."}, {"name": "copy", "parameters": [], "result": "DataSourceSpecBuilder", "description": "Creates a DataSourceSpecBuilder based on this data source's settings."}, {"name": "getParameters", "parameters": [], "result": "DataSourceParameter[]", "description": "Gets the parameters of the data source."}, {"name": "getType", "parameters": [], "result": "DataSourceType", "description": "Gets the type of the data source."}, {"name": "removeAllParameters", "parameters": [], "result": "DataSourceSpecBuilder", "description": "Removes all the parameters."}, {"name": "removeParameter", "parameters": [{"name": "parameterName", "type": "String"}], "result": "DataSourceSpecBuilder", "description": "Removes the specified parameter."}, {"name": "setParameterFromCell", "parameters": [{"name": "parameterName", "type": "String"}, {"name": "sourceCell", "type": "String"}], "result": "DataSourceSpecBuilder", "description": "Adds a parameter, or if the parameter with the name exists, updates its source cell."}, {"name": "addColumns", "parameters": [{"name": "columnNames", "type": "String"}], "result": "DataSourceTable", "description": "Adds columns to the data source table."}, {"name": "addFilter", "parameters": [{"name": "columnName", "type": "String"}, {"name": "filterCriteria", "type": "FilterCriteria"}], "result": "DataSourceTable", "description": "Adds a filter applied to the data source table."}, {"name": "addSortSpec", "parameters": [{"name": "columnName", "type": "String"}, {"name": "ascending", "type": "Boolean"}], "result": "DataSourceTable", "description": "Adds a sort spec on a column in the data source table."}, {"name": "addSortSpec", "parameters": [{"name": "columnName", "type": "String"}, {"name": "sortOrder", "type": "SortOrder"}], "result": "DataSourceTable", "description": "Adds a sort spec on a column in the data source table."}, {"name": "forceRefreshData", "parameters": [], "result": "DataSourceTable", "description": "Refreshes the data of this object regardless of the current state."}, {"name": "getColumns", "parameters": [], "result": "DataSourceTableColumn[]", "description": "Gets all the data source columns added to the data source table."}, {"name": "getDataSource", "parameters": [], "result": "DataSource", "description": "Gets the data source the object is linked to."}, {"name": "getFilters", "parameters": [], "result": "DataSourceTableFilter[]", "description": "Returns all filters applied to the data source table."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Gets the Range this data source table spans."}, {"name": "getRowLimit", "parameters": [], "result": "Integer", "description": "Returns the row limit for the data source table."}, {"name": "getSortSpecs", "parameters": [], "result": "SortSpec[]", "description": "Gets all the sort specs in the data source table."}, {"name": "getStatus", "parameters": [], "result": "DataExecutionStatus", "description": "Gets the data execution status of the object."}, {"name": "isSyncingAllColumns", "parameters": [], "result": "Boolean", "description": "Returns whether the data source table is syncing all columns in the associated data source."}, {"name": "refreshData", "parameters": [], "result": "DataSourceTable", "description": "Refreshes the data of the object."}, {"name": "removeAllColumns", "parameters": [], "result": "DataSourceTable", "description": "Removes all the columns in the data source table."}, {"name": "removeAllSortSpecs", "parameters": [], "result": "DataSourceTable", "description": "Removes all the sort specs in the data source table."}, {"name": "setRowLimit", "parameters": [{"name": "rowLimit", "type": "Integer"}], "result": "DataSourceTable", "description": "Updates the row limit for the data source table."}, {"name": "syncAllColumns", "parameters": [], "result": "DataSourceTable", "description": "Sync all current and future columns in the associated data source to the data source table."}, {"name": "waitForCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "DataExecutionStatus", "description": "Waits until the current execution completes, timing out after the provided number of seconds."}, {"name": "getDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Gets the data souce column."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the column from the DataSourceTable."}, {"name": "getDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Returns the data source column this filter applies to."}, {"name": "getDataSourceTable", "parameters": [], "result": "DataSourceTable", "description": "Returns the DataSourceTable that this filter belongs to."}, {"name": "getFilterCriteria", "parameters": [], "result": "FilterCriteria", "description": "Returns the filter criteria for this filter."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this filter from the data source object."}, {"name": "setFilterCriteria", "parameters": [{"name": "filterCriteria", "type": "FilterCriteria"}], "result": "DataSourceTableFilter", "description": "Sets the filter criteria for this filter."}, {"name": "copy", "parameters": [], "result": "DataValidationBuilder", "description": "Creates a builder for a data validation rule based on this rule's settings."}, {"name": "getAllowInvalid", "parameters": [], "result": "Boolean", "description": "Returns true if the rule shows a warning when input fails data validation, or false if it rejects the input entirely."}, {"name": "getCriteriaType", "parameters": [], "result": "DataValidationCriteria", "description": "Gets the rule's criteria type as defined in the DataValidationCriteria enum."}, {"name": "getCriteriaValues", "parameters": [], "result": "Object[]", "description": "Gets an array of arguments for the rule's criteria."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the rule's help text, or null if no help text is set."}, {"name": "build", "parameters": [], "result": "DataValidation", "description": "Constructs a data validation rule from the settings applied to the builder."}, {"name": "copy", "parameters": [], "result": "DataValidationBuilder", "description": "Creates a builder for a data validation rule based on this rule's settings."}, {"name": "getAllowInvalid", "parameters": [], "result": "Boolean", "description": "Returns true if the rule shows a warning when input fails data validation, or false if it rejects the input entirely."}, {"name": "getCriteriaType", "parameters": [], "result": "DataValidationCriteria", "description": "Gets the rule's criteria type as defined in the DataValidationCriteria enum."}, {"name": "getCriteriaValues", "parameters": [], "result": "Object[]", "description": "Gets an array of arguments for the rule's criteria."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the rule's help text, or null if no help text is set."}, {"name": "requireCheckbox", "parameters": [], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is a boolean value; this value is\nrendered as a checkbox."}, {"name": "requireCheckbox", "parameters": [{"name": "checkedValue", "type": "Object"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is the specified value or blank."}, {"name": "requireCheckbox", "parameters": [{"name": "checkedValue", "type": "Object"}, {"name": "uncheckedValue", "type": "Object"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is one of the specified values."}, {"name": "requireDate", "parameters": [], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date."}, {"name": "requireDateAfter", "parameters": [{"name": "date", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date after the given value."}, {"name": "requireDateBefore", "parameters": [{"name": "date", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date before the given value."}, {"name": "requireDateBetween", "parameters": [{"name": "start", "type": "Date"}, {"name": "end", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date that falls between, or is either of, two\nspecified dates."}, {"name": "requireDateEqualTo", "parameters": [{"name": "date", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date equal to the given value."}, {"name": "requireDateNotBetween", "parameters": [{"name": "start", "type": "Date"}, {"name": "end", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date that does not fall between, and is neither of,\ntwo specified dates."}, {"name": "requireDateOnOrAfter", "parameters": [{"name": "date", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date on or after the given value."}, {"name": "requireDateOnOrBefore", "parameters": [{"name": "date", "type": "Date"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a date on or before the given value."}, {"name": "requireFormulaSatisfied", "parameters": [{"name": "formula", "type": "String"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the given formula evaluates to true."}, {"name": "requireNumberBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number that falls between, or is either of, two\nspecified numbers."}, {"name": "requireNumberEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number equal to the given value."}, {"name": "requireNumberGreaterThan", "parameters": [{"name": "number", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number greater than the given value."}, {"name": "requireNumberGreaterThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number greater than or equal to the given value."}, {"name": "requireNumberLessThan", "parameters": [{"name": "number", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number less than the given value."}, {"name": "requireNumberLessThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number less than or equal to the given value."}, {"name": "requireNumberNotBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number that does not fall between, and is neither\nof, two specified numbers."}, {"name": "requireNumberNotEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require a number not equal to the given value."}, {"name": "requireTextContains", "parameters": [{"name": "text", "type": "String"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input contains the given value."}, {"name": "requireTextDoesNotContain", "parameters": [{"name": "text", "type": "String"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input does not contain the given value."}, {"name": "requireTextEqualTo", "parameters": [{"name": "text", "type": "String"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is equal to the given value."}, {"name": "requireTextIsEmail", "parameters": [], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is in the form of an email address."}, {"name": "requireTextIsUrl", "parameters": [], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is in the form of a URL."}, {"name": "requireValueInList", "parameters": [{"name": "values", "type": "String"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is equal to one of the given values."}, {"name": "requireValueInList", "parameters": [{"name": "values", "type": "String"}, {"name": "showDropdown", "type": "Boolean"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is equal to one of the given values,\nwith an option to hide the dropdown menu."}, {"name": "requireValueInRange", "parameters": [{"name": "range", "type": "Range"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is equal to a value in the given range."}, {"name": "requireValueInRange", "parameters": [{"name": "range", "type": "Range"}, {"name": "showDropdown", "type": "Boolean"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to require that the input is equal to a value in the given range,\nwith an option to hide the dropdown menu."}, {"name": "setAllowInvalid", "parameters": [{"name": "allowInvalidData", "type": "Boolean"}], "result": "DataValidationBuilder", "description": "Sets whether to show a warning when input fails data validation or whether to reject the input\nentirely."}, {"name": "setHelpText", "parameters": [{"name": "helpText", "type": "String"}], "result": "DataValidationBuilder", "description": "Sets the help text that appears when the user hovers over the cell on which data validation is\nset."}, {"name": "withCriteria", "parameters": [{"name": "criteria", "type": "DataValidationCriteria"}, {"name": "args", "type": "Object"}], "result": "DataValidationBuilder", "description": "Sets the data validation rule to criteria defined by DataValidationCriteria values,\ntypically taken from the criteria and arguments of an existing rule."}, {"name": "getRuleType", "parameters": [], "result": "DateTimeGroupingRuleType", "description": "Gets the type of the date-time grouping rule."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Returns the unique ID associated with this developer metadata."}, {"name": "getKey", "parameters": [], "result": "String", "description": "Returns the key associated with this developer metadata."}, {"name": "getLocation", "parameters": [], "result": "DeveloperMetadataLocation", "description": "Returns the location of this developer metadata."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Returns the value associated with this developer metadata, or null if this metadata has\nno value."}, {"name": "getVisibility", "parameters": [], "result": "DeveloperMetadataVisibility", "description": "Returns the visibility of this developer metadata."}, {"name": "moveToColumn", "parameters": [{"name": "column", "type": "Range"}], "result": "DeveloperMetadata", "description": "Moves this developer metadata to the specified column."}, {"name": "moveToRow", "parameters": [{"name": "row", "type": "Range"}], "result": "DeveloperMetadata", "description": "Moves this developer metadata to the specified row."}, {"name": "moveToSheet", "parameters": [{"name": "sheet", "type": "Sheet"}], "result": "DeveloperMetadata", "description": "Moves this developer metadata to the specified sheet."}, {"name": "moveToSpreadsheet", "parameters": [], "result": "DeveloperMetadata", "description": "Moves this developer metadata to the top-level spreadsheet."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes this metadata."}, {"name": "setKey", "parameters": [{"name": "key", "type": "String"}], "result": "DeveloperMetadata", "description": "Sets the key of this developer metadata to the specified value."}, {"name": "setValue", "parameters": [{"name": "value", "type": "String"}], "result": "DeveloperMetadata", "description": "Sets the value associated with this developer metadata to the specified value."}, {"name": "setVisibility", "parameters": [{"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "DeveloperMetadata", "description": "Sets the visibility of this developer metadata to the specified visibility."}, {"name": "find", "parameters": [], "result": "DeveloperMetadata[]", "description": "Executes this search and returns the matching metadata."}, {"name": "onIntersectingLocations", "parameters": [], "result": "DeveloperMetadataFinder", "description": "Configures the search to consider intersecting locations that have metadata."}, {"name": "withId", "parameters": [{"name": "id", "type": "Integer"}], "result": "DeveloperMetadataFinder", "description": "Limits this search to consider only metadata that match the specified ID."}, {"name": "withKey", "parameters": [{"name": "key", "type": "String"}], "result": "DeveloperMetadataFinder", "description": "Limits this search to consider only metadata that match the specified key."}, {"name": "withLocationType", "parameters": [{"name": "locationType", "type": "DeveloperMetadataLocationType"}], "result": "DeveloperMetadataFinder", "description": "Limits this search to consider only metadata that match the specified location type."}, {"name": "withValue", "parameters": [{"name": "value", "type": "String"}], "result": "DeveloperMetadataFinder", "description": "Limits this search to consider only metadata that match the specified value."}, {"name": "withVisibility", "parameters": [{"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "DeveloperMetadataFinder", "description": "Limits this search to consider only metadata that match the specified visibility."}, {"name": "getColumn", "parameters": [], "result": "Range", "description": "Returns the Range for the column location of this metadata, or null if the\nlocation type is not DeveloperMetadataLocationType.COLUMN."}, {"name": "getLocationType", "parameters": [], "result": "DeveloperMetadataLocationType", "description": "Gets the type of location."}, {"name": "getRow", "parameters": [], "result": "Range", "description": "Returns the Range for the row location of this metadata, or null if the\nlocation type is not DeveloperMetadataLocationType.ROW."}, {"name": "getSheet", "parameters": [], "result": "Sheet", "description": "Returns the Sheet location of this metadata, or null if the location type is\nnot DeveloperMetadataLocationType.SHEET."}, {"name": "getSpreadsheet", "parameters": [], "result": "Spreadsheet", "description": "Returns the Spreadsheet location of this metadata, or null if the location\ntype is not DeveloperMetadataLocationType.SPREADSHEET."}, {"name": "getContainerInfo", "parameters": [], "result": "ContainerInfo", "description": "Gets information about where the drawing is positioned in the sheet."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Returns the actual height of this drawing in pixels."}, {"name": "getOnAction", "parameters": [], "result": "String", "description": "Returns the name of the macro attached to this drawing."}, {"name": "getSheet", "parameters": [], "result": "Sheet", "description": "Returns the sheet this drawing appears on."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Returns the actual width of this drawing in pixels."}, {"name": "getZIndex", "parameters": [], "result": "Number", "description": "Returns the z-index of this drawing."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes this drawing from the spreadsheet."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Integer"}], "result": "Drawing", "description": "Sets the actual height of this drawing in pixels."}, {"name": "setOnAction", "parameters": [{"name": "macroName", "type": "String"}], "result": "Drawing", "description": "Assigns a macro function to this drawing."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "Drawing", "description": "Sets the position where the drawing appears on the sheet."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "Drawing", "description": "Sets the actual width of this drawing in pixels."}, {"name": "setZIndex", "parameters": [{"name": "zIndex", "type": "Number"}], "result": "Drawing", "description": "Sets the z-index of this drawing."}, {"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPointStyle", "parameters": [{"name": "style", "type": "PointStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the style for points in the line."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedAreaChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedAreaChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedAreaChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}, {"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "reverseDirection", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Reverses the direction in which the bars grow along the horizontal axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedBarChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedBarChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedBarChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}, {"name": "asDataSourceChart", "parameters": [], "result": "DataSourceChart", "description": "Casts to a data source chart instance if the chart is a data source chart, or null\notherwise."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getChartId", "parameters": [], "result": "Integer", "description": "Returns a stable identifier for the chart that is unique across the spreadsheet containing the\nchart or null if the chart is not in a spreadsheet."}, {"name": "getContainerInfo", "parameters": [], "result": "ContainerInfo", "description": "Returns information about where the chart is positioned within a sheet."}, {"name": "getHiddenDimensionStrategy", "parameters": [], "result": "ChartHiddenDimensionStrategy", "description": "Returns the strategy to use for handling hidden rows and columns."}, {"name": "getMergeStrategy", "parameters": [], "result": "ChartMergeStrategy", "description": "Returns the merge strategy used when more than one range exists."}, {"name": "getNumHeaders", "parameters": [], "result": "Integer", "description": "Returns the number of rows or columns the range that are treated as headers."}, {"name": "getOptions", "parameters": [], "result": "ChartOptions", "description": "Returns the options for this chart, such as height, colors, and axes."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns the ranges that this chart uses as a data source."}, {"name": "getTransposeRowsAndColumns", "parameters": [], "result": "Boolean", "description": "If true, the rows and columns used to populate the chart are switched."}, {"name": "modify", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Returns an EmbeddedChartBuilder that can be used to modify this chart."}, {"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedColumnChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedColumnChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedColumnChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}, {"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedComboChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedComboChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedComboChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}, {"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the range for the chart."}, {"name": "setStacked", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Uses stacked lines, meaning that line and bar values are stacked (accumulated)."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedHistogramChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedHistogramChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}, {"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setCurveStyle", "parameters": [{"name": "style", "type": "CurveStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the style to use for curves in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPointStyle", "parameters": [{"name": "style", "type": "PointStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the style for points in the line."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the range for the chart."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedLineChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedLineChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedLineChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "useLogScale", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Makes the range axis into a logarithmic scale (requires all values to be positive)."}, {"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "reverseCategories", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Reverses the drawing of series in the domain axis."}, {"name": "set3D", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart to be three-dimensional."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedPieChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedPieChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedPieChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedPieChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedPieChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedPieChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "setBackgroundColor", "parameters": [{"name": "cssValue", "type": "String"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the background color for the chart."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setColors", "parameters": [{"name": "cssValues", "type": "String"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the colors for the lines in the chart."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setLegendPosition", "parameters": [{"name": "position", "type": "Position"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the position of the legend with respect to the chart."}, {"name": "setLegendTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the text style of the chart legend."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPointStyle", "parameters": [{"name": "style", "type": "PointStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the style for points in the line."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setTitle", "parameters": [{"name": "chartTitle", "type": "String"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the title of the chart."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the text style of the chart title."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "setXAxisLogScale", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Makes the horizontal axis into a logarithmic scale (requires all values to be positive)."}, {"name": "setXAxisRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the range for the horizontal axis of the chart."}, {"name": "setXAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the horizontal axis text style."}, {"name": "setXAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedScatterChartBuilder", "description": "Adds a title to the horizontal axis."}, {"name": "setXAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the horizontal axis title text style."}, {"name": "setYAxisLogScale", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Makes the vertical axis into a logarithmic scale (requires all values to be positive)."}, {"name": "setYAxisRange", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the range for the vertical axis of the chart."}, {"name": "setYAxisTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the vertical axis text style."}, {"name": "setYAxisTitle", "parameters": [{"name": "title", "type": "String"}], "result": "EmbeddedScatterChartBuilder", "description": "Adds a title to the vertical axis."}, {"name": "setYAxisTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "EmbeddedScatterChartBuilder", "description": "Sets the vertical axis title text style."}, {"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Adds a range to the chart this builder modifies."}, {"name": "asAreaChart", "parameters": [], "result": "EmbeddedAreaChartBuilder", "description": "Sets the chart type to AreaChart and returns an EmbeddedAreaChartBuilder."}, {"name": "asBarChart", "parameters": [], "result": "EmbeddedBarChartBuilder", "description": "Sets the chart type to BarChart and returns an EmbeddedBarChartBuilder."}, {"name": "asColumnChart", "parameters": [], "result": "EmbeddedColumnChartBuilder", "description": "Sets the chart type to ColumnChart and returns an EmbeddedColumnChartBuilder."}, {"name": "asComboChart", "parameters": [], "result": "EmbeddedComboChartBuilder", "description": "Sets the chart type to ComboChart and returns an EmbeddedComboChartBuilder."}, {"name": "asHistogramChart", "parameters": [], "result": "EmbeddedHistogramChartBuilder", "description": "Sets the chart type to HistogramChart and returns an EmbeddedHistogramChartBuilder."}, {"name": "asLineChart", "parameters": [], "result": "EmbeddedLineChartBuilder", "description": "Sets the chart type to LineChart and returns an EmbeddedLineChartBuilder."}, {"name": "asPieChart", "parameters": [], "result": "EmbeddedPieChartBuilder", "description": "Sets the chart type to PieChart and returns an EmbeddedPieChartBuilder."}, {"name": "asScatterChart", "parameters": [], "result": "EmbeddedScatterChartBuilder", "description": "Sets the chart type to ScatterChart and returns an EmbeddedScatterChartBuilder."}, {"name": "asTableChart", "parameters": [], "result": "EmbeddedTableChartBuilder", "description": "Sets the chart type to TableChart and returns an EmbeddedTableChartBuilder."}, {"name": "build", "parameters": [], "result": "EmbeddedChart", "description": "Builds the chart to reflect all changes made to it."}, {"name": "clearRanges", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Removes all ranges from the chart this builder modifies."}, {"name": "enablePaging", "parameters": [{"name": "enablePaging", "type": "Boolean"}], "result": "EmbeddedTableChartBuilder", "description": "Sets whether to enable paging through the data."}, {"name": "enablePaging", "parameters": [{"name": "pageSize", "type": "Integer"}], "result": "EmbeddedTableChartBuilder", "description": "Enables paging and sets the number of rows in each page."}, {"name": "enablePaging", "parameters": [{"name": "pageSize", "type": "Integer"}, {"name": "startPage", "type": "Integer"}], "result": "EmbeddedTableChartBuilder", "description": "Enables paging, sets the number of rows in each page and the first table page to display (page\nnumbers are zero based)."}, {"name": "enableRtlTable", "parameters": [{"name": "rtlEnabled", "type": "Boolean"}], "result": "EmbeddedTableChartBuilder", "description": "Adds basic support for right-to-left languages (such as Arabic or Hebrew) by reversing the\ncolumn order of the table, so that column zero is the right-most column, and the last column is\nthe left-most column."}, {"name": "enableSorting", "parameters": [{"name": "enableSorting", "type": "Boolean"}], "result": "EmbeddedTableChartBuilder", "description": "Sets whether to sort columns when the user clicks a column heading."}, {"name": "getChartType", "parameters": [], "result": "ChartType", "description": "Returns the current chart type."}, {"name": "getContainer", "parameters": [], "result": "ContainerInfo", "description": "Return the chart ContainerInfo, which encapsulates where the chart appears on the\nsheet."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a copy of the list of ranges currently providing data for this chart."}, {"name": "removeRange", "parameters": [{"name": "range", "type": "Range"}], "result": "EmbeddedChartBuilder", "description": "Removes the specified range from the chart this builder modifies."}, {"name": "setChartType", "parameters": [{"name": "type", "type": "ChartType"}], "result": "EmbeddedChartBuilder", "description": "Changes the type of chart."}, {"name": "setFirstRowNumber", "parameters": [{"name": "number", "type": "Integer"}], "result": "EmbeddedTableChartBuilder", "description": "Sets the row number for the first row in the data table."}, {"name": "setHiddenDimensionStrategy", "parameters": [{"name": "strategy", "type": "ChartHiddenDimensionStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the strategy to use for hidden rows and columns."}, {"name": "setInitialSortingAscending", "parameters": [{"name": "column", "type": "Integer"}], "result": "EmbeddedTableChartBuilder", "description": "Sets the index of the column according to which the table should be initially sorted\n(ascending)."}, {"name": "setInitialSortingDescending", "parameters": [{"name": "column", "type": "Integer"}], "result": "EmbeddedTableChartBuilder", "description": "Sets the index of the column according to which the table should be initially sorted\n(descending)."}, {"name": "setMergeStrategy", "parameters": [{"name": "mergeStrategy", "type": "ChartMergeStrategy"}], "result": "EmbeddedChartBuilder", "description": "Sets the merge strategy to use when more than one range exists."}, {"name": "setNumHeaders", "parameters": [{"name": "headers", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the number of rows or columns of the range that should be treated as headers."}, {"name": "setOption", "parameters": [{"name": "option", "type": "String"}, {"name": "value", "type": "Object"}], "result": "EmbeddedChartBuilder", "description": "Sets advanced options for this chart."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "EmbeddedChartBuilder", "description": "Sets the position, changing where the chart appears on the sheet."}, {"name": "setTransposeRowsAndColumns", "parameters": [{"name": "transpose", "type": "Boolean"}], "result": "EmbeddedChartBuilder", "description": "Sets whether the chart's rows and columns are transposed."}, {"name": "showRowNumberColumn", "parameters": [{"name": "showRowNumber", "type": "Boolean"}], "result": "EmbeddedTableChartBuilder", "description": "Sets whether to show the row number as the first column of the table."}, {"name": "useAlternatingRowStyle", "parameters": [{"name": "alternate", "type": "Boolean"}], "result": "EmbeddedTableChartBuilder", "description": "Sets whether alternating color style is assigned to odd and even rows of a table chart."}, {"name": "getColumnFilterCriteria", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "FilterCriteria", "description": "Gets the filter criteria on the specified column, or null if no filter criteria is set."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Gets the range this filter is applied to."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this filter."}, {"name": "removeColumnFilterCriteria", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Filter", "description": "Removes the filter criteria from the specified column."}, {"name": "setColumnFilterCriteria", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "filterCriteria", "type": "FilterCriteria"}], "result": "Filter", "description": "Sets the filter criteria on the specified column."}, {"name": "sort", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "ascending", "type": "Boolean"}], "result": "Filter", "description": "Sorts the filtered range by the specified column, excluding the first row (the header row) in\nthe range this filter is applied to."}, {"name": "copy", "parameters": [], "result": "FilterCriteriaBuilder", "description": "Creates a builder for a filter criteria based on this filter criteria's settings."}, {"name": "getCriteriaType", "parameters": [], "result": "BooleanCriteria", "description": "Returns the boolean criteria type as defined in the BooleanCriteria enum."}, {"name": "getCriteriaValues", "parameters": [], "result": "Object[]", "description": "Returns an array of arguments for the boolean criteria."}, {"name": "getHiddenValues", "parameters": [], "result": "String[]", "description": "Returns the values to hide."}, {"name": "getVisibleBackgroundColor", "parameters": [], "result": "Color", "description": "Returns the background color used as a filter criteria."}, {"name": "getVisibleForegroundColor", "parameters": [], "result": "Color", "description": "Returns the foreground color used as a filter criteria."}, {"name": "getVisibleValues", "parameters": [], "result": "String[]", "description": "Returns the values to show."}, {"name": "build", "parameters": [], "result": "FilterCriteria", "description": "Constructs a filter criteria from the settings supplied to the builder."}, {"name": "copy", "parameters": [], "result": "FilterCriteriaBuilder", "description": "Creates a builder for a filter criteria based on this filter criteria's settings."}, {"name": "getCriteriaType", "parameters": [], "result": "BooleanCriteria", "description": "Returns the boolean criteria type as defined in the BooleanCriteria enum."}, {"name": "getCriteriaValues", "parameters": [], "result": "Object[]", "description": "Returns an array of arguments for the boolean criteria."}, {"name": "getHiddenValues", "parameters": [], "result": "String[]", "description": "Returns the values to hide."}, {"name": "getVisibleBackgroundColor", "parameters": [], "result": "Color", "description": "Returns the background color used as a filter criteria."}, {"name": "getVisibleForegroundColor", "parameters": [], "result": "Color", "description": "Returns the foreground color used as a filter criteria."}, {"name": "getVisibleValues", "parameters": [], "result": "String[]", "description": "Returns the values to show."}, {"name": "setHiddenValues", "parameters": [{"name": "values", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the values to hide."}, {"name": "setVisibleBackgroundColor", "parameters": [{"name": "visibleBackgroundColor", "type": "Color"}], "result": "FilterCriteriaBuilder", "description": "Sets the background color used as a filter criteria."}, {"name": "setVisibleForegroundColor", "parameters": [{"name": "visibleForegroundColor", "type": "Color"}], "result": "FilterCriteriaBuilder", "description": "Sets the foreground color used as a filter criteria."}, {"name": "setVisibleValues", "parameters": [{"name": "values", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the values to show."}, {"name": "whenCellEmpty", "parameters": [], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell is empty."}, {"name": "whenCellNotEmpty", "parameters": [], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell is not empty."}, {"name": "whenDateAfter", "parameters": [{"name": "date", "type": "Date"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell date is after the specified value."}, {"name": "whenDateAfter", "parameters": [{"name": "date", "type": "RelativeDate"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell date is after the specified relative\ndate."}, {"name": "whenDateBefore", "parameters": [{"name": "date", "type": "Date"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell date is before the specified date."}, {"name": "whenDateBefore", "parameters": [{"name": "date", "type": "RelativeDate"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where a cell date is before the specified relative date."}, {"name": "whenDateEqualTo", "parameters": [{"name": "date", "type": "Date"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where a cell date is equal to the specified date."}, {"name": "whenDateEqualTo", "parameters": [{"name": "date", "type": "RelativeDate"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where a cell date is equal to the specified relative\ndate."}, {"name": "whenDateEqualToAny", "parameters": [{"name": "dates", "type": "Date"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell date is equal to any of the specified\ndates."}, {"name": "whenDateNotEqualTo", "parameters": [{"name": "date", "type": "Date"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell date is not equal to the specified date."}, {"name": "whenDateNotEqualToAny", "parameters": [{"name": "dates", "type": "Date"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell date is not equal to any of the specified\ndates."}, {"name": "whenFormulaSatisfied", "parameters": [{"name": "formula", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the specified formula (such as =B:B<C:C)\nevaluates to true."}, {"name": "whenNumberBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is falls between, or is either of,\ntwo specified numbers."}, {"name": "whenNumberEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is equal to the specified value."}, {"name": "whenNumberEqualToAny", "parameters": [{"name": "numbers", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is equal to any of the specified\nnumbers."}, {"name": "whenNumberGreaterThan", "parameters": [{"name": "number", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is greater than the specified\nvalue."}, {"name": "whenNumberGreaterThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is greater than or equal to the\nspecified value."}, {"name": "whenNumberLessThan", "parameters": [{"name": "number", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the conditional conditional format rule to show cells where the cell number is less than\nthe specified value."}, {"name": "whenNumberLessThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is less than or equal to the\nspecified value."}, {"name": "whenNumberNotBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number does not fall between, and is\nneither of, two specified numbers."}, {"name": "whenNumberNotEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is not equal to the specified\nvalue."}, {"name": "whenNumberNotEqualToAny", "parameters": [{"name": "numbers", "type": "Number"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell number is not equal to any of the\nspecified numbers."}, {"name": "whenTextContains", "parameters": [{"name": "text", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text contains the specified text."}, {"name": "whenTextDoesNotContain", "parameters": [{"name": "text", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text does not contain the specified text."}, {"name": "whenTextEndsWith", "parameters": [{"name": "text", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text ends with the specified text."}, {"name": "whenTextEqualTo", "parameters": [{"name": "text", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text is equal to the specified text."}, {"name": "whenTextEqualToAny", "parameters": [{"name": "texts", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text is equal to any of the specified\nvalues."}, {"name": "whenTextNotEqualTo", "parameters": [{"name": "text", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text is not equal to the specified text."}, {"name": "whenTextNotEqualToAny", "parameters": [{"name": "texts", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text is not equal to any of the specified\nvalues."}, {"name": "whenTextStartsWith", "parameters": [{"name": "text", "type": "String"}], "result": "FilterCriteriaBuilder", "description": "Sets the filter criteria to show cells where the cell text starts with the specified text."}, {"name": "withCriteria", "parameters": [{"name": "criteria", "type": "BooleanCriteria"}, {"name": "args", "type": "Object"}], "result": "FilterCriteriaBuilder", "description": "Sets the boolean criteria to criteria defined by BooleanCriteria values, typically\ntaken from the criteria and arguments of an existing criteria."}, {"name": "getMaxColor", "parameters": [], "result": "String", "description": "Gets the color set for the maximum value of this gradient condition."}, {"name": "getMaxColorObject", "parameters": [], "result": "Color", "description": "Gets the color set for the maximum value of this gradient condition."}, {"name": "getMaxType", "parameters": [], "result": "InterpolationType", "description": "Gets the interpolation type for the maximum value of this gradient condition."}, {"name": "getMaxValue", "parameters": [], "result": "String", "description": "Gets the max value of this gradient condition."}, {"name": "getMidColor", "parameters": [], "result": "String", "description": "Gets the color set for the mid-point value of this gradient condition."}, {"name": "getMidColorObject", "parameters": [], "result": "Color", "description": "Gets the color set for the midpoint value of this gradient condition."}, {"name": "getMidType", "parameters": [], "result": "InterpolationType", "description": "Gets the interpolation type for the mid-point value of this gradient condition."}, {"name": "getMidValue", "parameters": [], "result": "String", "description": "Gets the mid-point value of this gradient condition."}, {"name": "getMinColor", "parameters": [], "result": "String", "description": "Gets the color set for the minimum value of this gradient condition."}, {"name": "getMinColorObject", "parameters": [], "result": "Color", "description": "Gets the color set for the minimum value of this gradient condition."}, {"name": "getMinType", "parameters": [], "result": "InterpolationType", "description": "Gets the interpolation type for the minimum value of this gradient condition."}, {"name": "getMinValue", "parameters": [], "result": "String", "description": "Gets the minimum value of this gradient condition."}, {"name": "collapse", "parameters": [], "result": "Group", "description": "Collapses this group."}, {"name": "expand", "parameters": [], "result": "Group", "description": "Expands this group."}, {"name": "getControlIndex", "parameters": [], "result": "Integer", "description": "Returns the control toggle index of this group."}, {"name": "getDepth", "parameters": [], "result": "Integer", "description": "Returns the depth of this group."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Returns the range over which this group exists."}, {"name": "isCollapsed", "parameters": [], "result": "Boolean", "description": "Returns true if this group is collapsed."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this group from the sheet, reducing the group depth of the range by\none."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this named range."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Gets the range referenced by this named range."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes this named range."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "NamedRange", "description": "Sets/updates the name of the named range."}, {"name": "setRange", "parameters": [{"name": "range", "type": "Range"}], "result": "NamedRange", "description": "Sets/updates the range for this named range."}, {"name": "assignScript", "parameters": [{"name": "functionName", "type": "String"}], "result": "OverGridImage", "description": "Assigns the function with the specified function name to this image."}, {"name": "getAltTextDescription", "parameters": [], "result": "String", "description": "Returns the alt text description for this image."}, {"name": "getAltTextTitle", "parameters": [], "result": "String", "description": "Returns the alt text title for this image."}, {"name": "getAnchorCell", "parameters": [], "result": "Range", "description": "Returns the cell where an image is anchored."}, {"name": "getAnchorCellXOffset", "parameters": [], "result": "Integer", "description": "Returns the horizontal pixel offset from the anchor cell."}, {"name": "getAnchorCellYOffset", "parameters": [], "result": "Integer", "description": "Returns the vertical pixel offset from the anchor cell."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Returns the actual height of this image in pixels."}, {"name": "getInherentHeight", "parameters": [], "result": "Integer", "description": "Returns the inherent height of this image in pixels."}, {"name": "getInherentWidth", "parameters": [], "result": "Integer", "description": "Returns the inherent height of this image in pixels."}, {"name": "getScript", "parameters": [], "result": "String", "description": "Returns the name of the function assigned to this image."}, {"name": "getSheet", "parameters": [], "result": "Sheet", "description": "Returns the sheet this image appears on."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Gets the image's source URL; returns null if the URL is unavailable."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Returns the actual width of this image in pixels."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes this image from the spreadsheet."}, {"name": "replace", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "OverGridImage", "description": "Replaces this image with the one specified by the provided BlobSource."}, {"name": "replace", "parameters": [{"name": "url", "type": "String"}], "result": "OverGridImage", "description": "Replaces this image with the one from the specified URL."}, {"name": "resetSize", "parameters": [], "result": "OverGridImage", "description": "Resets this image to its inherent dimensions."}, {"name": "setAltTextDescription", "parameters": [{"name": "description", "type": "String"}], "result": "OverGridImage", "description": "Sets the alt-text description for this image."}, {"name": "setAltTextTitle", "parameters": [{"name": "title", "type": "String"}], "result": "OverGridImage", "description": "Sets the alt text title for this image."}, {"name": "setAnchorCell", "parameters": [{"name": "cell", "type": "Range"}], "result": "OverGridImage", "description": "Sets the cell where an image is anchored."}, {"name": "setAnchorCellXOffset", "parameters": [{"name": "offset", "type": "Integer"}], "result": "OverGridImage", "description": "Sets the horizontal pixel offset from the anchor cell."}, {"name": "setAnchorCellYOffset", "parameters": [{"name": "offset", "type": "Integer"}], "result": "OverGridImage", "description": "Sets the vertical pixel offset from the anchor cell."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Integer"}], "result": "OverGridImage", "description": "Sets the actual height of this image in pixels."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "OverGridImage", "description": "Sets the actual width of this image in pixels."}, {"name": "getFilterCriteria", "parameters": [], "result": "FilterCriteria", "description": "Returns the filter criteria for this pivot filter."}, {"name": "getPivotTable", "parameters": [], "result": "PivotTable", "description": "Returns the PivotTable that this filter belongs to."}, {"name": "getSourceDataColumn", "parameters": [], "result": "Integer", "description": "Returns the number of the source data column this filter operates on."}, {"name": "getSourceDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Returns the data source column the filter operates on."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this pivot filter from the pivot table."}, {"name": "setFilterCriteria", "parameters": [{"name": "filterCriteria", "type": "FilterCriteria"}], "result": "PivotFilter", "description": "Sets the filter criteria for this pivot filter."}, {"name": "addManualGroupingRule", "parameters": [{"name": "groupName", "type": "String"}, {"name": "groupMembers", "type": "Object"}], "result": "PivotGroup", "description": "Adds a manual grouping rule for this pivot group."}, {"name": "areLabelsRepeated", "parameters": [], "result": "Boolean", "description": "Returns whether labels are displayed as repeated."}, {"name": "clearGroupingRule", "parameters": [], "result": "PivotGroup", "description": "Removes any grouping rules from this pivot group."}, {"name": "clearSort", "parameters": [], "result": "PivotGroup", "description": "Removes any sorting applied to this group."}, {"name": "getDateTimeGroupingRule", "parameters": [], "result": "DateTimeGroupingRule", "description": "Returns the date-time grouping rule on the pivot group, or null if no date-time\ngrouping rule is set."}, {"name": "getDimension", "parameters": [], "result": "Dimension", "description": "Returns whether this is a row or column group."}, {"name": "getGroupLimit", "parameters": [], "result": "PivotGroupLimit", "description": "Returns the pivot group limit on the pivot group."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Returns the index of this pivot group in the current group order."}, {"name": "getPivotTable", "parameters": [], "result": "PivotTable", "description": "Returns the PivotTable which this grouping belongs to."}, {"name": "getSourceDataColumn", "parameters": [], "result": "Integer", "description": "Returns the number of the source data column this group summarizes."}, {"name": "getSourceDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Returns the data source column the pivot group operates on."}, {"name": "hideRepeatedLabels", "parameters": [], "result": "PivotGroup", "description": "Hides repeated labels for this grouping."}, {"name": "isSortAscending", "parameters": [], "result": "Boolean", "description": "Returns true if the sort is ascending, returns false if the sort order is\ndescending."}, {"name": "moveToIndex", "parameters": [{"name": "index", "type": "Integer"}], "result": "PivotGroup", "description": "Moves this group to the specified position in the current list of row or column groups."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this pivot group from the table."}, {"name": "removeManualGroupingRule", "parameters": [{"name": "groupName", "type": "String"}], "result": "PivotGroup", "description": "Removes the manual grouping rule with the specified groupName."}, {"name": "resetDisplayName", "parameters": [], "result": "PivotGroup", "description": "Resets the display name of this group in the pivot table to its default value."}, {"name": "setDateTimeGroupingRule", "parameters": [{"name": "dateTimeGroupingRuleType", "type": "DateTimeGroupingRuleType"}], "result": "PivotGroup", "description": "Sets the date-time grouping rule on the pivot group."}, {"name": "setDisplayName", "parameters": [{"name": "name", "type": "String"}], "result": "PivotGroup", "description": "Sets the display name of this group in the pivot table."}, {"name": "setGroupLimit", "parameters": [{"name": "countLimit", "type": "Integer"}], "result": "PivotGroup", "description": "Sets the pivot group limit on the pivot group."}, {"name": "setHistogramGroupingRule", "parameters": [{"name": "minValue", "type": "Integer"}, {"name": "maxValue", "type": "Integer"}, {"name": "intervalSize", "type": "Integer"}], "result": "PivotGroup", "description": "Sets a histogram grouping rule for this pivot group."}, {"name": "showRepeatedLabels", "parameters": [], "result": "PivotGroup", "description": "When there is more than one row or column grouping, this method displays this grouping's label\nfor each entry of the subsequent grouping."}, {"name": "showTotals", "parameters": [{"name": "showTotals", "type": "Boolean"}], "result": "PivotGroup", "description": "Sets whether to show total values for this pivot group in the table."}, {"name": "sortAscending", "parameters": [], "result": "PivotGroup", "description": "Sets the sort order to be ascending."}, {"name": "sortBy", "parameters": [{"name": "value", "type": "PivotValue"}, {"name": "oppositeGroupValues", "type": "Object"}], "result": "PivotGroup", "description": "Sorts this group by the specified PivotValue for the values from the oppositeGroupValues."}, {"name": "sortDescending", "parameters": [], "result": "PivotGroup", "description": "Sets the sort order to be descending."}, {"name": "totalsAreShown", "parameters": [], "result": "Boolean", "description": "Returns whether total values are currently shown for this pivot group."}, {"name": "getCountLimit", "parameters": [], "result": "Integer", "description": "Gets the count limit on rows or columns in the pivot group."}, {"name": "getPivotGroup", "parameters": [], "result": "PivotGroup", "description": "Returns the pivot group the limit belongs to."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the pivot group limit."}, {"name": "setCountLimit", "parameters": [{"name": "countLimit", "type": "Integer"}], "result": "PivotGroupLimit", "description": "Sets the count limit on rows or columns in the pivot group."}, {"name": "addCalculatedPivotValue", "parameters": [{"name": "name", "type": "String"}, {"name": "formula", "type": "String"}], "result": "PivotValue", "description": "Creates a new pivot value in the pivot table calculated from the specified formula with\nthe specified name."}, {"name": "addColumnGroup", "parameters": [{"name": "sourceDataColumn", "type": "Integer"}], "result": "PivotGroup", "description": "Defines a new pivot column grouping in the pivot table."}, {"name": "addFilter", "parameters": [{"name": "sourceDataColumn", "type": "Integer"}, {"name": "filterCriteria", "type": "FilterCriteria"}], "result": "PivotFilter", "description": "Creates a new pivot filter for the pivot table."}, {"name": "addPivotValue", "parameters": [{"name": "sourceDataColumn", "type": "Integer"}, {"name": "summarizeFunction", "type": "PivotTableSummarizeFunction"}], "result": "PivotValue", "description": "Defines a new pivot value in the pivot table with the specified summarizeFunction."}, {"name": "addRowGroup", "parameters": [{"name": "sourceDataColumn", "type": "Integer"}], "result": "PivotGroup", "description": "Defines a new pivot row grouping in the pivot table."}, {"name": "asDataSourcePivotTable", "parameters": [], "result": "DataSourcePivotTable", "description": "Returns the pivot table as a data source pivot table if the pivot table is linked to a DataSource, or null otherwise."}, {"name": "getAnchorCell", "parameters": [], "result": "Range", "description": "Returns the Range representing the cell where this pivot table is anchored."}, {"name": "getColumnGroups", "parameters": [], "result": "PivotGroup[]", "description": "Returns an ordered list of the column groups in this pivot table."}, {"name": "getFilters", "parameters": [], "result": "PivotFilter[]", "description": "Returns an ordered list of the filters in this pivot table."}, {"name": "getPivotValues", "parameters": [], "result": "PivotValue[]", "description": "Returns an ordered list of the pivot values in this pivot table."}, {"name": "getRowGroups", "parameters": [], "result": "PivotGroup[]", "description": "Returns an ordered list of the row groups in this pivot table."}, {"name": "getSourceDataRange", "parameters": [], "result": "Range", "description": "Returns the source data range on which the pivot table is constructed."}, {"name": "getValuesDisplayOrientation", "parameters": [], "result": "Dimension", "description": "Returns whether values are displayed as rows or columns."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes this pivot table."}, {"name": "setValuesDisplayOrientation", "parameters": [{"name": "dimension", "type": "Dimension"}], "result": "PivotTable", "description": "Sets the layout of this pivot table to display values as columns or rows."}, {"name": "getDisplayType", "parameters": [], "result": "PivotValueDisplayType", "description": "Returns the display type describing how this pivot value is currently displayed in the table."}, {"name": "getFormula", "parameters": [], "result": "String", "description": "Returns the formula used to calculate this value."}, {"name": "getPivotTable", "parameters": [], "result": "PivotTable", "description": "Returns the PivotTable which this value belongs to."}, {"name": "getSourceDataColumn", "parameters": [], "result": "Integer", "description": "Returns the number of the source data column the pivot value summarizes."}, {"name": "getSourceDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Returns the data source column the pivot value summarizes."}, {"name": "getSummarizedBy", "parameters": [], "result": "PivotTableSummarizeFunction", "description": "Returns this group\u2019s summarization function."}, {"name": "remove", "parameters": [], "result": "void", "description": "Remove this value from the pivot table."}, {"name": "setDisplayName", "parameters": [{"name": "name", "type": "String"}], "result": "PivotValue", "description": "Sets the display name for this value in the pivot table."}, {"name": "setFormula", "parameters": [{"name": "formula", "type": "String"}], "result": "PivotValue", "description": "Sets the formula used to calculate this value."}, {"name": "showAs", "parameters": [{"name": "displayType", "type": "PivotValueDisplayType"}], "result": "PivotValue", "description": "Displays this value in the pivot table as a function of another value."}, {"name": "summarizeBy", "parameters": [{"name": "summarizeFunction", "type": "PivotTableSummarizeFunction"}], "result": "PivotValue", "description": "Sets the summarization function."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Protection", "description": "Adds the given user to the list of editors for the protected sheet or range."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Protection", "description": "Adds the given user to the list of editors for the protected sheet or range."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Protection", "description": "Adds the given array of users to the list of editors for the protected sheet or range."}, {"name": "addTargetAudience", "parameters": [{"name": "audienceId", "type": "String"}], "result": "Protection", "description": "Adds the specified target audience as an editor of the protected range."}, {"name": "canDomainEdit", "parameters": [], "result": "Boolean", "description": "Determines whether all users in the domain that owns the spreadsheet have permission to edit\nthe protected range or sheet."}, {"name": "canEdit", "parameters": [], "result": "Boolean", "description": "Determines whether the user has permission to edit the protected range or sheet."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description of the protected range or sheet."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for the protected range or sheet."}, {"name": "getProtectionType", "parameters": [], "result": "ProtectionType", "description": "Gets the type of the protected area, either RANGE or SHEET."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Gets the range that is being protected."}, {"name": "getRangeName", "parameters": [], "result": "String", "description": "Gets the name of the protected range if it is associated with a named range."}, {"name": "getTargetAudiences", "parameters": [], "result": "TargetAudience[]", "description": "Returns the IDs of the target audiences that can edit the protected range."}, {"name": "getUnprotectedRanges", "parameters": [], "result": "Range[]", "description": "Gets an array of unprotected ranges within a protected sheet."}, {"name": "isWarningOnly", "parameters": [], "result": "Boolean", "description": "Determines if the protected area is using \"warning based\" protection."}, {"name": "remove", "parameters": [], "result": "void", "description": "Unprotects the range or sheet."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Protection", "description": "Removes the given user from the list of editors for the protected sheet or range."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Protection", "description": "Removes the given user from the list of editors for the protected sheet or range."}, {"name": "removeEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Protection", "description": "Removes the given array of users from the list of editors for the protected sheet or range."}, {"name": "removeTargetAudience", "parameters": [{"name": "audienceId", "type": "String"}], "result": "Protection", "description": "Removes the specified target audience as an editor of the protected range."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Protection", "description": "Sets the description of the protected range or sheet."}, {"name": "setDomainEdit", "parameters": [{"name": "editable", "type": "Boolean"}], "result": "Protection", "description": "Sets whether all users in the domain that owns the spreadsheet have permission to edit the\nprotected range or sheet."}, {"name": "setNamedRange", "parameters": [{"name": "namedRange", "type": "NamedRange"}], "result": "Protection", "description": "Associates the protected range with an existing named range."}, {"name": "setRange", "parameters": [{"name": "range", "type": "Range"}], "result": "Protection", "description": "Adjusts the range that is being protected."}, {"name": "setRangeName", "parameters": [{"name": "rangeName", "type": "String"}], "result": "Protection", "description": "Associates the protected range with an existing named range."}, {"name": "setUnprotectedRanges", "parameters": [{"name": "ranges", "type": "Range"}], "result": "Protection", "description": "Unprotects the given array of ranges within a protected sheet."}, {"name": "setWarningOnly", "parameters": [{"name": "warningOnly", "type": "Boolean"}], "result": "Protection", "description": "Sets whether or not this protected range is using \"warning based\" protection."}, {"name": "activate", "parameters": [], "result": "Range", "description": "Sets the specified range as the active range, with the top\nleft cell in the range as the current cell."}, {"name": "activateAsCurrentCell", "parameters": [], "result": "Range", "description": "Sets the specified cell as the current cell."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}], "result": "Range", "description": "Adds developer metadata with the specified key to the range."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Range", "description": "Adds developer metadata with the specified key and visibility to the range."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "Range", "description": "Adds developer metadata with the specified key and value to the range."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Range", "description": "Adds developer metadata with the specified key, value, and visibility to the range."}, {"name": "applyColumnBanding", "parameters": [], "result": "Banding", "description": "Applies a default column banding theme to the range."}, {"name": "applyColumnBanding", "parameters": [{"name": "bandingTheme", "type": "BandingTheme"}], "result": "Banding", "description": "Applies a specified column banding theme to the range."}, {"name": "applyColumnBanding", "parameters": [{"name": "bandingTheme", "type": "BandingTheme"}, {"name": "showHeader", "type": "Boolean"}, {"name": "showFooter", "type": "Boolean"}], "result": "Banding", "description": "Applies a specified column banding theme to the range with specified header and footer\nsettings."}, {"name": "applyRowBanding", "parameters": [], "result": "Banding", "description": "Applies a default row banding theme to the range."}, {"name": "applyRowBanding", "parameters": [{"name": "bandingTheme", "type": "BandingTheme"}], "result": "Banding", "description": "Applies a specified row banding theme to the range."}, {"name": "applyRowBanding", "parameters": [{"name": "bandingTheme", "type": "BandingTheme"}, {"name": "showHeader", "type": "Boolean"}, {"name": "showFooter", "type": "Boolean"}], "result": "Banding", "description": "Applies a specified row banding theme to the range with specified header and footer settings."}, {"name": "autoFill", "parameters": [{"name": "destination", "type": "Range"}, {"name": "series", "type": "AutoFillSeries"}], "result": "void", "description": "Fills the destinationRange with data based on the data in this range."}, {"name": "autoFillToNeighbor", "parameters": [{"name": "series", "type": "AutoFillSeries"}], "result": "void", "description": "Calculates a range to fill with new data based on neighboring cells and automatically fills\nthat range with new values based on the data contained in this range."}, {"name": "breakApart", "parameters": [], "result": "Range", "description": "Break any multi-column cells in the range into individual cells again."}, {"name": "canEdit", "parameters": [], "result": "Boolean", "description": "Determines whether the user has permission to edit every cell in the range."}, {"name": "check", "parameters": [], "result": "Range", "description": "Changes the state of the checkboxes in the range to \u201cchecked\u201d."}, {"name": "clear", "parameters": [], "result": "Range", "description": "Clears the range of contents, formats, and data validation rules."}, {"name": "clear", "parameters": [{"name": "options", "type": "Object"}], "result": "Range", "description": "Clears the range of contents, format, data validation rules, and/or comments, as specified with\nthe given advanced options."}, {"name": "clearContent", "parameters": [], "result": "Range", "description": "Clears the content of the range, leaving the formatting intact."}, {"name": "clearDataValidations", "parameters": [], "result": "Range", "description": "Clears the data validation rules for the range."}, {"name": "clearFormat", "parameters": [], "result": "Range", "description": "Clears formatting for this range."}, {"name": "clearNote", "parameters": [], "result": "Range", "description": "Clears the note in the given cell or cells."}, {"name": "collapseGroups", "parameters": [], "result": "Range", "description": "Collapses all groups that are wholly contained within the range."}, {"name": "copyFormatToRange", "parameters": [{"name": "gridId", "type": "Integer"}, {"name": "column", "type": "Integer"}, {"name": "columnEnd", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "rowEnd", "type": "Integer"}], "result": "void", "description": "Copy the formatting of the range to the given location."}, {"name": "copyFormatToRange", "parameters": [{"name": "sheet", "type": "Sheet"}, {"name": "column", "type": "Integer"}, {"name": "columnEnd", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "rowEnd", "type": "Integer"}], "result": "void", "description": "Copy the formatting of the range to the given location."}, {"name": "copyTo", "parameters": [{"name": "destination", "type": "Range"}], "result": "void", "description": "Copies the data from a range of cells to another range of cells."}, {"name": "copyTo", "parameters": [{"name": "destination", "type": "Range"}, {"name": "copyPasteType", "type": "CopyPasteType"}, {"name": "transposed", "type": "Boolean"}], "result": "void", "description": "Copies the data from a range of cells to another range of cells."}, {"name": "copyTo", "parameters": [{"name": "destination", "type": "Range"}, {"name": "options", "type": "Object"}], "result": "void", "description": "Copies the data from a range of cells to another range of cells."}, {"name": "copyValuesToRange", "parameters": [{"name": "gridId", "type": "Integer"}, {"name": "column", "type": "Integer"}, {"name": "columnEnd", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "rowEnd", "type": "Integer"}], "result": "void", "description": "Copy the content of the range to the given location."}, {"name": "copyValuesToRange", "parameters": [{"name": "sheet", "type": "Sheet"}, {"name": "column", "type": "Integer"}, {"name": "columnEnd", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "rowEnd", "type": "Integer"}], "result": "void", "description": "Copy the content of the range to the given location."}, {"name": "createDataSourcePivotTable", "parameters": [{"name": "dataSource", "type": "DataSource"}], "result": "DataSourcePivotTable", "description": "Creates an empty data source pivot table from the data source, anchored at the first cell in\nthis range."}, {"name": "createDataSourceTable", "parameters": [{"name": "dataSource", "type": "DataSource"}], "result": "DataSourceTable", "description": "Creates an empty data source table from the data source, anchored at the first cell in this\nrange."}, {"name": "createDeveloperMetadataFinder", "parameters": [], "result": "DeveloperMetadataFinder", "description": "Returns a DeveloperMetadataFinderApi for finding developer metadata within the scope of this\nrange."}, {"name": "createFilter", "parameters": [], "result": "Filter", "description": "Creates a filter applied to the range."}, {"name": "createPivotTable", "parameters": [{"name": "sourceData", "type": "Range"}], "result": "PivotTable", "description": "Creates an empty pivot table from the specified sourceData anchored at the first cell\nin this range."}, {"name": "createTextFinder", "parameters": [{"name": "findText", "type": "String"}], "result": "TextFinder", "description": "Creates a text finder for the range, which can find and replace text in this range."}, {"name": "deleteCells", "parameters": [{"name": "shiftDimension", "type": "Dimension"}], "result": "void", "description": "Deletes this range of cells."}, {"name": "expandGroups", "parameters": [], "result": "Range", "description": "Expands the collapsed groups whose range or control toggle intersects with this range."}, {"name": "getA1Notation", "parameters": [], "result": "String", "description": "Returns a string description of the range, in A1 notation."}, {"name": "getBackground", "parameters": [], "result": "String", "description": "Returns the background color of the top-left cell in the range (for example, '#ffffff')."}, {"name": "getBackgroundObject", "parameters": [], "result": "Color", "description": "Returns the background color of the top-left cell in the range."}, {"name": "getBackgroundObjects", "parameters": [], "result": "Color[][]", "description": "Returns the background colors of the cells in the range."}, {"name": "getBackgrounds", "parameters": [], "result": "String[][]", "description": "Returns the background colors of the cells in the range (for example, '#ffffff')."}, {"name": "getBandings", "parameters": [], "result": "Banding[]", "description": "Returns all the bandings that are applied to any cells in this range."}, {"name": "getCell", "parameters": [{"name": "row", "type": "Integer"}, {"name": "column", "type": "Integer"}], "result": "Range", "description": "Returns a given cell within a range."}, {"name": "getColumn", "parameters": [], "result": "Integer", "description": "Returns the starting column position for this range."}, {"name": "getDataRegion", "parameters": [], "result": "Range", "description": "Returns a copy of the range expanded in the four cardinal Directions to cover all\nadjacent cells with data in them."}, {"name": "getDataRegion", "parameters": [{"name": "dimension", "type": "Dimension"}], "result": "Range", "description": "Returns a copy of the range expanded Direction.UP and Direction.DOWN if the\nspecified dimension is Dimension.ROWS, or Direction.NEXT and Direction.PREVIOUS if the dimension is Dimension.COLUMNS."}, {"name": "getDataSourceFormula", "parameters": [], "result": "DataSourceFormula", "description": "Returns the DataSourceFormula for the first cell in the range, or null if\nthe cell doesn't contain a data source formula."}, {"name": "getDataSourceFormulas", "parameters": [], "result": "DataSourceFormula[]", "description": "Returns the DataSourceFormulas for the cells in the range."}, {"name": "getDataSourcePivotTables", "parameters": [], "result": "DataSourcePivotTable[]", "description": "Gets all the data source pivot tables intersecting with the range."}, {"name": "getDataSourceTables", "parameters": [], "result": "DataSourceTable[]", "description": "Gets all the data source tables intersecting with the range."}, {"name": "getDataSourceUrl", "parameters": [], "result": "String", "description": "Returns a URL for the data in this range, which can be used to create charts and queries."}, {"name": "getDataTable", "parameters": [], "result": "DataTable", "description": "Return the data inside this object as a DataTable."}, {"name": "getDataTable", "parameters": [{"name": "firstRowIsHeader", "type": "Boolean"}], "result": "DataTable", "description": "Return the data inside this range as a DataTable."}, {"name": "getDataValidation", "parameters": [], "result": "DataValidation", "description": "Returns the data validation rule for the top-left cell in the range."}, {"name": "getDataValidations", "parameters": [], "result": "DataValidation[][]", "description": "Returns the data validation rules for all cells in the range."}, {"name": "getDeveloperMetadata", "parameters": [], "result": "DeveloperMetadata[]", "description": "Get the developer metadata associated with this range."}, {"name": "getDisplayValue", "parameters": [], "result": "String", "description": "Returns the displayed value of the top-left cell in the range."}, {"name": "getDisplayValues", "parameters": [], "result": "String[][]", "description": "Returns the rectangular grid of values for this range."}, {"name": "getFilter", "parameters": [], "result": "Filter", "description": "Returns the filter in the sheet this range belongs to, or null if there is no filter on\nthe sheet."}, {"name": "getFontColor", "parameters": [], "result": "String", "description": "Returns the font color of the cell in the top-left corner of the range, in CSS notation (such\nas '#ffffff' or 'white')."}, {"name": "getFontColorObject", "parameters": [], "result": "Color", "description": "Returns the font color of the cell in the top-left corner of the range."}, {"name": "getFontColorObjects", "parameters": [], "result": "Color[][]", "description": "Returns the font colors of the cells in the range."}, {"name": "getFontColors", "parameters": [], "result": "String[][]", "description": "Returns the font colors of the cells in the range in CSS notation (such as '#ffffff' or\n'white')."}, {"name": "getFontFamilies", "parameters": [], "result": "String[][]", "description": "Returns the font families of the cells in the range."}, {"name": "getFontFamily", "parameters": [], "result": "String", "description": "Returns the font family of the cell in the top-left corner of the range."}, {"name": "getFontLine", "parameters": [], "result": "String", "description": "Gets the line style of the cell in the top-left corner of the range ('underline',\n'line-through', or 'none')."}, {"name": "getFontLines", "parameters": [], "result": "String[][]", "description": "Gets the line style of the cells in the range ('underline', 'line-through', or\n'none')."}, {"name": "getFontSize", "parameters": [], "result": "Integer", "description": "Returns the font size in point size of the cell in the top-left corner of the range."}, {"name": "getFontSizes", "parameters": [], "result": "Integer[][]", "description": "Returns the font sizes of the cells in the range."}, {"name": "getFontStyle", "parameters": [], "result": "String", "description": "Returns the font style ('italic' or 'normal') of the cell in the top-left\ncorner of the range."}, {"name": "getFontStyles", "parameters": [], "result": "String[][]", "description": "Returns the font styles of the cells in the range."}, {"name": "getFontWeight", "parameters": [], "result": "String", "description": "Returns the font weight (normal/bold) of the cell in the top-left corner of the range."}, {"name": "getFontWeights", "parameters": [], "result": "String[][]", "description": "Returns the font weights of the cells in the range."}, {"name": "getFormula", "parameters": [], "result": "String", "description": "Returns the formula (A1 notation) for the top-left cell of the range, or an empty string if the\ncell is empty or doesn't contain a formula."}, {"name": "getFormulaR1C1", "parameters": [], "result": "String", "description": "Returns the formula (R1C1 notation) for a given cell, or null if none."}, {"name": "getFormulas", "parameters": [], "result": "String[][]", "description": "Returns the formulas (A1 notation) for the cells in the range."}, {"name": "getFormulasR1C1", "parameters": [], "result": "String[][]", "description": "Returns the formulas (R1C1 notation) for the cells in the range."}, {"name": "getGridId", "parameters": [], "result": "Integer", "description": "Returns the grid ID of the range's parent sheet."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Returns the height of the range."}, {"name": "getHorizontalAlignment", "parameters": [], "result": "String", "description": "Returns the horizontal alignment of the text (left/center/right) of the cell in the top-left\ncorner of the range."}, {"name": "getHorizontalAlignments", "parameters": [], "result": "String[][]", "description": "Returns the horizontal alignments of the cells in the range."}, {"name": "getLastColumn", "parameters": [], "result": "Integer", "description": "Returns the end column position."}, {"name": "getLastRow", "parameters": [], "result": "Integer", "description": "Returns the end row position."}, {"name": "getMergedRanges", "parameters": [], "result": "Range[]", "description": "Returns an array of Range objects representing merged cells that either are fully\nwithin the current range, or contain at least one cell in the current range."}, {"name": "getNextDataCell", "parameters": [{"name": "direction", "type": "Direction"}], "result": "Range", "description": "Starting at the cell in the first column and row of the range, returns the next cell in the\ngiven direction that is the edge of a contiguous range of cells with data in them or the cell\nat the edge of the spreadsheet in that direction."}, {"name": "getNote", "parameters": [], "result": "String", "description": "Returns the note associated with the given range."}, {"name": "getNotes", "parameters": [], "result": "String[][]", "description": "Returns the notes associated with the cells in the range."}, {"name": "getNumColumns", "parameters": [], "result": "Integer", "description": "Returns the number of columns in this range."}, {"name": "getNumRows", "parameters": [], "result": "Integer", "description": "Returns the number of rows in this range."}, {"name": "getNumberFormat", "parameters": [], "result": "String", "description": "Get the number or date formatting of the top-left cell of the given range."}, {"name": "getNumberFormats", "parameters": [], "result": "String[][]", "description": "Returns the number or date formats for the cells in the range."}, {"name": "getRichTextValue", "parameters": [], "result": "RichTextValue", "description": "Returns the Rich Text value for the top left cell of the range, or null if the cell\nvalue is not text."}, {"name": "getRichTextValues", "parameters": [], "result": "RichTextValue[][]", "description": "Returns the Rich Text values for the cells in the range."}, {"name": "getRow", "parameters": [], "result": "Integer", "description": "Returns the row position for this range."}, {"name": "getRowIndex", "parameters": [], "result": "Integer", "description": "Returns the row position for this range."}, {"name": "getSheet", "parameters": [], "result": "Sheet", "description": "Returns the sheet this range belongs to."}, {"name": "getTextDirection", "parameters": [], "result": "TextDirection", "description": "Returns the text direction for the top left cell of the range."}, {"name": "getTextDirections", "parameters": [], "result": "TextDirection[][]", "description": "Returns the text directions for the cells in the range."}, {"name": "getTextRotation", "parameters": [], "result": "TextRotation", "description": "Returns the text rotation settings for the top left cell of the range."}, {"name": "getTextRotations", "parameters": [], "result": "TextRotation[][]", "description": "Returns the text rotation settings for the cells in the range."}, {"name": "getTextStyle", "parameters": [], "result": "TextStyle", "description": "Returns the text style for the top left cell of the range."}, {"name": "getTextStyles", "parameters": [], "result": "TextStyle[][]", "description": "Returns the text styles for the cells in the range."}, {"name": "getValue", "parameters": [], "result": "Object", "description": "Returns the value of the top-left cell in the range."}, {"name": "getValues", "parameters": [], "result": "Object[][]", "description": "Returns the rectangular grid of values for this range."}, {"name": "getVerticalAlignment", "parameters": [], "result": "String", "description": "Returns the vertical alignment (top/middle/bottom) of the cell in the top-left corner of the\nrange."}, {"name": "getVerticalAlignments", "parameters": [], "result": "String[][]", "description": "Returns the vertical alignments of the cells in the range."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Returns the width of the range in columns."}, {"name": "getWrap", "parameters": [], "result": "Boolean", "description": "Returns whether the text in the cell wraps."}, {"name": "getWrapStrategies", "parameters": [], "result": "WrapStrategy[][]", "description": "Returns the text wrapping strategies for the cells in the range."}, {"name": "getWrapStrategy", "parameters": [], "result": "WrapStrategy", "description": "Returns the text wrapping strategy for the top left cell of the range."}, {"name": "getWraps", "parameters": [], "result": "Boolean[][]", "description": "Returns whether the text in the cells wrap."}, {"name": "insertCells", "parameters": [{"name": "shiftDimension", "type": "Dimension"}], "result": "Range", "description": "Inserts empty cells into this range."}, {"name": "insertCheckboxes", "parameters": [], "result": "Range", "description": "Inserts checkboxes into each cell in the range, configured with true for checked and\nfalse for unchecked."}, {"name": "insertCheckboxes", "parameters": [{"name": "checkedValue", "type": "Object"}], "result": "Range", "description": "Inserts checkboxes into each cell in the range, configured with a custom value for checked and\nthe empty string for unchecked."}, {"name": "insertCheckboxes", "parameters": [{"name": "checkedValue", "type": "Object"}, {"name": "uncheckedValue", "type": "Object"}], "result": "Range", "description": "Inserts checkboxes into each cell in the range, configured with custom values for the checked\nand unchecked states."}, {"name": "isBlank", "parameters": [], "result": "Boolean", "description": "Returns true if the range is totally blank."}, {"name": "isChecked", "parameters": [], "result": "Boolean", "description": "Returns whether all cells in the range have their checkbox state as 'checked'."}, {"name": "isEndColumnBounded", "parameters": [], "result": "Boolean", "description": "Determines whether the end of the range is bound to a particular column."}, {"name": "isEndRowBounded", "parameters": [], "result": "Boolean", "description": "Determines whether the end of the range is bound to a particular row."}, {"name": "isPartOfMerge", "parameters": [], "result": "Boolean", "description": "Returns true if the cells in the current range overlap any merged cells."}, {"name": "isStartColumnBounded", "parameters": [], "result": "Boolean", "description": "Determines whether the start of the range is bound to a particular column."}, {"name": "isStartRowBounded", "parameters": [], "result": "Boolean", "description": "Determines whether the start of the range is bound to a particular row."}, {"name": "merge", "parameters": [], "result": "Range", "description": "Merges the cells in the range together into a single block."}, {"name": "mergeAcross", "parameters": [], "result": "Range", "description": "Merge the cells in the range across the columns of the range."}, {"name": "mergeVertically", "parameters": [], "result": "Range", "description": "Merges the cells in the range together."}, {"name": "moveTo", "parameters": [{"name": "target", "type": "Range"}], "result": "void", "description": "Cut and paste (both format and values) from this range to the target range."}, {"name": "offset", "parameters": [{"name": "rowOffset", "type": "Integer"}, {"name": "columnOffset", "type": "Integer"}], "result": "Range", "description": "Returns a new range that is offset from this range by the given number of rows and columns\n(which can be negative)."}, {"name": "offset", "parameters": [{"name": "rowOffset", "type": "Integer"}, {"name": "columnOffset", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "Range", "description": "Returns a new range that is relative to the current range, whose upper left point is offset\nfrom the current range by the given rows and columns, and with the given height in cells."}, {"name": "offset", "parameters": [{"name": "rowOffset", "type": "Integer"}, {"name": "columnOffset", "type": "Integer"}, {"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Range", "description": "Returns a new range that is relative to the current range, whose upper left point is offset\nfrom the current range by the given rows and columns, and with the given height and width in\ncells."}, {"name": "protect", "parameters": [], "result": "Protection", "description": "Creates an object that can protect the range from being edited except by users who have\npermission."}, {"name": "randomize", "parameters": [], "result": "Range", "description": "Randomizes the order of the rows in the given range."}, {"name": "removeCheckboxes", "parameters": [], "result": "Range", "description": "Removes all checkboxes from the range."}, {"name": "removeDuplicates", "parameters": [], "result": "Range", "description": "Removes rows within this range that contain values that are duplicates of values in any\nprevious row."}, {"name": "removeDuplicates", "parameters": [{"name": "columnsToCompare", "type": "Integer"}], "result": "Range", "description": "Removes rows within this range that contain values in the specified columns that are duplicates\nof values any previous row."}, {"name": "setBackground", "parameters": [{"name": "color", "type": "String"}], "result": "Range", "description": "Sets the background color of all cells in the range in CSS notation (such as '#ffffff'\nor 'white')."}, {"name": "setBackgroundObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Range", "description": "Sets the background color of all cells in the range."}, {"name": "setBackgroundObjects", "parameters": [{"name": "color", "type": "Color"}], "result": "Range", "description": "Sets a rectangular grid of background colors (must match dimensions of this range)."}, {"name": "setBackgroundRGB", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "Range", "description": "Sets the background to the given color using RGB values (integers between 0 and 255 inclusive)."}, {"name": "setBackgrounds", "parameters": [{"name": "color", "type": "String"}], "result": "Range", "description": "Sets a rectangular grid of background colors (must match dimensions of this range)."}, {"name": "setBorder", "parameters": [{"name": "top", "type": "Boolean"}, {"name": "left", "type": "Boolean"}, {"name": "bottom", "type": "Boolean"}, {"name": "right", "type": "Boolean"}, {"name": "vertical", "type": "Boolean"}, {"name": "horizontal", "type": "Boolean"}], "result": "Range", "description": "Sets the border property."}, {"name": "setBorder", "parameters": [{"name": "top", "type": "Boolean"}, {"name": "left", "type": "Boolean"}, {"name": "bottom", "type": "Boolean"}, {"name": "right", "type": "Boolean"}, {"name": "vertical", "type": "Boolean"}, {"name": "horizontal", "type": "Boolean"}, {"name": "color", "type": "String"}, {"name": "style", "type": "BorderStyle"}], "result": "Range", "description": "Sets the border property with color and/or style."}, {"name": "setDataValidation", "parameters": [{"name": "rule", "type": "DataValidation"}], "result": "Range", "description": "Sets one data validation rule for all cells in the range."}, {"name": "setDataValidations", "parameters": [{"name": "rules", "type": "DataValidation"}], "result": "Range", "description": "Sets the data validation rules for all cells in the range."}, {"name": "setFontColor", "parameters": [{"name": "color", "type": "String"}], "result": "Range", "description": "Sets the font color in CSS notation (such as '#ffffff' or 'white')."}, {"name": "setFontColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Range", "description": "Sets the font color of the given range."}, {"name": "setFontColorObjects", "parameters": [{"name": "colors", "type": "Color"}], "result": "Range", "description": "Sets a rectangular grid of font colors (must match dimensions of this range)."}, {"name": "setFontColors", "parameters": [{"name": "colors", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font colors (must match dimensions of this range)."}, {"name": "setFontFamilies", "parameters": [{"name": "fontFamilies", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font families (must match dimensions of this range)."}, {"name": "setFontFamily", "parameters": [{"name": "fontFamily", "type": "String"}], "result": "Range", "description": "Sets the font family, such as \"Arial\" or \"Helvetica\"."}, {"name": "setFontLine", "parameters": [{"name": "fontLine", "type": "String"}], "result": "Range", "description": "Sets the font line style of the given range ('underline', 'line-through', or\n'none')."}, {"name": "setFontLines", "parameters": [{"name": "fontLines", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of line styles (must match dimensions of this range)."}, {"name": "setFontSize", "parameters": [{"name": "size", "type": "Integer"}], "result": "Range", "description": "Sets the font size, with the size being the point size to use."}, {"name": "setFontSizes", "parameters": [{"name": "sizes", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font sizes (must match dimensions of this range)."}, {"name": "setFontStyle", "parameters": [{"name": "fontStyle", "type": "String"}], "result": "Range", "description": "Set the font style for the given range ('italic' or 'normal')."}, {"name": "setFontStyles", "parameters": [{"name": "fontStyles", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font styles (must match dimensions of this range)."}, {"name": "setFontWeight", "parameters": [{"name": "fontWeight", "type": "String"}], "result": "Range", "description": "Set the font weight for the given range (normal/bold)."}, {"name": "setFontWeights", "parameters": [{"name": "fontWeights", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of font weights (must match dimensions of this range)."}, {"name": "setFormula", "parameters": [{"name": "formula", "type": "String"}], "result": "Range", "description": "Updates the formula for this range."}, {"name": "setFormulaR1C1", "parameters": [{"name": "formula", "type": "String"}], "result": "Range", "description": "Updates the formula for this range."}, {"name": "setFormulas", "parameters": [{"name": "formulas", "type": "String"}], "result": "Range", "description": "Sets a rectangular grid of formulas (must match dimensions of this range)."}, {"name": "setFormulasR1C1", "parameters": [{"name": "formulas", "type": "String"}], "result": "Range", "description": "Sets a rectangular grid of formulas (must match dimensions of this range)."}, {"name": "setHorizontalAlignment", "parameters": [{"name": "alignment", "type": "String"}], "result": "Range", "description": "Set the horizontal (left to right) alignment for the given range (left/center/right)."}, {"name": "setHorizontalAlignments", "parameters": [{"name": "alignments", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of horizontal alignments."}, {"name": "setNote", "parameters": [{"name": "note", "type": "String"}], "result": "Range", "description": "Sets the note to the given value."}, {"name": "setNotes", "parameters": [{"name": "notes", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of notes (must match dimensions of this range)."}, {"name": "setNumberFormat", "parameters": [{"name": "numberFormat", "type": "String"}], "result": "Range", "description": "Sets the number or date format to the given formatting string."}, {"name": "setNumberFormats", "parameters": [{"name": "numberFormats", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of number or date formats (must match dimensions of this range)."}, {"name": "setRichTextValue", "parameters": [{"name": "value", "type": "RichTextValue"}], "result": "Range", "description": "Sets the Rich Text value for the cells in the range."}, {"name": "setRichTextValues", "parameters": [{"name": "values", "type": "RichTextValue"}], "result": "Range", "description": "Sets a rectangular grid of Rich Text values."}, {"name": "setShowHyperlink", "parameters": [{"name": "showHyperlink", "type": "Boolean"}], "result": "Range", "description": "Sets whether or not the range should show hyperlinks."}, {"name": "setTextDirection", "parameters": [{"name": "direction", "type": "TextDirection"}], "result": "Range", "description": "Sets the text direction for the cells in the range."}, {"name": "setTextDirections", "parameters": [{"name": "directions", "type": "TextDirection"}], "result": "Range", "description": "Sets a rectangular grid of text directions."}, {"name": "setTextRotation", "parameters": [{"name": "degrees", "type": "Integer"}], "result": "Range", "description": "Sets the text rotation settings for the cells in the range."}, {"name": "setTextRotation", "parameters": [{"name": "rotation", "type": "TextRotation"}], "result": "Range", "description": "Sets the text rotation settings for the cells in the range."}, {"name": "setTextRotations", "parameters": [{"name": "rotations", "type": "TextRotation"}], "result": "Range", "description": "Sets a rectangular grid of text rotations."}, {"name": "setTextStyle", "parameters": [{"name": "style", "type": "TextStyle"}], "result": "Range", "description": "Sets the text style for the cells in the range."}, {"name": "setTextStyles", "parameters": [{"name": "styles", "type": "TextStyle"}], "result": "Range", "description": "Sets a rectangular grid of text styles."}, {"name": "setValue", "parameters": [{"name": "value", "type": "Object"}], "result": "Range", "description": "Sets the value of the range."}, {"name": "setValues", "parameters": [{"name": "values", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of values (must match dimensions of this range)."}, {"name": "setVerticalAlignment", "parameters": [{"name": "alignment", "type": "String"}], "result": "Range", "description": "Set the vertical (top to bottom) alignment for the given range (top/middle/bottom)."}, {"name": "setVerticalAlignments", "parameters": [{"name": "alignments", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of vertical alignments (must match dimensions of this range)."}, {"name": "setVerticalText", "parameters": [{"name": "isVertical", "type": "Boolean"}], "result": "Range", "description": "Sets whether or not to stack the text for the cells in the range."}, {"name": "setWrap", "parameters": [{"name": "isWrapEnabled", "type": "Boolean"}], "result": "Range", "description": "Set the cell wrap of the given range."}, {"name": "setWrapStrategies", "parameters": [{"name": "strategies", "type": "WrapStrategy"}], "result": "Range", "description": "Sets a rectangular grid of wrap strategies."}, {"name": "setWrapStrategy", "parameters": [{"name": "strategy", "type": "WrapStrategy"}], "result": "Range", "description": "Sets the text wrapping strategy for the cells in the range."}, {"name": "setWraps", "parameters": [{"name": "isWrapEnabled", "type": "Object"}], "result": "Range", "description": "Sets a rectangular grid of word wrap policies (must match dimensions of this range)."}, {"name": "shiftColumnGroupDepth", "parameters": [{"name": "delta", "type": "Integer"}], "result": "Range", "description": "Changes the column grouping depth of the range by the specified amount."}, {"name": "shiftRowGroupDepth", "parameters": [{"name": "delta", "type": "Integer"}], "result": "Range", "description": "Changes the row grouping depth of the range by the specified amount."}, {"name": "sort", "parameters": [{"name": "sortSpecObj", "type": "Object"}], "result": "Range", "description": "Sorts the cells in the given range, by column and order specified."}, {"name": "splitTextToColumns", "parameters": [], "result": "void", "description": "Splits a column of text into multiple columns based on an auto-detected delimiter."}, {"name": "splitTextToColumns", "parameters": [{"name": "delimiter", "type": "String"}], "result": "void", "description": "Splits a column of text into multiple columns using the specified string as a custom delimiter."}, {"name": "splitTextToColumns", "parameters": [{"name": "delimiter", "type": "TextToColumnsDelimiter"}], "result": "void", "description": "Splits a column of text into multiple columns based on the specified delimiter."}, {"name": "trimWhitespace", "parameters": [], "result": "Range", "description": "Trims the whitespace (such as spaces, tabs, or new lines) in every cell in this range."}, {"name": "uncheck", "parameters": [], "result": "Range", "description": "Changes the state of the checkboxes in the range to \u201cunchecked\u201d."}, {"name": "activate", "parameters": [], "result": "RangeList", "description": "Selects the list of Range instances."}, {"name": "breakApart", "parameters": [], "result": "RangeList", "description": "Break all horizontally- or vertically-merged cells contained within the range list into\nindividual cells again."}, {"name": "check", "parameters": [], "result": "RangeList", "description": "Changes the state of the checkboxes in the range to \u201cchecked\u201d."}, {"name": "clear", "parameters": [], "result": "RangeList", "description": "Clears the range of contents, formats, and data validation rules for each Range in\nthe range list."}, {"name": "clear", "parameters": [{"name": "options", "type": "Object"}], "result": "RangeList", "description": "Clears the range of contents, format, data validation rules, and comments, as specified with\nthe given options."}, {"name": "clearContent", "parameters": [], "result": "RangeList", "description": "Clears the content of each Range in the range list, leaving the formatting intact."}, {"name": "clearDataValidations", "parameters": [], "result": "RangeList", "description": "Clears the data validation rules for each Range in the range list."}, {"name": "clearFormat", "parameters": [], "result": "RangeList", "description": "Clears text formatting for each Range in the range list."}, {"name": "clearNote", "parameters": [], "result": "RangeList", "description": "Clears the note for each Range in the range list."}, {"name": "getRanges", "parameters": [], "result": "Range[]", "description": "Returns a list of one or more Range instances in the same sheet."}, {"name": "insertCheckboxes", "parameters": [], "result": "RangeList", "description": "Inserts checkboxes into each cell in the range, configured with true for checked and\nfalse for unchecked."}, {"name": "insertCheckboxes", "parameters": [{"name": "checkedValue", "type": "Object"}], "result": "RangeList", "description": "Inserts checkboxes into each cell in the range, configured with a custom value for checked and\nthe empty string for unchecked."}, {"name": "insertCheckboxes", "parameters": [{"name": "checkedValue", "type": "Object"}, {"name": "uncheckedValue", "type": "Object"}], "result": "RangeList", "description": "Inserts checkboxes into each cell in the range, configured with custom values for the checked\nand unchecked states."}, {"name": "removeCheckboxes", "parameters": [], "result": "RangeList", "description": "Removes all checkboxes from the range."}, {"name": "setBackground", "parameters": [{"name": "color", "type": "String"}], "result": "RangeList", "description": "Sets the background color for each Range in the range list."}, {"name": "setBackgroundRGB", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "RangeList", "description": "Sets the background to the given RGB color."}, {"name": "setBorder", "parameters": [{"name": "top", "type": "Boolean"}, {"name": "left", "type": "Boolean"}, {"name": "bottom", "type": "Boolean"}, {"name": "right", "type": "Boolean"}, {"name": "vertical", "type": "Boolean"}, {"name": "horizontal", "type": "Boolean"}], "result": "RangeList", "description": "Sets the border property for each Range in the range list."}, {"name": "setBorder", "parameters": [{"name": "top", "type": "Boolean"}, {"name": "left", "type": "Boolean"}, {"name": "bottom", "type": "Boolean"}, {"name": "right", "type": "Boolean"}, {"name": "vertical", "type": "Boolean"}, {"name": "horizontal", "type": "Boolean"}, {"name": "color", "type": "String"}, {"name": "style", "type": "BorderStyle"}], "result": "RangeList", "description": "Sets the border property with color and/or style for each Range in the range list."}, {"name": "setFontColor", "parameters": [{"name": "color", "type": "String"}], "result": "RangeList", "description": "Sets the font color for each Range in the range list."}, {"name": "setFontFamily", "parameters": [{"name": "fontFamily", "type": "String"}], "result": "RangeList", "description": "Sets the font family for each Range in the range list."}, {"name": "setFontLine", "parameters": [{"name": "fontLine", "type": "String"}], "result": "RangeList", "description": "Sets the font line style for each Range in the range list."}, {"name": "setFontSize", "parameters": [{"name": "size", "type": "Integer"}], "result": "RangeList", "description": "Sets the font size (in points) for each Range in the range list."}, {"name": "setFontStyle", "parameters": [{"name": "fontStyle", "type": "String"}], "result": "RangeList", "description": "Set the font style for each Range in the range list."}, {"name": "setFontWeight", "parameters": [{"name": "fontWeight", "type": "String"}], "result": "RangeList", "description": "Set the font weight for each Range in the range list."}, {"name": "setFormula", "parameters": [{"name": "formula", "type": "String"}], "result": "RangeList", "description": "Updates the formula for each Range in the range list."}, {"name": "setFormulaR1C1", "parameters": [{"name": "formula", "type": "String"}], "result": "RangeList", "description": "Updates the formula for each Range in the range list."}, {"name": "setHorizontalAlignment", "parameters": [{"name": "alignment", "type": "String"}], "result": "RangeList", "description": "Set the horizontal alignment for each Range in the range list."}, {"name": "setNote", "parameters": [{"name": "note", "type": "String"}], "result": "RangeList", "description": "Sets the note text for each Range in the range list."}, {"name": "setNumberFormat", "parameters": [{"name": "numberFormat", "type": "String"}], "result": "RangeList", "description": "Sets the number or date format for each Range in the range list."}, {"name": "setShowHyperlink", "parameters": [{"name": "showHyperlink", "type": "Boolean"}], "result": "RangeList", "description": "Sets whether or not each Range in the range list should show hyperlinks."}, {"name": "setTextDirection", "parameters": [{"name": "direction", "type": "TextDirection"}], "result": "RangeList", "description": "Sets the text direction for the cells in each Range in the range list."}, {"name": "setTextRotation", "parameters": [{"name": "degrees", "type": "Integer"}], "result": "RangeList", "description": "Sets the text rotation settings for the cells in each Range in the range list."}, {"name": "setValue", "parameters": [{"name": "value", "type": "Object"}], "result": "RangeList", "description": "Sets the value for each Range in the range list."}, {"name": "setVerticalAlignment", "parameters": [{"name": "alignment", "type": "String"}], "result": "RangeList", "description": "Set the vertical alignment for each Range in the range list."}, {"name": "setVerticalText", "parameters": [{"name": "isVertical", "type": "Boolean"}], "result": "RangeList", "description": "Sets whether or not to stack the text for the cells for each Range in the range\nlist."}, {"name": "setWrap", "parameters": [{"name": "isWrapEnabled", "type": "Boolean"}], "result": "RangeList", "description": "Set text wrapping for each Range in the range list."}, {"name": "setWrapStrategy", "parameters": [{"name": "strategy", "type": "WrapStrategy"}], "result": "RangeList", "description": "Sets the text wrapping strategy for each Range in the range list."}, {"name": "trimWhitespace", "parameters": [], "result": "RangeList", "description": "Trims the whitespace (such as spaces, tabs, or new lines) in every cell in this range list."}, {"name": "uncheck", "parameters": [], "result": "RangeList", "description": "Changes the state of the checkboxes in the range to \u201cunchecked\u201d."}, {"name": "copy", "parameters": [], "result": "RichTextValueBuilder", "description": "Returns a builder for a Rich Text value initialized with the values of this Rich Text value."}, {"name": "getEndIndex", "parameters": [], "result": "Integer", "description": "Gets the end index of this value in the cell."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Returns the link URL for this value."}, {"name": "getLinkUrl", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffset", "type": "Integer"}], "result": "String", "description": "Returns the link URL for the text from startOffset to endOffset."}, {"name": "getRuns", "parameters": [], "result": "RichTextValue[]", "description": "Returns the Rich Text string split into an array of runs, wherein each run is the longest\npossible substring having a consistent text style."}, {"name": "getStartIndex", "parameters": [], "result": "Integer", "description": "Gets the start index of this value in the cell."}, {"name": "getText", "parameters": [], "result": "String", "description": "Returns the text of this value."}, {"name": "getTextStyle", "parameters": [], "result": "TextStyle", "description": "Returns the text style of this value."}, {"name": "getTextStyle", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffset", "type": "Integer"}], "result": "TextStyle", "description": "Returns the text style of the text from startOffset to endOffset."}, {"name": "build", "parameters": [], "result": "RichTextValue", "description": "Creates a Rich Text value from this builder."}, {"name": "setLinkUrl", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffset", "type": "Integer"}, {"name": "linkUrl", "type": "String"}], "result": "RichTextValueBuilder", "description": "Sets the link URL for the given substring of this value, or clears it if linkUrl is\nnull."}, {"name": "setLinkUrl", "parameters": [{"name": "linkUrl", "type": "String"}], "result": "RichTextValueBuilder", "description": "Sets the link URL for the entire value, or clears it if linkUrl is null."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "RichTextValueBuilder", "description": "Sets the text for this value and clears any existing text style."}, {"name": "setTextStyle", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffset", "type": "Integer"}, {"name": "textStyle", "type": "TextStyle"}], "result": "RichTextValueBuilder", "description": "Applies a text style to the given substring of this value."}, {"name": "setTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "RichTextValueBuilder", "description": "Applies a text style to the entire value."}, {"name": "getActiveRange", "parameters": [], "result": "Range", "description": "Returns the selected range in the active sheet, or null if there is no active range."}, {"name": "getActiveRangeList", "parameters": [], "result": "RangeList", "description": "Returns the list of active ranges in the active sheet or null if there are no active\nranges."}, {"name": "getActiveSheet", "parameters": [], "result": "Sheet", "description": "Returns the active sheet in the spreadsheet."}, {"name": "getCurrentCell", "parameters": [], "result": "Range", "description": "Returns the current (highlighted) cell that is selected in one of the active ranges or null if there is no current cell."}, {"name": "getNextDataRange", "parameters": [{"name": "direction", "type": "Direction"}], "result": "Range", "description": "Starting from the current cell and active range\nand moving in the given direction, returns an adjusted range where the appropriate edge of the\nrange has been shifted to cover the next data cell while still\ncovering the current cell."}, {"name": "activate", "parameters": [], "result": "Sheet", "description": "Activates this sheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}], "result": "Sheet", "description": "Adds developer metadata with the specified key to the sheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Sheet", "description": "Adds developer metadata with the specified key and visibility to the sheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "Sheet", "description": "Adds developer metadata with the specified key and value to the sheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Sheet", "description": "Adds developer metadata with the specified key, value, and visibility to the sheet."}, {"name": "appendRow", "parameters": [{"name": "rowContents", "type": "Object"}], "result": "Sheet", "description": "Appends a row to the spreadsheet."}, {"name": "asDataSourceSheet", "parameters": [], "result": "DataSourceSheet", "description": "Returns the sheet as a DataSourceSheet if the sheet is of type SheetType.DATASOURCE, or null otherwise."}, {"name": "autoResizeColumn", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of the given column to fit its contents."}, {"name": "autoResizeColumns", "parameters": [{"name": "startColumn", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of all columns starting at the given column position to fit their contents."}, {"name": "autoResizeRows", "parameters": [{"name": "startRow", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "Sheet", "description": "Sets the height of all rows starting at the given row position to fit their contents."}, {"name": "clear", "parameters": [], "result": "Sheet", "description": "Clears the sheet of content and formatting information."}, {"name": "clear", "parameters": [{"name": "options", "type": "Object"}], "result": "Sheet", "description": "Clears the sheet of contents and/or format, as specified with the given advanced options."}, {"name": "clearConditionalFormatRules", "parameters": [], "result": "void", "description": "Removes all conditional format rules from the sheet."}, {"name": "clearContents", "parameters": [], "result": "Sheet", "description": "Clears the sheet of contents, while preserving formatting information."}, {"name": "clearFormats", "parameters": [], "result": "Sheet", "description": "Clears the sheet of formatting, while preserving contents."}, {"name": "clearNotes", "parameters": [], "result": "Sheet", "description": "Clears the sheet of all notes."}, {"name": "collapseAllColumnGroups", "parameters": [], "result": "Sheet", "description": "Collapses all column groups on the sheet."}, {"name": "collapseAllRowGroups", "parameters": [], "result": "Sheet", "description": "Collapses all row groups on the sheet."}, {"name": "copyTo", "parameters": [{"name": "spreadsheet", "type": "Spreadsheet"}], "result": "Sheet", "description": "Copies the sheet to a given spreadsheet, which can be the same spreadsheet as the source."}, {"name": "createDeveloperMetadataFinder", "parameters": [], "result": "DeveloperMetadataFinder", "description": "Returns a DeveloperMetadataFinder for finding developer metadata within the scope of\nthis sheet."}, {"name": "createTextFinder", "parameters": [{"name": "findText", "type": "String"}], "result": "TextFinder", "description": "Creates a text finder for the sheet, which can find and replace text within the sheet."}, {"name": "deleteColumn", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Deletes the column at the given column position."}, {"name": "deleteColumns", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "void", "description": "Deletes a number of columns starting at the given column position."}, {"name": "deleteRow", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Sheet", "description": "Deletes the row at the given row position."}, {"name": "deleteRows", "parameters": [{"name": "rowPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "void", "description": "Deletes a number of rows starting at the given row position."}, {"name": "expandAllColumnGroups", "parameters": [], "result": "Sheet", "description": "Expands all column groups on the sheet."}, {"name": "expandAllRowGroups", "parameters": [], "result": "Sheet", "description": "Expands all row groups on the sheet."}, {"name": "expandColumnGroupsUpToDepth", "parameters": [{"name": "groupDepth", "type": "Integer"}], "result": "Sheet", "description": "Expands all column groups up to the given depth, and collapses all others."}, {"name": "expandRowGroupsUpToDepth", "parameters": [{"name": "groupDepth", "type": "Integer"}], "result": "Sheet", "description": "Expands all row groups up to the given depth, and collapses all others."}, {"name": "getActiveCell", "parameters": [], "result": "Range", "description": "Returns the active cell in this sheet."}, {"name": "getActiveRange", "parameters": [], "result": "Range", "description": "Returns the selected range in the active sheet, or null if there is no active range."}, {"name": "getActiveRangeList", "parameters": [], "result": "RangeList", "description": "Returns the list of active ranges in the active sheet or null if there are no active\nranges."}, {"name": "getBandings", "parameters": [], "result": "Banding[]", "description": "Returns all the bandings in this sheet."}, {"name": "getCharts", "parameters": [], "result": "EmbeddedChart[]", "description": "Returns an array of charts on this sheet."}, {"name": "getColumnGroup", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "groupDepth", "type": "Integer"}], "result": "Group", "description": "Returns the column group at the given index and group depth."}, {"name": "getColumnGroupControlPosition", "parameters": [], "result": "GroupControlTogglePosition", "description": "Returns the GroupControlTogglePosition for all column groups on the sheet."}, {"name": "getColumnGroupDepth", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Integer", "description": "Returns the group depth of the column at the given index."}, {"name": "getColumnWidth", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Integer", "description": "Gets the width in pixels of the given column."}, {"name": "getConditionalFormatRules", "parameters": [], "result": "ConditionalFormatRule[]", "description": "Get all conditional format rules in this sheet."}, {"name": "getCurrentCell", "parameters": [], "result": "Range", "description": "Returns the current cell in the active sheet or null if there is no current cell."}, {"name": "getDataRange", "parameters": [], "result": "Range", "description": "Returns a Range corresponding to the dimensions in which data is present."}, {"name": "getDataSourceFormulas", "parameters": [], "result": "DataSourceFormula[]", "description": "Gets all the data source formulas."}, {"name": "getDataSourcePivotTables", "parameters": [], "result": "DataSourcePivotTable[]", "description": "Gets all the data source pivot tables."}, {"name": "getDataSourceTables", "parameters": [], "result": "DataSourceTable[]", "description": "Gets all the data source tables."}, {"name": "getDeveloperMetadata", "parameters": [], "result": "DeveloperMetadata[]", "description": "Get all developer metadata associated with this sheet."}, {"name": "getDrawings", "parameters": [], "result": "Drawing[]", "description": "Returns an array of drawings on the sheet."}, {"name": "getFilter", "parameters": [], "result": "Filter", "description": "Returns the filter in this sheet, or null if there is no filter."}, {"name": "getFormUrl", "parameters": [], "result": "String", "description": "Returns the URL for the form that sends its responses to this sheet, or null if this\nsheet has no associated form."}, {"name": "getFrozenColumns", "parameters": [], "result": "Integer", "description": "Returns the number of frozen columns."}, {"name": "getFrozenRows", "parameters": [], "result": "Integer", "description": "Returns the number of frozen rows."}, {"name": "getImages", "parameters": [], "result": "OverGridImage[]", "description": "Returns all over-the-grid images on the sheet."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the position of the sheet in its parent spreadsheet."}, {"name": "getLastColumn", "parameters": [], "result": "Integer", "description": "Returns the position of the last column that has content."}, {"name": "getLastRow", "parameters": [], "result": "Integer", "description": "Returns the position of the last row that has content."}, {"name": "getMaxColumns", "parameters": [], "result": "Integer", "description": "Returns the current number of columns in the sheet, regardless of content."}, {"name": "getMaxRows", "parameters": [], "result": "Integer", "description": "Returns the current number of rows in the sheet, regardless of content."}, {"name": "getName", "parameters": [], "result": "String", "description": "Returns the name of the sheet."}, {"name": "getNamedRanges", "parameters": [], "result": "NamedRange[]", "description": "Gets all the named ranges in this sheet."}, {"name": "getParent", "parameters": [], "result": "Spreadsheet", "description": "Returns the Spreadsheet that contains this sheet."}, {"name": "getPivotTables", "parameters": [], "result": "PivotTable[]", "description": "Returns all the pivot tables on this sheet."}, {"name": "getProtections", "parameters": [{"name": "type", "type": "ProtectionType"}], "result": "Protection[]", "description": "Gets an array of objects representing all protected ranges in the sheet, or a single-element\narray representing the protection on the sheet itself."}, {"name": "getRange", "parameters": [{"name": "row", "type": "Integer"}, {"name": "column", "type": "Integer"}], "result": "Range", "description": "Returns the range with the top left cell at the given coordinates."}, {"name": "getRange", "parameters": [{"name": "row", "type": "Integer"}, {"name": "column", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "Range", "description": "Returns the range with the top left cell at the given coordinates, and with the given number of\nrows."}, {"name": "getRange", "parameters": [{"name": "row", "type": "Integer"}, {"name": "column", "type": "Integer"}, {"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Range", "description": "Returns the range with the top left cell at the given coordinates with the given number of rows\nand columns."}, {"name": "getRange", "parameters": [{"name": "a1Notation", "type": "String"}], "result": "Range", "description": "Returns the range as specified in A1 notation or R1C1 notation."}, {"name": "getRangeList", "parameters": [{"name": "a1Notations", "type": "String"}], "result": "RangeList", "description": "Returns the RangeList collection representing the ranges in the same sheet specified\nby a non-empty list of A1 notations or R1C1 notations."}, {"name": "getRowGroup", "parameters": [{"name": "rowIndex", "type": "Integer"}, {"name": "groupDepth", "type": "Integer"}], "result": "Group", "description": "Returns the row group at the given index and group depth."}, {"name": "getRowGroupControlPosition", "parameters": [], "result": "GroupControlTogglePosition", "description": "Returns the GroupControlTogglePosition for all row groups on the sheet."}, {"name": "getRowGroupDepth", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "Integer", "description": "Returns the group depth of the row at the given index."}, {"name": "getRowHeight", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Integer", "description": "Gets the height in pixels of the given row."}, {"name": "getSelection", "parameters": [], "result": "Selection", "description": "Returns the current Selection in the spreadsheet."}, {"name": "getSheetId", "parameters": [], "result": "Integer", "description": "Returns the ID of the sheet represented by this object."}, {"name": "getSheetName", "parameters": [], "result": "String", "description": "Returns the sheet name."}, {"name": "getSheetValues", "parameters": [{"name": "startRow", "type": "Integer"}, {"name": "startColumn", "type": "Integer"}, {"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Object[][]", "description": "Returns the rectangular grid of values for this range starting at the given coordinates."}, {"name": "getSlicers", "parameters": [], "result": "Slicer[]", "description": "Returns an array of slicers on the sheet."}, {"name": "getTabColor", "parameters": [], "result": "String", "description": "Gets the sheet tab color, or null if the sheet tab has no color."}, {"name": "getTabColorObject", "parameters": [], "result": "Color", "description": "Gets the sheet tab color, or null if the sheet tab has no color."}, {"name": "getType", "parameters": [], "result": "SheetType", "description": "Returns the type of the sheet."}, {"name": "hasHiddenGridlines", "parameters": [], "result": "Boolean", "description": "Returns true if the sheet's gridlines are hidden; otherwise returns false."}, {"name": "hideColumn", "parameters": [{"name": "column", "type": "Range"}], "result": "void", "description": "Hides the columns in the given range."}, {"name": "hideColumns", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "void", "description": "Hides the column at the given index."}, {"name": "hideColumns", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "void", "description": "Hides one or more consecutive columns starting at the given index."}, {"name": "hideRow", "parameters": [{"name": "row", "type": "Range"}], "result": "void", "description": "Hides the rows in the given range."}, {"name": "hideRows", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "void", "description": "Hides the row at the given index."}, {"name": "hideRows", "parameters": [{"name": "rowIndex", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "void", "description": "Hides one or more consecutive rows starting at the given index."}, {"name": "hideSheet", "parameters": [], "result": "Sheet", "description": "Hides this sheet."}, {"name": "insertChart", "parameters": [{"name": "chart", "type": "EmbeddedChart"}], "result": "void", "description": "Adds a new chart to this sheet."}, {"name": "insertColumnAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a column after the given column position."}, {"name": "insertColumnBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a column before the given column position."}, {"name": "insertColumns", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "void", "description": "Inserts a blank column in a sheet at the specified location."}, {"name": "insertColumns", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "void", "description": "Inserts one or more consecutive blank columns in a sheet starting at the specified location."}, {"name": "insertColumnsAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of columns after the given column position."}, {"name": "insertColumnsBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of columns before the given column position."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts a BlobSource as an image in the document at a given row and column."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts a BlobSource as an image in the document at a given row and column, with a\npixel offset."}, {"name": "insertImage", "parameters": [{"name": "url", "type": "String"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts an image in the document at a given row and column."}, {"name": "insertImage", "parameters": [{"name": "url", "type": "String"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts an image in the document at a given row and column, with a pixel offset."}, {"name": "insertRowAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a row after the given row position."}, {"name": "insertRowBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a row before the given row position."}, {"name": "insertRows", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "void", "description": "Inserts a blank row in a sheet at the specified location."}, {"name": "insertRows", "parameters": [{"name": "rowIndex", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "void", "description": "Inserts one or more consecutive blank rows in a sheet starting at the specified location."}, {"name": "insertRowsAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of rows after the given row position."}, {"name": "insertRowsBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of rows before the given row position."}, {"name": "insertSlicer", "parameters": [{"name": "range", "type": "Range"}, {"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}], "result": "Slicer", "description": "Adds a new slicer to this sheet."}, {"name": "insertSlicer", "parameters": [{"name": "range", "type": "Range"}, {"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "Slicer", "description": "Adds a new slicer to this sheet."}, {"name": "isColumnHiddenByUser", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given column is hidden by the user."}, {"name": "isRightToLeft", "parameters": [], "result": "Boolean", "description": "Returns true if this sheet layout is right-to-left."}, {"name": "isRowHiddenByFilter", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given row is hidden by a filter (not a filter view)."}, {"name": "isRowHiddenByUser", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given row is hidden by the user."}, {"name": "isSheetHidden", "parameters": [], "result": "Boolean", "description": "Returns true if the sheet is currently hidden."}, {"name": "moveColumns", "parameters": [{"name": "columnSpec", "type": "Range"}, {"name": "destinationIndex", "type": "Integer"}], "result": "void", "description": "Moves the columns selected by the given range to the position indicated by the destinationIndex."}, {"name": "moveRows", "parameters": [{"name": "rowSpec", "type": "Range"}, {"name": "destinationIndex", "type": "Integer"}], "result": "void", "description": "Moves the rows selected by the given range to the position indicated by the destinationIndex."}, {"name": "newChart", "parameters": [], "result": "EmbeddedChartBuilder", "description": "Returns a builder to create a new chart for this sheet."}, {"name": "protect", "parameters": [], "result": "Protection", "description": "Creates an object that can protect the sheet from being edited except by users who have\npermission."}, {"name": "removeChart", "parameters": [{"name": "chart", "type": "EmbeddedChart"}], "result": "void", "description": "Removes a chart from the parent sheet."}, {"name": "setActiveRange", "parameters": [{"name": "range", "type": "Range"}], "result": "Range", "description": "Sets the specified range as the active range in the active sheet, with\nthe top left cell in the range as the current cell."}, {"name": "setActiveRangeList", "parameters": [{"name": "rangeList", "type": "RangeList"}], "result": "RangeList", "description": "Sets the specified list of ranges as the active ranges in the\nactive sheet."}, {"name": "setActiveSelection", "parameters": [{"name": "range", "type": "Range"}], "result": "Range", "description": "Sets the active selection region for this sheet."}, {"name": "setActiveSelection", "parameters": [{"name": "a1Notation", "type": "String"}], "result": "Range", "description": "Sets the active selection, as specified in A1 notation or R1C1 notation."}, {"name": "setColumnGroupControlPosition", "parameters": [{"name": "position", "type": "GroupControlTogglePosition"}], "result": "Sheet", "description": "Sets the position of the column group control toggle on the sheet."}, {"name": "setColumnWidth", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "width", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of the given column in pixels."}, {"name": "setColumnWidths", "parameters": [{"name": "startColumn", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}, {"name": "width", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of the given columns in pixels."}, {"name": "setConditionalFormatRules", "parameters": [{"name": "rules", "type": "ConditionalFormatRule"}], "result": "void", "description": "Replaces all currently existing conditional format rules in the sheet with the input rules."}, {"name": "setCurrentCell", "parameters": [{"name": "cell", "type": "Range"}], "result": "Range", "description": "Sets the specified cell as the current cell."}, {"name": "setFrozenColumns", "parameters": [{"name": "columns", "type": "Integer"}], "result": "void", "description": "Freezes the given number of columns."}, {"name": "setFrozenRows", "parameters": [{"name": "rows", "type": "Integer"}], "result": "void", "description": "Freezes the given number of rows."}, {"name": "setHiddenGridlines", "parameters": [{"name": "hideGridlines", "type": "Boolean"}], "result": "Sheet", "description": "Hides or reveals the sheet gridlines."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Sheet", "description": "Sets the sheet name."}, {"name": "setRightToLeft", "parameters": [{"name": "rightToLeft", "type": "Boolean"}], "result": "Sheet", "description": "Sets or unsets the sheet layout to right-to-left."}, {"name": "setRowGroupControlPosition", "parameters": [{"name": "position", "type": "GroupControlTogglePosition"}], "result": "Sheet", "description": "Sets the position of the row group control toggle on the sheet."}, {"name": "setRowHeight", "parameters": [{"name": "rowPosition", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "Sheet", "description": "Sets the row height of the given row in pixels."}, {"name": "setRowHeights", "parameters": [{"name": "startRow", "type": "Integer"}, {"name": "numRows", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "Sheet", "description": "Sets the height of the given rows in pixels."}, {"name": "setTabColor", "parameters": [{"name": "color", "type": "String"}], "result": "Sheet", "description": "Sets the sheet tab color."}, {"name": "setTabColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Sheet", "description": "Sets the sheet tab color."}, {"name": "showColumns", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "void", "description": "Unhides the column at the given index."}, {"name": "showColumns", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "void", "description": "Unhides one or more consecutive columns starting at the given index."}, {"name": "showRows", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "void", "description": "Unhides the row at the given index."}, {"name": "showRows", "parameters": [{"name": "rowIndex", "type": "Integer"}, {"name": "numRows", "type": "Integer"}], "result": "void", "description": "Unhides one or more consecutive rows starting at the given index."}, {"name": "showSheet", "parameters": [], "result": "Sheet", "description": "Makes the sheet visible."}, {"name": "sort", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Sorts a sheet by column, ascending."}, {"name": "sort", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "ascending", "type": "Boolean"}], "result": "Sheet", "description": "Sorts a sheet by column."}, {"name": "unhideColumn", "parameters": [{"name": "column", "type": "Range"}], "result": "void", "description": "Unhides the column in the given range."}, {"name": "unhideRow", "parameters": [{"name": "row", "type": "Range"}], "result": "void", "description": "Unhides the row in the given range."}, {"name": "updateChart", "parameters": [{"name": "chart", "type": "EmbeddedChart"}], "result": "void", "description": "Updates the chart on this sheet."}, {"name": "getBackgroundColor", "parameters": [], "result": "String", "description": "Returns the background color of the slicer in CSS notation (such as '#ffffff')."}, {"name": "getBackgroundColorObject", "parameters": [], "result": "Color", "description": "Return the background Color of the slicer."}, {"name": "getColumnPosition", "parameters": [], "result": "Integer", "description": "Returns the column position (relative to the data range of the slicer) on which the filter is\napplied in the slicer, or null if the column position is not set."}, {"name": "getContainerInfo", "parameters": [], "result": "ContainerInfo", "description": "Gets information about where the slicer is positioned in the sheet."}, {"name": "getFilterCriteria", "parameters": [], "result": "FilterCriteria", "description": "Returns the filter criteria of the slicer, or null if the filter criteria is not set."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Gets the data range on which the slicer is applied to."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the title of the slicer."}, {"name": "getTitleHorizontalAlignment", "parameters": [], "result": "String", "description": "Gets the horizontal alignment of the title."}, {"name": "getTitleTextStyle", "parameters": [], "result": "TextStyle", "description": "Returns the text style of the slicer's title."}, {"name": "isAppliedToPivotTables", "parameters": [], "result": "Boolean", "description": "Returns whether the given slicer is applied to pivot tables."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes the slicer."}, {"name": "setApplyToPivotTables", "parameters": [{"name": "applyToPivotTables", "type": "Boolean"}], "result": "Slicer", "description": "Sets if the given slicer should be applied to pivot tables in the worksheet."}, {"name": "setBackgroundColor", "parameters": [{"name": "color", "type": "String"}], "result": "Slicer", "description": "Sets the background color of the slicer."}, {"name": "setBackgroundColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "Slicer", "description": "Sets the background Color of the slicer."}, {"name": "setColumnFilterCriteria", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "filterCriteria", "type": "FilterCriteria"}], "result": "Slicer", "description": "Sets the column index and filtering criteria of the slicer."}, {"name": "setPosition", "parameters": [{"name": "anchorRowPos", "type": "Integer"}, {"name": "anchorColPos", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "Slicer", "description": "Sets the position where the slicer appears on the sheet."}, {"name": "setRange", "parameters": [{"name": "rangeApi", "type": "Range"}], "result": "Slicer", "description": "Sets the data range on which the slicer is applied."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Slicer", "description": "Sets the title of the slicer."}, {"name": "setTitleHorizontalAlignment", "parameters": [{"name": "horizontalAlignment", "type": "String"}], "result": "Slicer", "description": "Sets the horizontal alignment of the title in the slicer."}, {"name": "setTitleTextStyle", "parameters": [{"name": "textStyle", "type": "TextStyle"}], "result": "Slicer", "description": "Sets the text style of the slicer."}, {"name": "getBackgroundColor", "parameters": [], "result": "Color", "description": "Returns the background color used for sorting, or null if absent."}, {"name": "getDataSourceColumn", "parameters": [], "result": "DataSourceColumn", "description": "Gets the data source column the sort spec acts on."}, {"name": "getDimensionIndex", "parameters": [], "result": "Integer", "description": "Returns the dimension index or null if not linked to a local filter."}, {"name": "getForegroundColor", "parameters": [], "result": "Color", "description": "Returns the foreground color used for sorting, or null if absent."}, {"name": "getSortOrder", "parameters": [], "result": "SortOrder", "description": "Returns the sort order."}, {"name": "isAscending", "parameters": [], "result": "Boolean", "description": "Returns whether the sort order is ascending."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}], "result": "Spreadsheet", "description": "Adds developer metadata with the specified key to the top-level spreadsheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Spreadsheet", "description": "Adds developer metadata with the specified key and visibility to the spreadsheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "Spreadsheet", "description": "Adds developer metadata with the specified key and value to the spreadsheet."}, {"name": "addDeveloperMetadata", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}, {"name": "visibility", "type": "DeveloperMetadataVisibility"}], "result": "Spreadsheet", "description": "Adds developer metadata with the specified key, value, and visibility to the spreadsheet."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Spreadsheet", "description": "Adds the given user to the list of editors for the Spreadsheet."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Spreadsheet", "description": "Adds the given user to the list of editors for the Spreadsheet."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Spreadsheet", "description": "Adds the given array of users to the list of editors for the Spreadsheet."}, {"name": "addMenu", "parameters": [{"name": "name", "type": "String"}, {"name": "subMenus", "type": "Object"}], "result": "void", "description": "Creates a new menu in the Spreadsheet UI."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Spreadsheet", "description": "Adds the given user to the list of viewers for the Spreadsheet."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Spreadsheet", "description": "Adds the given user to the list of viewers for the Spreadsheet."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Spreadsheet", "description": "Adds the given array of users to the list of viewers for the Spreadsheet."}, {"name": "appendRow", "parameters": [{"name": "rowContents", "type": "Object"}], "result": "Sheet", "description": "Appends a row to the spreadsheet."}, {"name": "autoResizeColumn", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of the given column to fit its contents."}, {"name": "copy", "parameters": [{"name": "name", "type": "String"}], "result": "Spreadsheet", "description": "Copies the spreadsheet and returns the new one."}, {"name": "createDeveloperMetadataFinder", "parameters": [], "result": "DeveloperMetadataFinder", "description": "Returns a DeveloperMetadataFinder for finding developer metadata within the scope of\nthis spreadsheet."}, {"name": "createTextFinder", "parameters": [{"name": "findText", "type": "String"}], "result": "TextFinder", "description": "Creates a text finder for the spreadsheet, which can be used to find and replace text within\nthe spreadsheet."}, {"name": "deleteActiveSheet", "parameters": [], "result": "Sheet", "description": "Deletes the currently active sheet."}, {"name": "deleteColumn", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Deletes the column at the given column position."}, {"name": "deleteColumns", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "void", "description": "Deletes a number of columns starting at the given column position."}, {"name": "deleteRow", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Sheet", "description": "Deletes the row at the given row position."}, {"name": "deleteRows", "parameters": [{"name": "rowPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "void", "description": "Deletes a number of rows starting at the given row position."}, {"name": "deleteSheet", "parameters": [{"name": "sheet", "type": "Sheet"}], "result": "void", "description": "Deletes the specified sheet."}, {"name": "duplicateActiveSheet", "parameters": [], "result": "Sheet", "description": "Duplicates the active sheet and makes it the active sheet."}, {"name": "getActiveCell", "parameters": [], "result": "Range", "description": "Returns the active cell in this sheet."}, {"name": "getActiveRange", "parameters": [], "result": "Range", "description": "Returns the selected range in the active sheet, or null if there is no active range."}, {"name": "getActiveRangeList", "parameters": [], "result": "RangeList", "description": "Returns the list of active ranges in the active sheet or null if there are no active\nranges."}, {"name": "getActiveSheet", "parameters": [], "result": "Sheet", "description": "Gets the active sheet in a spreadsheet."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBandings", "parameters": [], "result": "Banding[]", "description": "Returns all the bandings in this spreadsheet."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getColumnWidth", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Integer", "description": "Gets the width in pixels of the given column."}, {"name": "getCurrentCell", "parameters": [], "result": "Range", "description": "Returns the current cell in the active sheet or null if there is no current cell."}, {"name": "getDataRange", "parameters": [], "result": "Range", "description": "Returns a Range corresponding to the dimensions in which data is present."}, {"name": "getDataSourceFormulas", "parameters": [], "result": "DataSourceFormula[]", "description": "Gets all the data source formulas."}, {"name": "getDataSourcePivotTables", "parameters": [], "result": "DataSourcePivotTable[]", "description": "Gets all the data source pivot tables."}, {"name": "getDataSourceRefreshSchedules", "parameters": [], "result": "DataSourceRefreshSchedule[]", "description": "Gets the refresh schedules of this spreadsheet."}, {"name": "getDataSourceSheets", "parameters": [], "result": "DataSourceSheet[]", "description": "Returns all the data source sheets in the spreadsheet."}, {"name": "getDataSourceTables", "parameters": [], "result": "DataSourceTable[]", "description": "Gets all the data source tables."}, {"name": "getDataSources", "parameters": [], "result": "DataSource[]", "description": "Returns all the data sources in the spreadsheet."}, {"name": "getDeveloperMetadata", "parameters": [], "result": "DeveloperMetadata[]", "description": "Get the developer metadata associated with the top-level spreadsheet."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Spreadsheet."}, {"name": "getFormUrl", "parameters": [], "result": "String", "description": "Returns the URL for the form that sends its responses to this spreadsheet, or null if\nthis spreadsheet has no associated form."}, {"name": "getFrozenColumns", "parameters": [], "result": "Integer", "description": "Returns the number of frozen columns."}, {"name": "getFrozenRows", "parameters": [], "result": "Integer", "description": "Returns the number of frozen rows."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets a unique identifier for this spreadsheet."}, {"name": "getImages", "parameters": [], "result": "OverGridImage[]", "description": "Returns all over-the-grid images on the sheet."}, {"name": "getIterativeCalculationConvergenceThreshold", "parameters": [], "result": "Number", "description": "Returns the threshold value used during iterative calculation."}, {"name": "getLastColumn", "parameters": [], "result": "Integer", "description": "Returns the position of the last column that has content."}, {"name": "getLastRow", "parameters": [], "result": "Integer", "description": "Returns the position of the last row that has content."}, {"name": "getMaxIterativeCalculationCycles", "parameters": [], "result": "Integer", "description": "Returns the maximum number of iterations to use during iterative calculation."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the document."}, {"name": "getNamedRanges", "parameters": [], "result": "NamedRange[]", "description": "Gets all the named ranges in this spreadsheet."}, {"name": "getNumSheets", "parameters": [], "result": "Integer", "description": "Returns the number of sheets in this spreadsheet."}, {"name": "getOwner", "parameters": [], "result": "User", "description": "Returns the owner of the document, or null for a document in a shared drive."}, {"name": "getPredefinedSpreadsheetThemes", "parameters": [], "result": "SpreadsheetTheme[]", "description": "Returns the list of predefined themes."}, {"name": "getProtections", "parameters": [{"name": "type", "type": "ProtectionType"}], "result": "Protection[]", "description": "Gets an array of objects representing all protected ranges or sheets in the spreadsheet."}, {"name": "getRange", "parameters": [{"name": "a1Notation", "type": "String"}], "result": "Range", "description": "Returns the range as specified in A1 notation or R1C1 notation."}, {"name": "getRangeByName", "parameters": [{"name": "name", "type": "String"}], "result": "Range", "description": "Returns a named range, or null if no range with the given name is found."}, {"name": "getRangeList", "parameters": [{"name": "a1Notations", "type": "String"}], "result": "RangeList", "description": "Returns the RangeList collection representing the ranges in the same sheet specified\nby a non-empty list of A1 notations or R1C1 notations."}, {"name": "getRecalculationInterval", "parameters": [], "result": "RecalculationInterval", "description": "Returns the calculation interval for this spreadsheet."}, {"name": "getRowHeight", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Integer", "description": "Gets the height in pixels of the given row."}, {"name": "getSelection", "parameters": [], "result": "Selection", "description": "Returns the current Selection in the spreadsheet."}, {"name": "getSheetByName", "parameters": [{"name": "name", "type": "String"}], "result": "Sheet", "description": "Returns a sheet with the given name."}, {"name": "getSheetId", "parameters": [], "result": "Integer", "description": "Returns the ID of the sheet represented by this object."}, {"name": "getSheetName", "parameters": [], "result": "String", "description": "Returns the sheet name."}, {"name": "getSheetValues", "parameters": [{"name": "startRow", "type": "Integer"}, {"name": "startColumn", "type": "Integer"}, {"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Object[][]", "description": "Returns the rectangular grid of values for this range starting at the given coordinates."}, {"name": "getSheets", "parameters": [], "result": "Sheet[]", "description": "Gets all the sheets in this spreadsheet."}, {"name": "getSpreadsheetLocale", "parameters": [], "result": "String", "description": "Gets the spreadsheet locale."}, {"name": "getSpreadsheetTheme", "parameters": [], "result": "SpreadsheetTheme", "description": "Returns the current theme of the spreadsheet, or null if no theme is applied."}, {"name": "getSpreadsheetTimeZone", "parameters": [], "result": "String", "description": "Gets the time zone for the spreadsheet."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Returns the URL for the given spreadsheet."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this Spreadsheet."}, {"name": "hideColumn", "parameters": [{"name": "column", "type": "Range"}], "result": "void", "description": "Hides the columns in the given range."}, {"name": "hideRow", "parameters": [{"name": "row", "type": "Range"}], "result": "void", "description": "Hides the rows in the given range."}, {"name": "insertColumnAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a column after the given column position."}, {"name": "insertColumnBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a column before the given column position."}, {"name": "insertColumnsAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of columns after the given column position."}, {"name": "insertColumnsBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of columns before the given column position."}, {"name": "insertDataSourceSheet", "parameters": [{"name": "spec", "type": "DataSourceSpec"}], "result": "DataSourceSheet", "description": "Inserts a new DataSourceSheet in the spreadsheet and starts data execution."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts a Spreadsheet as an image in the document at a given row and column."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts a Spreadsheet as an image in the document at a given row and column, with a\npixel offset."}, {"name": "insertImage", "parameters": [{"name": "url", "type": "String"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts an image in the document at a given row and column."}, {"name": "insertImage", "parameters": [{"name": "url", "type": "String"}, {"name": "column", "type": "Integer"}, {"name": "row", "type": "Integer"}, {"name": "offsetX", "type": "Integer"}, {"name": "offsetY", "type": "Integer"}], "result": "OverGridImage", "description": "Inserts an image in the document at a given row and column, with a pixel offset."}, {"name": "insertRowAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a row after the given row position."}, {"name": "insertRowBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}], "result": "Sheet", "description": "Inserts a row before the given row position."}, {"name": "insertRowsAfter", "parameters": [{"name": "afterPosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of rows after the given row position."}, {"name": "insertRowsBefore", "parameters": [{"name": "beforePosition", "type": "Integer"}, {"name": "howMany", "type": "Integer"}], "result": "Sheet", "description": "Inserts a number of rows before the given row position."}, {"name": "insertSheet", "parameters": [], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet, using a default sheet name."}, {"name": "insertSheet", "parameters": [{"name": "sheetIndex", "type": "Integer"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet at the given index."}, {"name": "insertSheet", "parameters": [{"name": "sheetIndex", "type": "Integer"}, {"name": "options", "type": "Object"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet at the given index and uses optional advanced\narguments."}, {"name": "insertSheet", "parameters": [{"name": "options", "type": "Object"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet, using a default sheet name and optional advanced\narguments."}, {"name": "insertSheet", "parameters": [{"name": "sheetName", "type": "String"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet with the given name."}, {"name": "insertSheet", "parameters": [{"name": "sheetName", "type": "String"}, {"name": "sheetIndex", "type": "Integer"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet with the given name at the given index."}, {"name": "insertSheet", "parameters": [{"name": "sheetName", "type": "String"}, {"name": "sheetIndex", "type": "Integer"}, {"name": "options", "type": "Object"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet with the given name at the given index and uses\noptional advanced arguments."}, {"name": "insertSheet", "parameters": [{"name": "sheetName", "type": "String"}, {"name": "options", "type": "Object"}], "result": "Sheet", "description": "Inserts a new sheet into the spreadsheet with the given name and uses optional advanced\narguments."}, {"name": "insertSheetWithDataSourceTable", "parameters": [{"name": "spec", "type": "DataSourceSpec"}], "result": "Sheet", "description": "Inserts a new sheet in the spreadsheet, creates a DataSourceTable spanning the\nentire sheet with the given data source specification, and starts data execution."}, {"name": "isColumnHiddenByUser", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given column is hidden by the user."}, {"name": "isIterativeCalculationEnabled", "parameters": [], "result": "Boolean", "description": "Returns whether iterative calculation is enabled in this spreadsheet."}, {"name": "isRowHiddenByFilter", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given row is hidden by a filter (not a filter view)."}, {"name": "isRowHiddenByUser", "parameters": [{"name": "rowPosition", "type": "Integer"}], "result": "Boolean", "description": "Returns whether the given row is hidden by the user."}, {"name": "moveActiveSheet", "parameters": [{"name": "pos", "type": "Integer"}], "result": "void", "description": "Moves the active sheet to the given position in the list of sheets."}, {"name": "moveChartToObjectSheet", "parameters": [{"name": "chart", "type": "EmbeddedChart"}], "result": "Sheet", "description": "Creates a new SheetType.OBJECT sheet and moves the provided chart to it."}, {"name": "refreshAllDataSources", "parameters": [], "result": "void", "description": "Refreshes all supported data sources and their linked data source objects, skipping invalid\ndata source objects."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Spreadsheet", "description": "Removes the given user from the list of editors for the Spreadsheet."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Spreadsheet", "description": "Removes the given user from the list of editors for the Spreadsheet."}, {"name": "removeMenu", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "Removes a menu that was added by addMenu(name, subMenus)."}, {"name": "removeNamedRange", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "Deletes a named range with the given name."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Spreadsheet", "description": "Removes the given user from the list of viewers and commenters for the Spreadsheet."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Spreadsheet", "description": "Removes the given user from the list of viewers and commenters for the Spreadsheet."}, {"name": "rename", "parameters": [{"name": "newName", "type": "String"}], "result": "void", "description": "Renames the document."}, {"name": "renameActiveSheet", "parameters": [{"name": "newName", "type": "String"}], "result": "void", "description": "Renames the current active sheet to the given new name."}, {"name": "resetSpreadsheetTheme", "parameters": [], "result": "SpreadsheetTheme", "description": "Removes the applied theme and sets the default theme on the spreadsheet."}, {"name": "setActiveRange", "parameters": [{"name": "range", "type": "Range"}], "result": "Range", "description": "Sets the specified range as the active range in the active sheet, with\nthe top left cell in the range as the current cell."}, {"name": "setActiveRangeList", "parameters": [{"name": "rangeList", "type": "RangeList"}], "result": "RangeList", "description": "Sets the specified list of ranges as the active ranges in the\nactive sheet."}, {"name": "setActiveSelection", "parameters": [{"name": "range", "type": "Range"}], "result": "Range", "description": "Sets the active selection region for this sheet."}, {"name": "setActiveSelection", "parameters": [{"name": "a1Notation", "type": "String"}], "result": "Range", "description": "Sets the active selection, as specified in A1 notation or R1C1 notation."}, {"name": "setActiveSheet", "parameters": [{"name": "sheet", "type": "Sheet"}], "result": "Sheet", "description": "Sets the given sheet to be the active sheet in the spreadsheet."}, {"name": "setActiveSheet", "parameters": [{"name": "sheet", "type": "Sheet"}, {"name": "restoreSelection", "type": "Boolean"}], "result": "Sheet", "description": "Sets the given sheet to be the active sheet in the spreadsheet, with an option to restore the\nmost recent selection within that sheet."}, {"name": "setColumnWidth", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "width", "type": "Integer"}], "result": "Sheet", "description": "Sets the width of the given column in pixels."}, {"name": "setCurrentCell", "parameters": [{"name": "cell", "type": "Range"}], "result": "Range", "description": "Sets the specified cell as the current cell."}, {"name": "setFrozenColumns", "parameters": [{"name": "columns", "type": "Integer"}], "result": "void", "description": "Freezes the given number of columns."}, {"name": "setFrozenRows", "parameters": [{"name": "rows", "type": "Integer"}], "result": "void", "description": "Freezes the given number of rows."}, {"name": "setIterativeCalculationConvergenceThreshold", "parameters": [{"name": "minThreshold", "type": "Number"}], "result": "Spreadsheet", "description": "Sets the minimum threshold value for iterative calculation."}, {"name": "setIterativeCalculationEnabled", "parameters": [{"name": "isEnabled", "type": "Boolean"}], "result": "Spreadsheet", "description": "Sets whether iterative calculation is enabled in this spreadsheet."}, {"name": "setMaxIterativeCalculationCycles", "parameters": [{"name": "maxIterations", "type": "Integer"}], "result": "Spreadsheet", "description": "Sets the maximum number of calculation iterations that should be performed during iterative\ncalculation."}, {"name": "setNamedRange", "parameters": [{"name": "name", "type": "String"}, {"name": "range", "type": "Range"}], "result": "void", "description": "Names a range."}, {"name": "setRecalculationInterval", "parameters": [{"name": "recalculationInterval", "type": "RecalculationInterval"}], "result": "Spreadsheet", "description": "Sets how often this spreadsheet should recalculate."}, {"name": "setRowHeight", "parameters": [{"name": "rowPosition", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "Sheet", "description": "Sets the row height of the given row in pixels."}, {"name": "setSpreadsheetLocale", "parameters": [{"name": "locale", "type": "String"}], "result": "void", "description": "Sets the spreadsheet locale."}, {"name": "setSpreadsheetTheme", "parameters": [{"name": "theme", "type": "SpreadsheetTheme"}], "result": "SpreadsheetTheme", "description": "Sets a theme on the spreadsheet."}, {"name": "setSpreadsheetTimeZone", "parameters": [{"name": "timezone", "type": "String"}], "result": "void", "description": "Sets the time zone for the spreadsheet."}, {"name": "show", "parameters": [{"name": "userInterface", "type": "Object"}], "result": "void", "description": "Displays a custom user interface component in a dialog centered in the user's browser's\nviewport."}, {"name": "sort", "parameters": [{"name": "columnPosition", "type": "Integer"}], "result": "Sheet", "description": "Sorts a sheet by column, ascending."}, {"name": "sort", "parameters": [{"name": "columnPosition", "type": "Integer"}, {"name": "ascending", "type": "Boolean"}], "result": "Sheet", "description": "Sorts a sheet by column."}, {"name": "toast", "parameters": [{"name": "msg", "type": "String"}], "result": "void", "description": "Shows a popup window in the lower right corner of the spreadsheet with the given message."}, {"name": "toast", "parameters": [{"name": "msg", "type": "String"}, {"name": "title", "type": "String"}], "result": "void", "description": "Shows a popup window in the lower right corner of the spreadsheet with the given message and\ntitle."}, {"name": "toast", "parameters": [{"name": "msg", "type": "String"}, {"name": "title", "type": "String"}, {"name": "timeoutSeconds", "type": "Number"}], "result": "void", "description": "Shows a popup window in the lower right corner of the spreadsheet with the given title and\nmessage, that stays visible for a certain length of time."}, {"name": "unhideColumn", "parameters": [{"name": "column", "type": "Range"}], "result": "void", "description": "Unhides the column in the given range."}, {"name": "unhideRow", "parameters": [{"name": "row", "type": "Range"}], "result": "void", "description": "Unhides the row in the given range."}, {"name": "updateMenu", "parameters": [{"name": "name", "type": "String"}, {"name": "subMenus", "type": "Object"}], "result": "void", "description": "Updates a menu that was added by addMenu(name, subMenus)."}, {"name": "waitForAllDataExecutionsCompletion", "parameters": [{"name": "timeoutInSeconds", "type": "Integer"}], "result": "void", "description": "Waits until all the current executions in the spreadsheet complete, timing out after the\nprovided number of seconds."}, {"name": "create", "parameters": [{"name": "name", "type": "String"}], "result": "Spreadsheet", "description": "Creates a new spreadsheet with the given name."}, {"name": "create", "parameters": [{"name": "name", "type": "String"}, {"name": "rows", "type": "Integer"}, {"name": "columns", "type": "Integer"}], "result": "Spreadsheet", "description": "Creates a new spreadsheet with the given name and the specified number of rows and columns."}, {"name": "enableAllDataSourcesExecution", "parameters": [], "result": "void", "description": "Enables data execution for all types of data sources."}, {"name": "enableBigQueryExecution", "parameters": [], "result": "void", "description": "Enables data execution for BigQuery data source."}, {"name": "flush", "parameters": [], "result": "void", "description": "Applies all pending Spreadsheet changes."}, {"name": "getActive", "parameters": [], "result": "Spreadsheet", "description": "Returns the currently active spreadsheet, or null if there is none."}, {"name": "getActiveRange", "parameters": [], "result": "Range", "description": "Returns the selected range in the active sheet, or null if there is no active range."}, {"name": "getActiveRangeList", "parameters": [], "result": "RangeList", "description": "Returns the list of active ranges in the active sheet or null if there are no ranges\nselected."}, {"name": "getActiveSheet", "parameters": [], "result": "Sheet", "description": "Gets the active sheet in a spreadsheet."}, {"name": "getActiveSpreadsheet", "parameters": [], "result": "Spreadsheet", "description": "Returns the currently active spreadsheet, or null if there is none."}, {"name": "getCurrentCell", "parameters": [], "result": "Range", "description": "Returns the current (highlighted) cell that is selected in one of the active ranges in the\nactive sheet or null if there is no current cell."}, {"name": "getSelection", "parameters": [], "result": "Selection", "description": "Returns the current Selection in the spreadsheet."}, {"name": "getUi", "parameters": [], "result": "Ui", "description": "Returns an instance of the spreadsheet's user-interface environment that allows the script to\nadd features like menus, dialogs, and sidebars."}, {"name": "newColor", "parameters": [], "result": "ColorBuilder", "description": "Creates a builder for a Color."}, {"name": "newConditionalFormatRule", "parameters": [], "result": "ConditionalFormatRuleBuilder", "description": "Creates a builder for a conditional formatting rule."}, {"name": "newDataSourceSpec", "parameters": [], "result": "DataSourceSpecBuilder", "description": "Creates a builder for a DataSourceSpec."}, {"name": "newDataValidation", "parameters": [], "result": "DataValidationBuilder", "description": "Creates a builder for a data validation rule."}, {"name": "newFilterCriteria", "parameters": [], "result": "FilterCriteriaBuilder", "description": "Creates a builder for a FilterCriteria."}, {"name": "newRichTextValue", "parameters": [], "result": "RichTextValueBuilder", "description": "Creates a builder for a Rich Text value."}, {"name": "newTextStyle", "parameters": [], "result": "TextStyleBuilder", "description": "Creates a builder for a text style."}, {"name": "open", "parameters": [{"name": "file", "type": "File"}], "result": "Spreadsheet", "description": "Opens the spreadsheet that corresponds to the given File object."}, {"name": "openById", "parameters": [{"name": "id", "type": "String"}], "result": "Spreadsheet", "description": "Opens the spreadsheet with the given ID."}, {"name": "openByUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Spreadsheet", "description": "Opens the spreadsheet with the given URL."}, {"name": "setActiveRange", "parameters": [{"name": "range", "type": "Range"}], "result": "Range", "description": "Sets the specified range as the active range, with the top\nleft cell in the range as the current cell."}, {"name": "setActiveRangeList", "parameters": [{"name": "rangeList", "type": "RangeList"}], "result": "RangeList", "description": "Sets the specified list of ranges as the active ranges."}, {"name": "setActiveSheet", "parameters": [{"name": "sheet", "type": "Sheet"}], "result": "Sheet", "description": "Sets the active sheet in a spreadsheet."}, {"name": "setActiveSheet", "parameters": [{"name": "sheet", "type": "Sheet"}, {"name": "restoreSelection", "type": "Boolean"}], "result": "Sheet", "description": "Sets the active sheet in a spreadsheet, with the option to restore the most recent selection\nwithin that sheet."}, {"name": "setActiveSpreadsheet", "parameters": [{"name": "newActiveSpreadsheet", "type": "Spreadsheet"}], "result": "void", "description": "Sets the active spreadsheet."}, {"name": "setCurrentCell", "parameters": [{"name": "cell", "type": "Range"}], "result": "Range", "description": "Sets the specified cell as the current cell."}, {"name": "getConcreteColor", "parameters": [{"name": "themeColorType", "type": "ThemeColorType"}], "result": "Color", "description": "Returns the concrete Color for a valid theme color type."}, {"name": "getFontFamily", "parameters": [], "result": "String", "description": "Returns the font family of the theme, or null if it's a null theme."}, {"name": "getThemeColors", "parameters": [], "result": "ThemeColorType[]", "description": "Returns a list of all possible theme color types for the current theme."}, {"name": "setConcreteColor", "parameters": [{"name": "themeColorType", "type": "ThemeColorType"}, {"name": "color", "type": "Color"}], "result": "SpreadsheetTheme", "description": "Sets the concrete color associated with the ThemeColorType in this color scheme to the\ngiven color."}, {"name": "setConcreteColor", "parameters": [{"name": "themeColorType", "type": "ThemeColorType"}, {"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "SpreadsheetTheme", "description": "Sets the concrete color associated with the ThemeColorType in this color scheme to the\ngiven color in RGB format."}, {"name": "setFontFamily", "parameters": [{"name": "fontFamily", "type": "String"}], "result": "SpreadsheetTheme", "description": "Sets the font family for the theme."}, {"name": "findAll", "parameters": [], "result": "Range[]", "description": "Returns all cells matching the search criteria."}, {"name": "findNext", "parameters": [], "result": "Range", "description": "Returns the next cell matching the search criteria."}, {"name": "findPrevious", "parameters": [], "result": "Range", "description": "Returns the previous cell matching the search criteria."}, {"name": "getCurrentMatch", "parameters": [], "result": "Range", "description": "Returns the current cell matching the search criteria."}, {"name": "ignoreDiacritics", "parameters": [{"name": "ignoreDiacritics", "type": "Boolean"}], "result": "TextFinder", "description": "If true, configures the search to ignore diacritics while matching; otherwise the\nsearch matches diacritics."}, {"name": "matchCase", "parameters": [{"name": "matchCase", "type": "Boolean"}], "result": "TextFinder", "description": "If true, configures the search to match the search text's case exactly, otherwise the\nsearch defaults to case-insensitive matching."}, {"name": "matchEntireCell", "parameters": [{"name": "matchEntireCell", "type": "Boolean"}], "result": "TextFinder", "description": "If true, configures the search to match the entire contents of a cell; otherwise, the\nsearch defaults to partial matching."}, {"name": "matchFormulaText", "parameters": [{"name": "matchFormulaText", "type": "Boolean"}], "result": "TextFinder", "description": "If true, configures the search to return matches that appear within formula text;\notherwise cells with formulas are considered based on their displayed value."}, {"name": "replaceAllWith", "parameters": [{"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all matches with the specified text."}, {"name": "replaceWith", "parameters": [{"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces the search text in the currently matched cell with the specified text and returns the\nnumber of occurrences replaced."}, {"name": "startFrom", "parameters": [{"name": "startRange", "type": "Range"}], "result": "TextFinder", "description": "Configures the search to start searching immediately after the specified cell range."}, {"name": "useRegularExpression", "parameters": [{"name": "useRegEx", "type": "Boolean"}], "result": "TextFinder", "description": "If true, configures the search to interpret the search string as a regular expression;\notherwise the search interprets the search string as normal text."}, {"name": "getDegrees", "parameters": [], "result": "Integer", "description": "Gets the angle between standard text orientation and the current text orientation."}, {"name": "isVertical", "parameters": [], "result": "Boolean", "description": "Returns true if the text is stacked vertically; returns false otherwise."}, {"name": "copy", "parameters": [], "result": "TextStyleBuilder", "description": "Creates a text style builder initialized with the values of this text style."}, {"name": "getFontFamily", "parameters": [], "result": "String", "description": "Gets the font family of the text."}, {"name": "getFontSize", "parameters": [], "result": "Integer", "description": "Gets the font size of the text in points."}, {"name": "getForegroundColor", "parameters": [], "result": "String", "description": "Gets the font color of the text."}, {"name": "getForegroundColorObject", "parameters": [], "result": "Color", "description": "Gets the font color of the text."}, {"name": "isBold", "parameters": [], "result": "Boolean", "description": "Gets whether or not the text is bold."}, {"name": "isItalic", "parameters": [], "result": "Boolean", "description": "Gets whether or not the cell is italic."}, {"name": "isStrikethrough", "parameters": [], "result": "Boolean", "description": "Gets whether or not the cell has strikethrough."}, {"name": "isUnderline", "parameters": [], "result": "Boolean", "description": "Gets whether or not the cell is underlined."}, {"name": "build", "parameters": [], "result": "TextStyle", "description": "Creates a text style from this builder."}, {"name": "setBold", "parameters": [{"name": "bold", "type": "Boolean"}], "result": "TextStyleBuilder", "description": "Sets whether or not the text is bold."}, {"name": "setFontFamily", "parameters": [{"name": "fontFamily", "type": "String"}], "result": "TextStyleBuilder", "description": "Sets the text font family, such as \"Arial\"."}, {"name": "setFontSize", "parameters": [{"name": "fontSize", "type": "Integer"}], "result": "TextStyleBuilder", "description": "Sets the text font size in points."}, {"name": "setForegroundColor", "parameters": [{"name": "cssString", "type": "String"}], "result": "TextStyleBuilder", "description": "Sets the text font color."}, {"name": "setForegroundColorObject", "parameters": [{"name": "color", "type": "Color"}], "result": "TextStyleBuilder", "description": "Sets the text font color."}, {"name": "setItalic", "parameters": [{"name": "italic", "type": "Boolean"}], "result": "TextStyleBuilder", "description": "Sets whether or not the text is italic."}, {"name": "setStrikethrough", "parameters": [{"name": "strikethrough", "type": "Boolean"}], "result": "TextStyleBuilder", "description": "Sets whether or not the text has strikethrough."}, {"name": "setUnderline", "parameters": [{"name": "underline", "type": "Boolean"}], "result": "TextStyleBuilder", "description": "Sets whether or not the text is underlined."}, {"name": "getColorType", "parameters": [], "result": "ColorType", "description": "Get the type of this color."}, {"name": "getThemeColorType", "parameters": [], "result": "ThemeColorType", "description": "Gets the theme color type of this color."}], "properties": [{"name": "DEFAULT_SERIES", "type": "Enum", "url": "", "description": "Default."}, {"name": "ALTERNATE_SERIES", "type": "Enum", "url": "", "description": "Auto-filling with this setting results in the empty cells in the expanded range being filled\nwith copies of the existing values."}, {"name": "LIGHT_GREY", "type": "Enum", "url": "", "description": "A light grey banding theme."}, {"name": "CYAN", "type": "Enum", "url": "", "description": "A cyan banding theme."}, {"name": "GREEN", "type": "Enum", "url": "", "description": "A green banding theme."}, {"name": "YELLOW", "type": "Enum", "url": "", "description": "A yellow banding theme."}, {"name": "ORANGE", "type": "Enum", "url": "", "description": "An orange banding theme."}, {"name": "BLUE", "type": "Enum", "url": "", "description": "A blue banding theme."}, {"name": "TEAL", "type": "Enum", "url": "", "description": "A teal banding theme."}, {"name": "GREY", "type": "Enum", "url": "", "description": "A grey banding theme."}, {"name": "BROWN", "type": "Enum", "url": "", "description": "A brown banding theme."}, {"name": "LIGHT_GREEN", "type": "Enum", "url": "", "description": "A light green banding theme."}, {"name": "INDIGO", "type": "Enum", "url": "", "description": "An indigo banding theme."}, {"name": "PINK", "type": "Enum", "url": "", "description": "A pink banding theme."}, {"name": "CELL_EMPTY", "type": "Enum", "url": "", "description": "The criteria is met when a cell is empty."}, {"name": "CELL_NOT_EMPTY", "type": "Enum", "url": "", "description": "The criteria is met when a cell is not empty."}, {"name": "DATE_AFTER", "type": "Enum", "url": "", "description": "The criteria is met when a date is after the given value."}, {"name": "DATE_BEFORE", "type": "Enum", "url": "", "description": "The criteria is met when a date is before the given value."}, {"name": "DATE_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when a date is equal to the given value."}, {"name": "DATE_NOT_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when a date is not equal to the given value."}, {"name": "DATE_AFTER_RELATIVE", "type": "Enum", "url": "", "description": "The criteria is met when a date is after the relative date value."}, {"name": "DATE_BEFORE_RELATIVE", "type": "Enum", "url": "", "description": "The criteria is met when a date is before the relative date value."}, {"name": "DATE_EQUAL_TO_RELATIVE", "type": "Enum", "url": "", "description": "The criteria is met when a date is equal to the relative date value."}, {"name": "NUMBER_BETWEEN", "type": "Enum", "url": "", "description": "The criteria is met when a number that is between the given values."}, {"name": "NUMBER_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when a number that is equal to the given value."}, {"name": "NUMBER_GREATER_THAN", "type": "Enum", "url": "", "description": "The criteria is met when a number that is greater than the given value."}, {"name": "NUMBER_GREATER_THAN_OR_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when a number that is greater than or equal to the given value."}, {"name": "NUMBER_LESS_THAN", "type": "Enum", "url": "", "description": "The criteria is met when a number that is less than the given value."}, {"name": "NUMBER_LESS_THAN_OR_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when a number that is less than or equal to the given value."}, {"name": "NUMBER_NOT_BETWEEN", "type": "Enum", "url": "", "description": "The criteria is met when a number that is not between the given values."}, {"name": "NUMBER_NOT_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when a number that is not equal to the given value."}, {"name": "TEXT_CONTAINS", "type": "Enum", "url": "", "description": "The criteria is met when the input contains the given value."}, {"name": "TEXT_DOES_NOT_CONTAIN", "type": "Enum", "url": "", "description": "The criteria is met when the input does not contain the given value."}, {"name": "TEXT_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when the input is equal to the given value."}, {"name": "TEXT_NOT_EQUAL_TO", "type": "Enum", "url": "", "description": "The criteria is met when the input is not equal to the given value."}, {"name": "TEXT_STARTS_WITH", "type": "Enum", "url": "", "description": "The criteria is met when the input begins with the given value."}, {"name": "TEXT_ENDS_WITH", "type": "Enum", "url": "", "description": "The criteria is met when the input ends with the given value."}, {"name": "CUSTOM_FORMULA", "type": "Enum", "url": "", "description": "The criteria is met when the input makes the given formula evaluate to true."}, {"name": "DOTTED", "type": "Enum", "url": "", "description": "Dotted line borders."}, {"name": "DASHED", "type": "Enum", "url": "", "description": "Dashed line borders."}, {"name": "SOLID", "type": "Enum", "url": "", "description": "Thin solid line borders."}, {"name": "SOLID_MEDIUM", "type": "Enum", "url": "", "description": "Medium solid line borders."}, {"name": "SOLID_THICK", "type": "Enum", "url": "", "description": "Thick solid line borders."}, {"name": "DOUBLE", "type": "Enum", "url": "", "description": "Two solid line borders."}, {"name": "PASTE_NORMAL", "type": "Enum", "url": "", "description": "Paste values, formulas, formats and merges."}, {"name": "PASTE_NO_BORDERS", "type": "Enum", "url": "", "description": "Paste values, formulas, formats and merges but without borders."}, {"name": "PASTE_FORMAT", "type": "Enum", "url": "", "description": "Paste the format and data validation only."}, {"name": "PASTE_FORMULA", "type": "Enum", "url": "", "description": "Paste the formulas only."}, {"name": "PASTE_DATA_VALIDATION", "type": "Enum", "url": "", "description": "Paste the data validation only."}, {"name": "PASTE_VALUES", "type": "Enum", "url": "", "description": "Paste the values ONLY without formats, formulas or merges."}, {"name": "PASTE_CONDITIONAL_FORMATTING", "type": "Enum", "url": "", "description": "Paste the color rules only."}, {"name": "PASTE_COLUMN_WIDTHS", "type": "Enum", "url": "", "description": "Paste the column widths only."}, {"name": "DATA_EXECUTION_ERROR_CODE_UNSUPPORTED", "type": "Enum", "url": "", "description": "A data execution error code that is not supported in Apps Script."}, {"name": "NONE", "type": "Enum", "url": "", "description": "The data execution has no error."}, {"name": "TIME_OUT", "type": "Enum", "url": "", "description": "The data execution timed out."}, {"name": "TOO_MANY_ROWS", "type": "Enum", "url": "", "description": "The data execution returns more rows than the limit."}, {"name": "TOO_MANY_CELLS", "type": "Enum", "url": "", "description": "The data execution returns more cells than the limit."}, {"name": "ENGINE", "type": "Enum", "url": "", "description": "Data execution engine error."}, {"name": "PARAMETER_INVALID", "type": "Enum", "url": "", "description": "Invalid data execution parameter."}, {"name": "UNSUPPORTED_DATA_TYPE", "type": "Enum", "url": "", "description": "The data execution returns unsupported data type."}, {"name": "DUPLICATE_COLUMN_NAMES", "type": "Enum", "url": "", "description": "The data execution returns duplicate column names."}, {"name": "INTERRUPTED", "type": "Enum", "url": "", "description": "The data execution is interrupted."}, {"name": "OTHER", "type": "Enum", "url": "", "description": "Other errors."}, {"name": "TOO_MANY_CHARS_PER_CELL", "type": "Enum", "url": "", "description": "The data execution returns values that exceed the maximum characters allowed in a single cell."}, {"name": "DATA_NOT_FOUND", "type": "Enum", "url": "", "description": "The database referenced by the data source is not found."}, {"name": "PERMISSION_DENIED", "type": "Enum", "url": "", "description": "The user does not have access to the database referenced by the data source."}, {"name": "DATA_EXECUTION_STATE_UNSUPPORTED", "type": "Enum", "url": "", "description": "A data execution state is not supported in Apps Script."}, {"name": "RUNNING", "type": "Enum", "url": "", "description": "The data execution has started and is running."}, {"name": "SUCCESS", "type": "Enum", "url": "", "description": "The data execution is completed and successful."}, {"name": "ERROR", "type": "Enum", "url": "", "description": "The data execution is completed and has errors."}, {"name": "NOT_STARTED", "type": "Enum", "url": "", "description": "The data execution has not started."}, {"name": "DATA_SOURCE_PARAMETER_TYPE_UNSUPPORTED", "type": "Enum", "url": "", "description": "A data source parameter type that is not supported in Apps Script."}, {"name": "CELL", "type": "Enum", "url": "", "description": "The data source parameter is valued based on a cell."}, {"name": "DATA_SOURCE_REFRESH_SCOPE_UNSUPPORTED", "type": "Enum", "url": "", "description": "The data source refresh scope is unsupported."}, {"name": "ALL_DATA_SOURCES", "type": "Enum", "url": "", "description": "The refresh applies to all data sources in the spreadsheet."}, {"name": "DATA_SOURCE_TYPE_UNSUPPORTED", "type": "Enum", "url": "", "description": "A data source type that is not supported in Apps Script."}, {"name": "BIGQUERY", "type": "Enum", "url": "", "description": "A BigQuery data source."}, {"name": "DATE_AFTER", "type": "Enum", "url": "", "description": "Requires a date that is after the given value."}, {"name": "DATE_BEFORE", "type": "Enum", "url": "", "description": "Requires a date that is before the given value."}, {"name": "DATE_BETWEEN", "type": "Enum", "url": "", "description": "Requires a date that is between the given values."}, {"name": "DATE_EQUAL_TO", "type": "Enum", "url": "", "description": "Requires a date that is equal to the given value."}, {"name": "DATE_IS_VALID_DATE", "type": "Enum", "url": "", "description": "Requires a date."}, {"name": "DATE_NOT_BETWEEN", "type": "Enum", "url": "", "description": "Requires a date that is not between the given values."}, {"name": "DATE_ON_OR_AFTER", "type": "Enum", "url": "", "description": "Require a date that is on or after the given value."}, {"name": "DATE_ON_OR_BEFORE", "type": "Enum", "url": "", "description": "Requires a date that is on or before the given value."}, {"name": "NUMBER_BETWEEN", "type": "Enum", "url": "", "description": "Requires a number that is between the given values."}, {"name": "NUMBER_EQUAL_TO", "type": "Enum", "url": "", "description": "Requires a number that is equal to the given value."}, {"name": "NUMBER_GREATER_THAN", "type": "Enum", "url": "", "description": "Require a number that is greater than the given value."}, {"name": "NUMBER_GREATER_THAN_OR_EQUAL_TO", "type": "Enum", "url": "", "description": "Requires a number that is greater than or equal to the given value."}, {"name": "NUMBER_LESS_THAN", "type": "Enum", "url": "", "description": "Requires a number that is less than the given value."}, {"name": "NUMBER_LESS_THAN_OR_EQUAL_TO", "type": "Enum", "url": "", "description": "Requires a number that is less than or equal to the given value."}, {"name": "NUMBER_NOT_BETWEEN", "type": "Enum", "url": "", "description": "Requires a number that is not between the given values."}, {"name": "NUMBER_NOT_EQUAL_TO", "type": "Enum", "url": "", "description": "Requires a number that is not equal to the given value."}, {"name": "TEXT_CONTAINS", "type": "Enum", "url": "", "description": "Requires that the input contains the given value."}, {"name": "TEXT_DOES_NOT_CONTAIN", "type": "Enum", "url": "", "description": "Requires that the input does not contain the given value."}, {"name": "TEXT_EQUAL_TO", "type": "Enum", "url": "", "description": "Requires that the input is equal to the given value."}, {"name": "TEXT_IS_VALID_EMAIL", "type": "Enum", "url": "", "description": "Requires that the input is in the form of an email address."}, {"name": "TEXT_IS_VALID_URL", "type": "Enum", "url": "", "description": "Requires that the input is in the form of a URL."}, {"name": "VALUE_IN_LIST", "type": "Enum", "url": "", "description": "Requires that the input is equal to one of the given values."}, {"name": "VALUE_IN_RANGE", "type": "Enum", "url": "", "description": "Requires that the input is equal to a value in the given range."}, {"name": "CUSTOM_FORMULA", "type": "Enum", "url": "", "description": "Requires that the input makes the given formula evaluate to true."}, {"name": "CHECKBOX", "type": "Enum", "url": "", "description": "Requires that the input is a custom value or a boolean; rendered as a checkbox."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A date-time grouping rule type that is not supported."}, {"name": "SECOND", "type": "Enum", "url": "", "description": "Group date-time by second, from 0 to 59."}, {"name": "MINUTE", "type": "Enum", "url": "", "description": "Group date-time by minute, from 0 to 59."}, {"name": "HOUR", "type": "Enum", "url": "", "description": "Group date-time by hour using a 24-hour system, from 0 to 23."}, {"name": "HOUR_MINUTE", "type": "Enum", "url": "", "description": "Group date-time by hour and minute using a 24-hour system, for example 19:45."}, {"name": "HOUR_MINUTE_AMPM", "type": "Enum", "url": "", "description": "Group date-time by hour and minute using a 12-hour system, for example 7:45 PM."}, {"name": "DAY_OF_WEEK", "type": "Enum", "url": "", "description": "Group date-time by day of week, for example Sunday."}, {"name": "DAY_OF_YEAR", "type": "Enum", "url": "", "description": "Group date-time by day of year, from 1 to 366."}, {"name": "DAY_OF_MONTH", "type": "Enum", "url": "", "description": "Group date-time by day of month, from 1 to 31."}, {"name": "DAY_MONTH", "type": "Enum", "url": "", "description": "Group date-time by day and month, for example 22-Nov."}, {"name": "MONTH", "type": "Enum", "url": "", "description": "Group date-time by month, for example Nov."}, {"name": "QUARTER", "type": "Enum", "url": "", "description": "Group date-time by quarter, for example Q1 (which represents Jan-Mar)."}, {"name": "YEAR", "type": "Enum", "url": "", "description": "Group date-time by year, for example 2008."}, {"name": "YEAR_MONTH", "type": "Enum", "url": "", "description": "Group date-time by year and month, for example 2008-Nov."}, {"name": "YEAR_QUARTER", "type": "Enum", "url": "", "description": "Group date-time by year and quarter, for example 2008 Q4 ."}, {"name": "YEAR_MONTH_DAY", "type": "Enum", "url": "", "description": "Group date-time by year, month, and day, for example 2008-11-22."}, {"name": "SPREADSHEET", "type": "Enum", "url": "", "description": "The location type for developer metadata associated with the top-level spreadsheet."}, {"name": "SHEET", "type": "Enum", "url": "", "description": "The location type for developer metadata associated with a whole sheet."}, {"name": "ROW", "type": "Enum", "url": "", "description": "The location type for developer metadata associated with a row."}, {"name": "COLUMN", "type": "Enum", "url": "", "description": "The location type for developer metadata associated with a column."}, {"name": "DOCUMENT", "type": "Enum", "url": "", "description": "Document-visible metadata is accessible from any developer project with access to the document."}, {"name": "PROJECT", "type": "Enum", "url": "", "description": "Project-visible metadata is only visible to and accessible by the developer project that\ncreated the metadata."}, {"name": "COLUMNS", "type": "Enum", "url": "", "description": "The column (vertical) dimension."}, {"name": "ROWS", "type": "Enum", "url": "", "description": "The row (horizontal) dimension."}, {"name": "UP", "type": "Enum", "url": "", "description": "The direction of decreasing row indices."}, {"name": "DOWN", "type": "Enum", "url": "", "description": "The direction of increasing row indices."}, {"name": "PREVIOUS", "type": "Enum", "url": "", "description": "The direction of decreasing column indices."}, {"name": "NEXT", "type": "Enum", "url": "", "description": "The direction of increasing column indices."}, {"name": "FREQUENCY_TYPE_UNSUPPORTED", "type": "Enum", "url": "", "description": "The frequency type is unsupported."}, {"name": "DAILY", "type": "Enum", "url": "", "description": "Refresh daily."}, {"name": "WEEKLY", "type": "Enum", "url": "", "description": "Refresh weekly, on given days of the week."}, {"name": "MONTHLY", "type": "Enum", "url": "", "description": "Refresh monthly, on given days of the month."}, {"name": "BEFORE", "type": "Enum", "url": "", "description": "The position where the control toggle is before the group (at lower indices)."}, {"name": "AFTER", "type": "Enum", "url": "", "description": "The position where the control toggle is after the group (at higher indices)."}, {"name": "NUMBER", "type": "Enum", "url": "", "description": "Use the number as as specific interpolation point for a gradient condition."}, {"name": "PERCENT", "type": "Enum", "url": "", "description": "Use the number as a percentage interpolation point for a gradient condition."}, {"name": "PERCENTILE", "type": "Enum", "url": "", "description": "Use the number as a percentile interpolation point for a gradient condition."}, {"name": "MIN", "type": "Enum", "url": "", "description": "Infer the minimum number as a specific interpolation point for a gradient condition."}, {"name": "MAX", "type": "Enum", "url": "", "description": "Infer the maximum number as a specific interpolation point for a gradient condition."}, {"name": "CUSTOM", "type": "Enum", "url": "", "description": "A custom fuction, this value is only valid for calcuated fields."}, {"name": "SUM", "type": "Enum", "url": "", "description": "The SUM function"}, {"name": "COUNTA", "type": "Enum", "url": "", "description": "The COUNTA function"}, {"name": "COUNT", "type": "Enum", "url": "", "description": "The COUNT function"}, {"name": "COUNTUNIQUE", "type": "Enum", "url": "", "description": "The COUNTUNIQUE function"}, {"name": "AVERAGE", "type": "Enum", "url": "", "description": "The AVERAGE function"}, {"name": "MAX", "type": "Enum", "url": "", "description": "The MAX function"}, {"name": "MIN", "type": "Enum", "url": "", "description": "The MIN function"}, {"name": "MEDIAN", "type": "Enum", "url": "", "description": "The MEDIAN function"}, {"name": "PRODUCT", "type": "Enum", "url": "", "description": "The PRODUCT function"}, {"name": "STDEV", "type": "Enum", "url": "", "description": "The STDEV function"}, {"name": "STDEVP", "type": "Enum", "url": "", "description": "The STDEVP function"}, {"name": "VAR", "type": "Enum", "url": "", "description": "The VAR function"}, {"name": "VARP", "type": "Enum", "url": "", "description": "The VARP function"}, {"name": "DEFAULT", "type": "Enum", "url": "", "description": "Default."}, {"name": "PERCENT_OF_ROW_TOTAL", "type": "Enum", "url": "", "description": "Displays pivot values as a percent of the total for that row."}, {"name": "PERCENT_OF_COLUMN_TOTAL", "type": "Enum", "url": "", "description": "Displays pivot values as a percent of the total for that column."}, {"name": "PERCENT_OF_GRAND_TOTAL", "type": "Enum", "url": "", "description": "Displays pivot values as a percent of the grand total."}, {"name": "RANGE", "type": "Enum", "url": "", "description": "Protection for a range."}, {"name": "SHEET", "type": "Enum", "url": "", "description": "Protection for a sheet."}, {"name": "ON_CHANGE", "type": "Enum", "url": "", "description": "Recalculate only when values are changed."}, {"name": "MINUTE", "type": "Enum", "url": "", "description": "Recalculate when values are changed, and every minute."}, {"name": "HOUR", "type": "Enum", "url": "", "description": "Recalculate when values are changed, and every hour."}, {"name": "TODAY", "type": "Enum", "url": "", "description": "Dates compared against the current date."}, {"name": "TOMORROW", "type": "Enum", "url": "", "description": "Dates compared against the date after the current date."}, {"name": "YESTERDAY", "type": "Enum", "url": "", "description": "Dates compared against the date before the current date."}, {"name": "PAST_WEEK", "type": "Enum", "url": "", "description": "Dates that fall within the past week period."}, {"name": "PAST_MONTH", "type": "Enum", "url": "", "description": "Dates that fall within the past month period."}, {"name": "PAST_YEAR", "type": "Enum", "url": "", "description": "Dates that fall within the past year period."}, {"name": "GRID", "type": "Enum", "url": "", "description": "A sheet containing a grid."}, {"name": "OBJECT", "type": "Enum", "url": "", "description": "A sheet containing a single embedded object such as an EmbeddedChart."}, {"name": "DATASOURCE", "type": "Enum", "url": "", "description": "A sheet containing a DataSource."}, {"name": "ASCENDING", "type": "Enum", "url": "", "description": "Ascending sort order."}, {"name": "DESCENDING", "type": "Enum", "url": "", "description": "Descending sort order."}, {"name": "AutoFillSeries", "type": "AutoFillSeries", "url": "/apps-script/reference/spreadsheet/auto-fill-series", "description": "An enumeration of the types of series used to calculate auto-filled values."}, {"name": "BandingTheme", "type": "BandingTheme", "url": "/apps-script/reference/spreadsheet/banding-theme", "description": "An enumeration of the possible banding themes."}, {"name": "BooleanCriteria", "type": "BooleanCriteria", "url": "/apps-script/reference/spreadsheet/boolean-criteria", "description": "An enumeration of conditional formatting boolean criteria."}, {"name": "BorderStyle", "type": "BorderStyle", "url": "/apps-script/reference/spreadsheet/border-style", "description": "An enumeration of the valid styles for setting borders on a Range."}, {"name": "ColorType", "type": "ColorType", "url": "https://developers.google.com/apps-script/reference/base/color-type.html", "description": "An enumeration of possible color types."}, {"name": "CopyPasteType", "type": "CopyPasteType", "url": "/apps-script/reference/spreadsheet/copy-paste-type", "description": "An enumeration of the possible paste types."}, {"name": "DataExecutionErrorCode", "type": "DataExecutionErrorCode", "url": "/apps-script/reference/spreadsheet/data-execution-error-code", "description": "An enumeration of the possible data execution error codes."}, {"name": "DataExecutionState", "type": "DataExecutionState", "url": "/apps-script/reference/spreadsheet/data-execution-state", "description": "An enumeration of the possible data execution states."}, {"name": "DataSourceParameterType", "type": "DataSourceParameterType", "url": "/apps-script/reference/spreadsheet/data-source-parameter-type", "description": "An enumeration of the possible data source parameter types."}, {"name": "DataSourceRefreshScope", "type": "DataSourceRefreshScope", "url": "/apps-script/reference/spreadsheet/data-source-refresh-scope", "description": "An enumeration of possible data source refresh scopes."}, {"name": "DataSourceType", "type": "DataSourceType", "url": "/apps-script/reference/spreadsheet/data-source-type", "description": "An enumeration of the possible data source types."}, {"name": "DataValidationCriteria", "type": "DataValidationCriteria", "url": "/apps-script/reference/spreadsheet/data-validation-criteria", "description": "An enumeration representing the data validation criteria that can be set on a range."}, {"name": "DateTimeGroupingRuleType", "type": "DateTimeGroupingRuleType", "url": "/apps-script/reference/spreadsheet/date-time-grouping-rule-type", "description": "An enumeration of date time grouping rule."}, {"name": "DeveloperMetadataLocationType", "type": "DeveloperMetadataLocationType", "url": "/apps-script/reference/spreadsheet/developer-metadata-location-type", "description": "An enumeration of possible developer metadata location types."}, {"name": "DeveloperMetadataVisibility", "type": "DeveloperMetadataVisibility", "url": "/apps-script/reference/spreadsheet/developer-metadata-visibility", "description": "An enumeration of the possible developer metadata visibilities."}, {"name": "Dimension", "type": "Dimension", "url": "/apps-script/reference/spreadsheet/dimension", "description": "An enumeration of the possible dimensions of a spreadsheet."}, {"name": "Direction", "type": "Direction", "url": "/apps-script/reference/spreadsheet/direction", "description": "A enumeration of the possible directions that one can move within a spreadsheet using the arrow\nkeys."}, {"name": "FrequencyType", "type": "FrequencyType", "url": "/apps-script/reference/spreadsheet/frequency-type", "description": "An enumeration of possible frequency types."}, {"name": "GroupControlTogglePosition", "type": "GroupControlTogglePosition", "url": "/apps-script/reference/spreadsheet/group-control-toggle-position", "description": "An enumeration of the positions that the group control toggle can be in."}, {"name": "InterpolationType", "type": "InterpolationType", "url": "/apps-script/reference/spreadsheet/interpolation-type", "description": "An enumeration of conditional format gradient interpolation types."}, {"name": "PivotTableSummarizeFunction", "type": "PivotTableSummarizeFunction", "url": "/apps-script/reference/spreadsheet/pivot-table-summarize-function", "description": "An enumeration of the functions that may be used to summarize values in a pivot table."}, {"name": "PivotValueDisplayType", "type": "PivotValueDisplayType", "url": "/apps-script/reference/spreadsheet/pivot-value-display-type", "description": "An enumeration of the ways that a pivot value may be displayed."}, {"name": "ProtectionType", "type": "ProtectionType", "url": "/apps-script/reference/spreadsheet/protection-type", "description": "An enumeration representing the parts of a spreadsheet that can be protected from edits."}, {"name": "RecalculationInterval", "type": "RecalculationInterval", "url": "/apps-script/reference/spreadsheet/recalculation-interval", "description": "An enumeration of the possible intervals that can be used in spreadsheet recalculation."}, {"name": "RelativeDate", "type": "RelativeDate", "url": "/apps-script/reference/spreadsheet/relative-date", "description": "An enumeration of relative date options for calculating a value to be used in date-based BooleanCriteria."}, {"name": "SheetType", "type": "SheetType", "url": "/apps-script/reference/spreadsheet/sheet-type", "description": "An enumeration of the different types of sheets that can exist in a spreadsheet."}, {"name": "SortOrder", "type": "SortOrder", "url": "/apps-script/reference/spreadsheet/sort-order", "description": "An enumeration of sort order."}, {"name": "TextDirection", "type": "TextDirection", "url": "/apps-script/reference/spreadsheet/text-direction", "description": "An enumeration of valid text directions."}, {"name": "TextToColumnsDelimiter", "type": "TextToColumnsDelimiter", "url": "/apps-script/reference/spreadsheet/text-to-columns-delimiter", "description": "An enumeration of the preset delimiters for split text to columns."}, {"name": "ThemeColorType", "type": "ThemeColorType", "url": "/apps-script/reference/spreadsheet/theme-color-type", "description": "An enumeration of possible theme color types."}, {"name": "WrapStrategy", "type": "WrapStrategy", "url": "/apps-script/reference/spreadsheet/wrap-strategy", "description": "An enumeration of the strategies used for wrapping cells."}, {"name": "LEFT_TO_RIGHT", "type": "Enum", "url": "", "description": "Left-to-right text direction."}, {"name": "RIGHT_TO_LEFT", "type": "Enum", "url": "", "description": "Right-to-left text direction."}, {"name": "COMMA", "type": "Enum", "url": "", "description": "\",\" delimiter."}, {"name": "SEMICOLON", "type": "Enum", "url": "", "description": "\";\" delimiter."}, {"name": "PERIOD", "type": "Enum", "url": "", "description": "\".\" delimiter."}, {"name": "SPACE", "type": "Enum", "url": "", "description": "\" \" delimiter."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "Represents a theme color that is not supported."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "Represents the text color."}, {"name": "BACKGROUND", "type": "Enum", "url": "", "description": "Represents the color to use for chart's background."}, {"name": "ACCENT1", "type": "Enum", "url": "", "description": "Represents the first accent color."}, {"name": "ACCENT2", "type": "Enum", "url": "", "description": "Represents the second accent color."}, {"name": "ACCENT3", "type": "Enum", "url": "", "description": "Represents the third accent color."}, {"name": "ACCENT4", "type": "Enum", "url": "", "description": "Represents the fourth accent color."}, {"name": "ACCENT5", "type": "Enum", "url": "", "description": "Represents the fifth accent color."}, {"name": "ACCENT6", "type": "Enum", "url": "", "description": "Represents the sixth accent color."}, {"name": "HYPERLINK", "type": "Enum", "url": "", "description": "Represents the color to use for hyperlinks."}, {"name": "WRAP", "type": "Enum", "url": "", "description": "Wrap lines that are longer than the cell width onto a new line."}, {"name": "OVERFLOW", "type": "Enum", "url": "", "description": "Overflow lines into the next cell, so long as that cell is empty."}, {"name": "CLIP", "type": "Enum", "url": "", "description": "Clip lines that are longer than the cell width."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/slide-linking-mode", "name": "SlideLinkingMode", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A slide linking mode that isn't supported."}, {"name": "LINKED", "type": "Enum", "url": "", "description": "Indicates that slides are linked."}, {"name": "NOT_LINKED", "type": "Enum", "url": "", "description": "Indicates that slides aren't linked."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/sheets-chart-embed-type", "name": "SheetsChartEmbedType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "Represents a chart that is not supported and cannot be further classified."}, {"name": "IMAGE", "type": "Enum", "url": "", "description": "Indicates that the chart is embedded as an image."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/spacing-mode", "name": "SpacingMode", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A spacing mode that is not supported."}, {"name": "NEVER_COLLAPSE", "type": "Enum", "url": "", "description": "Paragraph spacing is always rendered."}, {"name": "COLLAPSE_LISTS", "type": "Enum", "url": "", "description": "Paragraph spacing is skipped between list elements."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/slide-position", "name": "SlidePosition", "type": "enum", "methods": [], "properties": [{"name": "NEXT_SLIDE", "type": "Enum", "url": "", "description": "The next slide."}, {"name": "PREVIOUS_SLIDE", "type": "Enum", "url": "", "description": "The previous slide."}, {"name": "FIRST_SLIDE", "type": "Enum", "url": "", "description": "The first slide in the presentation."}, {"name": "LAST_SLIDE", "type": "Enum", "url": "", "description": "The last slide in the presentation."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/video-source-type", "name": "VideoSourceType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A video source type that is not supported."}, {"name": "YOUTUBE", "type": "Enum", "url": "", "description": "YouTube video."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/selection-type", "name": "SelectionType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A selection type that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No selection."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "Text selection."}, {"name": "TABLE_CELL", "type": "Enum", "url": "", "description": "Table cell selection."}, {"name": "PAGE", "type": "Enum", "url": "", "description": "Page selection in the thumbnail flimstrip."}, {"name": "PAGE_ELEMENT", "type": "Enum", "url": "", "description": "Page element selection."}, {"name": "CURRENT_PAGE", "type": "Enum", "url": "", "description": "Current page selection."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/text-baseline-offset", "name": "TextBaselineOffset", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "An text baseline offset that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "The text is not vertically offset."}, {"name": "SUPERSCRIPT", "type": "Enum", "url": "", "description": "The text is vertically offset upwards."}, {"name": "SUBSCRIPT", "type": "Enum", "url": "", "description": "The text is vertically offset downwards."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/shape-type", "name": "ShapeType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A shape type that is not supported."}, {"name": "TEXT_BOX", "type": "Enum", "url": "", "description": "Text box shape."}, {"name": "RECTANGLE", "type": "Enum", "url": "", "description": "Rectangle shape. Corresponds to ECMA-376 ST_ShapeType 'rect'."}, {"name": "ROUND_RECTANGLE", "type": "Enum", "url": "", "description": "Round corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType 'roundRect'."}, {"name": "ELLIPSE", "type": "Enum", "url": "", "description": "Ellipse shape. Corresponds to ECMA-376 ST_ShapeType 'ellipse'."}, {"name": "ARC", "type": "Enum", "url": "", "description": "Curved arc shape. Corresponds to ECMA-376 ST_ShapeType 'arc'."}, {"name": "BENT_ARROW", "type": "Enum", "url": "", "description": "Bent arrow shape. Corresponds to ECMA-376 ST_ShapeType 'bentArrow'."}, {"name": "BENT_UP_ARROW", "type": "Enum", "url": "", "description": "Bent up arrow shape. Corresponds to ECMA-376 ST_ShapeType 'bentUpArrow'."}, {"name": "BEVEL", "type": "Enum", "url": "", "description": "Bevel shape. Corresponds to ECMA-376 ST_ShapeType 'bevel'."}, {"name": "BLOCK_ARC", "type": "Enum", "url": "", "description": "Block arc shape. Corresponds to ECMA-376 ST_ShapeType 'blockArc'."}, {"name": "BRACE_PAIR", "type": "Enum", "url": "", "description": "Brace pair shape. Corresponds to ECMA-376 ST_ShapeType 'bracePair'."}, {"name": "BRACKET_PAIR", "type": "Enum", "url": "", "description": "Bracket pair shape. Corresponds to ECMA-376 ST_ShapeType 'bracketPair'."}, {"name": "CAN", "type": "Enum", "url": "", "description": "Can shape. Corresponds to ECMA-376 ST_ShapeType 'can'."}, {"name": "CHEVRON", "type": "Enum", "url": "", "description": "Chevron shape. Corresponds to ECMA-376 ST_ShapeType 'chevron'."}, {"name": "CHORD", "type": "Enum", "url": "", "description": "Chord shape. Corresponds to ECMA-376 ST_ShapeType 'chord'."}, {"name": "CLOUD", "type": "Enum", "url": "", "description": "Cloud shape. Corresponds to ECMA-376 ST_ShapeType 'cloud'."}, {"name": "CORNER", "type": "Enum", "url": "", "description": "Corner shape. Corresponds to ECMA-376 ST_ShapeType 'corner'."}, {"name": "CUBE", "type": "Enum", "url": "", "description": "Cube shape. Corresponds to ECMA-376 ST_ShapeType 'cube'."}, {"name": "CURVED_DOWN_ARROW", "type": "Enum", "url": "", "description": "Curved down arrow shape. Corresponds to ECMA-376 ST_ShapeType 'curvedDownArrow'."}, {"name": "CURVED_LEFT_ARROW", "type": "Enum", "url": "", "description": "Curved left arrow shape. Corresponds to ECMA-376 ST_ShapeType 'curvedLeftArrow'."}, {"name": "CURVED_RIGHT_ARROW", "type": "Enum", "url": "", "description": "Curved right arrow shape. Corresponds to ECMA-376 ST_ShapeType 'curvedRightArrow'."}, {"name": "CURVED_UP_ARROW", "type": "Enum", "url": "", "description": "Curved up arrow shape. Corresponds to ECMA-376 ST_ShapeType 'curvedUpArrow'."}, {"name": "DECAGON", "type": "Enum", "url": "", "description": "Decagon shape. Corresponds to ECMA-376 ST_ShapeType 'decagon'."}, {"name": "DIAGONAL_STRIPE", "type": "Enum", "url": "", "description": "Diagonal stripe shape. Corresponds to ECMA-376 ST_ShapeType 'diagStripe'."}, {"name": "DIAMOND", "type": "Enum", "url": "", "description": "Diamond shape. Corresponds to ECMA-376 ST_ShapeType 'diamond'."}, {"name": "DODECAGON", "type": "Enum", "url": "", "description": "Dodecagon shape. Corresponds to ECMA-376 ST_ShapeType 'dodecagon'."}, {"name": "DONUT", "type": "Enum", "url": "", "description": "Donut shape. Corresponds to ECMA-376 ST_ShapeType 'donut'."}, {"name": "DOUBLE_WAVE", "type": "Enum", "url": "", "description": "Double wave shape. Corresponds to ECMA-376 ST_ShapeType 'doubleWave'."}, {"name": "DOWN_ARROW", "type": "Enum", "url": "", "description": "Down arrow shape. Corresponds to ECMA-376 ST_ShapeType 'downArrow'."}, {"name": "DOWN_ARROW_CALLOUT", "type": "Enum", "url": "", "description": "Callout down arrow shape. Corresponds to ECMA-376 ST_ShapeType 'downArrowCallout'."}, {"name": "FOLDED_CORNER", "type": "Enum", "url": "", "description": "Folded corner shape. Corresponds to ECMA-376 ST_ShapeType 'foldedCorner'."}, {"name": "FRAME", "type": "Enum", "url": "", "description": "Frame shape. Corresponds to ECMA-376 ST_ShapeType 'frame'."}, {"name": "HALF_FRAME", "type": "Enum", "url": "", "description": "Half frame shape. Corresponds to ECMA-376 ST_ShapeType 'halfFrame'."}, {"name": "HEART", "type": "Enum", "url": "", "description": "Heart shape. Corresponds to ECMA-376 ST_ShapeType 'heart'."}, {"name": "HEPTAGON", "type": "Enum", "url": "", "description": "Heptagon shape. Corresponds to ECMA-376 ST_ShapeType 'heptagon'."}, {"name": "HEXAGON", "type": "Enum", "url": "", "description": "Hexagon shape. Corresponds to ECMA-376 ST_ShapeType 'hexagon'."}, {"name": "HOME_PLATE", "type": "Enum", "url": "", "description": "Home plate shape. Corresponds to ECMA-376 ST_ShapeType 'homePlate'."}, {"name": "HORIZONTAL_SCROLL", "type": "Enum", "url": "", "description": "Horizontal scroll shape. Corresponds to ECMA-376 ST_ShapeType 'horizontalScroll'."}, {"name": "IRREGULAR_SEAL_1", "type": "Enum", "url": "", "description": "Irregular seal 1 shape. Corresponds to ECMA-376 ST_ShapeType 'irregularSeal1'."}, {"name": "IRREGULAR_SEAL_2", "type": "Enum", "url": "", "description": "Irregular seal 2 shape. Corresponds to ECMA-376 ST_ShapeType 'irregularSeal2'."}, {"name": "LEFT_ARROW", "type": "Enum", "url": "", "description": "Left arrow shape. Corresponds to ECMA-376 ST_ShapeType 'leftArrow'."}, {"name": "LEFT_ARROW_CALLOUT", "type": "Enum", "url": "", "description": "Callout left arrow shape. Corresponds to ECMA-376 ST_ShapeType 'leftArrowCallout'."}, {"name": "LEFT_BRACE", "type": "Enum", "url": "", "description": "Left brace shape. Corresponds to ECMA-376 ST_ShapeType 'leftBrace'."}, {"name": "LEFT_BRACKET", "type": "Enum", "url": "", "description": "Left bracket shape. Corresponds to ECMA-376 ST_ShapeType 'leftBracket'."}, {"name": "LEFT_RIGHT_ARROW", "type": "Enum", "url": "", "description": "Left right arrow shape. Corresponds to ECMA-376 ST_ShapeType 'leftRightArrow'."}, {"name": "LEFT_RIGHT_ARROW_CALLOUT", "type": "Enum", "url": "", "description": "Callout left right arrow shape. Corresponds to ECMA-376 ST_ShapeType 'leftRightArrowCallout'."}, {"name": "LEFT_RIGHT_UP_ARROW", "type": "Enum", "url": "", "description": "Left right up arrow shape. Corresponds to ECMA-376 ST_ShapeType 'leftRightUpArrow'."}, {"name": "LEFT_UP_ARROW", "type": "Enum", "url": "", "description": "Left up arrow shape. Corresponds to ECMA-376 ST_ShapeType 'leftUpArrow'."}, {"name": "LIGHTNING_BOLT", "type": "Enum", "url": "", "description": "Lightning bolt shape. Corresponds to ECMA-376 ST_ShapeType 'lightningBolt'."}, {"name": "MATH_DIVIDE", "type": "Enum", "url": "", "description": "Divide math shape. Corresponds to ECMA-376 ST_ShapeType 'mathDivide'."}, {"name": "MATH_EQUAL", "type": "Enum", "url": "", "description": "Equal math shape. Corresponds to ECMA-376 ST_ShapeType 'mathEqual'."}, {"name": "MATH_MINUS", "type": "Enum", "url": "", "description": "Minus math shape. Corresponds to ECMA-376 ST_ShapeType 'mathMinus'."}, {"name": "MATH_MULTIPLY", "type": "Enum", "url": "", "description": "Multiply math shape. Corresponds to ECMA-376 ST_ShapeType 'mathMultiply'."}, {"name": "MATH_NOT_EQUAL", "type": "Enum", "url": "", "description": "Not equal math shape. Corresponds to ECMA-376 ST_ShapeType 'mathNotEqual'."}, {"name": "MATH_PLUS", "type": "Enum", "url": "", "description": "Plus math shape. Corresponds to ECMA-376 ST_ShapeType 'mathPlus'."}, {"name": "MOON", "type": "Enum", "url": "", "description": "Moon shape. Corresponds to ECMA-376 ST_ShapeType 'moon'."}, {"name": "NO_SMOKING", "type": "Enum", "url": "", "description": "No smoking shape. Corresponds to ECMA-376 ST_ShapeType 'noSmoking'."}, {"name": "NOTCHED_RIGHT_ARROW", "type": "Enum", "url": "", "description": "Notched right arrow shape. Corresponds to ECMA-376 ST_ShapeType 'notchedRightArrow'."}, {"name": "OCTAGON", "type": "Enum", "url": "", "description": "Octagon shape. Corresponds to ECMA-376 ST_ShapeType 'octagon'."}, {"name": "PARALLELOGRAM", "type": "Enum", "url": "", "description": "Parallelogram shape. Corresponds to ECMA-376 ST_ShapeType 'parallelogram'."}, {"name": "PENTAGON", "type": "Enum", "url": "", "description": "Pentagon shape. Corresponds to ECMA-376 ST_ShapeType 'pentagon'."}, {"name": "PIE", "type": "Enum", "url": "", "description": "Pie shape. Corresponds to ECMA-376 ST_ShapeType 'pie'."}, {"name": "PLAQUE", "type": "Enum", "url": "", "description": "Plaque shape. Corresponds to ECMA-376 ST_ShapeType 'plaque'."}, {"name": "PLUS", "type": "Enum", "url": "", "description": "Plus shape. Corresponds to ECMA-376 ST_ShapeType 'plus'."}, {"name": "QUAD_ARROW", "type": "Enum", "url": "", "description": "Quad-arrow shape. Corresponds to ECMA-376 ST_ShapeType 'quadArrow'."}, {"name": "QUAD_ARROW_CALLOUT", "type": "Enum", "url": "", "description": "Callout quad-arrow shape. Corresponds to ECMA-376 ST_ShapeType 'quadArrowCallout'."}, {"name": "RIBBON", "type": "Enum", "url": "", "description": "Ribbon shape. Corresponds to ECMA-376 ST_ShapeType 'ribbon'."}, {"name": "RIBBON_2", "type": "Enum", "url": "", "description": "Ribbon 2 shape. Corresponds to ECMA-376 ST_ShapeType 'ribbon2'."}, {"name": "RIGHT_ARROW", "type": "Enum", "url": "", "description": "Right arrow shape. Corresponds to ECMA-376 ST_ShapeType 'rightArrow'."}, {"name": "RIGHT_ARROW_CALLOUT", "type": "Enum", "url": "", "description": "Callout right arrow shape. Corresponds to ECMA-376 ST_ShapeType 'rightArrowCallout'."}, {"name": "RIGHT_BRACE", "type": "Enum", "url": "", "description": "Right brace shape. Corresponds to ECMA-376 ST_ShapeType 'rightBrace'."}, {"name": "RIGHT_BRACKET", "type": "Enum", "url": "", "description": "Right bracket shape. Corresponds to ECMA-376 ST_ShapeType 'rightBracket'."}, {"name": "ROUND_1_RECTANGLE", "type": "Enum", "url": "", "description": "One round corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType 'round1Rect'."}, {"name": "ROUND_2_DIAGONAL_RECTANGLE", "type": "Enum", "url": "", "description": "Two diagonal round corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'round2DiagRect'."}, {"name": "ROUND_2_SAME_RECTANGLE", "type": "Enum", "url": "", "description": "Two same-side round corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'round2SameRect'."}, {"name": "RIGHT_TRIANGLE", "type": "Enum", "url": "", "description": "Right triangle shape. Corresponds to ECMA-376 ST_ShapeType 'rtTriangle'."}, {"name": "SMILEY_FACE", "type": "Enum", "url": "", "description": "Smiley face shape. Corresponds to ECMA-376 ST_ShapeType 'smileyFace'."}, {"name": "SNIP_1_RECTANGLE", "type": "Enum", "url": "", "description": "One snip corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType 'snip1Rect'."}, {"name": "SNIP_2_DIAGONAL_RECTANGLE", "type": "Enum", "url": "", "description": "Two diagonal snip corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType 'snip2DiagRect'."}, {"name": "SNIP_2_SAME_RECTANGLE", "type": "Enum", "url": "", "description": "Two same-side snip corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'snip2SameRect'."}, {"name": "SNIP_ROUND_RECTANGLE", "type": "Enum", "url": "", "description": "One snip one round corner rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'snipRoundRect'."}, {"name": "STAR_10", "type": "Enum", "url": "", "description": "Ten pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star10'."}, {"name": "STAR_12", "type": "Enum", "url": "", "description": "Twelve pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star12'."}, {"name": "STAR_16", "type": "Enum", "url": "", "description": "Sixteen pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star16'."}, {"name": "STAR_24", "type": "Enum", "url": "", "description": "Twenty four pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star24'."}, {"name": "STAR_32", "type": "Enum", "url": "", "description": "Thirty two pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star32'."}, {"name": "STAR_4", "type": "Enum", "url": "", "description": "Four pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star4'."}, {"name": "STAR_5", "type": "Enum", "url": "", "description": "Five pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star5'."}, {"name": "STAR_6", "type": "Enum", "url": "", "description": "Six pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star6'."}, {"name": "STAR_7", "type": "Enum", "url": "", "description": "Seven pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star7'."}, {"name": "STAR_8", "type": "Enum", "url": "", "description": "Eight pointed star shape. Corresponds to ECMA-376 ST_ShapeType 'star8'."}, {"name": "STRIPED_RIGHT_ARROW", "type": "Enum", "url": "", "description": "Striped right arrow shape. Corresponds to ECMA-376 ST_ShapeType 'stripedRightArrow'."}, {"name": "SUN", "type": "Enum", "url": "", "description": "Sun shape. Corresponds to ECMA-376 ST_ShapeType 'sun'."}, {"name": "TRAPEZOID", "type": "Enum", "url": "", "description": "Trapezoid shape. Corresponds to ECMA-376 ST_ShapeType 'trapezoid'."}, {"name": "TRIANGLE", "type": "Enum", "url": "", "description": "Triangle shape. Corresponds to ECMA-376 ST_ShapeType 'triangle'."}, {"name": "UP_ARROW", "type": "Enum", "url": "", "description": "Up arrow shape. Corresponds to ECMA-376 ST_ShapeType 'upArrow'."}, {"name": "UP_ARROW_CALLOUT", "type": "Enum", "url": "", "description": "Callout up arrow shape. Corresponds to ECMA-376 ST_ShapeType 'upArrowCallout'."}, {"name": "UP_DOWN_ARROW", "type": "Enum", "url": "", "description": "Up down arrow shape. Corresponds to ECMA-376 ST_ShapeType 'upDownArrow'."}, {"name": "UTURN_ARROW", "type": "Enum", "url": "", "description": "U-turn arrow shape. Corresponds to ECMA-376 ST_ShapeType 'uturnArrow'."}, {"name": "VERTICAL_SCROLL", "type": "Enum", "url": "", "description": "Vertical scroll shape. Corresponds to ECMA-376 ST_ShapeType 'verticalScroll'."}, {"name": "WAVE", "type": "Enum", "url": "", "description": "Wave shape. Corresponds to ECMA-376 ST_ShapeType 'wave'."}, {"name": "WEDGE_ELLIPSE_CALLOUT", "type": "Enum", "url": "", "description": "Callout wedge ellipse shape. Corresponds to ECMA-376 ST_ShapeType 'wedgeEllipseCallout'."}, {"name": "WEDGE_RECTANGLE_CALLOUT", "type": "Enum", "url": "", "description": "Callout wedge rectangle shape. Corresponds to ECMA-376 ST_ShapeType 'wedgeRectCallout'."}, {"name": "WEDGE_ROUND_RECTANGLE_CALLOUT", "type": "Enum", "url": "", "description": "Callout wedge round rectangle shape. Corresponds to ECMA-376 ST_ShapeType\n'wedgeRoundRectCallout'."}, {"name": "FLOW_CHART_ALTERNATE_PROCESS", "type": "Enum", "url": "", "description": "Alternate process flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartAlternateProcess'."}, {"name": "FLOW_CHART_COLLATE", "type": "Enum", "url": "", "description": "Collate flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartCollate'."}, {"name": "FLOW_CHART_CONNECTOR", "type": "Enum", "url": "", "description": "Connector flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartConnector'."}, {"name": "FLOW_CHART_DECISION", "type": "Enum", "url": "", "description": "Decision flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartDecision'."}, {"name": "FLOW_CHART_DELAY", "type": "Enum", "url": "", "description": "Delay flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartDelay'."}, {"name": "FLOW_CHART_DISPLAY", "type": "Enum", "url": "", "description": "Display flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartDisplay'."}, {"name": "FLOW_CHART_DOCUMENT", "type": "Enum", "url": "", "description": "Document flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartDocument'."}, {"name": "FLOW_CHART_EXTRACT", "type": "Enum", "url": "", "description": "Extract flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartExtract'."}, {"name": "FLOW_CHART_INPUT_OUTPUT", "type": "Enum", "url": "", "description": "Input output flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartInputOutput'."}, {"name": "FLOW_CHART_INTERNAL_STORAGE", "type": "Enum", "url": "", "description": "Internal storage flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartInternalStorage'."}, {"name": "FLOW_CHART_MAGNETIC_DISK", "type": "Enum", "url": "", "description": "Magnetic disk flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartMagneticDisk'."}, {"name": "FLOW_CHART_MAGNETIC_DRUM", "type": "Enum", "url": "", "description": "Magnetic drum flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartMagneticDrum'."}, {"name": "FLOW_CHART_MAGNETIC_TAPE", "type": "Enum", "url": "", "description": "Magnetic tape flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartMagneticTape'."}, {"name": "FLOW_CHART_MANUAL_INPUT", "type": "Enum", "url": "", "description": "Manual input flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartManualInput'."}, {"name": "FLOW_CHART_MANUAL_OPERATION", "type": "Enum", "url": "", "description": "Manual operation flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartManualOperation'."}, {"name": "FLOW_CHART_MERGE", "type": "Enum", "url": "", "description": "Merge flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartMerge'."}, {"name": "FLOW_CHART_MULTIDOCUMENT", "type": "Enum", "url": "", "description": "Multi-document flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartMultidocument'."}, {"name": "FLOW_CHART_OFFLINE_STORAGE", "type": "Enum", "url": "", "description": "Offline storage flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartOfflineStorage'."}, {"name": "FLOW_CHART_OFFPAGE_CONNECTOR", "type": "Enum", "url": "", "description": "Off-page connector flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartOffpageConnector'."}, {"name": "FLOW_CHART_ONLINE_STORAGE", "type": "Enum", "url": "", "description": "Online storage flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartOnlineStorage'."}, {"name": "FLOW_CHART_OR", "type": "Enum", "url": "", "description": "Or flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartOr'."}, {"name": "FLOW_CHART_PREDEFINED_PROCESS", "type": "Enum", "url": "", "description": "Predefined process flow shape. Corresponds to ECMA-376 ST_ShapeType\n'flowChartPredefinedProcess'."}, {"name": "FLOW_CHART_PREPARATION", "type": "Enum", "url": "", "description": "Preparation flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartPreparation'."}, {"name": "FLOW_CHART_PROCESS", "type": "Enum", "url": "", "description": "Process flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartProcess'."}, {"name": "FLOW_CHART_PUNCHED_CARD", "type": "Enum", "url": "", "description": "Punched card flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartPunchedCard'."}, {"name": "FLOW_CHART_PUNCHED_TAPE", "type": "Enum", "url": "", "description": "Punched tape flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartPunchedTape'."}, {"name": "FLOW_CHART_SORT", "type": "Enum", "url": "", "description": "Sort flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartSort'."}, {"name": "FLOW_CHART_SUMMING_JUNCTION", "type": "Enum", "url": "", "description": "Summing junction flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartSummingJunction'."}, {"name": "FLOW_CHART_TERMINATOR", "type": "Enum", "url": "", "description": "Terminator flow shape. Corresponds to ECMA-376 ST_ShapeType 'flowChartTerminator'."}, {"name": "ARROW_EAST", "type": "Enum", "url": "", "description": "East arrow shape."}, {"name": "ARROW_NORTH_EAST", "type": "Enum", "url": "", "description": "Northeast arrow shape."}, {"name": "ARROW_NORTH", "type": "Enum", "url": "", "description": "North arrow shape."}, {"name": "SPEECH", "type": "Enum", "url": "", "description": "Speech shape."}, {"name": "STARBURST", "type": "Enum", "url": "", "description": "Star burst shape."}, {"name": "TEARDROP", "type": "Enum", "url": "", "description": "Teardrop shape. Corresponds to ECMA-376 ST_ShapeType 'teardrop'."}, {"name": "ELLIPSE_RIBBON", "type": "Enum", "url": "", "description": "Ellipse ribbon shape. Corresponds to ECMA-376 ST_ShapeType 'ellipseRibbon'."}, {"name": "ELLIPSE_RIBBON_2", "type": "Enum", "url": "", "description": "Ellipse ribbon 2 shape. Corresponds to ECMA-376 ST_ShapeType 'ellipseRibbon2'."}, {"name": "CLOUD_CALLOUT", "type": "Enum", "url": "", "description": "Callout cloud shape. Corresponds to ECMA-376 ST_ShapeType 'cloudCallout'."}, {"name": "CUSTOM", "type": "Enum", "url": "", "description": "Custom shape."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/placeholder-type", "name": "PlaceholderType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A placeholder type that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "Not a Placeholder."}, {"name": "BODY", "type": "Enum", "url": "", "description": "Body text."}, {"name": "CHART", "type": "Enum", "url": "", "description": "Chart or graph."}, {"name": "CLIP_ART", "type": "Enum", "url": "", "description": "Clip art image."}, {"name": "CENTERED_TITLE", "type": "Enum", "url": "", "description": "Title centered."}, {"name": "DIAGRAM", "type": "Enum", "url": "", "description": "Diagram."}, {"name": "DATE_AND_TIME", "type": "Enum", "url": "", "description": "Date and time."}, {"name": "FOOTER", "type": "Enum", "url": "", "description": "Footer text."}, {"name": "HEADER", "type": "Enum", "url": "", "description": "Header text."}, {"name": "MEDIA", "type": "Enum", "url": "", "description": "Multimedia."}, {"name": "OBJECT", "type": "Enum", "url": "", "description": "Any content type."}, {"name": "PICTURE", "type": "Enum", "url": "", "description": "Picture."}, {"name": "SLIDE_NUMBER", "type": "Enum", "url": "", "description": "Number of a slide."}, {"name": "SUBTITLE", "type": "Enum", "url": "", "description": "Subtitle."}, {"name": "TABLE", "type": "Enum", "url": "", "description": "Table."}, {"name": "TITLE", "type": "Enum", "url": "", "description": "Slide title."}, {"name": "SLIDE_IMAGE", "type": "Enum", "url": "", "description": "Slide image."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/page-type", "name": "PageType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A page type that is not supported."}, {"name": "SLIDE", "type": "Enum", "url": "", "description": "A slide page."}, {"name": "LAYOUT", "type": "Enum", "url": "", "description": "A layout page."}, {"name": "MASTER", "type": "Enum", "url": "", "description": "A master page."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/paragraph-alignment", "name": "ParagraphAlignment", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A paragraph alignment that is not supported."}, {"name": "START", "type": "Enum", "url": "", "description": "The paragraph is aligned to the start of the line. Left-aligned for left-to-right text,\nright-aligned otherwise."}, {"name": "CENTER", "type": "Enum", "url": "", "description": "The paragraph is centered."}, {"name": "END", "type": "Enum", "url": "", "description": "The paragraph is aligned to the end of the line. Right-aligned for left-to-right text,\nleft-aligned otherwise."}, {"name": "JUSTIFIED", "type": "Enum", "url": "", "description": "The paragraph is justified."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/page-background-type", "name": "PageBackgroundType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A page background type that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No fill, so the background is rendered white."}, {"name": "SOLID", "type": "Enum", "url": "", "description": "A solid color fill."}, {"name": "PICTURE", "type": "Enum", "url": "", "description": "A picture that is stretched to fill the page."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/list-preset", "name": "ListPreset", "type": "enum", "methods": [], "properties": [{"name": "DISC_CIRCLE_SQUARE", "type": "Enum", "url": "", "description": "A list with a `DISC`, `CIRCLE` and `SQUARE` glyphs for the first 3 list nesting levels."}, {"name": "DIAMONDX_ARROW3D_SQUARE", "type": "Enum", "url": "", "description": "A list with a `DIAMONDX`, `ARROW3D` and `SQUARE` glyphs for the first 3 list nesting levels."}, {"name": "CHECKBOX", "type": "Enum", "url": "", "description": "A list with `CHECKBOX` glyphs for all list nesting levels."}, {"name": "ARROW_DIAMOND_DISC", "type": "Enum", "url": "", "description": "A list with a `ARROW`, `DIAMOND` and `DISC` glyphs for the first 3 list nesting levels."}, {"name": "STAR_CIRCLE_SQUARE", "type": "Enum", "url": "", "description": "A list with a `STAR`, `CIRCLE` and `SQUARE` glyphs for the first 3 list nesting levels."}, {"name": "ARROW3D_CIRCLE_SQUARE", "type": "Enum", "url": "", "description": "A list with a `ARROW3D`, `CIRCLE` and `SQUARE` glyphs for the first 3 list nesting levels."}, {"name": "LEFTTRIANGLE_DIAMOND_DISC", "type": "Enum", "url": "", "description": "A list with a `LEFTTRIANGLE`, `DIAMOND` and `DISC` glyphs for the first 3 list nesting levels."}, {"name": "DIAMONDX_HOLLOWDIAMOND_SQUARE", "type": "Enum", "url": "", "description": "A list with a `DIAMONDX`, `HOLLOWDIAMOND` and `SQUARE` glyphs for the first 3 list nesting\nlevels."}, {"name": "DIAMOND_CIRCLE_SQUARE", "type": "Enum", "url": "", "description": "A list with a `DIAMOND`, `CIRCLE` and `SQUARE` glyphs for the first 3 list nesting levels."}, {"name": "DIGIT_ALPHA_ROMAN", "type": "Enum", "url": "", "description": "A list with `DIGIT`, `ALPHA` and `ROMAN` glyphs for the first 3 list nesting levels, followed\nby periods."}, {"name": "DIGIT_ALPHA_ROMAN_PARENS", "type": "Enum", "url": "", "description": "A list with `DIGIT`, `ALPHA` and `ROMAN` glyphs for the first 3 list nesting levels, followed\nby parenthesis."}, {"name": "DIGIT_NESTED", "type": "Enum", "url": "", "description": "A list with `DIGIT` glyphs separated by periods, where each nesting level uses the previous\nnesting level's glyph as a prefix. For example: '1.', '1.1.', '2.', '2.2.'."}, {"name": "UPPERALPHA_ALPHA_ROMAN", "type": "Enum", "url": "", "description": "A list with `UPPERALPHA`, `ALPHA` and `ROMAN` glyphs for the first 3 list nesting levels,\nfollowed by periods."}, {"name": "UPPERROMAN_UPPERALPHA_DIGIT", "type": "Enum", "url": "", "description": "A list with `UPPERROMAN`, `UPPERALPHA` and `DIGIT` glyphs for the first 3 list nesting levels,\nfollowed by periods."}, {"name": "ZERODIGIT_ALPHA_ROMAN", "type": "Enum", "url": "", "description": "A list with `ZERODIGIT`, `ALPHA` and `ROMAN` glyphs for the first 3 list nesting levels,\nfollowed by periods."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/link-type", "name": "LinkType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A link type that is not supported."}, {"name": "URL", "type": "Enum", "url": "", "description": "A link to an external web page."}, {"name": "SLIDE_POSITION", "type": "Enum", "url": "", "description": "A link to a specific slide in this presentation, addressed by its position."}, {"name": "SLIDE_ID", "type": "Enum", "url": "", "description": "A link to a specific slide in this presentation, addressed by its ID."}, {"name": "SLIDE_INDEX", "type": "Enum", "url": "", "description": "A link to a specific slide in this presentation, addressed by its zero-based index."}]},
{"url": "https://developers.google.com/apps-script/reference/base/rgb-color.html", "name": "RgbColor", "type": "class", "methods": [{"name": "asHexString", "parameters": [], "result": "String", "description": "Returns the color as a CSS-style 7 character hexadecimal string, #rrggbb."}, {"name": "getBlue", "parameters": [], "result": "Integer", "description": "The blue channel of this color, as a number from 0 to 255."}, {"name": "getColorType", "parameters": [], "result": "ColorType", "description": "Get the type of this color."}, {"name": "getGreen", "parameters": [], "result": "Integer", "description": "The green channel of this color, as a number from 0 to 255."}, {"name": "getRed", "parameters": [], "result": "Integer", "description": "The red channel of this color, as a number from 0 to 255."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/page-element-type", "name": "PageElementType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "Represents a page element that is not supported and cannot be further classified."}, {"name": "SHAPE", "type": "Enum", "url": "", "description": "Represents a generic shape that does not have a more specific classification."}, {"name": "IMAGE", "type": "Enum", "url": "", "description": "Represents an image."}, {"name": "VIDEO", "type": "Enum", "url": "", "description": "Represents a video."}, {"name": "TABLE", "type": "Enum", "url": "", "description": "Represents a table."}, {"name": "GROUP", "type": "Enum", "url": "", "description": "Represents a collection of page elements joined as a single unit."}, {"name": "LINE", "type": "Enum", "url": "", "description": "Represents a line."}, {"name": "WORD_ART", "type": "Enum", "url": "", "description": "Represents word art."}, {"name": "SHEETS_CHART", "type": "Enum", "url": "", "description": "Represents a linked chart embedded from Google Sheets."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/line-category", "name": "LineCategory", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A line category that is not supported."}, {"name": "STRAIGHT", "type": "Enum", "url": "", "description": "Straight connectors, including straight connector 1."}, {"name": "BENT", "type": "Enum", "url": "", "description": "Bent connectors, including bent connector 2 to 5."}, {"name": "CURVED", "type": "Enum", "url": "", "description": "Curved connectors, including curved connector 2 to 5."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/fill-type", "name": "FillType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A fill type that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No fill, so the background is transparent."}, {"name": "SOLID", "type": "Enum", "url": "", "description": "A solid color fill."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/line-type", "name": "LineType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A line type that is not supported."}, {"name": "STRAIGHT_CONNECTOR_1", "type": "Enum", "url": "", "description": "Straight connector 1 form. Corresponds to ECMA-376 ST_ShapeType 'straightConnector1'."}, {"name": "BENT_CONNECTOR_2", "type": "Enum", "url": "", "description": "Bent connector 2 form. Corresponds to ECMA-376 ST_ShapeType 'bentConnector2'."}, {"name": "BENT_CONNECTOR_3", "type": "Enum", "url": "", "description": "Bent connector 3 form. Corresponds to ECMA-376 ST_ShapeType 'bentConnector3'."}, {"name": "BENT_CONNECTOR_4", "type": "Enum", "url": "", "description": "Bent connector 4 form. Corresponds to ECMA-376 ST_ShapeType 'bentConnector4'."}, {"name": "BENT_CONNECTOR_5", "type": "Enum", "url": "", "description": "Bent connector 5 form. Corresponds to ECMA-376 ST_ShapeType 'bentConnector5'."}, {"name": "CURVED_CONNECTOR_2", "type": "Enum", "url": "", "description": "Curved connector 2 form. Corresponds to ECMA-376 ST_ShapeType 'curvedConnector2'."}, {"name": "CURVED_CONNECTOR_3", "type": "Enum", "url": "", "description": "Curved connector 3 form. Corresponds to ECMA-376 ST_ShapeType 'curvedConnector3'."}, {"name": "CURVED_CONNECTOR_4", "type": "Enum", "url": "", "description": "Curved connector 4 form. Corresponds to ECMA-376 ST_ShapeType 'curvedConnector4'."}, {"name": "CURVED_CONNECTOR_5", "type": "Enum", "url": "", "description": "Curved connector 5 form. Corresponds to ECMA-376 ST_ShapeType 'curvedConnector5'."}, {"name": "STRAIGHT_LINE", "type": "Enum", "url": "", "description": "Straight line. Corresponds to ECMA-376 ST_ShapeType 'line'. This line type is not a connector."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/cell-merge-state", "name": "CellMergeState", "type": "enum", "methods": [], "properties": [{"name": "NORMAL", "type": "Enum", "url": "", "description": "The cell is not merged."}, {"name": "HEAD", "type": "Enum", "url": "", "description": "The cell is merged and it is the head (i.e. upper left) cell within the merged set of cells.\n\nAs an example, assume the following table.\n\n\n-------------------\n|(0,0)|(0,1)|(0,2)|\n-------------------\n\nIf the first two cells are merged to form the following table, cell (0,0) is the head cell and\n(0,1) is a merged cell.\n\n-------------------\n|(0,0)      |(0,2)|\n-------------------\n"}, {"name": "MERGED", "type": "Enum", "url": "", "description": "The cell is merged but is not the head (i.e. upper left) cell.\n\nAs an example, assume the following table.\n\n\n-------------------\n|(0,0)|(0,1)|(0,2)|\n-------------------\n\nIf the first two cells are merged to form the following table, cell (0,0) is the head cell and\n(0,1) is a merged cell.\n\n-------------------\n|(0,0)      |(0,2)|\n-------------------\n"}]},
{"url": "https://developers.google.com/apps-script/reference/slides/dash-style", "name": "DashStyle", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A dash style that is not supported."}, {"name": "SOLID", "type": "Enum", "url": "", "description": "Solid line. Corresponds to ECMA-376 ST_PresetLineDashVal value 'solid'. This is the default\ndash style."}, {"name": "DOT", "type": "Enum", "url": "", "description": "Dotted line. Corresponds to ECMA-376 ST_PresetLineDashVal value 'dot'."}, {"name": "DASH", "type": "Enum", "url": "", "description": "Dashed line. Corresponds to ECMA-376 ST_PresetLineDashVal value 'dash'."}, {"name": "DASH_DOT", "type": "Enum", "url": "", "description": "Alternating dashes and dots. Corresponds to ECMA-376 ST_PresetLineDashVal value 'dashDot'."}, {"name": "LONG_DASH", "type": "Enum", "url": "", "description": "Line with large dashes. Corresponds to ECMA-376 ST_PresetLineDashVal value 'lgDash'."}, {"name": "LONG_DASH_DOT", "type": "Enum", "url": "", "description": "Alternating large dashes and dots. Corresponds to ECMA-376 ST_PresetLineDashVal value\n'lgDashDot'."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/line-fill-type", "name": "LineFillType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A line fill type that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No fill, so the line or outline is transparent."}, {"name": "SOLID", "type": "Enum", "url": "", "description": "A solid color fill."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/content-alignment", "name": "ContentAlignment", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A content alignment that is not supported."}, {"name": "TOP", "type": "Enum", "url": "", "description": "Aligns the content to the top of the content holder. Corresponds to ECMA-376\nST_TextAnchoringType 't'."}, {"name": "MIDDLE", "type": "Enum", "url": "", "description": "Aligns the content to the middle of the content holder. Corresponds to ECMA-376\nST_TextAnchoringType 'ctr'."}, {"name": "BOTTOM", "type": "Enum", "url": "", "description": "Aligns the content to the bottom of the content holder. Corresponds to ECMA-376\nST_TextAnchoringType 'b'."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/autofit-type", "name": "AutofitType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "An autofit type that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "Autofit isn't applied."}, {"name": "TEXT_AUTOFIT", "type": "Enum", "url": "", "description": "Shrinks the text on overflow."}, {"name": "SHAPE_AUTOFIT", "type": "Enum", "url": "", "description": "Resizes the shape to fit the text."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/arrow-style", "name": "ArrowStyle", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "An arrow style that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No arrow."}, {"name": "STEALTH_ARROW", "type": "Enum", "url": "", "description": "Arrow with notched back. Corresponds to ECMA-376 ST_LineEndType value 'stealth'."}, {"name": "FILL_ARROW", "type": "Enum", "url": "", "description": "Filled arrow. Corresponds to ECMA-376 ST_LineEndType value 'triangle'."}, {"name": "FILL_CIRCLE", "type": "Enum", "url": "", "description": "Filled circle. Corresponds to ECMA-376 ST_LineEndType value 'oval'."}, {"name": "FILL_SQUARE", "type": "Enum", "url": "", "description": "Filled square."}, {"name": "FILL_DIAMOND", "type": "Enum", "url": "", "description": "Filled diamond. Corresponds to ECMA-376 ST_LineEndType value 'diamond'."}, {"name": "OPEN_ARROW", "type": "Enum", "url": "", "description": "Hollow arrow."}, {"name": "OPEN_CIRCLE", "type": "Enum", "url": "", "description": "Hollow circle."}, {"name": "OPEN_SQUARE", "type": "Enum", "url": "", "description": "Hollow square."}, {"name": "OPEN_DIAMOND", "type": "Enum", "url": "", "description": "Hollow diamond."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/word-art", "name": "WordArt", "type": "class", "methods": [{"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "WordArt", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "bringForward", "parameters": [], "result": "WordArt", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "WordArt", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getLink", "parameters": [], "result": "Link", "description": "Returns the Link or null if there is no link."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRenderedText", "parameters": [], "result": "String", "description": "Gets the text that is rendered as word art."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "WordArt", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "removeLink", "parameters": [], "result": "void", "description": "Removes a Link."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "WordArt", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "WordArt", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "WordArt", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "WordArt", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "WordArt", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "WordArt", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "WordArt", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setLinkSlide", "parameters": [{"name": "slideIndex", "type": "Integer"}], "result": "Link", "description": "Sets a Link to the given Slide using the zero-based index of the slide."}, {"name": "setLinkSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "Link", "description": "Sets a Link to the given Slide, the link is set by the given slide ID."}, {"name": "setLinkSlide", "parameters": [{"name": "slidePosition", "type": "SlidePosition"}], "result": "Link", "description": "Sets a Link to the given Slide using the relative position of the slide."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Link", "description": "Sets a Link to the given non-empty URL string."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "WordArt", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "WordArt", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "WordArt", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "WordArt", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "WordArt", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/predefined-layout", "name": "PredefinedLayout", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A layout that is not supported."}, {"name": "BLANK", "type": "Enum", "url": "", "description": "Blank layout, with no placeholders."}, {"name": "CAPTION_ONLY", "type": "Enum", "url": "", "description": "Layout with a caption at the bottom."}, {"name": "TITLE", "type": "Enum", "url": "", "description": "Layout with a title and a subtitle."}, {"name": "TITLE_AND_BODY", "type": "Enum", "url": "", "description": "Layout with a title and body."}, {"name": "TITLE_AND_TWO_COLUMNS", "type": "Enum", "url": "", "description": "Layout with a title and two columns."}, {"name": "TITLE_ONLY", "type": "Enum", "url": "", "description": "Layout with only a title."}, {"name": "SECTION_HEADER", "type": "Enum", "url": "", "description": "Layout with a section title."}, {"name": "SECTION_TITLE_AND_DESCRIPTION", "type": "Enum", "url": "", "description": "Layout with a title and subtitle on one side and description on the other."}, {"name": "ONE_COLUMN_TEXT", "type": "Enum", "url": "", "description": "Layout with one title and one body, arranged in a single column."}, {"name": "MAIN_POINT", "type": "Enum", "url": "", "description": "Layout with a main point."}, {"name": "BIG_NUMBER", "type": "Enum", "url": "", "description": "Layout with a big number heading."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/auto-text-type", "name": "AutoTextType", "type": "enum", "methods": [], "properties": [{"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "An auto text type that is not supported."}, {"name": "SLIDE_NUMBER", "type": "Enum", "url": "", "description": "A slide number."}]},
{"url": "https://developers.google.com/apps-script/reference/base/ui.html", "name": "Ui", "type": "class", "methods": [{"name": "alert", "parameters": [{"name": "prompt", "type": "String"}], "result": "Button", "description": "Opens a dialog box in the user's editor with the given message and an \"OK\" button."}, {"name": "alert", "parameters": [{"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "Button", "description": "Opens a dialog box in the user's editor with the given message and set of buttons."}, {"name": "alert", "parameters": [{"name": "title", "type": "String"}, {"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "Button", "description": "Opens a dialog box in the user's editor with the given title, message, and set of buttons."}, {"name": "createAddonMenu", "parameters": [], "result": "Menu", "description": "Creates a builder that can be used to insert a sub-menu into the editor's Add-on menu."}, {"name": "createMenu", "parameters": [{"name": "caption", "type": "String"}], "result": "Menu", "description": "Creates a builder that can be used to add a menu to the editor's user interface."}, {"name": "prompt", "parameters": [{"name": "prompt", "type": "String"}], "result": "PromptResponse", "description": "Opens an input dialog box in the user's editor with the given message and an \"OK\" button."}, {"name": "prompt", "parameters": [{"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "PromptResponse", "description": "Opens an input dialog box in the user's editor with the given message and set of buttons."}, {"name": "prompt", "parameters": [{"name": "title", "type": "String"}, {"name": "prompt", "type": "String"}, {"name": "buttons", "type": "ButtonSet"}], "result": "PromptResponse", "description": "Opens an input dialog box in the user's editor with the given title, message, and set of\nbuttons."}, {"name": "showModalDialog", "parameters": [{"name": "userInterface", "type": "Object"}, {"name": "title", "type": "String"}], "result": "void", "description": "Opens a modal dialog box in the user's editor with custom client-side content."}, {"name": "showModelessDialog", "parameters": [{"name": "userInterface", "type": "Object"}, {"name": "title", "type": "String"}], "result": "void", "description": "Opens a modeless dialog box in the user's editor with custom client-side content."}, {"name": "showSidebar", "parameters": [{"name": "userInterface", "type": "Object"}], "result": "void", "description": "Opens a sidebar in the user's editor with custom client-side content."}], "properties": [{"name": "Button", "type": "Button", "url": "/apps-script/reference/base/button", "description": "An enum representing predetermined, localized dialog buttons returned by an alert or PromptResponse.getSelectedButton() to indicate\nwhich button in a dialog the user clicked."}, {"name": "ButtonSet", "type": "ButtonSet", "url": "/apps-script/reference/base/button-set", "description": "An enum representing predetermined, localized sets of one or more dialog buttons that can be\nadded to an alert or a prompt."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/alignment-position", "name": "AlignmentPosition", "type": "enum", "methods": [], "properties": [{"name": "CENTER", "type": "Enum", "url": "", "description": "Align to the center."}, {"name": "HORIZONTAL_CENTER", "type": "Enum", "url": "", "description": "Align to the horizontal center."}, {"name": "VERTICAL_CENTER", "type": "Enum", "url": "", "description": "Align to the vertical center."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/text-range", "name": "TextRange", "type": "class", "methods": [{"name": "appendParagraph", "parameters": [{"name": "text", "type": "String"}], "result": "Paragraph", "description": "Appends a paragraph at the end of the text range."}, {"name": "appendRange", "parameters": [{"name": "textRange", "type": "TextRange"}], "result": "TextRange", "description": "Appends a copy of the provided text range to the end of the current text range."}, {"name": "appendRange", "parameters": [{"name": "textRange", "type": "TextRange"}, {"name": "matchSourceFormatting", "type": "Boolean"}], "result": "TextRange", "description": "Appends a copy of the provided text range to the end of the current text range."}, {"name": "appendText", "parameters": [{"name": "text", "type": "String"}], "result": "TextRange", "description": "Appends text at the end of the text range."}, {"name": "asRenderedString", "parameters": [], "result": "String", "description": "Returns the rendered text bounded by this range of the associated shape or table cell in a\nformat appropriate to display to end users."}, {"name": "asString", "parameters": [], "result": "String", "description": "Returns the raw text bounded by this range of the associated shape or table cell."}, {"name": "clear", "parameters": [], "result": "void", "description": "Clears the text bounded by this range."}, {"name": "clear", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffset", "type": "Integer"}], "result": "void", "description": "Clears the text bounded by the start and end offsets in the range."}, {"name": "find", "parameters": [{"name": "pattern", "type": "String"}], "result": "TextRange[]", "description": "Returns all the ranges matching the search pattern in the current text range."}, {"name": "find", "parameters": [{"name": "pattern", "type": "String"}, {"name": "startOffset", "type": "Integer"}], "result": "TextRange[]", "description": "Returns all the ranges matching the search pattern in the current text range starting from the\nstart offset."}, {"name": "getAutoTexts", "parameters": [], "result": "AutoText[]", "description": "Returns the auto texts within the current text range."}, {"name": "getEndIndex", "parameters": [], "result": "Integer", "description": "Returns the exclusive, 0-based index for the last character in this range."}, {"name": "getLength", "parameters": [], "result": "Integer", "description": "Returns the number of characters in this range."}, {"name": "getLinks", "parameters": [], "result": "TextRange[]", "description": "Returns a collection of text ranges that correspond to all Links within the current\ntext range or overlapping the current text range."}, {"name": "getListParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Returns the paragraphs in lists that overlap the current text range."}, {"name": "getListStyle", "parameters": [], "result": "ListStyle", "description": "Returns the ListStyle of the current text range."}, {"name": "getParagraphStyle", "parameters": [], "result": "ParagraphStyle", "description": "Returns the ParagraphStyle of the current text range."}, {"name": "getParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Returns the paragraphs that overlap the current text range."}, {"name": "getRange", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffset", "type": "Integer"}], "result": "TextRange", "description": "Returns a new TextRange covering part of the range from which it is derived."}, {"name": "getRuns", "parameters": [], "result": "TextRange[]", "description": "Returns the text runs that overlap the current text range."}, {"name": "getStartIndex", "parameters": [], "result": "Integer", "description": "Returns the inclusive, 0-based index for the first character in this range."}, {"name": "getTextStyle", "parameters": [], "result": "TextStyle", "description": "Returns the text style of the range, or null if the range is empty."}, {"name": "insertParagraph", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Paragraph", "description": "Inserts a paragraph at the start offset."}, {"name": "insertRange", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "textRange", "type": "TextRange"}], "result": "TextRange", "description": "Inserts a copy of the provided text range at the start offset."}, {"name": "insertRange", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "textRange", "type": "TextRange"}, {"name": "matchSourceFormatting", "type": "Boolean"}], "result": "TextRange", "description": "Inserts a copy of the provided text range at the start offset."}, {"name": "insertText", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "TextRange", "description": "Inserts text at the start offset."}, {"name": "isEmpty", "parameters": [], "result": "Boolean", "description": "Returns true if there are no characters in this range, and returns false\notherwise."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the TextRange in the active presentation and removes any previous\nselection."}, {"name": "setText", "parameters": [{"name": "newText", "type": "String"}], "result": "TextRange", "description": "Sets the text bounded by this range of the associated shape or table cell."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/table-column", "name": "TableColumn", "type": "class", "methods": [{"name": "getCell", "parameters": [{"name": "cellIndex", "type": "Integer"}], "result": "TableCell", "description": "Returns the cell at the specified index."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Returns the 0-based index of the column."}, {"name": "getNumCells", "parameters": [], "result": "Integer", "description": "Returns the number of cells in this column."}, {"name": "getParentTable", "parameters": [], "result": "Table", "description": "Returns the table containing the current column."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the width of the column in points."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the table column."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/video", "name": "Video", "type": "class", "methods": [{"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "Video", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "bringForward", "parameters": [], "result": "Video", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "Video", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getBorder", "parameters": [], "result": "Border", "description": "Returns the Border of the video."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getSource", "parameters": [], "result": "VideoSourceType", "description": "Gets the video source."}, {"name": "getThumbnailUrl", "parameters": [], "result": "String", "description": "Gets an URL to the video thumbnail."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Gets an URL to the video."}, {"name": "getVideoId", "parameters": [], "result": "String", "description": "Gets the video source's unique identifier for this video."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Video", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Video", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Video", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "Video", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "Video", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Video", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "Video", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "Video", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "Video", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Video", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "Video", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Video", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Video", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/theme-color", "name": "ThemeColor", "type": "class", "methods": [{"name": "getColorType", "parameters": [], "result": "ColorType", "description": "Get the type of this color."}, {"name": "getThemeColorType", "parameters": [], "result": "ThemeColorType", "description": "Get the theme color type of this color."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/table-row", "name": "TableRow", "type": "class", "methods": [{"name": "getCell", "parameters": [{"name": "cellIndex", "type": "Integer"}], "result": "TableCell", "description": "Returns the cell at the specified index."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Returns the 0-based index of the row."}, {"name": "getMinimumHeight", "parameters": [], "result": "Number", "description": "Returns the minimum height of the row in points."}, {"name": "getNumCells", "parameters": [], "result": "Integer", "description": "Returns the number of cells in this row."}, {"name": "getParentTable", "parameters": [], "result": "Table", "description": "Returns the table containing the current row."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the table row."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/table-cell-range", "name": "TableCellRange", "type": "class", "methods": [{"name": "getTableCells", "parameters": [], "result": "TableCell[]", "description": "Returns the list of TableCell instances."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/table-cell", "name": "TableCell", "type": "class", "methods": [{"name": "getColumnIndex", "parameters": [], "result": "Integer", "description": "Returns the 0-based column index of the table cell."}, {"name": "getColumnSpan", "parameters": [], "result": "Integer", "description": "Returns the column span of the table cell."}, {"name": "getContentAlignment", "parameters": [], "result": "ContentAlignment", "description": "Returns the ContentAlignment of the text in the table cell."}, {"name": "getFill", "parameters": [], "result": "Fill", "description": "Returns the fill of the table cell."}, {"name": "getHeadCell", "parameters": [], "result": "TableCell", "description": "Returns the head cell of this table cell."}, {"name": "getMergeState", "parameters": [], "result": "CellMergeState", "description": "Returns the merge state of the table cell."}, {"name": "getParentColumn", "parameters": [], "result": "TableColumn", "description": "Returns the table column containing the current cell."}, {"name": "getParentRow", "parameters": [], "result": "TableRow", "description": "Returns the table row containing the current cell."}, {"name": "getParentTable", "parameters": [], "result": "Table", "description": "Returns the table containing the current cell."}, {"name": "getRowIndex", "parameters": [], "result": "Integer", "description": "Returns the 0-based row index of the table cell."}, {"name": "getRowSpan", "parameters": [], "result": "Integer", "description": "Returns the row span of the table cell."}, {"name": "getText", "parameters": [], "result": "TextRange", "description": "Returns the text content of the table cell."}, {"name": "setContentAlignment", "parameters": [{"name": "contentAlignment", "type": "ContentAlignment"}], "result": "TableCell", "description": "Sets the ContentAlignment of the text in the table cell."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/solid-fill", "name": "SolidFill", "type": "class", "methods": [{"name": "getAlpha", "parameters": [], "result": "Number", "description": "Get the opacity of the color, in the interval from [0, 1.0], where 1.0 means fully opaque."}, {"name": "getColor", "parameters": [], "result": "Color", "description": "Get the color of the fill."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/slide", "name": "Slide", "type": "class", "methods": [{"name": "duplicate", "parameters": [], "result": "Slide", "description": "Duplicates the slide."}, {"name": "getBackground", "parameters": [], "result": "PageBackground", "description": "Gets the page's background."}, {"name": "getColorScheme", "parameters": [], "result": "ColorScheme", "description": "Gets the ColorScheme associated with the page."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Returns the list of Group objects on the page."}, {"name": "getImages", "parameters": [], "result": "Image[]", "description": "Returns the list of Image objects on the page."}, {"name": "getLayout", "parameters": [], "result": "Layout", "description": "Gets the layout that the slide is based on or null if the slide is not based on a\nlayout."}, {"name": "getLines", "parameters": [], "result": "Line[]", "description": "Returns the list of Line objects on the page."}, {"name": "getNotesPage", "parameters": [], "result": "NotesPage", "description": "Returns the notes page associated with the slide."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Gets the unique ID for the page."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement on the page with the given ID, or null if none exists."}, {"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement objects rendered on the page."}, {"name": "getPageType", "parameters": [], "result": "PageType", "description": "Gets the type of the page."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType or\nnull if a matching placeholder is not present."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}, {"name": "placeholderIndex", "type": "Integer"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType and\na placeholder index, or null if the placeholder is not present."}, {"name": "getPlaceholders", "parameters": [], "result": "PageElement[]", "description": "Returns the list of placeholder PageElement objects in the page."}, {"name": "getShapes", "parameters": [], "result": "Shape[]", "description": "Returns the list of Shape objects on the page."}, {"name": "getSheetsCharts", "parameters": [], "result": "SheetsChart[]", "description": "Returns the list of SheetsChart objects on the page."}, {"name": "getSlideLinkingMode", "parameters": [], "result": "SlideLinkingMode", "description": "Returns a SlideLinkingMode indicating if the slide is linked to another slide."}, {"name": "getSourcePresentationId", "parameters": [], "result": "String", "description": "Returns the source Presentation ID or null if the slide is not linked."}, {"name": "getSourceSlideObjectId", "parameters": [], "result": "String", "description": "Returns the source slide ID or null if the slide is not linked."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Returns the list of Table objects on the page."}, {"name": "getVideos", "parameters": [], "result": "Video[]", "description": "Returns the list of Video objects on the page."}, {"name": "getWordArts", "parameters": [], "result": "WordArt[]", "description": "Returns the list of WordArt objects on the page."}, {"name": "group", "parameters": [{"name": "pageElements", "type": "PageElement"}], "result": "Group", "description": "Groups all the specified page elements."}, {"name": "insertGroup", "parameters": [{"name": "group", "type": "Group"}], "result": "Group", "description": "Inserts a copy of the provided Group on the page."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the specified\nimage blob."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the specified image blob."}, {"name": "insertImage", "parameters": [{"name": "image", "type": "Image"}], "result": "Image", "description": "Inserts a copy of the provided Image on the page."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the provided URL."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the provided URL."}, {"name": "insertLine", "parameters": [{"name": "line", "type": "Line"}], "result": "Line", "description": "Inserts a copy of the provided Line on the page."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startConnectionSite", "type": "ConnectionSite"}, {"name": "endConnectionSite", "type": "ConnectionSite"}], "result": "Line", "description": "Inserts a line on the page connecting two connection sites."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startLeft", "type": "Number"}, {"name": "startTop", "type": "Number"}, {"name": "endLeft", "type": "Number"}, {"name": "endTop", "type": "Number"}], "result": "Line", "description": "Inserts a line on the page."}, {"name": "insertPageElement", "parameters": [{"name": "pageElement", "type": "PageElement"}], "result": "PageElement", "description": "Inserts a copy of the provided PageElement on the page."}, {"name": "insertShape", "parameters": [{"name": "shape", "type": "Shape"}], "result": "Shape", "description": "Inserts a copy of the provided Shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page with the provided position and size."}, {"name": "insertSheetsChart", "parameters": [{"name": "sheetsChart", "type": "SheetsChart"}], "result": "SheetsChart", "description": "Inserts a copy of the provided SheetsChart on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page with the provided position and\nsize."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Table", "description": "Inserts a table on the page."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Table", "description": "Inserts a table on the page with the provided position and size."}, {"name": "insertTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts a copy of the provided Table on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}], "result": "Video", "description": "Inserts a video at the top left corner of the page with a default size."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Video", "description": "Inserts a video on the page with the provided position and size."}, {"name": "insertVideo", "parameters": [{"name": "video", "type": "Video"}], "result": "Video", "description": "Inserts a copy of the provided Video on the page."}, {"name": "insertWordArt", "parameters": [{"name": "wordArt", "type": "WordArt"}], "result": "WordArt", "description": "Inserts a copy of the provided WordArt on the page."}, {"name": "move", "parameters": [{"name": "index", "type": "Integer"}], "result": "void", "description": "Move the slide to the specified index."}, {"name": "refreshSlide", "parameters": [], "result": "void", "description": "Refreshes the slide to reflect any changes made to the linked source slide."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "selectAsCurrentPage", "parameters": [], "result": "void", "description": "Selects the Page in the active presentation as the current page selection and removes any previous selection."}, {"name": "unlink", "parameters": [], "result": "void", "description": "Unlinks the current Slide from its source slide."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/table", "name": "Table", "type": "class", "methods": [{"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "Table", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "appendColumn", "parameters": [], "result": "TableColumn", "description": "Appends a new column to the right of the last column of the table."}, {"name": "appendRow", "parameters": [], "result": "TableRow", "description": "Appends a new row below the last row of the table."}, {"name": "bringForward", "parameters": [], "result": "Table", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "Table", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getCell", "parameters": [{"name": "rowIndex", "type": "Integer"}, {"name": "columnIndex", "type": "Integer"}], "result": "TableCell", "description": "Returns the specified cell in the table."}, {"name": "getColumn", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "TableColumn", "description": "Returns the specified column in the table."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getNumColumns", "parameters": [], "result": "Integer", "description": "Returns the number of columns in the table."}, {"name": "getNumRows", "parameters": [], "result": "Integer", "description": "Returns the number of rows in the table."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getRow", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "TableRow", "description": "Returns the specified row in the table."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "insertColumn", "parameters": [{"name": "index", "type": "Integer"}], "result": "TableColumn", "description": "Inserts a new column at the specified index of the table."}, {"name": "insertRow", "parameters": [{"name": "index", "type": "Integer"}], "result": "TableRow", "description": "Inserts a new row at the specified index of the table."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Table", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Table", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Table", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "Table", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "Table", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Table", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "Table", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "Table", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "Table", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Table", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "Table", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Table", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Table", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/sheets-chart", "name": "SheetsChart", "type": "class", "methods": [{"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "SheetsChart", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "asImage", "parameters": [], "result": "Image", "description": "Returns the chart as an image or null if the chart is not an embedded image."}, {"name": "bringForward", "parameters": [], "result": "SheetsChart", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "SheetsChart", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getChartId", "parameters": [], "result": "Integer", "description": "Gets the ID of the specific chart in the Google Sheets spreadsheet that is embedded."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getEmbedType", "parameters": [], "result": "SheetsChartEmbedType", "description": "Returns the embed type of the Sheets chart."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getLink", "parameters": [], "result": "Link", "description": "Returns the Link or null if there is no link."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getSpreadsheetId", "parameters": [], "result": "String", "description": "Gets the ID of the Google Sheets spreadsheet that contains the source chart."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "SheetsChart", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "refresh", "parameters": [], "result": "void", "description": "Refreshes the chart by replacing it with the latest version of the chart from Google Sheets."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "removeLink", "parameters": [], "result": "void", "description": "Removes a Link."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "SheetsChart", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "SheetsChart", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "SheetsChart", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "SheetsChart", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "SheetsChart", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "SheetsChart", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "SheetsChart", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setLinkSlide", "parameters": [{"name": "slideIndex", "type": "Integer"}], "result": "Link", "description": "Sets a Link to the given Slide using the zero-based index of the slide."}, {"name": "setLinkSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "Link", "description": "Sets a Link to the given Slide, the link is set by the given slide ID."}, {"name": "setLinkSlide", "parameters": [{"name": "slidePosition", "type": "SlidePosition"}], "result": "Link", "description": "Sets a Link to the given Slide using the relative position of the slide."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Link", "description": "Sets a Link to the given non-empty URL string."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "SheetsChart", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "SheetsChart", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "SheetsChart", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "SheetsChart", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "SheetsChart", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/shape", "name": "Shape", "type": "class", "methods": [{"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "Shape", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "bringForward", "parameters": [], "result": "Shape", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "Shape", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getAutofit", "parameters": [], "result": "Autofit", "description": "Returns the Autofit of the text within this shape."}, {"name": "getBorder", "parameters": [], "result": "Border", "description": "Returns the Border of the shape."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getContentAlignment", "parameters": [], "result": "ContentAlignment", "description": "Returns the ContentAlignment of the text in the shape."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getFill", "parameters": [], "result": "Fill", "description": "Returns the Fill of the shape."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getLink", "parameters": [], "result": "Link", "description": "Returns the Link or null if there is no link."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getParentPlaceholder", "parameters": [], "result": "PageElement", "description": "Returns the parent page element of the placeholder."}, {"name": "getPlaceholderIndex", "parameters": [], "result": "Integer", "description": "Returns the placeholder index of the shape."}, {"name": "getPlaceholderType", "parameters": [], "result": "PlaceholderType", "description": "Returns the placeholder type of the shape, or PlaceholderType.NONE if the shape is not\na placeholder."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getShapeType", "parameters": [], "result": "ShapeType", "description": "Returns the type of the shape."}, {"name": "getText", "parameters": [], "result": "TextRange", "description": "Returns the text content of the shape."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Shape", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "removeLink", "parameters": [], "result": "void", "description": "Removes a Link."}, {"name": "replaceWithImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "Image", "description": "Replaces this shape with an image provided by a BlobSource."}, {"name": "replaceWithImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "crop", "type": "Boolean"}], "result": "Image", "description": "Replaces this shape with an image provided by a BlobSource."}, {"name": "replaceWithImage", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "Image", "description": "Replaces this shape with an image."}, {"name": "replaceWithImage", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "crop", "type": "Boolean"}], "result": "Image", "description": "Replaces this shape with an image."}, {"name": "replaceWithSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "SheetsChart", "description": "Replaces this shape with an Google Sheets chart."}, {"name": "replaceWithSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "Image", "description": "Replaces this shape with an image of a Google Sheets chart."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Shape", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Shape", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "Shape", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "Shape", "description": "Sends the page element to the back of the page."}, {"name": "setContentAlignment", "parameters": [{"name": "contentAlignment", "type": "ContentAlignment"}], "result": "Shape", "description": "Sets the ContentAlignment of the text in the shape."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Shape", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "Shape", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "Shape", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setLinkSlide", "parameters": [{"name": "slideIndex", "type": "Integer"}], "result": "Link", "description": "Sets a Link to the given Slide using the zero-based index of the slide."}, {"name": "setLinkSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "Link", "description": "Sets a Link to the given Slide, the link is set by the given slide ID."}, {"name": "setLinkSlide", "parameters": [{"name": "slidePosition", "type": "SlidePosition"}], "result": "Link", "description": "Sets a Link to the given Slide using the relative position of the slide."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Link", "description": "Sets a Link to the given non-empty URL string."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "Shape", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Shape", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "Shape", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Shape", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Shape", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/text-style", "name": "TextStyle", "type": "class", "methods": [{"name": "getBackgroundColor", "parameters": [], "result": "Color", "description": "Returns the background color of the text, or null if there are multiple styles on the\ntext."}, {"name": "getBaselineOffset", "parameters": [], "result": "TextBaselineOffset", "description": "Returns the vertical offset of text from its normal position, or null if there are\nmultiple styles on the text."}, {"name": "getFontFamily", "parameters": [], "result": "String", "description": "Returns the font family of the text, or null if there are multiple styles on the text."}, {"name": "getFontSize", "parameters": [], "result": "Number", "description": "Returns the font size of the text in points, or null if there are multiple styles on\nthe text."}, {"name": "getFontWeight", "parameters": [], "result": "Integer", "description": "Returns the font weight of the text, or null if there are multiple styles on the text."}, {"name": "getForegroundColor", "parameters": [], "result": "Color", "description": "Returns the foreground color of the text, or null if there are multiple styles on the\ntext."}, {"name": "getLink", "parameters": [], "result": "Link", "description": "Returns the Link on the text, or null if there is no link or if the link is on\npart of the text or if there are multiple links."}, {"name": "hasLink", "parameters": [], "result": "Boolean", "description": "Returns true if there is link on the text, false if not, or null if the\nlink is on part of the text or there are multiple links."}, {"name": "isBackgroundTransparent", "parameters": [], "result": "Boolean", "description": "Returns true if the background of the text is transparent, false if not, or\nnull if there are multiple styles on the text."}, {"name": "isBold", "parameters": [], "result": "Boolean", "description": "Returns true if the text is rendered as bold, false if not, or null if\nthere are multiple styles on the text."}, {"name": "isItalic", "parameters": [], "result": "Boolean", "description": "Returns true if the text is italicized, false if not, or null if there\nare multiple styles on the text."}, {"name": "isSmallCaps", "parameters": [], "result": "Boolean", "description": "Returns true if the text is in small capital letters, false if not, or null if there are multiple styles on the text."}, {"name": "isStrikethrough", "parameters": [], "result": "Boolean", "description": "Returns true if the text is struck through, false if not, or null if\nthere are multiple styles on the text."}, {"name": "isUnderline", "parameters": [], "result": "Boolean", "description": "Returns true if the text is underlined, false if not, or null if there\nare multiple styles on the text."}, {"name": "removeLink", "parameters": [], "result": "TextStyle", "description": "Removes a Link."}, {"name": "setBackgroundColor", "parameters": [{"name": "color", "type": "Color"}], "result": "TextStyle", "description": "Sets the background color of the text."}, {"name": "setBackgroundColor", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "TextStyle", "description": "Sets the background color of the text to the given RGB values from 0 to 255."}, {"name": "setBackgroundColor", "parameters": [{"name": "hexColor", "type": "String"}], "result": "TextStyle", "description": "Sets the background color of the text to the given hex color string."}, {"name": "setBackgroundColor", "parameters": [{"name": "color", "type": "ThemeColorType"}], "result": "TextStyle", "description": "Sets the background color of the text to the given ThemeColorType."}, {"name": "setBackgroundColorTransparent", "parameters": [], "result": "TextStyle", "description": "Sets the background color of the text to transparent."}, {"name": "setBaselineOffset", "parameters": [{"name": "offset", "type": "TextBaselineOffset"}], "result": "TextStyle", "description": "Sets the vertical offset of the text relative to its normal position."}, {"name": "setBold", "parameters": [{"name": "bold", "type": "Boolean"}], "result": "TextStyle", "description": "Sets whether the text should be rendered as bold."}, {"name": "setFontFamily", "parameters": [{"name": "fontFamily", "type": "String"}], "result": "TextStyle", "description": "Sets the font family of the text ."}, {"name": "setFontFamilyAndWeight", "parameters": [{"name": "fontFamily", "type": "String"}, {"name": "fontWeight", "type": "Integer"}], "result": "TextStyle", "description": "Sets the font family and weight of the text."}, {"name": "setFontSize", "parameters": [{"name": "fontSize", "type": "Number"}], "result": "TextStyle", "description": "Sets the font size of the text, in points."}, {"name": "setForegroundColor", "parameters": [{"name": "foregroundColor", "type": "Color"}], "result": "TextStyle", "description": "Sets the foreground color of the text."}, {"name": "setForegroundColor", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "TextStyle", "description": "Sets the foreground color of the text to the given RGB values from 0 to 255."}, {"name": "setForegroundColor", "parameters": [{"name": "hexColor", "type": "String"}], "result": "TextStyle", "description": "Sets the foreground color of the text to the given hex color string."}, {"name": "setForegroundColor", "parameters": [{"name": "color", "type": "ThemeColorType"}], "result": "TextStyle", "description": "Sets the foreground color of the text to the given ThemeColorType."}, {"name": "setItalic", "parameters": [{"name": "italic", "type": "Boolean"}], "result": "TextStyle", "description": "Sets the whether the text is italicized."}, {"name": "setLinkSlide", "parameters": [{"name": "slideIndex", "type": "Integer"}], "result": "TextStyle", "description": "Sets a Link to the given Slide using the zero-based index of the slide."}, {"name": "setLinkSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "TextStyle", "description": "Sets a Link to the given Slide, the link is set by the given slide ID."}, {"name": "setLinkSlide", "parameters": [{"name": "slidePosition", "type": "SlidePosition"}], "result": "TextStyle", "description": "Sets a Link to the given Slide using the relative position of the slide."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "TextStyle", "description": "Sets a Link to the given non-empty URL string."}, {"name": "setSmallCaps", "parameters": [{"name": "smallCaps", "type": "Boolean"}], "result": "TextStyle", "description": "Sets whether the text is rendered in small capital letters."}, {"name": "setStrikethrough", "parameters": [{"name": "strikethrough", "type": "Boolean"}], "result": "TextStyle", "description": "Sets whether the text is struck through."}, {"name": "setUnderline", "parameters": [{"name": "underline", "type": "Boolean"}], "result": "TextStyle", "description": "Sets whether the text is underlined."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/selection", "name": "Selection", "type": "class", "methods": [{"name": "getCurrentPage", "parameters": [], "result": "Page", "description": "Returns the currently active Page or null if there is no active page."}, {"name": "getPageElementRange", "parameters": [], "result": "PageElementRange", "description": "Returns the PageElementRange collection of PageElement instances that are\nselected or null if there are no PageElement instances selected."}, {"name": "getPageRange", "parameters": [], "result": "PageRange", "description": "Returns the PageRange a collection of Page instances in the flimstrip that are\nselected or null if the selection is not of type SelectionType.PAGE."}, {"name": "getSelectionType", "parameters": [], "result": "SelectionType", "description": "Returns the SelectionType."}, {"name": "getTableCellRange", "parameters": [], "result": "TableCellRange", "description": "Returns the TableCellRange collection of TableCell instances that are selected\nor null if there are no TableCell instances selected."}, {"name": "getTextRange", "parameters": [], "result": "TextRange", "description": "Returns the TextRange that is selected or null if the selection is not of type\nSelectionType.TEXT."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/presentation", "name": "Presentation", "type": "class", "methods": [{"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Presentation", "description": "Adds the given user to the list of editors for the Presentation."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Presentation", "description": "Adds the given user to the list of editors for the Presentation."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Presentation", "description": "Adds the given array of users to the list of editors for the Presentation."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Presentation", "description": "Adds the given user to the list of viewers for the Presentation."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Presentation", "description": "Adds the given user to the list of viewers for the Presentation."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Presentation", "description": "Adds the given array of users to the list of viewers for the Presentation."}, {"name": "appendSlide", "parameters": [], "result": "Slide", "description": "Appends a slide to the end of the presentation using the PredefinedLayout.BLANK\npredefined layout based on the current master."}, {"name": "appendSlide", "parameters": [{"name": "layout", "type": "Layout"}], "result": "Slide", "description": "Appends a slide to the end of the presentation using the specified layout based on the current\nmaster."}, {"name": "appendSlide", "parameters": [{"name": "predefinedLayout", "type": "PredefinedLayout"}], "result": "Slide", "description": "Appends a slide to the end of the presentation using the specified predefined layout based on\nthe current master."}, {"name": "appendSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "Slide", "description": "Appends a copy of the provided Slide to the end of the presentation."}, {"name": "appendSlide", "parameters": [{"name": "slide", "type": "Slide"}, {"name": "linkingMode", "type": "SlideLinkingMode"}], "result": "Slide", "description": "Appends a copy of the provided Slide from the source presentation to the end of the\ncurrent presentation, and sets the slide link as specified by the SlideLinkingMode."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Presentation."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the presentation's unique identifier."}, {"name": "getLayouts", "parameters": [], "result": "Layout[]", "description": "Gets the layouts in the presentation."}, {"name": "getMasters", "parameters": [], "result": "Master[]", "description": "Gets the masters in the presentation."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name or title of the presentation."}, {"name": "getNotesMaster", "parameters": [], "result": "NotesMaster", "description": "Gets the notes master of the presentation."}, {"name": "getNotesPageHeight", "parameters": [], "result": "Number", "description": "Gets the page height of the notes master and notes pages in the presentation in points."}, {"name": "getNotesPageWidth", "parameters": [], "result": "Number", "description": "Gets the page width of the notes master and notes pages in the presentation in points."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement with the given ID, or null if none exists."}, {"name": "getPageHeight", "parameters": [], "result": "Number", "description": "Gets the page height of the slides, layouts, and masters in the presentation in points."}, {"name": "getPageWidth", "parameters": [], "result": "Number", "description": "Gets the page width of the slides, layouts, and masters in the presentation in points."}, {"name": "getSelection", "parameters": [], "result": "Selection", "description": "Gets the user\u2019s selection in the active presentation."}, {"name": "getSlideById", "parameters": [{"name": "id", "type": "String"}], "result": "Slide", "description": "Returns the Slide with the given ID, or null if none exists."}, {"name": "getSlides", "parameters": [], "result": "Slide[]", "description": "Gets the slides in the presentation."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Retrieves the URL to access this presentation."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this Presentation."}, {"name": "insertSlide", "parameters": [{"name": "insertionIndex", "type": "Integer"}], "result": "Slide", "description": "Inserts a slide at the specified index in the presentation using the PredefinedLayout.BLANK predefined layout based on the current master."}, {"name": "insertSlide", "parameters": [{"name": "insertionIndex", "type": "Integer"}, {"name": "layout", "type": "Layout"}], "result": "Slide", "description": "Inserts a slide at the specified index in the presentation using the specified layout based on\nthe current master."}, {"name": "insertSlide", "parameters": [{"name": "insertionIndex", "type": "Integer"}, {"name": "predefinedLayout", "type": "PredefinedLayout"}], "result": "Slide", "description": "Inserts a slide at the specified index in the presentation using the specified predefined\nlayout based on the current master."}, {"name": "insertSlide", "parameters": [{"name": "insertionIndex", "type": "Integer"}, {"name": "slide", "type": "Slide"}], "result": "Slide", "description": "Inserts a copy of the provided Slide at the specified index in the presentation."}, {"name": "insertSlide", "parameters": [{"name": "insertionIndex", "type": "Integer"}, {"name": "slide", "type": "Slide"}, {"name": "linkingMode", "type": "SlideLinkingMode"}], "result": "Slide", "description": "Inserts a copy of the provided Slide from the source presentation into the specified\nindex in the current presentation, and sets the slide link as specified by the SlideLinkingMode."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Presentation", "description": "Removes the given user from the list of editors for the Presentation."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Presentation", "description": "Removes the given user from the list of editors for the Presentation."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Presentation", "description": "Removes the given user from the list of viewers and commenters for the Presentation."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Presentation", "description": "Removes the given user from the list of viewers and commenters for the Presentation."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "saveAndClose", "parameters": [], "result": "void", "description": "Saves the current Presentation."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "Sets the name or title of the presentation."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/paragraph-style", "name": "ParagraphStyle", "type": "class", "methods": [{"name": "getIndentEnd", "parameters": [], "result": "Number", "description": "Returns the text end indentation for paragraphs in the TextRange in points, or null if there are multiple paragraph styles on the given text."}, {"name": "getIndentFirstLine", "parameters": [], "result": "Number", "description": "Returns the indentation for the first line of paragraphs in the TextRange in points, or\nnull if there are multiple paragraph styles on the given text."}, {"name": "getIndentStart", "parameters": [], "result": "Number", "description": "Returns the text start indentation for paragraphs in the TextRange in points, or null if there are multiple paragraph styles on the given text."}, {"name": "getLineSpacing", "parameters": [], "result": "Number", "description": "Returns the line spacing, or null if there are multiple paragraph styles on the given\ntext."}, {"name": "getParagraphAlignment", "parameters": [], "result": "ParagraphAlignment", "description": "Returns the ParagraphAlignment of paragraphs in the TextRange, or null\nif there are multiple paragraph styles on the given text."}, {"name": "getSpaceAbove", "parameters": [], "result": "Number", "description": "Returns the extra space above paragraphs in the TextRange in points, or null if\nthere are multiple paragraph styles on the given text."}, {"name": "getSpaceBelow", "parameters": [], "result": "Number", "description": "Returns the extra space below paragraphs in the TextRange in points, or null if\nthere are multiple paragraph styles on the given text."}, {"name": "getSpacingMode", "parameters": [], "result": "SpacingMode", "description": "Returns the SpacingMode for paragraphs in the TextRange, or null if\nthere are multiple paragraph styles on the given text."}, {"name": "getTextDirection", "parameters": [], "result": "TextDirection", "description": "Returns the TextDirection for paragraphs in the TextRange, or null if\nthere are multiple paragraph styles on the given text."}, {"name": "setIndentEnd", "parameters": [{"name": "indent", "type": "Number"}], "result": "ParagraphStyle", "description": "Sets the text end indentation for paragraphs in the TextRange in points."}, {"name": "setIndentFirstLine", "parameters": [{"name": "indent", "type": "Number"}], "result": "ParagraphStyle", "description": "Sets the indentation for the first line of paragraphs in the TextRange in points."}, {"name": "setIndentStart", "parameters": [{"name": "indent", "type": "Number"}], "result": "ParagraphStyle", "description": "Sets the text start indentation for paragraphs in the TextRange in points."}, {"name": "setLineSpacing", "parameters": [{"name": "spacing", "type": "Number"}], "result": "ParagraphStyle", "description": "Sets the line spacing."}, {"name": "setParagraphAlignment", "parameters": [{"name": "alignment", "type": "ParagraphAlignment"}], "result": "ParagraphStyle", "description": "Sets the ParagraphAlignment of paragraphs in the TextRange."}, {"name": "setSpaceAbove", "parameters": [{"name": "space", "type": "Number"}], "result": "ParagraphStyle", "description": "Sets the extra space above paragraphs in the TextRange in points."}, {"name": "setSpaceBelow", "parameters": [{"name": "space", "type": "Number"}], "result": "ParagraphStyle", "description": "Sets the extra space below paragraphs in the TextRange in points."}, {"name": "setSpacingMode", "parameters": [{"name": "mode", "type": "SpacingMode"}], "result": "ParagraphStyle", "description": "Sets the SpacingMode for paragraphs in the TextRange."}, {"name": "setTextDirection", "parameters": [{"name": "direction", "type": "TextDirection"}], "result": "ParagraphStyle", "description": "Sets the TextDirection for paragraphs in the TextRange."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/page-range", "name": "PageRange", "type": "class", "methods": [{"name": "getPages", "parameters": [], "result": "Page[]", "description": "Returns the list of Page instances."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/paragraph", "name": "Paragraph", "type": "class", "methods": [{"name": "getIndex", "parameters": [], "result": "Integer", "description": "Returns the index of the paragraph's newline."}, {"name": "getRange", "parameters": [], "result": "TextRange", "description": "Returns a TextRange spanning the text in the paragraph ended by this object's newline\ncharacter."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/point", "name": "Point", "type": "class", "methods": [{"name": "getX", "parameters": [], "result": "Number", "description": "Gets the horizontal coordinate, measured in points."}, {"name": "getY", "parameters": [], "result": "Number", "description": "Gets the vertical coordinate, measured in points."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/page-element-range", "name": "PageElementRange", "type": "class", "methods": [{"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement instances."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/picture-fill", "name": "PictureFill", "type": "class", "methods": [{"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getContentUrl", "parameters": [], "result": "String", "description": "Gets a URL to the image."}, {"name": "getSourceUrl", "parameters": [], "result": "String", "description": "Gets the image's source URL, if available."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/page-element", "name": "PageElement", "type": "class", "methods": [{"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "PageElement", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "asGroup", "parameters": [], "result": "Group", "description": "Returns the page element as a group."}, {"name": "asImage", "parameters": [], "result": "Image", "description": "Returns the page element as an image."}, {"name": "asLine", "parameters": [], "result": "Line", "description": "Returns the page element as a line."}, {"name": "asShape", "parameters": [], "result": "Shape", "description": "Returns the page element as a shape."}, {"name": "asSheetsChart", "parameters": [], "result": "SheetsChart", "description": "Returns the page element as a linked chart embedded from Google Sheets."}, {"name": "asTable", "parameters": [], "result": "Table", "description": "Returns the page element as a table."}, {"name": "asVideo", "parameters": [], "result": "Video", "description": "Returns the page element as a video."}, {"name": "asWordArt", "parameters": [], "result": "WordArt", "description": "Returns the page element as word art."}, {"name": "bringForward", "parameters": [], "result": "PageElement", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "PageElement", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "PageElement", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "PageElement", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "PageElement", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "PageElement", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "PageElement", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "PageElement", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "PageElement", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "PageElement", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "PageElement", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "PageElement", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "PageElement", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "PageElement", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "PageElement", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/page-background", "name": "PageBackground", "type": "class", "methods": [{"name": "getPictureFill", "parameters": [], "result": "PictureFill", "description": "Get the stretched picture fill of this background, or null if the background fill type\nis not PageBackgroundType.PICTURE."}, {"name": "getSolidFill", "parameters": [], "result": "SolidFill", "description": "Get the solid fill of this background, or null if the background fill type is not\nPageBackgroundType.SOLID."}, {"name": "getType", "parameters": [], "result": "PageBackgroundType", "description": "Get the type of this page background."}, {"name": "isVisible", "parameters": [], "result": "Boolean", "description": "Whether the background is visible."}, {"name": "setPictureFill", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "void", "description": "Sets an image from the specified image blob as the page background."}, {"name": "setPictureFill", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "void", "description": "Sets the image at the provided URL as the page background."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "Color"}], "result": "void", "description": "Sets the solid fill to the given Color."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "Color"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and Color."}, {"name": "setSolidFill", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "void", "description": "Sets the solid fill to the given RGB values."}, {"name": "setSolidFill", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and RGB values."}, {"name": "setSolidFill", "parameters": [{"name": "hexString", "type": "String"}], "result": "void", "description": "Sets the solid fill to the given hex color string."}, {"name": "setSolidFill", "parameters": [{"name": "hexString", "type": "String"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and hex color string."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "ThemeColorType"}], "result": "void", "description": "Sets the solid fill to the given ThemeColorType."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "ThemeColorType"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and ThemeColorType."}, {"name": "setTransparent", "parameters": [], "result": "void", "description": "Sets the background to transparent."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/notes-page", "name": "NotesPage", "type": "class", "methods": [{"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Returns the list of Group objects on the page."}, {"name": "getImages", "parameters": [], "result": "Image[]", "description": "Returns the list of Image objects on the page."}, {"name": "getLines", "parameters": [], "result": "Line[]", "description": "Returns the list of Line objects on the page."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Gets the unique ID for the page."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement on the page with the given ID, or null if none exists."}, {"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement objects rendered on the page."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType or\nnull if a matching placeholder is not present."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}, {"name": "placeholderIndex", "type": "Integer"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType and\na placeholder index, or null if the placeholder is not present."}, {"name": "getPlaceholders", "parameters": [], "result": "PageElement[]", "description": "Returns the list of placeholder PageElement objects in the page."}, {"name": "getShapes", "parameters": [], "result": "Shape[]", "description": "Returns the list of Shape objects on the page."}, {"name": "getSheetsCharts", "parameters": [], "result": "SheetsChart[]", "description": "Returns the list of SheetsChart objects on the page."}, {"name": "getSpeakerNotesShape", "parameters": [], "result": "Shape", "description": "Gets the shape containing the speaker notes on the page."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Returns the list of Table objects on the page."}, {"name": "getVideos", "parameters": [], "result": "Video[]", "description": "Returns the list of Video objects on the page."}, {"name": "getWordArts", "parameters": [], "result": "WordArt[]", "description": "Returns the list of WordArt objects on the page."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/notes-master", "name": "NotesMaster", "type": "class", "methods": [{"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Returns the list of Group objects on the page."}, {"name": "getImages", "parameters": [], "result": "Image[]", "description": "Returns the list of Image objects on the page."}, {"name": "getLines", "parameters": [], "result": "Line[]", "description": "Returns the list of Line objects on the page."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Gets the unique ID for the page."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement on the page with the given ID, or null if none exists."}, {"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement objects rendered on the page."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType or\nnull if a matching placeholder is not present."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}, {"name": "placeholderIndex", "type": "Integer"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType and\na placeholder index, or null if the placeholder is not present."}, {"name": "getPlaceholders", "parameters": [], "result": "PageElement[]", "description": "Returns the list of placeholder PageElement objects in the page."}, {"name": "getShapes", "parameters": [], "result": "Shape[]", "description": "Returns the list of Shape objects on the page."}, {"name": "getSheetsCharts", "parameters": [], "result": "SheetsChart[]", "description": "Returns the list of SheetsChart objects on the page."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Returns the list of Table objects on the page."}, {"name": "getVideos", "parameters": [], "result": "Video[]", "description": "Returns the list of Video objects on the page."}, {"name": "getWordArts", "parameters": [], "result": "WordArt[]", "description": "Returns the list of WordArt objects on the page."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/master", "name": "Master", "type": "class", "methods": [{"name": "getBackground", "parameters": [], "result": "PageBackground", "description": "Gets the page's background."}, {"name": "getColorScheme", "parameters": [], "result": "ColorScheme", "description": "Gets the ColorScheme associated with the page."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Returns the list of Group objects on the page."}, {"name": "getImages", "parameters": [], "result": "Image[]", "description": "Returns the list of Image objects on the page."}, {"name": "getLayouts", "parameters": [], "result": "Layout[]", "description": "Gets this master's layouts."}, {"name": "getLines", "parameters": [], "result": "Line[]", "description": "Returns the list of Line objects on the page."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Gets the unique ID for the page."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement on the page with the given ID, or null if none exists."}, {"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement objects rendered on the page."}, {"name": "getPageType", "parameters": [], "result": "PageType", "description": "Gets the type of the page."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType or\nnull if a matching placeholder is not present."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}, {"name": "placeholderIndex", "type": "Integer"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType and\na placeholder index, or null if the placeholder is not present."}, {"name": "getPlaceholders", "parameters": [], "result": "PageElement[]", "description": "Returns the list of placeholder PageElement objects in the page."}, {"name": "getShapes", "parameters": [], "result": "Shape[]", "description": "Returns the list of Shape objects on the page."}, {"name": "getSheetsCharts", "parameters": [], "result": "SheetsChart[]", "description": "Returns the list of SheetsChart objects on the page."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Returns the list of Table objects on the page."}, {"name": "getVideos", "parameters": [], "result": "Video[]", "description": "Returns the list of Video objects on the page."}, {"name": "getWordArts", "parameters": [], "result": "WordArt[]", "description": "Returns the list of WordArt objects on the page."}, {"name": "group", "parameters": [{"name": "pageElements", "type": "PageElement"}], "result": "Group", "description": "Groups all the specified page elements."}, {"name": "insertGroup", "parameters": [{"name": "group", "type": "Group"}], "result": "Group", "description": "Inserts a copy of the provided Group on the page."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the specified\nimage blob."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the specified image blob."}, {"name": "insertImage", "parameters": [{"name": "image", "type": "Image"}], "result": "Image", "description": "Inserts a copy of the provided Image on the page."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the provided URL."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the provided URL."}, {"name": "insertLine", "parameters": [{"name": "line", "type": "Line"}], "result": "Line", "description": "Inserts a copy of the provided Line on the page."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startConnectionSite", "type": "ConnectionSite"}, {"name": "endConnectionSite", "type": "ConnectionSite"}], "result": "Line", "description": "Inserts a line on the page connecting two connection sites."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startLeft", "type": "Number"}, {"name": "startTop", "type": "Number"}, {"name": "endLeft", "type": "Number"}, {"name": "endTop", "type": "Number"}], "result": "Line", "description": "Inserts a line on the page."}, {"name": "insertPageElement", "parameters": [{"name": "pageElement", "type": "PageElement"}], "result": "PageElement", "description": "Inserts a copy of the provided PageElement on the page."}, {"name": "insertShape", "parameters": [{"name": "shape", "type": "Shape"}], "result": "Shape", "description": "Inserts a copy of the provided Shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page with the provided position and size."}, {"name": "insertSheetsChart", "parameters": [{"name": "sheetsChart", "type": "SheetsChart"}], "result": "SheetsChart", "description": "Inserts a copy of the provided SheetsChart on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page with the provided position and\nsize."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Table", "description": "Inserts a table on the page."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Table", "description": "Inserts a table on the page with the provided position and size."}, {"name": "insertTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts a copy of the provided Table on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}], "result": "Video", "description": "Inserts a video at the top left corner of the page with a default size."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Video", "description": "Inserts a video on the page with the provided position and size."}, {"name": "insertVideo", "parameters": [{"name": "video", "type": "Video"}], "result": "Video", "description": "Inserts a copy of the provided Video on the page."}, {"name": "insertWordArt", "parameters": [{"name": "wordArt", "type": "WordArt"}], "result": "WordArt", "description": "Inserts a copy of the provided WordArt on the page."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "selectAsCurrentPage", "parameters": [], "result": "void", "description": "Selects the Page in the active presentation as the current page selection and removes any previous selection."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/list-style", "name": "ListStyle", "type": "class", "methods": [{"name": "applyListPreset", "parameters": [{"name": "listPreset", "type": "ListPreset"}], "result": "ListStyle", "description": "Applies the specified ListPreset to all of the paragraphs that overlap with the text."}, {"name": "getGlyph", "parameters": [], "result": "String", "description": "Returns the rendered glyph for the text."}, {"name": "getList", "parameters": [], "result": "List", "description": "Returns the List the text is in, or null if none of the text is in a list, or\npart of the text is in a list, or the text is in multiple lists."}, {"name": "getNestingLevel", "parameters": [], "result": "Integer", "description": "Returns the 0-based nesting level of the text."}, {"name": "isInList", "parameters": [], "result": "Boolean", "description": "Returns true if the text is in exactly one list, false if none of the text is\nin a list, and null if only some of the text is in a list or if the text is in multiple\nlists."}, {"name": "removeFromList", "parameters": [], "result": "ListStyle", "description": "Removes the paragraphs that overlap with the text from any lists."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/page", "name": "Page", "type": "class", "methods": [{"name": "asLayout", "parameters": [], "result": "Layout", "description": "Returns the page as a layout."}, {"name": "asMaster", "parameters": [], "result": "Master", "description": "Returns the page as a master."}, {"name": "asSlide", "parameters": [], "result": "Slide", "description": "Returns the page as a slide."}, {"name": "getBackground", "parameters": [], "result": "PageBackground", "description": "Gets the page's background."}, {"name": "getColorScheme", "parameters": [], "result": "ColorScheme", "description": "Gets the ColorScheme associated with the page."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Returns the list of Group objects on the page."}, {"name": "getImages", "parameters": [], "result": "Image[]", "description": "Returns the list of Image objects on the page."}, {"name": "getLines", "parameters": [], "result": "Line[]", "description": "Returns the list of Line objects on the page."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Gets the unique ID for the page."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement on the page with the given ID, or null if none exists."}, {"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement objects rendered on the page."}, {"name": "getPageType", "parameters": [], "result": "PageType", "description": "Gets the type of the page."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType or\nnull if a matching placeholder is not present."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}, {"name": "placeholderIndex", "type": "Integer"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType and\na placeholder index, or null if the placeholder is not present."}, {"name": "getPlaceholders", "parameters": [], "result": "PageElement[]", "description": "Returns the list of placeholder PageElement objects in the page."}, {"name": "getShapes", "parameters": [], "result": "Shape[]", "description": "Returns the list of Shape objects on the page."}, {"name": "getSheetsCharts", "parameters": [], "result": "SheetsChart[]", "description": "Returns the list of SheetsChart objects on the page."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Returns the list of Table objects on the page."}, {"name": "getVideos", "parameters": [], "result": "Video[]", "description": "Returns the list of Video objects on the page."}, {"name": "getWordArts", "parameters": [], "result": "WordArt[]", "description": "Returns the list of WordArt objects on the page."}, {"name": "group", "parameters": [{"name": "pageElements", "type": "PageElement"}], "result": "Group", "description": "Groups all the specified page elements."}, {"name": "insertGroup", "parameters": [{"name": "group", "type": "Group"}], "result": "Group", "description": "Inserts a copy of the provided Group on the page."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the specified\nimage blob."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the specified image blob."}, {"name": "insertImage", "parameters": [{"name": "image", "type": "Image"}], "result": "Image", "description": "Inserts a copy of the provided Image on the page."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the provided URL."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the provided URL."}, {"name": "insertLine", "parameters": [{"name": "line", "type": "Line"}], "result": "Line", "description": "Inserts a copy of the provided Line on the page."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startConnectionSite", "type": "ConnectionSite"}, {"name": "endConnectionSite", "type": "ConnectionSite"}], "result": "Line", "description": "Inserts a line on the page connecting two connection sites."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startLeft", "type": "Number"}, {"name": "startTop", "type": "Number"}, {"name": "endLeft", "type": "Number"}, {"name": "endTop", "type": "Number"}], "result": "Line", "description": "Inserts a line on the page."}, {"name": "insertPageElement", "parameters": [{"name": "pageElement", "type": "PageElement"}], "result": "PageElement", "description": "Inserts a copy of the provided PageElement on the page."}, {"name": "insertShape", "parameters": [{"name": "shape", "type": "Shape"}], "result": "Shape", "description": "Inserts a copy of the provided Shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page with the provided position and size."}, {"name": "insertSheetsChart", "parameters": [{"name": "sheetsChart", "type": "SheetsChart"}], "result": "SheetsChart", "description": "Inserts a copy of the provided SheetsChart on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page with the provided position and\nsize."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Table", "description": "Inserts a table on the page."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Table", "description": "Inserts a table on the page with the provided position and size."}, {"name": "insertTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts a copy of the provided Table on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}], "result": "Video", "description": "Inserts a video at the top left corner of the page with a default size."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Video", "description": "Inserts a video on the page with the provided position and size."}, {"name": "insertVideo", "parameters": [{"name": "video", "type": "Video"}], "result": "Video", "description": "Inserts a copy of the provided Video on the page."}, {"name": "insertWordArt", "parameters": [{"name": "wordArt", "type": "WordArt"}], "result": "WordArt", "description": "Inserts a copy of the provided WordArt on the page."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "selectAsCurrentPage", "parameters": [], "result": "void", "description": "Selects the Page in the active presentation as the current page selection and removes any previous selection."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/link", "name": "Link", "type": "class", "methods": [{"name": "getLinkType", "parameters": [], "result": "LinkType", "description": "Returns the LinkType."}, {"name": "getLinkedSlide", "parameters": [], "result": "Slide", "description": "Returns the linked Slide for non-URL links types, if it exists."}, {"name": "getSlideId", "parameters": [], "result": "String", "description": "Returns the ID of the linked Slide or null if the LinkType is not\nLinkType.SLIDE_ID."}, {"name": "getSlideIndex", "parameters": [], "result": "Integer", "description": "Returns the zero-based index of the linked Slide or null if the LinkType is not LinkType.SLIDE_INDEX."}, {"name": "getSlidePosition", "parameters": [], "result": "SlidePosition", "description": "Returns the SlidePosition of the linked Slide or null if the LinkType is not LinkType.SLIDE_POSITION."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Returns the URL to the external web page or null if the LinkType is not LinkType.URL."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/line-fill", "name": "LineFill", "type": "class", "methods": [{"name": "getFillType", "parameters": [], "result": "LineFillType", "description": "Gets the type of the line fill."}, {"name": "getSolidFill", "parameters": [], "result": "SolidFill", "description": "Gets the solid fill of the line, or null if the fill type is not LineFillType.SOLID."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "Color"}], "result": "void", "description": "Sets the solid fill to the given Color."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "Color"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and Color."}, {"name": "setSolidFill", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "void", "description": "Sets the solid fill to the given RGB values."}, {"name": "setSolidFill", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and RGB values."}, {"name": "setSolidFill", "parameters": [{"name": "hexString", "type": "String"}], "result": "void", "description": "Sets the solid fill to the given hex color string."}, {"name": "setSolidFill", "parameters": [{"name": "hexString", "type": "String"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and hex color string."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "ThemeColorType"}], "result": "void", "description": "Sets the solid fill to the given ThemeColorType."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "ThemeColorType"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and ThemeColorType."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/layout", "name": "Layout", "type": "class", "methods": [{"name": "getBackground", "parameters": [], "result": "PageBackground", "description": "Gets the page's background."}, {"name": "getColorScheme", "parameters": [], "result": "ColorScheme", "description": "Gets the ColorScheme associated with the page."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Returns the list of Group objects on the page."}, {"name": "getImages", "parameters": [], "result": "Image[]", "description": "Returns the list of Image objects on the page."}, {"name": "getLayoutName", "parameters": [], "result": "String", "description": "Gets the name of the layout."}, {"name": "getLines", "parameters": [], "result": "Line[]", "description": "Returns the list of Line objects on the page."}, {"name": "getMaster", "parameters": [], "result": "Master", "description": "Gets the master that the layout is based on."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Gets the unique ID for the page."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement on the page with the given ID, or null if none exists."}, {"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement objects rendered on the page."}, {"name": "getPageType", "parameters": [], "result": "PageType", "description": "Gets the type of the page."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType or\nnull if a matching placeholder is not present."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}, {"name": "placeholderIndex", "type": "Integer"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType and\na placeholder index, or null if the placeholder is not present."}, {"name": "getPlaceholders", "parameters": [], "result": "PageElement[]", "description": "Returns the list of placeholder PageElement objects in the page."}, {"name": "getShapes", "parameters": [], "result": "Shape[]", "description": "Returns the list of Shape objects on the page."}, {"name": "getSheetsCharts", "parameters": [], "result": "SheetsChart[]", "description": "Returns the list of SheetsChart objects on the page."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Returns the list of Table objects on the page."}, {"name": "getVideos", "parameters": [], "result": "Video[]", "description": "Returns the list of Video objects on the page."}, {"name": "getWordArts", "parameters": [], "result": "WordArt[]", "description": "Returns the list of WordArt objects on the page."}, {"name": "group", "parameters": [{"name": "pageElements", "type": "PageElement"}], "result": "Group", "description": "Groups all the specified page elements."}, {"name": "insertGroup", "parameters": [{"name": "group", "type": "Group"}], "result": "Group", "description": "Inserts a copy of the provided Group on the page."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the specified\nimage blob."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the specified image blob."}, {"name": "insertImage", "parameters": [{"name": "image", "type": "Image"}], "result": "Image", "description": "Inserts a copy of the provided Image on the page."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the provided URL."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the provided URL."}, {"name": "insertLine", "parameters": [{"name": "line", "type": "Line"}], "result": "Line", "description": "Inserts a copy of the provided Line on the page."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startConnectionSite", "type": "ConnectionSite"}, {"name": "endConnectionSite", "type": "ConnectionSite"}], "result": "Line", "description": "Inserts a line on the page connecting two connection sites."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startLeft", "type": "Number"}, {"name": "startTop", "type": "Number"}, {"name": "endLeft", "type": "Number"}, {"name": "endTop", "type": "Number"}], "result": "Line", "description": "Inserts a line on the page."}, {"name": "insertPageElement", "parameters": [{"name": "pageElement", "type": "PageElement"}], "result": "PageElement", "description": "Inserts a copy of the provided PageElement on the page."}, {"name": "insertShape", "parameters": [{"name": "shape", "type": "Shape"}], "result": "Shape", "description": "Inserts a copy of the provided Shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page with the provided position and size."}, {"name": "insertSheetsChart", "parameters": [{"name": "sheetsChart", "type": "SheetsChart"}], "result": "SheetsChart", "description": "Inserts a copy of the provided SheetsChart on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page with the provided position and\nsize."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Table", "description": "Inserts a table on the page."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Table", "description": "Inserts a table on the page with the provided position and size."}, {"name": "insertTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts a copy of the provided Table on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}], "result": "Video", "description": "Inserts a video at the top left corner of the page with a default size."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Video", "description": "Inserts a video on the page with the provided position and size."}, {"name": "insertVideo", "parameters": [{"name": "video", "type": "Video"}], "result": "Video", "description": "Inserts a copy of the provided Video on the page."}, {"name": "insertWordArt", "parameters": [{"name": "wordArt", "type": "WordArt"}], "result": "WordArt", "description": "Inserts a copy of the provided WordArt on the page."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "selectAsCurrentPage", "parameters": [], "result": "void", "description": "Selects the Page in the active presentation as the current page selection and removes any previous selection."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/line", "name": "Line", "type": "class", "methods": [{"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "Line", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "bringForward", "parameters": [], "result": "Line", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "Line", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDashStyle", "parameters": [], "result": "DashStyle", "description": "Gets the DashStyle of the line."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getEnd", "parameters": [], "result": "Point", "description": "Returns the end point of the line, measured from the upper-left corner of the page."}, {"name": "getEndArrow", "parameters": [], "result": "ArrowStyle", "description": "Gets the ArrowStyle of the arrow at the end of the line."}, {"name": "getEndConnection", "parameters": [], "result": "ConnectionSite", "description": "Returns the connection at the end of the line, or null if there is no connection."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getLineCategory", "parameters": [], "result": "LineCategory", "description": "Gets the LineCategory of the line."}, {"name": "getLineFill", "parameters": [], "result": "LineFill", "description": "Gets the LineFill of the line."}, {"name": "getLineType", "parameters": [], "result": "LineType", "description": "Gets the LineType of the line."}, {"name": "getLink", "parameters": [], "result": "Link", "description": "Returns the Link or null if there is no link."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getStart", "parameters": [], "result": "Point", "description": "Returns the start point of the line, measured from the upper-left corner of the page."}, {"name": "getStartArrow", "parameters": [], "result": "ArrowStyle", "description": "Gets the ArrowStyle of the arrow at the beginning of the line."}, {"name": "getStartConnection", "parameters": [], "result": "ConnectionSite", "description": "Returns the connection at the beginning of the line, or null if there is no connection."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWeight", "parameters": [], "result": "Number", "description": "Returns the thickness of the line in points."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "isConnector", "parameters": [], "result": "Boolean", "description": "Returns true if the line is a connector, or false if not."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Line", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "removeLink", "parameters": [], "result": "void", "description": "Removes a Link."}, {"name": "reroute", "parameters": [], "result": "Line", "description": "Reroutes the start and end of the line to the closest two connection sites on the connected\npage elements."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Line", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Line", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "Line", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "Line", "description": "Sends the page element to the back of the page."}, {"name": "setDashStyle", "parameters": [{"name": "style", "type": "DashStyle"}], "result": "Line", "description": "Sets the DashStyle of the line."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Line", "description": "Sets the page element's alt text description."}, {"name": "setEnd", "parameters": [{"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}], "result": "Line", "description": "Sets the position of the end point of the line."}, {"name": "setEnd", "parameters": [{"name": "point", "type": "Point"}], "result": "Line", "description": "Sets the position of the end point of the line."}, {"name": "setEndArrow", "parameters": [{"name": "style", "type": "ArrowStyle"}], "result": "Line", "description": "Sets the ArrowStyle of the arrow at the end of the line."}, {"name": "setEndConnection", "parameters": [{"name": "connectionSite", "type": "ConnectionSite"}], "result": "Line", "description": "Sets the connection at the end of the line."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "Line", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "Line", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setLineCategory", "parameters": [{"name": "lineCategory", "type": "LineCategory"}], "result": "Line", "description": "Sets the LineCategory of the line."}, {"name": "setLinkSlide", "parameters": [{"name": "slideIndex", "type": "Integer"}], "result": "Link", "description": "Sets a Link to the given Slide using the zero-based index of the slide."}, {"name": "setLinkSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "Link", "description": "Sets a Link to the given Slide, the link is set by the given slide ID."}, {"name": "setLinkSlide", "parameters": [{"name": "slidePosition", "type": "SlidePosition"}], "result": "Link", "description": "Sets a Link to the given Slide using the relative position of the slide."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Link", "description": "Sets a Link to the given non-empty URL string."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "Line", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setStart", "parameters": [{"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}], "result": "Line", "description": "Sets the position of the start point of the line."}, {"name": "setStart", "parameters": [{"name": "point", "type": "Point"}], "result": "Line", "description": "Sets the position of the start point of the line."}, {"name": "setStartArrow", "parameters": [{"name": "style", "type": "ArrowStyle"}], "result": "Line", "description": "Sets the ArrowStyle of the arrow at the beginning of the line."}, {"name": "setStartConnection", "parameters": [{"name": "connectionSite", "type": "ConnectionSite"}], "result": "Line", "description": "Sets the connection at the beginning of the line."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Line", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "Line", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Line", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWeight", "parameters": [{"name": "points", "type": "Number"}], "result": "Line", "description": "Sets the thickness of the line in points."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Line", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/list", "name": "List", "type": "class", "methods": [{"name": "getListId", "parameters": [], "result": "String", "description": "Returns the ID of the list."}, {"name": "getListParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Returns all the Paragraphs in the list."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/connection-site", "name": "ConnectionSite", "type": "class", "methods": [{"name": "getIndex", "parameters": [], "result": "Integer", "description": "Returns the index of the connection site."}, {"name": "getPageElement", "parameters": [], "result": "PageElement", "description": "Returns the PageElement that the connection site is on."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/group", "name": "Group", "type": "class", "methods": [{"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "Group", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "bringForward", "parameters": [], "result": "Group", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "Group", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getChildren", "parameters": [], "result": "PageElement[]", "description": "Gets the collection of page elements in the group."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Gets the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Group", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Group", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Group", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "Group", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "Group", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Group", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "Group", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "Group", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "Group", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Group", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "Group", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Group", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Group", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}, {"name": "ungroup", "parameters": [], "result": "void", "description": "Ungroups the elements of the group."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/image", "name": "Image", "type": "class", "methods": [{"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "Image", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "bringForward", "parameters": [], "result": "Image", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "Image", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this image as a blob."}, {"name": "getBorder", "parameters": [], "result": "Border", "description": "Returns the Border of the image."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getContentUrl", "parameters": [], "result": "String", "description": "Gets a URL to the image."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getLink", "parameters": [], "result": "Link", "description": "Returns the Link or null if there is no link."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getSourceUrl", "parameters": [], "result": "String", "description": "Gets the image's source URL, if available."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Image", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "removeLink", "parameters": [], "result": "void", "description": "Removes a Link."}, {"name": "replace", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "Image", "description": "Replaces this image with an image described by a BlobSource object."}, {"name": "replace", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "crop", "type": "Boolean"}], "result": "Image", "description": "Replaces this image with an image described by a Image object, optionally cropping\nthe image to fit."}, {"name": "replace", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "Image", "description": "Replaces this image with another image downloaded from the provided URL."}, {"name": "replace", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "crop", "type": "Boolean"}], "result": "Image", "description": "Replaces this image with another image downloaded from the provided URL, optionally cropping\nthe image to fit."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Image", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Image", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "Image", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "Image", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Image", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "Image", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "Image", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setLinkSlide", "parameters": [{"name": "slideIndex", "type": "Integer"}], "result": "Link", "description": "Sets a Link to the given Slide using the zero-based index of the slide."}, {"name": "setLinkSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "Link", "description": "Sets a Link to the given Slide, the link is set by the given slide ID."}, {"name": "setLinkSlide", "parameters": [{"name": "slidePosition", "type": "SlidePosition"}], "result": "Link", "description": "Sets a Link to the given Slide using the relative position of the slide."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Link", "description": "Sets a Link to the given non-empty URL string."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "Image", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Image", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "Image", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Image", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Image", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/fill", "name": "Fill", "type": "class", "methods": [{"name": "getSolidFill", "parameters": [], "result": "SolidFill", "description": "Get the solid fill of this background, or null if the fill type is not FillType.SOLID."}, {"name": "getType", "parameters": [], "result": "FillType", "description": "Get the type of this fill."}, {"name": "isVisible", "parameters": [], "result": "Boolean", "description": "Whether the background is visible."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "Color"}], "result": "void", "description": "Sets the solid fill to the given Color."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "Color"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and Color."}, {"name": "setSolidFill", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "void", "description": "Sets the solid fill to the given RGB values."}, {"name": "setSolidFill", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and RGB values."}, {"name": "setSolidFill", "parameters": [{"name": "hexString", "type": "String"}], "result": "void", "description": "Sets the solid fill to the given hex color string."}, {"name": "setSolidFill", "parameters": [{"name": "hexString", "type": "String"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and hex color string."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "ThemeColorType"}], "result": "void", "description": "Sets the solid fill to the given ThemeColorType."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "ThemeColorType"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and ThemeColorType."}, {"name": "setTransparent", "parameters": [], "result": "void", "description": "Sets the background to transparent."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/color-scheme", "name": "ColorScheme", "type": "class", "methods": [{"name": "getConcreteColor", "parameters": [{"name": "theme", "type": "ThemeColorType"}], "result": "Color", "description": "Returns the concrete Color associated with the ThemeColorType in this color\nscheme."}, {"name": "getThemeColors", "parameters": [], "result": "ThemeColorType[]", "description": "Returns a list of all possible theme color types in a color scheme."}, {"name": "setConcreteColor", "parameters": [{"name": "type", "type": "ThemeColorType"}, {"name": "color", "type": "Color"}], "result": "ColorScheme", "description": "Sets the concrete color associated with the ThemeColorType in this color scheme to the\ngiven color."}, {"name": "setConcreteColor", "parameters": [{"name": "type", "type": "ThemeColorType"}, {"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "ColorScheme", "description": "Sets the concrete color associated with the ThemeColorType in this color scheme to the\ngiven color in RGB format."}, {"name": "setConcreteColor", "parameters": [{"name": "type", "type": "ThemeColorType"}, {"name": "hexColor", "type": "String"}], "result": "ColorScheme", "description": "Sets the concrete color associated with the ThemeColorType in this color scheme to the\ngiven color in HEX format."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/color", "name": "Color", "type": "class", "methods": [{"name": "asRgbColor", "parameters": [], "result": "RgbColor", "description": "Converts this color to an RgbColor."}, {"name": "asThemeColor", "parameters": [], "result": "ThemeColor", "description": "Converts this color to a ThemeColor."}, {"name": "getColorType", "parameters": [], "result": "ColorType", "description": "Get the type of this color."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/border", "name": "Border", "type": "class", "methods": [{"name": "getDashStyle", "parameters": [], "result": "DashStyle", "description": "Gets the DashStyle of the border."}, {"name": "getLineFill", "parameters": [], "result": "LineFill", "description": "Gets the LineFill of the border."}, {"name": "getWeight", "parameters": [], "result": "Number", "description": "Gets the thickness of the border in points."}, {"name": "isVisible", "parameters": [], "result": "Boolean", "description": "Gets whether the border is visible or not."}, {"name": "setDashStyle", "parameters": [{"name": "style", "type": "DashStyle"}], "result": "Border", "description": "Sets the DashStyle of the border."}, {"name": "setTransparent", "parameters": [], "result": "Border", "description": "Sets the border to be transparent."}, {"name": "setWeight", "parameters": [{"name": "points", "type": "Number"}], "result": "Border", "description": "Sets the thickness of the border in points."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/autofit", "name": "Autofit", "type": "class", "methods": [{"name": "disableAutofit", "parameters": [], "result": "Autofit", "description": "Sets the AutofitType of a shape to AutofitType.NONE."}, {"name": "getAutofitType", "parameters": [], "result": "AutofitType", "description": "Gets the AutofitType of the shape."}, {"name": "getFontScale", "parameters": [], "result": "Number", "description": "Gets the font scale applied to the shape."}, {"name": "getLineSpacingReduction", "parameters": [], "result": "Number", "description": "Gets the line spacing reduction applied to the shape."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/sites/attachment-type", "name": "AttachmentType", "type": "enum", "methods": [], "properties": [{"name": "WEB", "type": "Enum", "url": "", "description": ""}, {"name": "HOSTED", "type": "Enum", "url": "", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/slides/slides-app", "name": "SlidesApp", "type": "class", "methods": [{"name": "create", "parameters": [{"name": "name", "type": "String"}], "result": "Presentation", "description": "Creates and opens a new Presentation."}, {"name": "getActivePresentation", "parameters": [], "result": "Presentation", "description": "Returns the currently active presentation to which the script is container-bound, or null if there is no\nactive presentation."}, {"name": "getUi", "parameters": [], "result": "Ui", "description": "Returns an instance of the presentation's user-interface environment that allows the script to\nadd features like menus, dialogs, and sidebars."}, {"name": "newAffineTransformBuilder", "parameters": [], "result": "AffineTransformBuilder", "description": "Returns a new AffineTransformBuilder to build an AffineTransform."}, {"name": "openById", "parameters": [{"name": "id", "type": "String"}], "result": "Presentation", "description": "Opens the Presentation with the given ID."}, {"name": "openByUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Presentation", "description": "Opens the Presentation with the given URL."}], "properties": [{"name": "AlignmentPosition", "type": "AlignmentPosition", "url": "/apps-script/reference/slides/alignment-position", "description": "An enumeration of the types of alignment positions."}, {"name": "ArrowStyle", "type": "ArrowStyle", "url": "/apps-script/reference/slides/arrow-style", "description": "An enumeration of the different arrow styles that a Line can have."}, {"name": "AutoTextType", "type": "AutoTextType", "url": "/apps-script/reference/slides/auto-text-type", "description": "An enumeration of the types of auto text."}, {"name": "AutofitType", "type": "AutofitType", "url": "/apps-script/reference/slides/autofit-type", "description": "An enumeration of autofit types."}, {"name": "CellMergeState", "type": "CellMergeState", "url": "/apps-script/reference/slides/cell-merge-state", "description": "An enumeration of the different merge states of a table cell."}, {"name": "ColorType", "type": "ColorType", "url": "https://developers.google.com/apps-script/reference/base/color-type.html", "description": "An enumeration of color types."}, {"name": "ContentAlignment", "type": "ContentAlignment", "url": "/apps-script/reference/slides/content-alignment", "description": "An enumeration of values used to specify content alignment."}, {"name": "DashStyle", "type": "DashStyle", "url": "/apps-script/reference/slides/dash-style", "description": "An enumeration of the different dash styles that a Line can have."}, {"name": "FillType", "type": "FillType", "url": "/apps-script/reference/slides/fill-type", "description": "An enumeration of fill types."}, {"name": "LineCategory", "type": "LineCategory", "url": "/apps-script/reference/slides/line-category", "description": "An enumeration of the categories of Line."}, {"name": "LineFillType", "type": "LineFillType", "url": "/apps-script/reference/slides/line-fill-type", "description": "An enumeration of the types of LineFill."}, {"name": "LineType", "type": "LineType", "url": "/apps-script/reference/slides/line-type", "description": "An enumeration of the types of Line."}, {"name": "LinkType", "type": "LinkType", "url": "/apps-script/reference/slides/link-type", "description": "An enumeration of the types of links."}, {"name": "ListPreset", "type": "ListPreset", "url": "/apps-script/reference/slides/list-preset", "description": "An enumeration of the types of list presets."}, {"name": "PageBackgroundType", "type": "PageBackgroundType", "url": "/apps-script/reference/slides/page-background-type", "description": "An enumeration of the types of page backgrounds."}, {"name": "PageElementType", "type": "PageElementType", "url": "/apps-script/reference/slides/page-element-type", "description": "An enumeration of the types of page elements."}, {"name": "PageType", "type": "PageType", "url": "/apps-script/reference/slides/page-type", "description": "An enumeration of the types of pages."}, {"name": "ParagraphAlignment", "type": "ParagraphAlignment", "url": "/apps-script/reference/slides/paragraph-alignment", "description": "An enumeration of the types of paragraph alignment."}, {"name": "PlaceholderType", "type": "PlaceholderType", "url": "/apps-script/reference/slides/placeholder-type", "description": "An enumeration of the types of placeholders."}, {"name": "PredefinedLayout", "type": "PredefinedLayout", "url": "/apps-script/reference/slides/predefined-layout", "description": "An enumeration of the predefined layouts."}, {"name": "SelectionType", "type": "SelectionType", "url": "/apps-script/reference/slides/selection-type", "description": "An enumeration of the types of selections."}, {"name": "ShapeType", "type": "ShapeType", "url": "/apps-script/reference/slides/shape-type", "description": "An enumeration of the types of shapes."}, {"name": "SheetsChartEmbedType", "type": "SheetsChartEmbedType", "url": "/apps-script/reference/slides/sheets-chart-embed-type", "description": "An enumeration of Sheets chart embed types."}, {"name": "SlideLinkingMode", "type": "SlideLinkingMode", "url": "/apps-script/reference/slides/slide-linking-mode", "description": "An enumeration of the ways Slides can be linked."}, {"name": "SlidePosition", "type": "SlidePosition", "url": "/apps-script/reference/slides/slide-position", "description": "An enumeration of the types of slide positions."}, {"name": "SpacingMode", "type": "SpacingMode", "url": "/apps-script/reference/slides/spacing-mode", "description": "An enumeration of the types of spacing modes."}, {"name": "TextBaselineOffset", "type": "TextBaselineOffset", "url": "/apps-script/reference/slides/text-baseline-offset", "description": "An enumeration of the types of text baseline offset."}, {"name": "TextDirection", "type": "TextDirection", "url": "/apps-script/reference/slides/text-direction", "description": "An enumeration of the types of text directions."}, {"name": "ThemeColorType", "type": "ThemeColorType", "url": "/apps-script/reference/slides/theme-color-type", "description": "An enumeration of theme colors."}, {"name": "VideoSourceType", "type": "VideoSourceType", "url": "/apps-script/reference/slides/video-source-type", "description": "An enumeration of the types of video source."}]},
{"url": "https://developers.google.com/apps-script/reference/slides/affine-transform", "name": "AffineTransform", "type": "class", "methods": [{"name": "getScaleX", "parameters": [], "result": "Number", "description": "Gets the X coordinate scaling element."}, {"name": "getScaleY", "parameters": [], "result": "Number", "description": "Gets the Y coordinate scaling element."}, {"name": "getShearX", "parameters": [], "result": "Number", "description": "Gets the X coordinate shearing element."}, {"name": "getShearY", "parameters": [], "result": "Number", "description": "Gets the Y coordinate shearing element."}, {"name": "getTranslateX", "parameters": [], "result": "Number", "description": "Gets the X coordinate translation element in points."}, {"name": "getTranslateY", "parameters": [], "result": "Number", "description": "Gets the Y coordinate translation element in points."}, {"name": "toBuilder", "parameters": [], "result": "AffineTransformBuilder", "description": "Returns a new AffineTransformBuilder based on this transform."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/sites/site", "name": "Site", "type": "class", "methods": [{"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Site", "description": "Adds the given user to the list of editors for the Site."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Site", "description": "Adds the given user to the list of editors for the Site."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Site", "description": "Adds the given array of users to the list of editors for the Site."}, {"name": "addOwner", "parameters": [{"name": "email", "type": "String"}], "result": "Site", "description": "Add a new owner to the website"}, {"name": "addOwner", "parameters": [{"name": "user", "type": "User"}], "result": "Site", "description": "Add a new owner to the website"}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Site", "description": "Adds the given user to the list of viewers for the Site."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Site", "description": "Adds the given user to the list of viewers for the Site."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Site", "description": "Adds the given array of users to the list of viewers for the Site."}, {"name": "createAnnouncementsPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create a new announcements page."}, {"name": "createFileCabinetPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create a new file-cabinet page."}, {"name": "createListPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Page", "description": "Create a new list page."}, {"name": "createPageFromTemplate", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "template", "type": "Page"}], "result": "Page", "description": "Create a new page from a template."}, {"name": "createWebPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create a new web page."}, {"name": "getAllDescendants", "parameters": [], "result": "Page[]", "description": "Gets an array of descendant pages (direct and indirect), up to a limit of 200 pages."}, {"name": "getAllDescendants", "parameters": [{"name": "options", "type": "Object"}], "result": "Page[]", "description": "Gets an array of descendant pages, with optional advanced arguments."}, {"name": "getChildByName", "parameters": [{"name": "name", "type": "String"}], "result": "Page", "description": "Gets a particular child page."}, {"name": "getChildren", "parameters": [], "result": "Page[]", "description": "Gets an array of child pages, up to a limit of 200 pages."}, {"name": "getChildren", "parameters": [{"name": "options", "type": "Object"}], "result": "Page[]", "description": "Gets an array of child pages, with optional advanced arguments."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Site."}, {"name": "getName", "parameters": [], "result": "String", "description": "Return the name of the site"}, {"name": "getOwners", "parameters": [], "result": "User[]", "description": "Retrieves list of owners for the site"}, {"name": "getSummary", "parameters": [], "result": "String", "description": "Return the summary of the web site"}, {"name": "getTemplates", "parameters": [], "result": "Page[]", "description": "Returns all template pages."}, {"name": "getTheme", "parameters": [], "result": "String", "description": "Gets the theme of the site"}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Return the title of the site"}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Retrieves the url of this Site."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this Site."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Site", "description": "Removes the given user from the list of editors for the Site."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Site", "description": "Removes the given user from the list of editors for the Site."}, {"name": "removeOwner", "parameters": [{"name": "email", "type": "String"}], "result": "Site", "description": "Removes owner from the site by user email"}, {"name": "removeOwner", "parameters": [{"name": "user", "type": "User"}], "result": "Site", "description": "Removes owner from the site"}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Site", "description": "Removes the given user from the list of viewers and commenters for the Site."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Site", "description": "Removes the given user from the list of viewers and commenters for the Site."}, {"name": "search", "parameters": [{"name": "query", "type": "String"}], "result": "Page[]", "description": "Gets an array of descendant pages that match a search query, up to a limit of 200 pages."}, {"name": "search", "parameters": [{"name": "query", "type": "String"}, {"name": "options", "type": "Object"}], "result": "Page[]", "description": "Gets an array of descendant pages that match a search query, with optional advanced arguments."}, {"name": "setSummary", "parameters": [{"name": "summary", "type": "String"}], "result": "Site", "description": "Set the summary of the web site"}, {"name": "setTheme", "parameters": [{"name": "theme", "type": "String"}], "result": "Site", "description": "Sets the theme of the site"}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Site", "description": "Set the title of the site"}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/affine-transform-builder", "name": "AffineTransformBuilder", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "AffineTransform", "description": "Creates an AffineTransform object initialized with the elements set in the builder."}, {"name": "setScaleX", "parameters": [{"name": "scaleX", "type": "Number"}], "result": "AffineTransformBuilder", "description": "Sets the X coordinate scaling element and returns the builder."}, {"name": "setScaleY", "parameters": [{"name": "scaleY", "type": "Number"}], "result": "AffineTransformBuilder", "description": "Sets the Y coordinate scaling element and returns the builder."}, {"name": "setShearX", "parameters": [{"name": "shearX", "type": "Number"}], "result": "AffineTransformBuilder", "description": "Sets the X coordinate shearing element and returns the builder."}, {"name": "setShearY", "parameters": [{"name": "shearY", "type": "Number"}], "result": "AffineTransformBuilder", "description": "Sets the Y coordinate shearing element and returns the builder."}, {"name": "setTranslateX", "parameters": [{"name": "translateX", "type": "Number"}], "result": "AffineTransformBuilder", "description": "Sets the X coordinate translation element in points, and returns the builder."}, {"name": "setTranslateY", "parameters": [{"name": "translateY", "type": "Number"}], "result": "AffineTransformBuilder", "description": "Sets the Y coordinate translation element in points, and returns the builder."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides", "name": "Slides", "type": "slides", "methods": [{"name": "getScaleX", "parameters": [], "result": "Number", "description": "Gets the X coordinate scaling element."}, {"name": "getScaleY", "parameters": [], "result": "Number", "description": "Gets the Y coordinate scaling element."}, {"name": "getShearX", "parameters": [], "result": "Number", "description": "Gets the X coordinate shearing element."}, {"name": "getShearY", "parameters": [], "result": "Number", "description": "Gets the Y coordinate shearing element."}, {"name": "getTranslateX", "parameters": [], "result": "Number", "description": "Gets the X coordinate translation element in points."}, {"name": "getTranslateY", "parameters": [], "result": "Number", "description": "Gets the Y coordinate translation element in points."}, {"name": "toBuilder", "parameters": [], "result": "AffineTransformBuilder", "description": "Returns a new AffineTransformBuilder based on this transform."}, {"name": "build", "parameters": [], "result": "AffineTransform", "description": "Creates an AffineTransform object initialized with the elements set in the builder."}, {"name": "setScaleX", "parameters": [{"name": "scaleX", "type": "Number"}], "result": "AffineTransformBuilder", "description": "Sets the X coordinate scaling element and returns the builder."}, {"name": "setScaleY", "parameters": [{"name": "scaleY", "type": "Number"}], "result": "AffineTransformBuilder", "description": "Sets the Y coordinate scaling element and returns the builder."}, {"name": "setShearX", "parameters": [{"name": "shearX", "type": "Number"}], "result": "AffineTransformBuilder", "description": "Sets the X coordinate shearing element and returns the builder."}, {"name": "setShearY", "parameters": [{"name": "shearY", "type": "Number"}], "result": "AffineTransformBuilder", "description": "Sets the Y coordinate shearing element and returns the builder."}, {"name": "setTranslateX", "parameters": [{"name": "translateX", "type": "Number"}], "result": "AffineTransformBuilder", "description": "Sets the X coordinate translation element in points, and returns the builder."}, {"name": "setTranslateY", "parameters": [{"name": "translateY", "type": "Number"}], "result": "AffineTransformBuilder", "description": "Sets the Y coordinate translation element in points, and returns the builder."}, {"name": "getAutoTextType", "parameters": [], "result": "AutoTextType", "description": "Returns the type of auto text."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Returns the index of the auto text."}, {"name": "getRange", "parameters": [], "result": "TextRange", "description": "Returns a TextRange spanning the auto text."}, {"name": "disableAutofit", "parameters": [], "result": "Autofit", "description": "Sets the AutofitType of a shape to AutofitType.NONE."}, {"name": "getAutofitType", "parameters": [], "result": "AutofitType", "description": "Gets the AutofitType of the shape."}, {"name": "getFontScale", "parameters": [], "result": "Number", "description": "Gets the font scale applied to the shape."}, {"name": "getLineSpacingReduction", "parameters": [], "result": "Number", "description": "Gets the line spacing reduction applied to the shape."}, {"name": "getDashStyle", "parameters": [], "result": "DashStyle", "description": "Gets the DashStyle of the border."}, {"name": "getLineFill", "parameters": [], "result": "LineFill", "description": "Gets the LineFill of the border."}, {"name": "getWeight", "parameters": [], "result": "Number", "description": "Gets the thickness of the border in points."}, {"name": "isVisible", "parameters": [], "result": "Boolean", "description": "Gets whether the border is visible or not."}, {"name": "setDashStyle", "parameters": [{"name": "style", "type": "DashStyle"}], "result": "Border", "description": "Sets the DashStyle of the border."}, {"name": "setTransparent", "parameters": [], "result": "Border", "description": "Sets the border to be transparent."}, {"name": "setWeight", "parameters": [{"name": "points", "type": "Number"}], "result": "Border", "description": "Sets the thickness of the border in points."}, {"name": "asRgbColor", "parameters": [], "result": "RgbColor", "description": "Converts this color to an RgbColor."}, {"name": "asThemeColor", "parameters": [], "result": "ThemeColor", "description": "Converts this color to a ThemeColor."}, {"name": "getColorType", "parameters": [], "result": "ColorType", "description": "Get the type of this color."}, {"name": "getConcreteColor", "parameters": [{"name": "theme", "type": "ThemeColorType"}], "result": "Color", "description": "Returns the concrete Color associated with the ThemeColorType in this color\nscheme."}, {"name": "getThemeColors", "parameters": [], "result": "ThemeColorType[]", "description": "Returns a list of all possible theme color types in a color scheme."}, {"name": "setConcreteColor", "parameters": [{"name": "type", "type": "ThemeColorType"}, {"name": "color", "type": "Color"}], "result": "ColorScheme", "description": "Sets the concrete color associated with the ThemeColorType in this color scheme to the\ngiven color."}, {"name": "setConcreteColor", "parameters": [{"name": "type", "type": "ThemeColorType"}, {"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "ColorScheme", "description": "Sets the concrete color associated with the ThemeColorType in this color scheme to the\ngiven color in RGB format."}, {"name": "setConcreteColor", "parameters": [{"name": "type", "type": "ThemeColorType"}, {"name": "hexColor", "type": "String"}], "result": "ColorScheme", "description": "Sets the concrete color associated with the ThemeColorType in this color scheme to the\ngiven color in HEX format."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Returns the index of the connection site."}, {"name": "getPageElement", "parameters": [], "result": "PageElement", "description": "Returns the PageElement that the connection site is on."}, {"name": "getSolidFill", "parameters": [], "result": "SolidFill", "description": "Get the solid fill of this background, or null if the fill type is not FillType.SOLID."}, {"name": "getType", "parameters": [], "result": "FillType", "description": "Get the type of this fill."}, {"name": "isVisible", "parameters": [], "result": "Boolean", "description": "Whether the background is visible."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "Color"}], "result": "void", "description": "Sets the solid fill to the given Color."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "Color"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and Color."}, {"name": "setSolidFill", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "void", "description": "Sets the solid fill to the given RGB values."}, {"name": "setSolidFill", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and RGB values."}, {"name": "setSolidFill", "parameters": [{"name": "hexString", "type": "String"}], "result": "void", "description": "Sets the solid fill to the given hex color string."}, {"name": "setSolidFill", "parameters": [{"name": "hexString", "type": "String"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and hex color string."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "ThemeColorType"}], "result": "void", "description": "Sets the solid fill to the given ThemeColorType."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "ThemeColorType"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and ThemeColorType."}, {"name": "setTransparent", "parameters": [], "result": "void", "description": "Sets the background to transparent."}, {"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "Group", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "bringForward", "parameters": [], "result": "Group", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "Group", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getChildren", "parameters": [], "result": "PageElement[]", "description": "Gets the collection of page elements in the group."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Gets the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Group", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Group", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Group", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "Group", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "Group", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Group", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "Group", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "Group", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "Group", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Group", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "Group", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Group", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Group", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}, {"name": "ungroup", "parameters": [], "result": "void", "description": "Ungroups the elements of the group."}, {"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "Image", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "bringForward", "parameters": [], "result": "Image", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "Image", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this image as a blob."}, {"name": "getBorder", "parameters": [], "result": "Border", "description": "Returns the Border of the image."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getContentUrl", "parameters": [], "result": "String", "description": "Gets a URL to the image."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getLink", "parameters": [], "result": "Link", "description": "Returns the Link or null if there is no link."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getSourceUrl", "parameters": [], "result": "String", "description": "Gets the image's source URL, if available."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Image", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "removeLink", "parameters": [], "result": "void", "description": "Removes a Link."}, {"name": "replace", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "Image", "description": "Replaces this image with an image described by a BlobSource object."}, {"name": "replace", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "crop", "type": "Boolean"}], "result": "Image", "description": "Replaces this image with an image described by a Image object, optionally cropping\nthe image to fit."}, {"name": "replace", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "Image", "description": "Replaces this image with another image downloaded from the provided URL."}, {"name": "replace", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "crop", "type": "Boolean"}], "result": "Image", "description": "Replaces this image with another image downloaded from the provided URL, optionally cropping\nthe image to fit."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Image", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Image", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "Image", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "Image", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Image", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "Image", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "Image", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setLinkSlide", "parameters": [{"name": "slideIndex", "type": "Integer"}], "result": "Link", "description": "Sets a Link to the given Slide using the zero-based index of the slide."}, {"name": "setLinkSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "Link", "description": "Sets a Link to the given Slide, the link is set by the given slide ID."}, {"name": "setLinkSlide", "parameters": [{"name": "slidePosition", "type": "SlidePosition"}], "result": "Link", "description": "Sets a Link to the given Slide using the relative position of the slide."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Link", "description": "Sets a Link to the given non-empty URL string."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "Image", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Image", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "Image", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Image", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Image", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}, {"name": "getBackground", "parameters": [], "result": "PageBackground", "description": "Gets the page's background."}, {"name": "getColorScheme", "parameters": [], "result": "ColorScheme", "description": "Gets the ColorScheme associated with the page."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Returns the list of Group objects on the page."}, {"name": "getImages", "parameters": [], "result": "Image[]", "description": "Returns the list of Image objects on the page."}, {"name": "getLayoutName", "parameters": [], "result": "String", "description": "Gets the name of the layout."}, {"name": "getLines", "parameters": [], "result": "Line[]", "description": "Returns the list of Line objects on the page."}, {"name": "getMaster", "parameters": [], "result": "Master", "description": "Gets the master that the layout is based on."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Gets the unique ID for the page."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement on the page with the given ID, or null if none exists."}, {"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement objects rendered on the page."}, {"name": "getPageType", "parameters": [], "result": "PageType", "description": "Gets the type of the page."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType or\nnull if a matching placeholder is not present."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}, {"name": "placeholderIndex", "type": "Integer"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType and\na placeholder index, or null if the placeholder is not present."}, {"name": "getPlaceholders", "parameters": [], "result": "PageElement[]", "description": "Returns the list of placeholder PageElement objects in the page."}, {"name": "getShapes", "parameters": [], "result": "Shape[]", "description": "Returns the list of Shape objects on the page."}, {"name": "getSheetsCharts", "parameters": [], "result": "SheetsChart[]", "description": "Returns the list of SheetsChart objects on the page."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Returns the list of Table objects on the page."}, {"name": "getVideos", "parameters": [], "result": "Video[]", "description": "Returns the list of Video objects on the page."}, {"name": "getWordArts", "parameters": [], "result": "WordArt[]", "description": "Returns the list of WordArt objects on the page."}, {"name": "group", "parameters": [{"name": "pageElements", "type": "PageElement"}], "result": "Group", "description": "Groups all the specified page elements."}, {"name": "insertGroup", "parameters": [{"name": "group", "type": "Group"}], "result": "Group", "description": "Inserts a copy of the provided Group on the page."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the specified\nimage blob."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the specified image blob."}, {"name": "insertImage", "parameters": [{"name": "image", "type": "Image"}], "result": "Image", "description": "Inserts a copy of the provided Image on the page."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the provided URL."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the provided URL."}, {"name": "insertLine", "parameters": [{"name": "line", "type": "Line"}], "result": "Line", "description": "Inserts a copy of the provided Line on the page."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startConnectionSite", "type": "ConnectionSite"}, {"name": "endConnectionSite", "type": "ConnectionSite"}], "result": "Line", "description": "Inserts a line on the page connecting two connection sites."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startLeft", "type": "Number"}, {"name": "startTop", "type": "Number"}, {"name": "endLeft", "type": "Number"}, {"name": "endTop", "type": "Number"}], "result": "Line", "description": "Inserts a line on the page."}, {"name": "insertPageElement", "parameters": [{"name": "pageElement", "type": "PageElement"}], "result": "PageElement", "description": "Inserts a copy of the provided PageElement on the page."}, {"name": "insertShape", "parameters": [{"name": "shape", "type": "Shape"}], "result": "Shape", "description": "Inserts a copy of the provided Shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page with the provided position and size."}, {"name": "insertSheetsChart", "parameters": [{"name": "sheetsChart", "type": "SheetsChart"}], "result": "SheetsChart", "description": "Inserts a copy of the provided SheetsChart on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page with the provided position and\nsize."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Table", "description": "Inserts a table on the page."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Table", "description": "Inserts a table on the page with the provided position and size."}, {"name": "insertTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts a copy of the provided Table on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}], "result": "Video", "description": "Inserts a video at the top left corner of the page with a default size."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Video", "description": "Inserts a video on the page with the provided position and size."}, {"name": "insertVideo", "parameters": [{"name": "video", "type": "Video"}], "result": "Video", "description": "Inserts a copy of the provided Video on the page."}, {"name": "insertWordArt", "parameters": [{"name": "wordArt", "type": "WordArt"}], "result": "WordArt", "description": "Inserts a copy of the provided WordArt on the page."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "selectAsCurrentPage", "parameters": [], "result": "void", "description": "Selects the Page in the active presentation as the current page selection and removes any previous selection."}, {"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "Line", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "bringForward", "parameters": [], "result": "Line", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "Line", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDashStyle", "parameters": [], "result": "DashStyle", "description": "Gets the DashStyle of the line."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getEnd", "parameters": [], "result": "Point", "description": "Returns the end point of the line, measured from the upper-left corner of the page."}, {"name": "getEndArrow", "parameters": [], "result": "ArrowStyle", "description": "Gets the ArrowStyle of the arrow at the end of the line."}, {"name": "getEndConnection", "parameters": [], "result": "ConnectionSite", "description": "Returns the connection at the end of the line, or null if there is no connection."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getLineCategory", "parameters": [], "result": "LineCategory", "description": "Gets the LineCategory of the line."}, {"name": "getLineFill", "parameters": [], "result": "LineFill", "description": "Gets the LineFill of the line."}, {"name": "getLineType", "parameters": [], "result": "LineType", "description": "Gets the LineType of the line."}, {"name": "getLink", "parameters": [], "result": "Link", "description": "Returns the Link or null if there is no link."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getStart", "parameters": [], "result": "Point", "description": "Returns the start point of the line, measured from the upper-left corner of the page."}, {"name": "getStartArrow", "parameters": [], "result": "ArrowStyle", "description": "Gets the ArrowStyle of the arrow at the beginning of the line."}, {"name": "getStartConnection", "parameters": [], "result": "ConnectionSite", "description": "Returns the connection at the beginning of the line, or null if there is no connection."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWeight", "parameters": [], "result": "Number", "description": "Returns the thickness of the line in points."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "isConnector", "parameters": [], "result": "Boolean", "description": "Returns true if the line is a connector, or false if not."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Line", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "removeLink", "parameters": [], "result": "void", "description": "Removes a Link."}, {"name": "reroute", "parameters": [], "result": "Line", "description": "Reroutes the start and end of the line to the closest two connection sites on the connected\npage elements."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Line", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Line", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "Line", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "Line", "description": "Sends the page element to the back of the page."}, {"name": "setDashStyle", "parameters": [{"name": "style", "type": "DashStyle"}], "result": "Line", "description": "Sets the DashStyle of the line."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Line", "description": "Sets the page element's alt text description."}, {"name": "setEnd", "parameters": [{"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}], "result": "Line", "description": "Sets the position of the end point of the line."}, {"name": "setEnd", "parameters": [{"name": "point", "type": "Point"}], "result": "Line", "description": "Sets the position of the end point of the line."}, {"name": "setEndArrow", "parameters": [{"name": "style", "type": "ArrowStyle"}], "result": "Line", "description": "Sets the ArrowStyle of the arrow at the end of the line."}, {"name": "setEndConnection", "parameters": [{"name": "connectionSite", "type": "ConnectionSite"}], "result": "Line", "description": "Sets the connection at the end of the line."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "Line", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "Line", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setLineCategory", "parameters": [{"name": "lineCategory", "type": "LineCategory"}], "result": "Line", "description": "Sets the LineCategory of the line."}, {"name": "setLinkSlide", "parameters": [{"name": "slideIndex", "type": "Integer"}], "result": "Link", "description": "Sets a Link to the given Slide using the zero-based index of the slide."}, {"name": "setLinkSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "Link", "description": "Sets a Link to the given Slide, the link is set by the given slide ID."}, {"name": "setLinkSlide", "parameters": [{"name": "slidePosition", "type": "SlidePosition"}], "result": "Link", "description": "Sets a Link to the given Slide using the relative position of the slide."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Link", "description": "Sets a Link to the given non-empty URL string."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "Line", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setStart", "parameters": [{"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}], "result": "Line", "description": "Sets the position of the start point of the line."}, {"name": "setStart", "parameters": [{"name": "point", "type": "Point"}], "result": "Line", "description": "Sets the position of the start point of the line."}, {"name": "setStartArrow", "parameters": [{"name": "style", "type": "ArrowStyle"}], "result": "Line", "description": "Sets the ArrowStyle of the arrow at the beginning of the line."}, {"name": "setStartConnection", "parameters": [{"name": "connectionSite", "type": "ConnectionSite"}], "result": "Line", "description": "Sets the connection at the beginning of the line."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Line", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "Line", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Line", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWeight", "parameters": [{"name": "points", "type": "Number"}], "result": "Line", "description": "Sets the thickness of the line in points."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Line", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}, {"name": "getFillType", "parameters": [], "result": "LineFillType", "description": "Gets the type of the line fill."}, {"name": "getSolidFill", "parameters": [], "result": "SolidFill", "description": "Gets the solid fill of the line, or null if the fill type is not LineFillType.SOLID."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "Color"}], "result": "void", "description": "Sets the solid fill to the given Color."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "Color"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and Color."}, {"name": "setSolidFill", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "void", "description": "Sets the solid fill to the given RGB values."}, {"name": "setSolidFill", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and RGB values."}, {"name": "setSolidFill", "parameters": [{"name": "hexString", "type": "String"}], "result": "void", "description": "Sets the solid fill to the given hex color string."}, {"name": "setSolidFill", "parameters": [{"name": "hexString", "type": "String"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and hex color string."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "ThemeColorType"}], "result": "void", "description": "Sets the solid fill to the given ThemeColorType."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "ThemeColorType"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and ThemeColorType."}, {"name": "getLinkType", "parameters": [], "result": "LinkType", "description": "Returns the LinkType."}, {"name": "getLinkedSlide", "parameters": [], "result": "Slide", "description": "Returns the linked Slide for non-URL links types, if it exists."}, {"name": "getSlideId", "parameters": [], "result": "String", "description": "Returns the ID of the linked Slide or null if the LinkType is not\nLinkType.SLIDE_ID."}, {"name": "getSlideIndex", "parameters": [], "result": "Integer", "description": "Returns the zero-based index of the linked Slide or null if the LinkType is not LinkType.SLIDE_INDEX."}, {"name": "getSlidePosition", "parameters": [], "result": "SlidePosition", "description": "Returns the SlidePosition of the linked Slide or null if the LinkType is not LinkType.SLIDE_POSITION."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Returns the URL to the external web page or null if the LinkType is not LinkType.URL."}, {"name": "getListId", "parameters": [], "result": "String", "description": "Returns the ID of the list."}, {"name": "getListParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Returns all the Paragraphs in the list."}, {"name": "applyListPreset", "parameters": [{"name": "listPreset", "type": "ListPreset"}], "result": "ListStyle", "description": "Applies the specified ListPreset to all of the paragraphs that overlap with the text."}, {"name": "getGlyph", "parameters": [], "result": "String", "description": "Returns the rendered glyph for the text."}, {"name": "getList", "parameters": [], "result": "List", "description": "Returns the List the text is in, or null if none of the text is in a list, or\npart of the text is in a list, or the text is in multiple lists."}, {"name": "getNestingLevel", "parameters": [], "result": "Integer", "description": "Returns the 0-based nesting level of the text."}, {"name": "isInList", "parameters": [], "result": "Boolean", "description": "Returns true if the text is in exactly one list, false if none of the text is\nin a list, and null if only some of the text is in a list or if the text is in multiple\nlists."}, {"name": "removeFromList", "parameters": [], "result": "ListStyle", "description": "Removes the paragraphs that overlap with the text from any lists."}, {"name": "getBackground", "parameters": [], "result": "PageBackground", "description": "Gets the page's background."}, {"name": "getColorScheme", "parameters": [], "result": "ColorScheme", "description": "Gets the ColorScheme associated with the page."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Returns the list of Group objects on the page."}, {"name": "getImages", "parameters": [], "result": "Image[]", "description": "Returns the list of Image objects on the page."}, {"name": "getLayouts", "parameters": [], "result": "Layout[]", "description": "Gets this master's layouts."}, {"name": "getLines", "parameters": [], "result": "Line[]", "description": "Returns the list of Line objects on the page."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Gets the unique ID for the page."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement on the page with the given ID, or null if none exists."}, {"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement objects rendered on the page."}, {"name": "getPageType", "parameters": [], "result": "PageType", "description": "Gets the type of the page."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType or\nnull if a matching placeholder is not present."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}, {"name": "placeholderIndex", "type": "Integer"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType and\na placeholder index, or null if the placeholder is not present."}, {"name": "getPlaceholders", "parameters": [], "result": "PageElement[]", "description": "Returns the list of placeholder PageElement objects in the page."}, {"name": "getShapes", "parameters": [], "result": "Shape[]", "description": "Returns the list of Shape objects on the page."}, {"name": "getSheetsCharts", "parameters": [], "result": "SheetsChart[]", "description": "Returns the list of SheetsChart objects on the page."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Returns the list of Table objects on the page."}, {"name": "getVideos", "parameters": [], "result": "Video[]", "description": "Returns the list of Video objects on the page."}, {"name": "getWordArts", "parameters": [], "result": "WordArt[]", "description": "Returns the list of WordArt objects on the page."}, {"name": "group", "parameters": [{"name": "pageElements", "type": "PageElement"}], "result": "Group", "description": "Groups all the specified page elements."}, {"name": "insertGroup", "parameters": [{"name": "group", "type": "Group"}], "result": "Group", "description": "Inserts a copy of the provided Group on the page."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the specified\nimage blob."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the specified image blob."}, {"name": "insertImage", "parameters": [{"name": "image", "type": "Image"}], "result": "Image", "description": "Inserts a copy of the provided Image on the page."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the provided URL."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the provided URL."}, {"name": "insertLine", "parameters": [{"name": "line", "type": "Line"}], "result": "Line", "description": "Inserts a copy of the provided Line on the page."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startConnectionSite", "type": "ConnectionSite"}, {"name": "endConnectionSite", "type": "ConnectionSite"}], "result": "Line", "description": "Inserts a line on the page connecting two connection sites."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startLeft", "type": "Number"}, {"name": "startTop", "type": "Number"}, {"name": "endLeft", "type": "Number"}, {"name": "endTop", "type": "Number"}], "result": "Line", "description": "Inserts a line on the page."}, {"name": "insertPageElement", "parameters": [{"name": "pageElement", "type": "PageElement"}], "result": "PageElement", "description": "Inserts a copy of the provided PageElement on the page."}, {"name": "insertShape", "parameters": [{"name": "shape", "type": "Shape"}], "result": "Shape", "description": "Inserts a copy of the provided Shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page with the provided position and size."}, {"name": "insertSheetsChart", "parameters": [{"name": "sheetsChart", "type": "SheetsChart"}], "result": "SheetsChart", "description": "Inserts a copy of the provided SheetsChart on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page with the provided position and\nsize."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Table", "description": "Inserts a table on the page."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Table", "description": "Inserts a table on the page with the provided position and size."}, {"name": "insertTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts a copy of the provided Table on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}], "result": "Video", "description": "Inserts a video at the top left corner of the page with a default size."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Video", "description": "Inserts a video on the page with the provided position and size."}, {"name": "insertVideo", "parameters": [{"name": "video", "type": "Video"}], "result": "Video", "description": "Inserts a copy of the provided Video on the page."}, {"name": "insertWordArt", "parameters": [{"name": "wordArt", "type": "WordArt"}], "result": "WordArt", "description": "Inserts a copy of the provided WordArt on the page."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "selectAsCurrentPage", "parameters": [], "result": "void", "description": "Selects the Page in the active presentation as the current page selection and removes any previous selection."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Returns the list of Group objects on the page."}, {"name": "getImages", "parameters": [], "result": "Image[]", "description": "Returns the list of Image objects on the page."}, {"name": "getLines", "parameters": [], "result": "Line[]", "description": "Returns the list of Line objects on the page."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Gets the unique ID for the page."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement on the page with the given ID, or null if none exists."}, {"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement objects rendered on the page."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType or\nnull if a matching placeholder is not present."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}, {"name": "placeholderIndex", "type": "Integer"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType and\na placeholder index, or null if the placeholder is not present."}, {"name": "getPlaceholders", "parameters": [], "result": "PageElement[]", "description": "Returns the list of placeholder PageElement objects in the page."}, {"name": "getShapes", "parameters": [], "result": "Shape[]", "description": "Returns the list of Shape objects on the page."}, {"name": "getSheetsCharts", "parameters": [], "result": "SheetsChart[]", "description": "Returns the list of SheetsChart objects on the page."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Returns the list of Table objects on the page."}, {"name": "getVideos", "parameters": [], "result": "Video[]", "description": "Returns the list of Video objects on the page."}, {"name": "getWordArts", "parameters": [], "result": "WordArt[]", "description": "Returns the list of WordArt objects on the page."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Returns the list of Group objects on the page."}, {"name": "getImages", "parameters": [], "result": "Image[]", "description": "Returns the list of Image objects on the page."}, {"name": "getLines", "parameters": [], "result": "Line[]", "description": "Returns the list of Line objects on the page."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Gets the unique ID for the page."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement on the page with the given ID, or null if none exists."}, {"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement objects rendered on the page."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType or\nnull if a matching placeholder is not present."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}, {"name": "placeholderIndex", "type": "Integer"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType and\na placeholder index, or null if the placeholder is not present."}, {"name": "getPlaceholders", "parameters": [], "result": "PageElement[]", "description": "Returns the list of placeholder PageElement objects in the page."}, {"name": "getShapes", "parameters": [], "result": "Shape[]", "description": "Returns the list of Shape objects on the page."}, {"name": "getSheetsCharts", "parameters": [], "result": "SheetsChart[]", "description": "Returns the list of SheetsChart objects on the page."}, {"name": "getSpeakerNotesShape", "parameters": [], "result": "Shape", "description": "Gets the shape containing the speaker notes on the page."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Returns the list of Table objects on the page."}, {"name": "getVideos", "parameters": [], "result": "Video[]", "description": "Returns the list of Video objects on the page."}, {"name": "getWordArts", "parameters": [], "result": "WordArt[]", "description": "Returns the list of WordArt objects on the page."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "asLayout", "parameters": [], "result": "Layout", "description": "Returns the page as a layout."}, {"name": "asMaster", "parameters": [], "result": "Master", "description": "Returns the page as a master."}, {"name": "asSlide", "parameters": [], "result": "Slide", "description": "Returns the page as a slide."}, {"name": "getBackground", "parameters": [], "result": "PageBackground", "description": "Gets the page's background."}, {"name": "getColorScheme", "parameters": [], "result": "ColorScheme", "description": "Gets the ColorScheme associated with the page."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Returns the list of Group objects on the page."}, {"name": "getImages", "parameters": [], "result": "Image[]", "description": "Returns the list of Image objects on the page."}, {"name": "getLines", "parameters": [], "result": "Line[]", "description": "Returns the list of Line objects on the page."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Gets the unique ID for the page."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement on the page with the given ID, or null if none exists."}, {"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement objects rendered on the page."}, {"name": "getPageType", "parameters": [], "result": "PageType", "description": "Gets the type of the page."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType or\nnull if a matching placeholder is not present."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}, {"name": "placeholderIndex", "type": "Integer"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType and\na placeholder index, or null if the placeholder is not present."}, {"name": "getPlaceholders", "parameters": [], "result": "PageElement[]", "description": "Returns the list of placeholder PageElement objects in the page."}, {"name": "getShapes", "parameters": [], "result": "Shape[]", "description": "Returns the list of Shape objects on the page."}, {"name": "getSheetsCharts", "parameters": [], "result": "SheetsChart[]", "description": "Returns the list of SheetsChart objects on the page."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Returns the list of Table objects on the page."}, {"name": "getVideos", "parameters": [], "result": "Video[]", "description": "Returns the list of Video objects on the page."}, {"name": "getWordArts", "parameters": [], "result": "WordArt[]", "description": "Returns the list of WordArt objects on the page."}, {"name": "group", "parameters": [{"name": "pageElements", "type": "PageElement"}], "result": "Group", "description": "Groups all the specified page elements."}, {"name": "insertGroup", "parameters": [{"name": "group", "type": "Group"}], "result": "Group", "description": "Inserts a copy of the provided Group on the page."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the specified\nimage blob."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the specified image blob."}, {"name": "insertImage", "parameters": [{"name": "image", "type": "Image"}], "result": "Image", "description": "Inserts a copy of the provided Image on the page."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the provided URL."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the provided URL."}, {"name": "insertLine", "parameters": [{"name": "line", "type": "Line"}], "result": "Line", "description": "Inserts a copy of the provided Line on the page."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startConnectionSite", "type": "ConnectionSite"}, {"name": "endConnectionSite", "type": "ConnectionSite"}], "result": "Line", "description": "Inserts a line on the page connecting two connection sites."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startLeft", "type": "Number"}, {"name": "startTop", "type": "Number"}, {"name": "endLeft", "type": "Number"}, {"name": "endTop", "type": "Number"}], "result": "Line", "description": "Inserts a line on the page."}, {"name": "insertPageElement", "parameters": [{"name": "pageElement", "type": "PageElement"}], "result": "PageElement", "description": "Inserts a copy of the provided PageElement on the page."}, {"name": "insertShape", "parameters": [{"name": "shape", "type": "Shape"}], "result": "Shape", "description": "Inserts a copy of the provided Shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page with the provided position and size."}, {"name": "insertSheetsChart", "parameters": [{"name": "sheetsChart", "type": "SheetsChart"}], "result": "SheetsChart", "description": "Inserts a copy of the provided SheetsChart on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page with the provided position and\nsize."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Table", "description": "Inserts a table on the page."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Table", "description": "Inserts a table on the page with the provided position and size."}, {"name": "insertTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts a copy of the provided Table on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}], "result": "Video", "description": "Inserts a video at the top left corner of the page with a default size."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Video", "description": "Inserts a video on the page with the provided position and size."}, {"name": "insertVideo", "parameters": [{"name": "video", "type": "Video"}], "result": "Video", "description": "Inserts a copy of the provided Video on the page."}, {"name": "insertWordArt", "parameters": [{"name": "wordArt", "type": "WordArt"}], "result": "WordArt", "description": "Inserts a copy of the provided WordArt on the page."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "selectAsCurrentPage", "parameters": [], "result": "void", "description": "Selects the Page in the active presentation as the current page selection and removes any previous selection."}, {"name": "getPictureFill", "parameters": [], "result": "PictureFill", "description": "Get the stretched picture fill of this background, or null if the background fill type\nis not PageBackgroundType.PICTURE."}, {"name": "getSolidFill", "parameters": [], "result": "SolidFill", "description": "Get the solid fill of this background, or null if the background fill type is not\nPageBackgroundType.SOLID."}, {"name": "getType", "parameters": [], "result": "PageBackgroundType", "description": "Get the type of this page background."}, {"name": "isVisible", "parameters": [], "result": "Boolean", "description": "Whether the background is visible."}, {"name": "setPictureFill", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "void", "description": "Sets an image from the specified image blob as the page background."}, {"name": "setPictureFill", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "void", "description": "Sets the image at the provided URL as the page background."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "Color"}], "result": "void", "description": "Sets the solid fill to the given Color."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "Color"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and Color."}, {"name": "setSolidFill", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "void", "description": "Sets the solid fill to the given RGB values."}, {"name": "setSolidFill", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and RGB values."}, {"name": "setSolidFill", "parameters": [{"name": "hexString", "type": "String"}], "result": "void", "description": "Sets the solid fill to the given hex color string."}, {"name": "setSolidFill", "parameters": [{"name": "hexString", "type": "String"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and hex color string."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "ThemeColorType"}], "result": "void", "description": "Sets the solid fill to the given ThemeColorType."}, {"name": "setSolidFill", "parameters": [{"name": "color", "type": "ThemeColorType"}, {"name": "alpha", "type": "Number"}], "result": "void", "description": "Sets the solid fill to the given alpha and ThemeColorType."}, {"name": "setTransparent", "parameters": [], "result": "void", "description": "Sets the background to transparent."}, {"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "PageElement", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "asGroup", "parameters": [], "result": "Group", "description": "Returns the page element as a group."}, {"name": "asImage", "parameters": [], "result": "Image", "description": "Returns the page element as an image."}, {"name": "asLine", "parameters": [], "result": "Line", "description": "Returns the page element as a line."}, {"name": "asShape", "parameters": [], "result": "Shape", "description": "Returns the page element as a shape."}, {"name": "asSheetsChart", "parameters": [], "result": "SheetsChart", "description": "Returns the page element as a linked chart embedded from Google Sheets."}, {"name": "asTable", "parameters": [], "result": "Table", "description": "Returns the page element as a table."}, {"name": "asVideo", "parameters": [], "result": "Video", "description": "Returns the page element as a video."}, {"name": "asWordArt", "parameters": [], "result": "WordArt", "description": "Returns the page element as word art."}, {"name": "bringForward", "parameters": [], "result": "PageElement", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "PageElement", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "PageElement", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "PageElement", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "PageElement", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "PageElement", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "PageElement", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "PageElement", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "PageElement", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "PageElement", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "PageElement", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "PageElement", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "PageElement", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "PageElement", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "PageElement", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}, {"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement instances."}, {"name": "getPages", "parameters": [], "result": "Page[]", "description": "Returns the list of Page instances."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Returns the index of the paragraph's newline."}, {"name": "getRange", "parameters": [], "result": "TextRange", "description": "Returns a TextRange spanning the text in the paragraph ended by this object's newline\ncharacter."}, {"name": "getIndentEnd", "parameters": [], "result": "Number", "description": "Returns the text end indentation for paragraphs in the TextRange in points, or null if there are multiple paragraph styles on the given text."}, {"name": "getIndentFirstLine", "parameters": [], "result": "Number", "description": "Returns the indentation for the first line of paragraphs in the TextRange in points, or\nnull if there are multiple paragraph styles on the given text."}, {"name": "getIndentStart", "parameters": [], "result": "Number", "description": "Returns the text start indentation for paragraphs in the TextRange in points, or null if there are multiple paragraph styles on the given text."}, {"name": "getLineSpacing", "parameters": [], "result": "Number", "description": "Returns the line spacing, or null if there are multiple paragraph styles on the given\ntext."}, {"name": "getParagraphAlignment", "parameters": [], "result": "ParagraphAlignment", "description": "Returns the ParagraphAlignment of paragraphs in the TextRange, or null\nif there are multiple paragraph styles on the given text."}, {"name": "getSpaceAbove", "parameters": [], "result": "Number", "description": "Returns the extra space above paragraphs in the TextRange in points, or null if\nthere are multiple paragraph styles on the given text."}, {"name": "getSpaceBelow", "parameters": [], "result": "Number", "description": "Returns the extra space below paragraphs in the TextRange in points, or null if\nthere are multiple paragraph styles on the given text."}, {"name": "getSpacingMode", "parameters": [], "result": "SpacingMode", "description": "Returns the SpacingMode for paragraphs in the TextRange, or null if\nthere are multiple paragraph styles on the given text."}, {"name": "getTextDirection", "parameters": [], "result": "TextDirection", "description": "Returns the TextDirection for paragraphs in the TextRange, or null if\nthere are multiple paragraph styles on the given text."}, {"name": "setIndentEnd", "parameters": [{"name": "indent", "type": "Number"}], "result": "ParagraphStyle", "description": "Sets the text end indentation for paragraphs in the TextRange in points."}, {"name": "setIndentFirstLine", "parameters": [{"name": "indent", "type": "Number"}], "result": "ParagraphStyle", "description": "Sets the indentation for the first line of paragraphs in the TextRange in points."}, {"name": "setIndentStart", "parameters": [{"name": "indent", "type": "Number"}], "result": "ParagraphStyle", "description": "Sets the text start indentation for paragraphs in the TextRange in points."}, {"name": "setLineSpacing", "parameters": [{"name": "spacing", "type": "Number"}], "result": "ParagraphStyle", "description": "Sets the line spacing."}, {"name": "setParagraphAlignment", "parameters": [{"name": "alignment", "type": "ParagraphAlignment"}], "result": "ParagraphStyle", "description": "Sets the ParagraphAlignment of paragraphs in the TextRange."}, {"name": "setSpaceAbove", "parameters": [{"name": "space", "type": "Number"}], "result": "ParagraphStyle", "description": "Sets the extra space above paragraphs in the TextRange in points."}, {"name": "setSpaceBelow", "parameters": [{"name": "space", "type": "Number"}], "result": "ParagraphStyle", "description": "Sets the extra space below paragraphs in the TextRange in points."}, {"name": "setSpacingMode", "parameters": [{"name": "mode", "type": "SpacingMode"}], "result": "ParagraphStyle", "description": "Sets the SpacingMode for paragraphs in the TextRange."}, {"name": "setTextDirection", "parameters": [{"name": "direction", "type": "TextDirection"}], "result": "ParagraphStyle", "description": "Sets the TextDirection for paragraphs in the TextRange."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getContentUrl", "parameters": [], "result": "String", "description": "Gets a URL to the image."}, {"name": "getSourceUrl", "parameters": [], "result": "String", "description": "Gets the image's source URL, if available."}, {"name": "getX", "parameters": [], "result": "Number", "description": "Gets the horizontal coordinate, measured in points."}, {"name": "getY", "parameters": [], "result": "Number", "description": "Gets the vertical coordinate, measured in points."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Presentation", "description": "Adds the given user to the list of editors for the Presentation."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Presentation", "description": "Adds the given user to the list of editors for the Presentation."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Presentation", "description": "Adds the given array of users to the list of editors for the Presentation."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Presentation", "description": "Adds the given user to the list of viewers for the Presentation."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Presentation", "description": "Adds the given user to the list of viewers for the Presentation."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Presentation", "description": "Adds the given array of users to the list of viewers for the Presentation."}, {"name": "appendSlide", "parameters": [], "result": "Slide", "description": "Appends a slide to the end of the presentation using the PredefinedLayout.BLANK\npredefined layout based on the current master."}, {"name": "appendSlide", "parameters": [{"name": "layout", "type": "Layout"}], "result": "Slide", "description": "Appends a slide to the end of the presentation using the specified layout based on the current\nmaster."}, {"name": "appendSlide", "parameters": [{"name": "predefinedLayout", "type": "PredefinedLayout"}], "result": "Slide", "description": "Appends a slide to the end of the presentation using the specified predefined layout based on\nthe current master."}, {"name": "appendSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "Slide", "description": "Appends a copy of the provided Slide to the end of the presentation."}, {"name": "appendSlide", "parameters": [{"name": "slide", "type": "Slide"}, {"name": "linkingMode", "type": "SlideLinkingMode"}], "result": "Slide", "description": "Appends a copy of the provided Slide from the source presentation to the end of the\ncurrent presentation, and sets the slide link as specified by the SlideLinkingMode."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Presentation."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the presentation's unique identifier."}, {"name": "getLayouts", "parameters": [], "result": "Layout[]", "description": "Gets the layouts in the presentation."}, {"name": "getMasters", "parameters": [], "result": "Master[]", "description": "Gets the masters in the presentation."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name or title of the presentation."}, {"name": "getNotesMaster", "parameters": [], "result": "NotesMaster", "description": "Gets the notes master of the presentation."}, {"name": "getNotesPageHeight", "parameters": [], "result": "Number", "description": "Gets the page height of the notes master and notes pages in the presentation in points."}, {"name": "getNotesPageWidth", "parameters": [], "result": "Number", "description": "Gets the page width of the notes master and notes pages in the presentation in points."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement with the given ID, or null if none exists."}, {"name": "getPageHeight", "parameters": [], "result": "Number", "description": "Gets the page height of the slides, layouts, and masters in the presentation in points."}, {"name": "getPageWidth", "parameters": [], "result": "Number", "description": "Gets the page width of the slides, layouts, and masters in the presentation in points."}, {"name": "getSelection", "parameters": [], "result": "Selection", "description": "Gets the user\u2019s selection in the active presentation."}, {"name": "getSlideById", "parameters": [{"name": "id", "type": "String"}], "result": "Slide", "description": "Returns the Slide with the given ID, or null if none exists."}, {"name": "getSlides", "parameters": [], "result": "Slide[]", "description": "Gets the slides in the presentation."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Retrieves the URL to access this presentation."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this Presentation."}, {"name": "insertSlide", "parameters": [{"name": "insertionIndex", "type": "Integer"}], "result": "Slide", "description": "Inserts a slide at the specified index in the presentation using the PredefinedLayout.BLANK predefined layout based on the current master."}, {"name": "insertSlide", "parameters": [{"name": "insertionIndex", "type": "Integer"}, {"name": "layout", "type": "Layout"}], "result": "Slide", "description": "Inserts a slide at the specified index in the presentation using the specified layout based on\nthe current master."}, {"name": "insertSlide", "parameters": [{"name": "insertionIndex", "type": "Integer"}, {"name": "predefinedLayout", "type": "PredefinedLayout"}], "result": "Slide", "description": "Inserts a slide at the specified index in the presentation using the specified predefined\nlayout based on the current master."}, {"name": "insertSlide", "parameters": [{"name": "insertionIndex", "type": "Integer"}, {"name": "slide", "type": "Slide"}], "result": "Slide", "description": "Inserts a copy of the provided Slide at the specified index in the presentation."}, {"name": "insertSlide", "parameters": [{"name": "insertionIndex", "type": "Integer"}, {"name": "slide", "type": "Slide"}, {"name": "linkingMode", "type": "SlideLinkingMode"}], "result": "Slide", "description": "Inserts a copy of the provided Slide from the source presentation into the specified\nindex in the current presentation, and sets the slide link as specified by the SlideLinkingMode."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Presentation", "description": "Removes the given user from the list of editors for the Presentation."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Presentation", "description": "Removes the given user from the list of editors for the Presentation."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Presentation", "description": "Removes the given user from the list of viewers and commenters for the Presentation."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Presentation", "description": "Removes the given user from the list of viewers and commenters for the Presentation."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "saveAndClose", "parameters": [], "result": "void", "description": "Saves the current Presentation."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "void", "description": "Sets the name or title of the presentation."}, {"name": "getCurrentPage", "parameters": [], "result": "Page", "description": "Returns the currently active Page or null if there is no active page."}, {"name": "getPageElementRange", "parameters": [], "result": "PageElementRange", "description": "Returns the PageElementRange collection of PageElement instances that are\nselected or null if there are no PageElement instances selected."}, {"name": "getPageRange", "parameters": [], "result": "PageRange", "description": "Returns the PageRange a collection of Page instances in the flimstrip that are\nselected or null if the selection is not of type SelectionType.PAGE."}, {"name": "getSelectionType", "parameters": [], "result": "SelectionType", "description": "Returns the SelectionType."}, {"name": "getTableCellRange", "parameters": [], "result": "TableCellRange", "description": "Returns the TableCellRange collection of TableCell instances that are selected\nor null if there are no TableCell instances selected."}, {"name": "getTextRange", "parameters": [], "result": "TextRange", "description": "Returns the TextRange that is selected or null if the selection is not of type\nSelectionType.TEXT."}, {"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "Shape", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "bringForward", "parameters": [], "result": "Shape", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "Shape", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getAutofit", "parameters": [], "result": "Autofit", "description": "Returns the Autofit of the text within this shape."}, {"name": "getBorder", "parameters": [], "result": "Border", "description": "Returns the Border of the shape."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getContentAlignment", "parameters": [], "result": "ContentAlignment", "description": "Returns the ContentAlignment of the text in the shape."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getFill", "parameters": [], "result": "Fill", "description": "Returns the Fill of the shape."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getLink", "parameters": [], "result": "Link", "description": "Returns the Link or null if there is no link."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getParentPlaceholder", "parameters": [], "result": "PageElement", "description": "Returns the parent page element of the placeholder."}, {"name": "getPlaceholderIndex", "parameters": [], "result": "Integer", "description": "Returns the placeholder index of the shape."}, {"name": "getPlaceholderType", "parameters": [], "result": "PlaceholderType", "description": "Returns the placeholder type of the shape, or PlaceholderType.NONE if the shape is not\na placeholder."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getShapeType", "parameters": [], "result": "ShapeType", "description": "Returns the type of the shape."}, {"name": "getText", "parameters": [], "result": "TextRange", "description": "Returns the text content of the shape."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Shape", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "removeLink", "parameters": [], "result": "void", "description": "Removes a Link."}, {"name": "replaceWithImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "Image", "description": "Replaces this shape with an image provided by a BlobSource."}, {"name": "replaceWithImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "crop", "type": "Boolean"}], "result": "Image", "description": "Replaces this shape with an image provided by a BlobSource."}, {"name": "replaceWithImage", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "Image", "description": "Replaces this shape with an image."}, {"name": "replaceWithImage", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "crop", "type": "Boolean"}], "result": "Image", "description": "Replaces this shape with an image."}, {"name": "replaceWithSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "SheetsChart", "description": "Replaces this shape with an Google Sheets chart."}, {"name": "replaceWithSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "Image", "description": "Replaces this shape with an image of a Google Sheets chart."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Shape", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Shape", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "Shape", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "Shape", "description": "Sends the page element to the back of the page."}, {"name": "setContentAlignment", "parameters": [{"name": "contentAlignment", "type": "ContentAlignment"}], "result": "Shape", "description": "Sets the ContentAlignment of the text in the shape."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Shape", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "Shape", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "Shape", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setLinkSlide", "parameters": [{"name": "slideIndex", "type": "Integer"}], "result": "Link", "description": "Sets a Link to the given Slide using the zero-based index of the slide."}, {"name": "setLinkSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "Link", "description": "Sets a Link to the given Slide, the link is set by the given slide ID."}, {"name": "setLinkSlide", "parameters": [{"name": "slidePosition", "type": "SlidePosition"}], "result": "Link", "description": "Sets a Link to the given Slide using the relative position of the slide."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Link", "description": "Sets a Link to the given non-empty URL string."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "Shape", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Shape", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "Shape", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Shape", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Shape", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}, {"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "SheetsChart", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "asImage", "parameters": [], "result": "Image", "description": "Returns the chart as an image or null if the chart is not an embedded image."}, {"name": "bringForward", "parameters": [], "result": "SheetsChart", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "SheetsChart", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getChartId", "parameters": [], "result": "Integer", "description": "Gets the ID of the specific chart in the Google Sheets spreadsheet that is embedded."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getEmbedType", "parameters": [], "result": "SheetsChartEmbedType", "description": "Returns the embed type of the Sheets chart."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getLink", "parameters": [], "result": "Link", "description": "Returns the Link or null if there is no link."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getSpreadsheetId", "parameters": [], "result": "String", "description": "Gets the ID of the Google Sheets spreadsheet that contains the source chart."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "SheetsChart", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "refresh", "parameters": [], "result": "void", "description": "Refreshes the chart by replacing it with the latest version of the chart from Google Sheets."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "removeLink", "parameters": [], "result": "void", "description": "Removes a Link."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "SheetsChart", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "SheetsChart", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "SheetsChart", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "SheetsChart", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "SheetsChart", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "SheetsChart", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "SheetsChart", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setLinkSlide", "parameters": [{"name": "slideIndex", "type": "Integer"}], "result": "Link", "description": "Sets a Link to the given Slide using the zero-based index of the slide."}, {"name": "setLinkSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "Link", "description": "Sets a Link to the given Slide, the link is set by the given slide ID."}, {"name": "setLinkSlide", "parameters": [{"name": "slidePosition", "type": "SlidePosition"}], "result": "Link", "description": "Sets a Link to the given Slide using the relative position of the slide."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Link", "description": "Sets a Link to the given non-empty URL string."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "SheetsChart", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "SheetsChart", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "SheetsChart", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "SheetsChart", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "SheetsChart", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}, {"name": "duplicate", "parameters": [], "result": "Slide", "description": "Duplicates the slide."}, {"name": "getBackground", "parameters": [], "result": "PageBackground", "description": "Gets the page's background."}, {"name": "getColorScheme", "parameters": [], "result": "ColorScheme", "description": "Gets the ColorScheme associated with the page."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Returns the list of Group objects on the page."}, {"name": "getImages", "parameters": [], "result": "Image[]", "description": "Returns the list of Image objects on the page."}, {"name": "getLayout", "parameters": [], "result": "Layout", "description": "Gets the layout that the slide is based on or null if the slide is not based on a\nlayout."}, {"name": "getLines", "parameters": [], "result": "Line[]", "description": "Returns the list of Line objects on the page."}, {"name": "getNotesPage", "parameters": [], "result": "NotesPage", "description": "Returns the notes page associated with the slide."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Gets the unique ID for the page."}, {"name": "getPageElementById", "parameters": [{"name": "id", "type": "String"}], "result": "PageElement", "description": "Returns the PageElement on the page with the given ID, or null if none exists."}, {"name": "getPageElements", "parameters": [], "result": "PageElement[]", "description": "Returns the list of PageElement objects rendered on the page."}, {"name": "getPageType", "parameters": [], "result": "PageType", "description": "Gets the type of the page."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType or\nnull if a matching placeholder is not present."}, {"name": "getPlaceholder", "parameters": [{"name": "placeholderType", "type": "PlaceholderType"}, {"name": "placeholderIndex", "type": "Integer"}], "result": "PageElement", "description": "Returns the placeholder PageElement object for a specified PlaceholderType and\na placeholder index, or null if the placeholder is not present."}, {"name": "getPlaceholders", "parameters": [], "result": "PageElement[]", "description": "Returns the list of placeholder PageElement objects in the page."}, {"name": "getShapes", "parameters": [], "result": "Shape[]", "description": "Returns the list of Shape objects on the page."}, {"name": "getSheetsCharts", "parameters": [], "result": "SheetsChart[]", "description": "Returns the list of SheetsChart objects on the page."}, {"name": "getSlideLinkingMode", "parameters": [], "result": "SlideLinkingMode", "description": "Returns a SlideLinkingMode indicating if the slide is linked to another slide."}, {"name": "getSourcePresentationId", "parameters": [], "result": "String", "description": "Returns the source Presentation ID or null if the slide is not linked."}, {"name": "getSourceSlideObjectId", "parameters": [], "result": "String", "description": "Returns the source slide ID or null if the slide is not linked."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Returns the list of Table objects on the page."}, {"name": "getVideos", "parameters": [], "result": "Video[]", "description": "Returns the list of Video objects on the page."}, {"name": "getWordArts", "parameters": [], "result": "WordArt[]", "description": "Returns the list of WordArt objects on the page."}, {"name": "group", "parameters": [{"name": "pageElements", "type": "PageElement"}], "result": "Group", "description": "Groups all the specified page elements."}, {"name": "insertGroup", "parameters": [{"name": "group", "type": "Group"}], "result": "Group", "description": "Inserts a copy of the provided Group on the page."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the specified\nimage blob."}, {"name": "insertImage", "parameters": [{"name": "blobSource", "type": "BlobSource"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the specified image blob."}, {"name": "insertImage", "parameters": [{"name": "image", "type": "Image"}], "result": "Image", "description": "Inserts a copy of the provided Image on the page."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}], "result": "Image", "description": "Inserts an image at the top left corner of the page with a default size from the provided URL."}, {"name": "insertImage", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts an image on the page with the provided position and size from the provided URL."}, {"name": "insertLine", "parameters": [{"name": "line", "type": "Line"}], "result": "Line", "description": "Inserts a copy of the provided Line on the page."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startConnectionSite", "type": "ConnectionSite"}, {"name": "endConnectionSite", "type": "ConnectionSite"}], "result": "Line", "description": "Inserts a line on the page connecting two connection sites."}, {"name": "insertLine", "parameters": [{"name": "lineCategory", "type": "LineCategory"}, {"name": "startLeft", "type": "Number"}, {"name": "startTop", "type": "Number"}, {"name": "endLeft", "type": "Number"}, {"name": "endTop", "type": "Number"}], "result": "Line", "description": "Inserts a line on the page."}, {"name": "insertPageElement", "parameters": [{"name": "pageElement", "type": "PageElement"}], "result": "PageElement", "description": "Inserts a copy of the provided PageElement on the page."}, {"name": "insertShape", "parameters": [{"name": "shape", "type": "Shape"}], "result": "Shape", "description": "Inserts a copy of the provided Shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertShape", "parameters": [{"name": "shapeType", "type": "ShapeType"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a shape on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page."}, {"name": "insertSheetsChart", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "SheetsChart", "description": "Inserts a Google Sheets chart on the page with the provided position and size."}, {"name": "insertSheetsChart", "parameters": [{"name": "sheetsChart", "type": "SheetsChart"}], "result": "SheetsChart", "description": "Inserts a copy of the provided SheetsChart on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page."}, {"name": "insertSheetsChartAsImage", "parameters": [{"name": "sourceChart", "type": "EmbeddedChart"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Image", "description": "Inserts a Google Sheets chart as an Image on the page with the provided position and\nsize."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}], "result": "Table", "description": "Inserts a table on the page."}, {"name": "insertTable", "parameters": [{"name": "numRows", "type": "Integer"}, {"name": "numColumns", "type": "Integer"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Table", "description": "Inserts a table on the page with the provided position and size."}, {"name": "insertTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts a copy of the provided Table on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertTextBox", "parameters": [{"name": "text", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Shape", "description": "Inserts a text box Shape containing the provided string on the page."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}], "result": "Video", "description": "Inserts a video at the top left corner of the page with a default size."}, {"name": "insertVideo", "parameters": [{"name": "videoUrl", "type": "String"}, {"name": "left", "type": "Number"}, {"name": "top", "type": "Number"}, {"name": "width", "type": "Number"}, {"name": "height", "type": "Number"}], "result": "Video", "description": "Inserts a video on the page with the provided position and size."}, {"name": "insertVideo", "parameters": [{"name": "video", "type": "Video"}], "result": "Video", "description": "Inserts a copy of the provided Video on the page."}, {"name": "insertWordArt", "parameters": [{"name": "wordArt", "type": "WordArt"}], "result": "WordArt", "description": "Inserts a copy of the provided WordArt on the page."}, {"name": "move", "parameters": [{"name": "index", "type": "Integer"}], "result": "void", "description": "Move the slide to the specified index."}, {"name": "refreshSlide", "parameters": [], "result": "void", "description": "Refreshes the slide to reflect any changes made to the linked source slide."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "selectAsCurrentPage", "parameters": [], "result": "void", "description": "Selects the Page in the active presentation as the current page selection and removes any previous selection."}, {"name": "unlink", "parameters": [], "result": "void", "description": "Unlinks the current Slide from its source slide."}, {"name": "create", "parameters": [{"name": "name", "type": "String"}], "result": "Presentation", "description": "Creates and opens a new Presentation."}, {"name": "getActivePresentation", "parameters": [], "result": "Presentation", "description": "Returns the currently active presentation to which the script is container-bound, or null if there is no\nactive presentation."}, {"name": "getUi", "parameters": [], "result": "Ui", "description": "Returns an instance of the presentation's user-interface environment that allows the script to\nadd features like menus, dialogs, and sidebars."}, {"name": "newAffineTransformBuilder", "parameters": [], "result": "AffineTransformBuilder", "description": "Returns a new AffineTransformBuilder to build an AffineTransform."}, {"name": "openById", "parameters": [{"name": "id", "type": "String"}], "result": "Presentation", "description": "Opens the Presentation with the given ID."}, {"name": "openByUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Presentation", "description": "Opens the Presentation with the given URL."}, {"name": "getAlpha", "parameters": [], "result": "Number", "description": "Get the opacity of the color, in the interval from [0, 1.0], where 1.0 means fully opaque."}, {"name": "getColor", "parameters": [], "result": "Color", "description": "Get the color of the fill."}, {"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "Table", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "appendColumn", "parameters": [], "result": "TableColumn", "description": "Appends a new column to the right of the last column of the table."}, {"name": "appendRow", "parameters": [], "result": "TableRow", "description": "Appends a new row below the last row of the table."}, {"name": "bringForward", "parameters": [], "result": "Table", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "Table", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getCell", "parameters": [{"name": "rowIndex", "type": "Integer"}, {"name": "columnIndex", "type": "Integer"}], "result": "TableCell", "description": "Returns the specified cell in the table."}, {"name": "getColumn", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "TableColumn", "description": "Returns the specified column in the table."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getNumColumns", "parameters": [], "result": "Integer", "description": "Returns the number of columns in the table."}, {"name": "getNumRows", "parameters": [], "result": "Integer", "description": "Returns the number of rows in the table."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getRow", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "TableRow", "description": "Returns the specified row in the table."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "insertColumn", "parameters": [{"name": "index", "type": "Integer"}], "result": "TableColumn", "description": "Inserts a new column at the specified index of the table."}, {"name": "insertRow", "parameters": [{"name": "index", "type": "Integer"}], "result": "TableRow", "description": "Inserts a new row at the specified index of the table."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Table", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Table", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Table", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "Table", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "Table", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Table", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "Table", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "Table", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "Table", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Table", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "Table", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Table", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Table", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}, {"name": "getColumnIndex", "parameters": [], "result": "Integer", "description": "Returns the 0-based column index of the table cell."}, {"name": "getColumnSpan", "parameters": [], "result": "Integer", "description": "Returns the column span of the table cell."}, {"name": "getContentAlignment", "parameters": [], "result": "ContentAlignment", "description": "Returns the ContentAlignment of the text in the table cell."}, {"name": "getFill", "parameters": [], "result": "Fill", "description": "Returns the fill of the table cell."}, {"name": "getHeadCell", "parameters": [], "result": "TableCell", "description": "Returns the head cell of this table cell."}, {"name": "getMergeState", "parameters": [], "result": "CellMergeState", "description": "Returns the merge state of the table cell."}, {"name": "getParentColumn", "parameters": [], "result": "TableColumn", "description": "Returns the table column containing the current cell."}, {"name": "getParentRow", "parameters": [], "result": "TableRow", "description": "Returns the table row containing the current cell."}, {"name": "getParentTable", "parameters": [], "result": "Table", "description": "Returns the table containing the current cell."}, {"name": "getRowIndex", "parameters": [], "result": "Integer", "description": "Returns the 0-based row index of the table cell."}, {"name": "getRowSpan", "parameters": [], "result": "Integer", "description": "Returns the row span of the table cell."}, {"name": "getText", "parameters": [], "result": "TextRange", "description": "Returns the text content of the table cell."}, {"name": "setContentAlignment", "parameters": [{"name": "contentAlignment", "type": "ContentAlignment"}], "result": "TableCell", "description": "Sets the ContentAlignment of the text in the table cell."}, {"name": "getTableCells", "parameters": [], "result": "TableCell[]", "description": "Returns the list of TableCell instances."}, {"name": "getCell", "parameters": [{"name": "cellIndex", "type": "Integer"}], "result": "TableCell", "description": "Returns the cell at the specified index."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Returns the 0-based index of the column."}, {"name": "getNumCells", "parameters": [], "result": "Integer", "description": "Returns the number of cells in this column."}, {"name": "getParentTable", "parameters": [], "result": "Table", "description": "Returns the table containing the current column."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the width of the column in points."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the table column."}, {"name": "getCell", "parameters": [{"name": "cellIndex", "type": "Integer"}], "result": "TableCell", "description": "Returns the cell at the specified index."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Returns the 0-based index of the row."}, {"name": "getMinimumHeight", "parameters": [], "result": "Number", "description": "Returns the minimum height of the row in points."}, {"name": "getNumCells", "parameters": [], "result": "Integer", "description": "Returns the number of cells in this row."}, {"name": "getParentTable", "parameters": [], "result": "Table", "description": "Returns the table containing the current row."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the table row."}, {"name": "appendParagraph", "parameters": [{"name": "text", "type": "String"}], "result": "Paragraph", "description": "Appends a paragraph at the end of the text range."}, {"name": "appendRange", "parameters": [{"name": "textRange", "type": "TextRange"}], "result": "TextRange", "description": "Appends a copy of the provided text range to the end of the current text range."}, {"name": "appendRange", "parameters": [{"name": "textRange", "type": "TextRange"}, {"name": "matchSourceFormatting", "type": "Boolean"}], "result": "TextRange", "description": "Appends a copy of the provided text range to the end of the current text range."}, {"name": "appendText", "parameters": [{"name": "text", "type": "String"}], "result": "TextRange", "description": "Appends text at the end of the text range."}, {"name": "asRenderedString", "parameters": [], "result": "String", "description": "Returns the rendered text bounded by this range of the associated shape or table cell in a\nformat appropriate to display to end users."}, {"name": "asString", "parameters": [], "result": "String", "description": "Returns the raw text bounded by this range of the associated shape or table cell."}, {"name": "clear", "parameters": [], "result": "void", "description": "Clears the text bounded by this range."}, {"name": "clear", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffset", "type": "Integer"}], "result": "void", "description": "Clears the text bounded by the start and end offsets in the range."}, {"name": "find", "parameters": [{"name": "pattern", "type": "String"}], "result": "TextRange[]", "description": "Returns all the ranges matching the search pattern in the current text range."}, {"name": "find", "parameters": [{"name": "pattern", "type": "String"}, {"name": "startOffset", "type": "Integer"}], "result": "TextRange[]", "description": "Returns all the ranges matching the search pattern in the current text range starting from the\nstart offset."}, {"name": "getAutoTexts", "parameters": [], "result": "AutoText[]", "description": "Returns the auto texts within the current text range."}, {"name": "getEndIndex", "parameters": [], "result": "Integer", "description": "Returns the exclusive, 0-based index for the last character in this range."}, {"name": "getLength", "parameters": [], "result": "Integer", "description": "Returns the number of characters in this range."}, {"name": "getLinks", "parameters": [], "result": "TextRange[]", "description": "Returns a collection of text ranges that correspond to all Links within the current\ntext range or overlapping the current text range."}, {"name": "getListParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Returns the paragraphs in lists that overlap the current text range."}, {"name": "getListStyle", "parameters": [], "result": "ListStyle", "description": "Returns the ListStyle of the current text range."}, {"name": "getParagraphStyle", "parameters": [], "result": "ParagraphStyle", "description": "Returns the ParagraphStyle of the current text range."}, {"name": "getParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Returns the paragraphs that overlap the current text range."}, {"name": "getRange", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffset", "type": "Integer"}], "result": "TextRange", "description": "Returns a new TextRange covering part of the range from which it is derived."}, {"name": "getRuns", "parameters": [], "result": "TextRange[]", "description": "Returns the text runs that overlap the current text range."}, {"name": "getStartIndex", "parameters": [], "result": "Integer", "description": "Returns the inclusive, 0-based index for the first character in this range."}, {"name": "getTextStyle", "parameters": [], "result": "TextStyle", "description": "Returns the text style of the range, or null if the range is empty."}, {"name": "insertParagraph", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Paragraph", "description": "Inserts a paragraph at the start offset."}, {"name": "insertRange", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "textRange", "type": "TextRange"}], "result": "TextRange", "description": "Inserts a copy of the provided text range at the start offset."}, {"name": "insertRange", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "textRange", "type": "TextRange"}, {"name": "matchSourceFormatting", "type": "Boolean"}], "result": "TextRange", "description": "Inserts a copy of the provided text range at the start offset."}, {"name": "insertText", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "TextRange", "description": "Inserts text at the start offset."}, {"name": "isEmpty", "parameters": [], "result": "Boolean", "description": "Returns true if there are no characters in this range, and returns false\notherwise."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "replaceAllText", "parameters": [{"name": "findText", "type": "String"}, {"name": "replaceText", "type": "String"}, {"name": "matchCase", "type": "Boolean"}], "result": "Integer", "description": "Replaces all instances of text matching find text with replace text."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the TextRange in the active presentation and removes any previous\nselection."}, {"name": "setText", "parameters": [{"name": "newText", "type": "String"}], "result": "TextRange", "description": "Sets the text bounded by this range of the associated shape or table cell."}, {"name": "getBackgroundColor", "parameters": [], "result": "Color", "description": "Returns the background color of the text, or null if there are multiple styles on the\ntext."}, {"name": "getBaselineOffset", "parameters": [], "result": "TextBaselineOffset", "description": "Returns the vertical offset of text from its normal position, or null if there are\nmultiple styles on the text."}, {"name": "getFontFamily", "parameters": [], "result": "String", "description": "Returns the font family of the text, or null if there are multiple styles on the text."}, {"name": "getFontSize", "parameters": [], "result": "Number", "description": "Returns the font size of the text in points, or null if there are multiple styles on\nthe text."}, {"name": "getFontWeight", "parameters": [], "result": "Integer", "description": "Returns the font weight of the text, or null if there are multiple styles on the text."}, {"name": "getForegroundColor", "parameters": [], "result": "Color", "description": "Returns the foreground color of the text, or null if there are multiple styles on the\ntext."}, {"name": "getLink", "parameters": [], "result": "Link", "description": "Returns the Link on the text, or null if there is no link or if the link is on\npart of the text or if there are multiple links."}, {"name": "hasLink", "parameters": [], "result": "Boolean", "description": "Returns true if there is link on the text, false if not, or null if the\nlink is on part of the text or there are multiple links."}, {"name": "isBackgroundTransparent", "parameters": [], "result": "Boolean", "description": "Returns true if the background of the text is transparent, false if not, or\nnull if there are multiple styles on the text."}, {"name": "isBold", "parameters": [], "result": "Boolean", "description": "Returns true if the text is rendered as bold, false if not, or null if\nthere are multiple styles on the text."}, {"name": "isItalic", "parameters": [], "result": "Boolean", "description": "Returns true if the text is italicized, false if not, or null if there\nare multiple styles on the text."}, {"name": "isSmallCaps", "parameters": [], "result": "Boolean", "description": "Returns true if the text is in small capital letters, false if not, or null if there are multiple styles on the text."}, {"name": "isStrikethrough", "parameters": [], "result": "Boolean", "description": "Returns true if the text is struck through, false if not, or null if\nthere are multiple styles on the text."}, {"name": "isUnderline", "parameters": [], "result": "Boolean", "description": "Returns true if the text is underlined, false if not, or null if there\nare multiple styles on the text."}, {"name": "removeLink", "parameters": [], "result": "TextStyle", "description": "Removes a Link."}, {"name": "setBackgroundColor", "parameters": [{"name": "color", "type": "Color"}], "result": "TextStyle", "description": "Sets the background color of the text."}, {"name": "setBackgroundColor", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "TextStyle", "description": "Sets the background color of the text to the given RGB values from 0 to 255."}, {"name": "setBackgroundColor", "parameters": [{"name": "hexColor", "type": "String"}], "result": "TextStyle", "description": "Sets the background color of the text to the given hex color string."}, {"name": "setBackgroundColor", "parameters": [{"name": "color", "type": "ThemeColorType"}], "result": "TextStyle", "description": "Sets the background color of the text to the given ThemeColorType."}, {"name": "setBackgroundColorTransparent", "parameters": [], "result": "TextStyle", "description": "Sets the background color of the text to transparent."}, {"name": "setBaselineOffset", "parameters": [{"name": "offset", "type": "TextBaselineOffset"}], "result": "TextStyle", "description": "Sets the vertical offset of the text relative to its normal position."}, {"name": "setBold", "parameters": [{"name": "bold", "type": "Boolean"}], "result": "TextStyle", "description": "Sets whether the text should be rendered as bold."}, {"name": "setFontFamily", "parameters": [{"name": "fontFamily", "type": "String"}], "result": "TextStyle", "description": "Sets the font family of the text ."}, {"name": "setFontFamilyAndWeight", "parameters": [{"name": "fontFamily", "type": "String"}, {"name": "fontWeight", "type": "Integer"}], "result": "TextStyle", "description": "Sets the font family and weight of the text."}, {"name": "setFontSize", "parameters": [{"name": "fontSize", "type": "Number"}], "result": "TextStyle", "description": "Sets the font size of the text, in points."}, {"name": "setForegroundColor", "parameters": [{"name": "foregroundColor", "type": "Color"}], "result": "TextStyle", "description": "Sets the foreground color of the text."}, {"name": "setForegroundColor", "parameters": [{"name": "red", "type": "Integer"}, {"name": "green", "type": "Integer"}, {"name": "blue", "type": "Integer"}], "result": "TextStyle", "description": "Sets the foreground color of the text to the given RGB values from 0 to 255."}, {"name": "setForegroundColor", "parameters": [{"name": "hexColor", "type": "String"}], "result": "TextStyle", "description": "Sets the foreground color of the text to the given hex color string."}, {"name": "setForegroundColor", "parameters": [{"name": "color", "type": "ThemeColorType"}], "result": "TextStyle", "description": "Sets the foreground color of the text to the given ThemeColorType."}, {"name": "setItalic", "parameters": [{"name": "italic", "type": "Boolean"}], "result": "TextStyle", "description": "Sets the whether the text is italicized."}, {"name": "setLinkSlide", "parameters": [{"name": "slideIndex", "type": "Integer"}], "result": "TextStyle", "description": "Sets a Link to the given Slide using the zero-based index of the slide."}, {"name": "setLinkSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "TextStyle", "description": "Sets a Link to the given Slide, the link is set by the given slide ID."}, {"name": "setLinkSlide", "parameters": [{"name": "slidePosition", "type": "SlidePosition"}], "result": "TextStyle", "description": "Sets a Link to the given Slide using the relative position of the slide."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "TextStyle", "description": "Sets a Link to the given non-empty URL string."}, {"name": "setSmallCaps", "parameters": [{"name": "smallCaps", "type": "Boolean"}], "result": "TextStyle", "description": "Sets whether the text is rendered in small capital letters."}, {"name": "setStrikethrough", "parameters": [{"name": "strikethrough", "type": "Boolean"}], "result": "TextStyle", "description": "Sets whether the text is struck through."}, {"name": "setUnderline", "parameters": [{"name": "underline", "type": "Boolean"}], "result": "TextStyle", "description": "Sets whether the text is underlined."}, {"name": "getColorType", "parameters": [], "result": "ColorType", "description": "Get the type of this color."}, {"name": "getThemeColorType", "parameters": [], "result": "ThemeColorType", "description": "Get the theme color type of this color."}, {"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "Video", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "bringForward", "parameters": [], "result": "Video", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "Video", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getBorder", "parameters": [], "result": "Border", "description": "Returns the Border of the video."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getSource", "parameters": [], "result": "VideoSourceType", "description": "Gets the video source."}, {"name": "getThumbnailUrl", "parameters": [], "result": "String", "description": "Gets an URL to the video thumbnail."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Gets an URL to the video."}, {"name": "getVideoId", "parameters": [], "result": "String", "description": "Gets the video source's unique identifier for this video."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Video", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Video", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "Video", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "Video", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "Video", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Video", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "Video", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "Video", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "Video", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Video", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "Video", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "Video", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Video", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}, {"name": "alignOnPage", "parameters": [{"name": "alignmentPosition", "type": "AlignmentPosition"}], "result": "WordArt", "description": "Aligns the element to the specified alignment position on the page."}, {"name": "bringForward", "parameters": [], "result": "WordArt", "description": "Brings the page element forward on the page by one element."}, {"name": "bringToFront", "parameters": [], "result": "WordArt", "description": "Brings the page element to the front of the page."}, {"name": "duplicate", "parameters": [], "result": "PageElement", "description": "Duplicates the page element."}, {"name": "getConnectionSites", "parameters": [], "result": "ConnectionSite[]", "description": "Returns the list of ConnectionSites on the page element, or an empty list if the page\nelement does not have any connection sites."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the page element's description."}, {"name": "getHeight", "parameters": [], "result": "Number", "description": "Gets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "getInherentHeight", "parameters": [], "result": "Number", "description": "Returns the element's inherent height in points."}, {"name": "getInherentWidth", "parameters": [], "result": "Number", "description": "Returns the element's inherent width in points."}, {"name": "getLeft", "parameters": [], "result": "Number", "description": "Returns the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "getLink", "parameters": [], "result": "Link", "description": "Returns the Link or null if there is no link."}, {"name": "getObjectId", "parameters": [], "result": "String", "description": "Returns the unique ID for this object."}, {"name": "getPageElementType", "parameters": [], "result": "PageElementType", "description": "Returns the page element's type, represented as a PageElementType enum."}, {"name": "getParentGroup", "parameters": [], "result": "Group", "description": "Returns the group this page element belongs to, or null if the element is not in a\ngroup."}, {"name": "getParentPage", "parameters": [], "result": "Page", "description": "Returns the page this page element is on."}, {"name": "getRenderedText", "parameters": [], "result": "String", "description": "Gets the text that is rendered as word art."}, {"name": "getRotation", "parameters": [], "result": "Number", "description": "Returns the element's clockwise rotation angle around its center in degrees, where zero degrees\nmeans no rotation."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Returns the page element's title."}, {"name": "getTop", "parameters": [], "result": "Number", "description": "Gets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "getTransform", "parameters": [], "result": "AffineTransform", "description": "Returns the page element's transform."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Returns the element's width in points, which is the width of the element's bounding box when\nthe element has no rotation."}, {"name": "preconcatenateTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "WordArt", "description": "Preconcatenates the provided transform to the existing transform of the page element."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes the page element."}, {"name": "removeLink", "parameters": [], "result": "void", "description": "Removes a Link."}, {"name": "scaleHeight", "parameters": [{"name": "ratio", "type": "Number"}], "result": "WordArt", "description": "Scales the element's height by the specified ratio."}, {"name": "scaleWidth", "parameters": [{"name": "ratio", "type": "Number"}], "result": "WordArt", "description": "Scales the element's width by the specified ratio."}, {"name": "select", "parameters": [], "result": "void", "description": "Selects only the PageElement in the active presentation and removes any previous\nselection."}, {"name": "select", "parameters": [{"name": "replace", "type": "Boolean"}], "result": "void", "description": "Selects the PageElement in the active presentation."}, {"name": "sendBackward", "parameters": [], "result": "WordArt", "description": "Sends the page element backward on the page by one element."}, {"name": "sendToBack", "parameters": [], "result": "WordArt", "description": "Sends the page element to the back of the page."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "WordArt", "description": "Sets the page element's alt text description."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Number"}], "result": "WordArt", "description": "Sets the element's height in points, which is the height of the element's bounding box when the\nelement has no rotation."}, {"name": "setLeft", "parameters": [{"name": "left", "type": "Number"}], "result": "WordArt", "description": "Sets the element's horizontal position in points, measured from the upper-left corner of the\npage when the element has no rotation."}, {"name": "setLinkSlide", "parameters": [{"name": "slideIndex", "type": "Integer"}], "result": "Link", "description": "Sets a Link to the given Slide using the zero-based index of the slide."}, {"name": "setLinkSlide", "parameters": [{"name": "slide", "type": "Slide"}], "result": "Link", "description": "Sets a Link to the given Slide, the link is set by the given slide ID."}, {"name": "setLinkSlide", "parameters": [{"name": "slidePosition", "type": "SlidePosition"}], "result": "Link", "description": "Sets a Link to the given Slide using the relative position of the slide."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Link", "description": "Sets a Link to the given non-empty URL string."}, {"name": "setRotation", "parameters": [{"name": "angle", "type": "Number"}], "result": "WordArt", "description": "Sets the element's clockwise rotation angle around its center in degrees."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "WordArt", "description": "Sets the page element's alt text title."}, {"name": "setTop", "parameters": [{"name": "top", "type": "Number"}], "result": "WordArt", "description": "Sets the element's vertical position in points, measured from the upper-left corner of the page\nwhen the element has no rotation."}, {"name": "setTransform", "parameters": [{"name": "transform", "type": "AffineTransform"}], "result": "WordArt", "description": "Sets the transform of the page element with the provided transform."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "WordArt", "description": "Sets the element's width in points, which is the width of the element's bounding box when the\nelement has no rotation."}], "properties": [{"name": "CENTER", "type": "Enum", "url": "", "description": "Align to the center."}, {"name": "HORIZONTAL_CENTER", "type": "Enum", "url": "", "description": "Align to the horizontal center."}, {"name": "VERTICAL_CENTER", "type": "Enum", "url": "", "description": "Align to the vertical center."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "An arrow style that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No arrow."}, {"name": "STEALTH_ARROW", "type": "Enum", "url": "", "description": "Arrow with notched back."}, {"name": "FILL_ARROW", "type": "Enum", "url": "", "description": "Filled arrow."}, {"name": "FILL_CIRCLE", "type": "Enum", "url": "", "description": "Filled circle."}, {"name": "FILL_SQUARE", "type": "Enum", "url": "", "description": "Filled square."}, {"name": "FILL_DIAMOND", "type": "Enum", "url": "", "description": "Filled diamond."}, {"name": "OPEN_ARROW", "type": "Enum", "url": "", "description": "Hollow arrow."}, {"name": "OPEN_CIRCLE", "type": "Enum", "url": "", "description": "Hollow circle."}, {"name": "OPEN_SQUARE", "type": "Enum", "url": "", "description": "Hollow square."}, {"name": "OPEN_DIAMOND", "type": "Enum", "url": "", "description": "Hollow diamond."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "An auto text type that is not supported."}, {"name": "SLIDE_NUMBER", "type": "Enum", "url": "", "description": "A slide number."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "An autofit type that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "Autofit isn't applied."}, {"name": "TEXT_AUTOFIT", "type": "Enum", "url": "", "description": "Shrinks the text on overflow."}, {"name": "SHAPE_AUTOFIT", "type": "Enum", "url": "", "description": "Resizes the shape to fit the text."}, {"name": "NORMAL", "type": "Enum", "url": "", "description": "The cell is not merged."}, {"name": "HEAD", "type": "Enum", "url": "", "description": "The cell is merged and it is the head (i.e."}, {"name": "MERGED", "type": "Enum", "url": "", "description": "The cell is merged but is not the head (i.e."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A content alignment that is not supported."}, {"name": "TOP", "type": "Enum", "url": "", "description": "Aligns the content to the top of the content holder."}, {"name": "MIDDLE", "type": "Enum", "url": "", "description": "Aligns the content to the middle of the content holder."}, {"name": "BOTTOM", "type": "Enum", "url": "", "description": "Aligns the content to the bottom of the content holder."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A dash style that is not supported."}, {"name": "SOLID", "type": "Enum", "url": "", "description": "Solid line."}, {"name": "DOT", "type": "Enum", "url": "", "description": "Dotted line."}, {"name": "DASH", "type": "Enum", "url": "", "description": "Dashed line."}, {"name": "DASH_DOT", "type": "Enum", "url": "", "description": "Alternating dashes and dots."}, {"name": "LONG_DASH", "type": "Enum", "url": "", "description": "Line with large dashes."}, {"name": "LONG_DASH_DOT", "type": "Enum", "url": "", "description": "Alternating large dashes and dots."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A fill type that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No fill, so the background is transparent."}, {"name": "SOLID", "type": "Enum", "url": "", "description": "A solid color fill."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A line category that is not supported."}, {"name": "STRAIGHT", "type": "Enum", "url": "", "description": "Straight connectors, including straight connector 1."}, {"name": "BENT", "type": "Enum", "url": "", "description": "Bent connectors, including bent connector 2 to 5."}, {"name": "CURVED", "type": "Enum", "url": "", "description": "Curved connectors, including curved connector 2 to 5."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A line fill type that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No fill, so the line or outline is transparent."}, {"name": "SOLID", "type": "Enum", "url": "", "description": "A solid color fill."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A line type that is not supported."}, {"name": "STRAIGHT_CONNECTOR_1", "type": "Enum", "url": "", "description": "Straight connector 1 form."}, {"name": "BENT_CONNECTOR_2", "type": "Enum", "url": "", "description": "Bent connector 2 form."}, {"name": "BENT_CONNECTOR_3", "type": "Enum", "url": "", "description": "Bent connector 3 form."}, {"name": "BENT_CONNECTOR_4", "type": "Enum", "url": "", "description": "Bent connector 4 form."}, {"name": "BENT_CONNECTOR_5", "type": "Enum", "url": "", "description": "Bent connector 5 form."}, {"name": "CURVED_CONNECTOR_2", "type": "Enum", "url": "", "description": "Curved connector 2 form."}, {"name": "CURVED_CONNECTOR_3", "type": "Enum", "url": "", "description": "Curved connector 3 form."}, {"name": "CURVED_CONNECTOR_4", "type": "Enum", "url": "", "description": "Curved connector 4 form."}, {"name": "CURVED_CONNECTOR_5", "type": "Enum", "url": "", "description": "Curved connector 5 form."}, {"name": "STRAIGHT_LINE", "type": "Enum", "url": "", "description": "Straight line."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A link type that is not supported."}, {"name": "URL", "type": "Enum", "url": "", "description": "A link to an external web page."}, {"name": "SLIDE_POSITION", "type": "Enum", "url": "", "description": "A link to a specific slide in this presentation, addressed by its position."}, {"name": "SLIDE_ID", "type": "Enum", "url": "", "description": "A link to a specific slide in this presentation, addressed by its ID."}, {"name": "SLIDE_INDEX", "type": "Enum", "url": "", "description": "A link to a specific slide in this presentation, addressed by its zero-based index."}, {"name": "DISC_CIRCLE_SQUARE", "type": "Enum", "url": "", "description": "A list with a `DISC`, `CIRCLE` and `SQUARE` glyphs for the first 3 list nesting levels."}, {"name": "DIAMONDX_ARROW3D_SQUARE", "type": "Enum", "url": "", "description": "A list with a `DIAMONDX`, `ARROW3D` and `SQUARE` glyphs for the first 3 list nesting levels."}, {"name": "CHECKBOX", "type": "Enum", "url": "", "description": "A list with `CHECKBOX` glyphs for all list nesting levels."}, {"name": "ARROW_DIAMOND_DISC", "type": "Enum", "url": "", "description": "A list with a `ARROW`, `DIAMOND` and `DISC` glyphs for the first 3 list nesting levels."}, {"name": "STAR_CIRCLE_SQUARE", "type": "Enum", "url": "", "description": "A list with a `STAR`, `CIRCLE` and `SQUARE` glyphs for the first 3 list nesting levels."}, {"name": "ARROW3D_CIRCLE_SQUARE", "type": "Enum", "url": "", "description": "A list with a `ARROW3D`, `CIRCLE` and `SQUARE` glyphs for the first 3 list nesting levels."}, {"name": "LEFTTRIANGLE_DIAMOND_DISC", "type": "Enum", "url": "", "description": "A list with a `LEFTTRIANGLE`, `DIAMOND` and `DISC` glyphs for the first 3 list nesting levels."}, {"name": "DIAMONDX_HOLLOWDIAMOND_SQUARE", "type": "Enum", "url": "", "description": "A list with a `DIAMONDX`, `HOLLOWDIAMOND` and `SQUARE` glyphs for the first 3 list nesting\nlevels."}, {"name": "DIAMOND_CIRCLE_SQUARE", "type": "Enum", "url": "", "description": "A list with a `DIAMOND`, `CIRCLE` and `SQUARE` glyphs for the first 3 list nesting levels."}, {"name": "DIGIT_ALPHA_ROMAN", "type": "Enum", "url": "", "description": "A list with `DIGIT`, `ALPHA` and `ROMAN` glyphs for the first 3 list nesting levels, followed\nby periods."}, {"name": "DIGIT_ALPHA_ROMAN_PARENS", "type": "Enum", "url": "", "description": "A list with `DIGIT`, `ALPHA` and `ROMAN` glyphs for the first 3 list nesting levels, followed\nby parenthesis."}, {"name": "DIGIT_NESTED", "type": "Enum", "url": "", "description": "A list with `DIGIT` glyphs separated by periods, where each nesting level uses the previous\nnesting level's glyph as a prefix."}, {"name": "UPPERALPHA_ALPHA_ROMAN", "type": "Enum", "url": "", "description": "A list with `UPPERALPHA`, `ALPHA` and `ROMAN` glyphs for the first 3 list nesting levels,\nfollowed by periods."}, {"name": "UPPERROMAN_UPPERALPHA_DIGIT", "type": "Enum", "url": "", "description": "A list with `UPPERROMAN`, `UPPERALPHA` and `DIGIT` glyphs for the first 3 list nesting levels,\nfollowed by periods."}, {"name": "ZERODIGIT_ALPHA_ROMAN", "type": "Enum", "url": "", "description": "A list with `ZERODIGIT`, `ALPHA` and `ROMAN` glyphs for the first 3 list nesting levels,\nfollowed by periods."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A page background type that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No fill, so the background is rendered white."}, {"name": "SOLID", "type": "Enum", "url": "", "description": "A solid color fill."}, {"name": "PICTURE", "type": "Enum", "url": "", "description": "A picture that is stretched to fill the page."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "Represents a page element that is not supported and cannot be further classified."}, {"name": "SHAPE", "type": "Enum", "url": "", "description": "Represents a generic shape that does not have a more specific classification."}, {"name": "IMAGE", "type": "Enum", "url": "", "description": "Represents an image."}, {"name": "VIDEO", "type": "Enum", "url": "", "description": "Represents a video."}, {"name": "TABLE", "type": "Enum", "url": "", "description": "Represents a table."}, {"name": "GROUP", "type": "Enum", "url": "", "description": "Represents a collection of page elements joined as a single unit."}, {"name": "LINE", "type": "Enum", "url": "", "description": "Represents a line."}, {"name": "WORD_ART", "type": "Enum", "url": "", "description": "Represents word art."}, {"name": "SHEETS_CHART", "type": "Enum", "url": "", "description": "Represents a linked chart embedded from Google Sheets."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A page type that is not supported."}, {"name": "SLIDE", "type": "Enum", "url": "", "description": "A slide page."}, {"name": "LAYOUT", "type": "Enum", "url": "", "description": "A layout page."}, {"name": "MASTER", "type": "Enum", "url": "", "description": "A master page."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A paragraph alignment that is not supported."}, {"name": "START", "type": "Enum", "url": "", "description": "The paragraph is aligned to the start of the line."}, {"name": "CENTER", "type": "Enum", "url": "", "description": "The paragraph is centered."}, {"name": "END", "type": "Enum", "url": "", "description": "The paragraph is aligned to the end of the line."}, {"name": "JUSTIFIED", "type": "Enum", "url": "", "description": "The paragraph is justified."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A placeholder type that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "Not a Placeholder."}, {"name": "BODY", "type": "Enum", "url": "", "description": "Body text."}, {"name": "CHART", "type": "Enum", "url": "", "description": "Chart or graph."}, {"name": "CLIP_ART", "type": "Enum", "url": "", "description": "Clip art image."}, {"name": "CENTERED_TITLE", "type": "Enum", "url": "", "description": "Title centered."}, {"name": "DIAGRAM", "type": "Enum", "url": "", "description": "Diagram."}, {"name": "DATE_AND_TIME", "type": "Enum", "url": "", "description": "Date and time."}, {"name": "FOOTER", "type": "Enum", "url": "", "description": "Footer text."}, {"name": "HEADER", "type": "Enum", "url": "", "description": "Header text."}, {"name": "MEDIA", "type": "Enum", "url": "", "description": "Multimedia."}, {"name": "OBJECT", "type": "Enum", "url": "", "description": "Any content type."}, {"name": "PICTURE", "type": "Enum", "url": "", "description": "Picture."}, {"name": "SLIDE_NUMBER", "type": "Enum", "url": "", "description": "Number of a slide."}, {"name": "SUBTITLE", "type": "Enum", "url": "", "description": "Subtitle."}, {"name": "TABLE", "type": "Enum", "url": "", "description": "Table."}, {"name": "TITLE", "type": "Enum", "url": "", "description": "Slide title."}, {"name": "SLIDE_IMAGE", "type": "Enum", "url": "", "description": "Slide image."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A layout that is not supported."}, {"name": "BLANK", "type": "Enum", "url": "", "description": "Blank layout, with no placeholders."}, {"name": "CAPTION_ONLY", "type": "Enum", "url": "", "description": "Layout with a caption at the bottom."}, {"name": "TITLE", "type": "Enum", "url": "", "description": "Layout with a title and a subtitle."}, {"name": "TITLE_AND_BODY", "type": "Enum", "url": "", "description": "Layout with a title and body."}, {"name": "TITLE_AND_TWO_COLUMNS", "type": "Enum", "url": "", "description": "Layout with a title and two columns."}, {"name": "TITLE_ONLY", "type": "Enum", "url": "", "description": "Layout with only a title."}, {"name": "SECTION_HEADER", "type": "Enum", "url": "", "description": "Layout with a section title."}, {"name": "SECTION_TITLE_AND_DESCRIPTION", "type": "Enum", "url": "", "description": "Layout with a title and subtitle on one side and description on the other."}, {"name": "ONE_COLUMN_TEXT", "type": "Enum", "url": "", "description": "Layout with one title and one body, arranged in a single column."}, {"name": "MAIN_POINT", "type": "Enum", "url": "", "description": "Layout with a main point."}, {"name": "BIG_NUMBER", "type": "Enum", "url": "", "description": "Layout with a big number heading."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A selection type that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "No selection."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "Text selection."}, {"name": "TABLE_CELL", "type": "Enum", "url": "", "description": "Table cell selection."}, {"name": "PAGE", "type": "Enum", "url": "", "description": "Page selection in the thumbnail flimstrip."}, {"name": "PAGE_ELEMENT", "type": "Enum", "url": "", "description": "Page element selection."}, {"name": "CURRENT_PAGE", "type": "Enum", "url": "", "description": "Current page selection."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A shape type that is not supported."}, {"name": "TEXT_BOX", "type": "Enum", "url": "", "description": "Text box shape."}, {"name": "RECTANGLE", "type": "Enum", "url": "", "description": "Rectangle shape."}, {"name": "ROUND_RECTANGLE", "type": "Enum", "url": "", "description": "Round corner rectangle shape."}, {"name": "ELLIPSE", "type": "Enum", "url": "", "description": "Ellipse shape."}, {"name": "ARC", "type": "Enum", "url": "", "description": "Curved arc shape."}, {"name": "BENT_ARROW", "type": "Enum", "url": "", "description": "Bent arrow shape."}, {"name": "BENT_UP_ARROW", "type": "Enum", "url": "", "description": "Bent up arrow shape."}, {"name": "BEVEL", "type": "Enum", "url": "", "description": "Bevel shape."}, {"name": "BLOCK_ARC", "type": "Enum", "url": "", "description": "Block arc shape."}, {"name": "BRACE_PAIR", "type": "Enum", "url": "", "description": "Brace pair shape."}, {"name": "BRACKET_PAIR", "type": "Enum", "url": "", "description": "Bracket pair shape."}, {"name": "CAN", "type": "Enum", "url": "", "description": "Can shape."}, {"name": "CHEVRON", "type": "Enum", "url": "", "description": "Chevron shape."}, {"name": "CHORD", "type": "Enum", "url": "", "description": "Chord shape."}, {"name": "CLOUD", "type": "Enum", "url": "", "description": "Cloud shape."}, {"name": "CORNER", "type": "Enum", "url": "", "description": "Corner shape."}, {"name": "CUBE", "type": "Enum", "url": "", "description": "Cube shape."}, {"name": "CURVED_DOWN_ARROW", "type": "Enum", "url": "", "description": "Curved down arrow shape."}, {"name": "CURVED_LEFT_ARROW", "type": "Enum", "url": "", "description": "Curved left arrow shape."}, {"name": "CURVED_RIGHT_ARROW", "type": "Enum", "url": "", "description": "Curved right arrow shape."}, {"name": "CURVED_UP_ARROW", "type": "Enum", "url": "", "description": "Curved up arrow shape."}, {"name": "DECAGON", "type": "Enum", "url": "", "description": "Decagon shape."}, {"name": "DIAGONAL_STRIPE", "type": "Enum", "url": "", "description": "Diagonal stripe shape."}, {"name": "DIAMOND", "type": "Enum", "url": "", "description": "Diamond shape."}, {"name": "DODECAGON", "type": "Enum", "url": "", "description": "Dodecagon shape."}, {"name": "DONUT", "type": "Enum", "url": "", "description": "Donut shape."}, {"name": "DOUBLE_WAVE", "type": "Enum", "url": "", "description": "Double wave shape."}, {"name": "DOWN_ARROW", "type": "Enum", "url": "", "description": "Down arrow shape."}, {"name": "DOWN_ARROW_CALLOUT", "type": "Enum", "url": "", "description": "Callout down arrow shape."}, {"name": "FOLDED_CORNER", "type": "Enum", "url": "", "description": "Folded corner shape."}, {"name": "FRAME", "type": "Enum", "url": "", "description": "Frame shape."}, {"name": "HALF_FRAME", "type": "Enum", "url": "", "description": "Half frame shape."}, {"name": "HEART", "type": "Enum", "url": "", "description": "Heart shape."}, {"name": "HEPTAGON", "type": "Enum", "url": "", "description": "Heptagon shape."}, {"name": "HEXAGON", "type": "Enum", "url": "", "description": "Hexagon shape."}, {"name": "HOME_PLATE", "type": "Enum", "url": "", "description": "Home plate shape."}, {"name": "HORIZONTAL_SCROLL", "type": "Enum", "url": "", "description": "Horizontal scroll shape."}, {"name": "IRREGULAR_SEAL_1", "type": "Enum", "url": "", "description": "Irregular seal 1 shape."}, {"name": "IRREGULAR_SEAL_2", "type": "Enum", "url": "", "description": "Irregular seal 2 shape."}, {"name": "LEFT_ARROW", "type": "Enum", "url": "", "description": "Left arrow shape."}, {"name": "LEFT_ARROW_CALLOUT", "type": "Enum", "url": "", "description": "Callout left arrow shape."}, {"name": "LEFT_BRACE", "type": "Enum", "url": "", "description": "Left brace shape."}, {"name": "LEFT_BRACKET", "type": "Enum", "url": "", "description": "Left bracket shape."}, {"name": "LEFT_RIGHT_ARROW", "type": "Enum", "url": "", "description": "Left right arrow shape."}, {"name": "LEFT_RIGHT_ARROW_CALLOUT", "type": "Enum", "url": "", "description": "Callout left right arrow shape."}, {"name": "LEFT_RIGHT_UP_ARROW", "type": "Enum", "url": "", "description": "Left right up arrow shape."}, {"name": "LEFT_UP_ARROW", "type": "Enum", "url": "", "description": "Left up arrow shape."}, {"name": "LIGHTNING_BOLT", "type": "Enum", "url": "", "description": "Lightning bolt shape."}, {"name": "MATH_DIVIDE", "type": "Enum", "url": "", "description": "Divide math shape."}, {"name": "MATH_EQUAL", "type": "Enum", "url": "", "description": "Equal math shape."}, {"name": "MATH_MINUS", "type": "Enum", "url": "", "description": "Minus math shape."}, {"name": "MATH_MULTIPLY", "type": "Enum", "url": "", "description": "Multiply math shape."}, {"name": "MATH_NOT_EQUAL", "type": "Enum", "url": "", "description": "Not equal math shape."}, {"name": "MATH_PLUS", "type": "Enum", "url": "", "description": "Plus math shape."}, {"name": "MOON", "type": "Enum", "url": "", "description": "Moon shape."}, {"name": "NO_SMOKING", "type": "Enum", "url": "", "description": "No smoking shape."}, {"name": "NOTCHED_RIGHT_ARROW", "type": "Enum", "url": "", "description": "Notched right arrow shape."}, {"name": "OCTAGON", "type": "Enum", "url": "", "description": "Octagon shape."}, {"name": "PARALLELOGRAM", "type": "Enum", "url": "", "description": "Parallelogram shape."}, {"name": "PENTAGON", "type": "Enum", "url": "", "description": "Pentagon shape."}, {"name": "PIE", "type": "Enum", "url": "", "description": "Pie shape."}, {"name": "PLAQUE", "type": "Enum", "url": "", "description": "Plaque shape."}, {"name": "PLUS", "type": "Enum", "url": "", "description": "Plus shape."}, {"name": "QUAD_ARROW", "type": "Enum", "url": "", "description": "Quad-arrow shape."}, {"name": "QUAD_ARROW_CALLOUT", "type": "Enum", "url": "", "description": "Callout quad-arrow shape."}, {"name": "RIBBON", "type": "Enum", "url": "", "description": "Ribbon shape."}, {"name": "RIBBON_2", "type": "Enum", "url": "", "description": "Ribbon 2 shape."}, {"name": "RIGHT_ARROW", "type": "Enum", "url": "", "description": "Right arrow shape."}, {"name": "RIGHT_ARROW_CALLOUT", "type": "Enum", "url": "", "description": "Callout right arrow shape."}, {"name": "RIGHT_BRACE", "type": "Enum", "url": "", "description": "Right brace shape."}, {"name": "RIGHT_BRACKET", "type": "Enum", "url": "", "description": "Right bracket shape."}, {"name": "ROUND_1_RECTANGLE", "type": "Enum", "url": "", "description": "One round corner rectangle shape."}, {"name": "ROUND_2_DIAGONAL_RECTANGLE", "type": "Enum", "url": "", "description": "Two diagonal round corner rectangle shape."}, {"name": "ROUND_2_SAME_RECTANGLE", "type": "Enum", "url": "", "description": "Two same-side round corner rectangle shape."}, {"name": "RIGHT_TRIANGLE", "type": "Enum", "url": "", "description": "Right triangle shape."}, {"name": "SMILEY_FACE", "type": "Enum", "url": "", "description": "Smiley face shape."}, {"name": "SNIP_1_RECTANGLE", "type": "Enum", "url": "", "description": "One snip corner rectangle shape."}, {"name": "SNIP_2_DIAGONAL_RECTANGLE", "type": "Enum", "url": "", "description": "Two diagonal snip corner rectangle shape."}, {"name": "SNIP_2_SAME_RECTANGLE", "type": "Enum", "url": "", "description": "Two same-side snip corner rectangle shape."}, {"name": "SNIP_ROUND_RECTANGLE", "type": "Enum", "url": "", "description": "One snip one round corner rectangle shape."}, {"name": "STAR_10", "type": "Enum", "url": "", "description": "Ten pointed star shape."}, {"name": "STAR_12", "type": "Enum", "url": "", "description": "Twelve pointed star shape."}, {"name": "STAR_16", "type": "Enum", "url": "", "description": "Sixteen pointed star shape."}, {"name": "STAR_24", "type": "Enum", "url": "", "description": "Twenty four pointed star shape."}, {"name": "STAR_32", "type": "Enum", "url": "", "description": "Thirty two pointed star shape."}, {"name": "STAR_4", "type": "Enum", "url": "", "description": "Four pointed star shape."}, {"name": "STAR_5", "type": "Enum", "url": "", "description": "Five pointed star shape."}, {"name": "STAR_6", "type": "Enum", "url": "", "description": "Six pointed star shape."}, {"name": "STAR_7", "type": "Enum", "url": "", "description": "Seven pointed star shape."}, {"name": "STAR_8", "type": "Enum", "url": "", "description": "Eight pointed star shape."}, {"name": "STRIPED_RIGHT_ARROW", "type": "Enum", "url": "", "description": "Striped right arrow shape."}, {"name": "SUN", "type": "Enum", "url": "", "description": "Sun shape."}, {"name": "TRAPEZOID", "type": "Enum", "url": "", "description": "Trapezoid shape."}, {"name": "TRIANGLE", "type": "Enum", "url": "", "description": "Triangle shape."}, {"name": "UP_ARROW", "type": "Enum", "url": "", "description": "Up arrow shape."}, {"name": "UP_ARROW_CALLOUT", "type": "Enum", "url": "", "description": "Callout up arrow shape."}, {"name": "UP_DOWN_ARROW", "type": "Enum", "url": "", "description": "Up down arrow shape."}, {"name": "UTURN_ARROW", "type": "Enum", "url": "", "description": "U-turn arrow shape."}, {"name": "VERTICAL_SCROLL", "type": "Enum", "url": "", "description": "Vertical scroll shape."}, {"name": "WAVE", "type": "Enum", "url": "", "description": "Wave shape."}, {"name": "WEDGE_ELLIPSE_CALLOUT", "type": "Enum", "url": "", "description": "Callout wedge ellipse shape."}, {"name": "WEDGE_RECTANGLE_CALLOUT", "type": "Enum", "url": "", "description": "Callout wedge rectangle shape."}, {"name": "WEDGE_ROUND_RECTANGLE_CALLOUT", "type": "Enum", "url": "", "description": "Callout wedge round rectangle shape."}, {"name": "FLOW_CHART_ALTERNATE_PROCESS", "type": "Enum", "url": "", "description": "Alternate process flow shape."}, {"name": "FLOW_CHART_COLLATE", "type": "Enum", "url": "", "description": "Collate flow shape."}, {"name": "FLOW_CHART_CONNECTOR", "type": "Enum", "url": "", "description": "Connector flow shape."}, {"name": "FLOW_CHART_DECISION", "type": "Enum", "url": "", "description": "Decision flow shape."}, {"name": "FLOW_CHART_DELAY", "type": "Enum", "url": "", "description": "Delay flow shape."}, {"name": "FLOW_CHART_DISPLAY", "type": "Enum", "url": "", "description": "Display flow shape."}, {"name": "FLOW_CHART_DOCUMENT", "type": "Enum", "url": "", "description": "Document flow shape."}, {"name": "FLOW_CHART_EXTRACT", "type": "Enum", "url": "", "description": "Extract flow shape."}, {"name": "FLOW_CHART_INPUT_OUTPUT", "type": "Enum", "url": "", "description": "Input output flow shape."}, {"name": "FLOW_CHART_INTERNAL_STORAGE", "type": "Enum", "url": "", "description": "Internal storage flow shape."}, {"name": "FLOW_CHART_MAGNETIC_DISK", "type": "Enum", "url": "", "description": "Magnetic disk flow shape."}, {"name": "FLOW_CHART_MAGNETIC_DRUM", "type": "Enum", "url": "", "description": "Magnetic drum flow shape."}, {"name": "FLOW_CHART_MAGNETIC_TAPE", "type": "Enum", "url": "", "description": "Magnetic tape flow shape."}, {"name": "FLOW_CHART_MANUAL_INPUT", "type": "Enum", "url": "", "description": "Manual input flow shape."}, {"name": "FLOW_CHART_MANUAL_OPERATION", "type": "Enum", "url": "", "description": "Manual operation flow shape."}, {"name": "FLOW_CHART_MERGE", "type": "Enum", "url": "", "description": "Merge flow shape."}, {"name": "FLOW_CHART_MULTIDOCUMENT", "type": "Enum", "url": "", "description": "Multi-document flow shape."}, {"name": "FLOW_CHART_OFFLINE_STORAGE", "type": "Enum", "url": "", "description": "Offline storage flow shape."}, {"name": "FLOW_CHART_OFFPAGE_CONNECTOR", "type": "Enum", "url": "", "description": "Off-page connector flow shape."}, {"name": "FLOW_CHART_ONLINE_STORAGE", "type": "Enum", "url": "", "description": "Online storage flow shape."}, {"name": "FLOW_CHART_OR", "type": "Enum", "url": "", "description": "Or flow shape."}, {"name": "FLOW_CHART_PREDEFINED_PROCESS", "type": "Enum", "url": "", "description": "Predefined process flow shape."}, {"name": "FLOW_CHART_PREPARATION", "type": "Enum", "url": "", "description": "Preparation flow shape."}, {"name": "FLOW_CHART_PROCESS", "type": "Enum", "url": "", "description": "Process flow shape."}, {"name": "FLOW_CHART_PUNCHED_CARD", "type": "Enum", "url": "", "description": "Punched card flow shape."}, {"name": "FLOW_CHART_PUNCHED_TAPE", "type": "Enum", "url": "", "description": "Punched tape flow shape."}, {"name": "FLOW_CHART_SORT", "type": "Enum", "url": "", "description": "Sort flow shape."}, {"name": "FLOW_CHART_SUMMING_JUNCTION", "type": "Enum", "url": "", "description": "Summing junction flow shape."}, {"name": "FLOW_CHART_TERMINATOR", "type": "Enum", "url": "", "description": "Terminator flow shape."}, {"name": "ARROW_EAST", "type": "Enum", "url": "", "description": "East arrow shape."}, {"name": "ARROW_NORTH_EAST", "type": "Enum", "url": "", "description": "Northeast arrow shape."}, {"name": "ARROW_NORTH", "type": "Enum", "url": "", "description": "North arrow shape."}, {"name": "SPEECH", "type": "Enum", "url": "", "description": "Speech shape."}, {"name": "STARBURST", "type": "Enum", "url": "", "description": "Star burst shape."}, {"name": "TEARDROP", "type": "Enum", "url": "", "description": "Teardrop shape."}, {"name": "ELLIPSE_RIBBON", "type": "Enum", "url": "", "description": "Ellipse ribbon shape."}, {"name": "ELLIPSE_RIBBON_2", "type": "Enum", "url": "", "description": "Ellipse ribbon 2 shape."}, {"name": "CLOUD_CALLOUT", "type": "Enum", "url": "", "description": "Callout cloud shape."}, {"name": "CUSTOM", "type": "Enum", "url": "", "description": "Custom shape."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "Represents a chart that is not supported and cannot be further classified."}, {"name": "IMAGE", "type": "Enum", "url": "", "description": "Indicates that the chart is embedded as an image."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A slide linking mode that isn't supported."}, {"name": "LINKED", "type": "Enum", "url": "", "description": "Indicates that slides are linked."}, {"name": "NOT_LINKED", "type": "Enum", "url": "", "description": "Indicates that slides aren't linked."}, {"name": "NEXT_SLIDE", "type": "Enum", "url": "", "description": "The next slide."}, {"name": "PREVIOUS_SLIDE", "type": "Enum", "url": "", "description": "The previous slide."}, {"name": "FIRST_SLIDE", "type": "Enum", "url": "", "description": "The first slide in the presentation."}, {"name": "LAST_SLIDE", "type": "Enum", "url": "", "description": "The last slide in the presentation."}, {"name": "AlignmentPosition", "type": "AlignmentPosition", "url": "/apps-script/reference/slides/alignment-position", "description": "An enumeration of the types of alignment positions."}, {"name": "ArrowStyle", "type": "ArrowStyle", "url": "/apps-script/reference/slides/arrow-style", "description": "An enumeration of the different arrow styles that a Line can have."}, {"name": "AutoTextType", "type": "AutoTextType", "url": "/apps-script/reference/slides/auto-text-type", "description": "An enumeration of the types of auto text."}, {"name": "AutofitType", "type": "AutofitType", "url": "/apps-script/reference/slides/autofit-type", "description": "An enumeration of autofit types."}, {"name": "CellMergeState", "type": "CellMergeState", "url": "/apps-script/reference/slides/cell-merge-state", "description": "An enumeration of the different merge states of a table cell."}, {"name": "ColorType", "type": "ColorType", "url": "https://developers.google.com/apps-script/reference/base/color-type.html", "description": "An enumeration of color types."}, {"name": "ContentAlignment", "type": "ContentAlignment", "url": "/apps-script/reference/slides/content-alignment", "description": "An enumeration of values used to specify content alignment."}, {"name": "DashStyle", "type": "DashStyle", "url": "/apps-script/reference/slides/dash-style", "description": "An enumeration of the different dash styles that a Line can have."}, {"name": "FillType", "type": "FillType", "url": "/apps-script/reference/slides/fill-type", "description": "An enumeration of fill types."}, {"name": "LineCategory", "type": "LineCategory", "url": "/apps-script/reference/slides/line-category", "description": "An enumeration of the categories of Line."}, {"name": "LineFillType", "type": "LineFillType", "url": "/apps-script/reference/slides/line-fill-type", "description": "An enumeration of the types of LineFill."}, {"name": "LineType", "type": "LineType", "url": "/apps-script/reference/slides/line-type", "description": "An enumeration of the types of Line."}, {"name": "LinkType", "type": "LinkType", "url": "/apps-script/reference/slides/link-type", "description": "An enumeration of the types of links."}, {"name": "ListPreset", "type": "ListPreset", "url": "/apps-script/reference/slides/list-preset", "description": "An enumeration of the types of list presets."}, {"name": "PageBackgroundType", "type": "PageBackgroundType", "url": "/apps-script/reference/slides/page-background-type", "description": "An enumeration of the types of page backgrounds."}, {"name": "PageElementType", "type": "PageElementType", "url": "/apps-script/reference/slides/page-element-type", "description": "An enumeration of the types of page elements."}, {"name": "PageType", "type": "PageType", "url": "/apps-script/reference/slides/page-type", "description": "An enumeration of the types of pages."}, {"name": "ParagraphAlignment", "type": "ParagraphAlignment", "url": "/apps-script/reference/slides/paragraph-alignment", "description": "An enumeration of the types of paragraph alignment."}, {"name": "PlaceholderType", "type": "PlaceholderType", "url": "/apps-script/reference/slides/placeholder-type", "description": "An enumeration of the types of placeholders."}, {"name": "PredefinedLayout", "type": "PredefinedLayout", "url": "/apps-script/reference/slides/predefined-layout", "description": "An enumeration of the predefined layouts."}, {"name": "SelectionType", "type": "SelectionType", "url": "/apps-script/reference/slides/selection-type", "description": "An enumeration of the types of selections."}, {"name": "ShapeType", "type": "ShapeType", "url": "/apps-script/reference/slides/shape-type", "description": "An enumeration of the types of shapes."}, {"name": "SheetsChartEmbedType", "type": "SheetsChartEmbedType", "url": "/apps-script/reference/slides/sheets-chart-embed-type", "description": "An enumeration of Sheets chart embed types."}, {"name": "SlideLinkingMode", "type": "SlideLinkingMode", "url": "/apps-script/reference/slides/slide-linking-mode", "description": "An enumeration of the ways Slides can be linked."}, {"name": "SlidePosition", "type": "SlidePosition", "url": "/apps-script/reference/slides/slide-position", "description": "An enumeration of the types of slide positions."}, {"name": "SpacingMode", "type": "SpacingMode", "url": "/apps-script/reference/slides/spacing-mode", "description": "An enumeration of the types of spacing modes."}, {"name": "TextBaselineOffset", "type": "TextBaselineOffset", "url": "/apps-script/reference/slides/text-baseline-offset", "description": "An enumeration of the types of text baseline offset."}, {"name": "TextDirection", "type": "TextDirection", "url": "/apps-script/reference/slides/text-direction", "description": "An enumeration of the types of text directions."}, {"name": "ThemeColorType", "type": "ThemeColorType", "url": "/apps-script/reference/slides/theme-color-type", "description": "An enumeration of theme colors."}, {"name": "VideoSourceType", "type": "VideoSourceType", "url": "/apps-script/reference/slides/video-source-type", "description": "An enumeration of the types of video source."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A spacing mode that is not supported."}, {"name": "NEVER_COLLAPSE", "type": "Enum", "url": "", "description": "Paragraph spacing is always rendered."}, {"name": "COLLAPSE_LISTS", "type": "Enum", "url": "", "description": "Paragraph spacing is skipped between list elements."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "An text baseline offset that is not supported."}, {"name": "NONE", "type": "Enum", "url": "", "description": "The text is not vertically offset."}, {"name": "SUPERSCRIPT", "type": "Enum", "url": "", "description": "The text is vertically offset upwards."}, {"name": "SUBSCRIPT", "type": "Enum", "url": "", "description": "The text is vertically offset downwards."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A text direction that is not supported."}, {"name": "LEFT_TO_RIGHT", "type": "Enum", "url": "", "description": "The text goes from left to right."}, {"name": "RIGHT_TO_LEFT", "type": "Enum", "url": "", "description": "The text goes from right to left."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "Represents a theme color that is not supported."}, {"name": "DARK1", "type": "Enum", "url": "", "description": "Represents the first dark color."}, {"name": "LIGHT1", "type": "Enum", "url": "", "description": "Represents the first light color."}, {"name": "DARK2", "type": "Enum", "url": "", "description": "Represents the second dark color."}, {"name": "LIGHT2", "type": "Enum", "url": "", "description": "Represents the second light color."}, {"name": "ACCENT1", "type": "Enum", "url": "", "description": "Represents the first accent color."}, {"name": "ACCENT2", "type": "Enum", "url": "", "description": "Represents the second accent color."}, {"name": "ACCENT3", "type": "Enum", "url": "", "description": "Represents the third accent color."}, {"name": "ACCENT4", "type": "Enum", "url": "", "description": "Represents the fourth accent color."}, {"name": "ACCENT5", "type": "Enum", "url": "", "description": "Represents the fifth accent color."}, {"name": "ACCENT6", "type": "Enum", "url": "", "description": "Represents the sixth accent color."}, {"name": "HYPERLINK", "type": "Enum", "url": "", "description": "Represents the color to use for hyperlinks."}, {"name": "FOLLOWED_HYPERLINK", "type": "Enum", "url": "", "description": "Represents the color to use for visited hyperlinks."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "A video source type that is not supported."}, {"name": "YOUTUBE", "type": "Enum", "url": "", "description": "YouTube video."}]},
{"url": "https://developers.google.com/apps-script/reference/sites/page-type", "name": "PageType", "type": "enum", "methods": [], "properties": [{"name": "WEB_PAGE", "type": "Enum", "url": "", "description": ""}, {"name": "LIST_PAGE", "type": "Enum", "url": "", "description": ""}, {"name": "ANNOUNCEMENT", "type": "Enum", "url": "", "description": ""}, {"name": "ANNOUNCEMENTS_PAGE", "type": "Enum", "url": "", "description": ""}, {"name": "FILE_CABINET_PAGE", "type": "Enum", "url": "", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/sites/comment", "name": "Comment", "type": "class", "methods": [{"name": "deleteComment", "parameters": [], "result": "void", "description": "Deletes this comment."}, {"name": "getAuthorEmail", "parameters": [], "result": "String", "description": "Gets the email address of the author of this comment."}, {"name": "getAuthorName", "parameters": [], "result": "String", "description": "Gets the name of the author of this comment."}, {"name": "getContent", "parameters": [], "result": "String", "description": "Return the content of this comment as a String."}, {"name": "getDatePublished", "parameters": [], "result": "Date", "description": "Return the date this comment was originally published."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Return the date this comment was last updated."}, {"name": "getParent", "parameters": [], "result": "Page", "description": "Get the parent page of this comment."}, {"name": "setContent", "parameters": [{"name": "content", "type": "String"}], "result": "Comment", "description": "Set the content of this comment."}, {"name": "setParent", "parameters": [{"name": "parent", "type": "Page"}], "result": "Comment", "description": "Set the parent page of this comment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/sites/column", "name": "Column", "type": "class", "methods": [{"name": "deleteColumn", "parameters": [], "result": "void", "description": "Deletes this column."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this column."}, {"name": "getParent", "parameters": [], "result": "Page", "description": "Returns the List Page this column belongs to."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Column", "description": "Sets the name of this column."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/sites/sites-app", "name": "SitesApp", "type": "class", "methods": [{"name": "copySite", "parameters": [{"name": "domain", "type": "String"}, {"name": "name", "type": "String"}, {"name": "title", "type": "String"}, {"name": "summary", "type": "String"}, {"name": "site", "type": "Site"}], "result": "Site", "description": "Creates a new Site by copying an existing Site."}, {"name": "createSite", "parameters": [{"name": "domain", "type": "String"}, {"name": "name", "type": "String"}, {"name": "title", "type": "String"}, {"name": "summary", "type": "String"}], "result": "Site", "description": "Creates a new Site."}, {"name": "getActivePage", "parameters": [], "result": "Page", "description": "Returns the active page, if the script is hosted in a container, or null otherwise."}, {"name": "getActiveSite", "parameters": [], "result": "Site", "description": "Returns the active container, if the script is hosted in a container, or null\notherwise."}, {"name": "getAllSites", "parameters": [{"name": "domain", "type": "String"}], "result": "Site[]", "description": "Retrieves first 200 Sites belonging to this domain."}, {"name": "getAllSites", "parameters": [{"name": "domain", "type": "String"}, {"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "Site[]", "description": "Retrieves all Sites belonging to this domain."}, {"name": "getPageByUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Page", "description": "Retrieves a Page by url."}, {"name": "getSite", "parameters": [{"name": "name", "type": "String"}], "result": "Site", "description": "Retrieves a Site for the given Google Site, if the user is a consumer who does not have a\nhosted domain."}, {"name": "getSite", "parameters": [{"name": "domain", "type": "String"}, {"name": "name", "type": "String"}], "result": "Site", "description": "Retrieves a Site for the given Google Site."}, {"name": "getSiteByUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Site", "description": "Retrieves a Site by url."}, {"name": "getSites", "parameters": [], "result": "Site[]", "description": "Retrieves first page of Sites for a user, if the user is a consumer who does not have a hosted\ndomain."}, {"name": "getSites", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "Site[]", "description": "Retrieves Sites for a user between the given bounds if the user is a consumer who does not have\na hosted domain."}, {"name": "getSites", "parameters": [{"name": "domain", "type": "String"}], "result": "Site[]", "description": "Retrieves first page of Sites belonging to this user in this domain."}, {"name": "getSites", "parameters": [{"name": "domain", "type": "String"}, {"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "Site[]", "description": "Retrieves all Sites belonging to this user in this domain for the given range given."}], "properties": [{"name": "AttachmentType", "type": "AttachmentType", "url": "/apps-script/reference/sites/attachment-type", "description": ""}, {"name": "PageType", "type": "PageType", "url": "/apps-script/reference/sites/page-type", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/sites/attachment", "name": "Attachment", "type": "class", "methods": [{"name": "deleteAttachment", "parameters": [], "result": "void", "description": "Deletes this attachment."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getAttachmentType", "parameters": [], "result": "AttachmentType", "description": "Return the type of this attachment (HOSTED or WEB)."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getContentType", "parameters": [], "result": "String", "description": "Return the mime type of this attachment."}, {"name": "getDatePublished", "parameters": [], "result": "Date", "description": "Return the date this attachment was first published."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Return the description of this attachment."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Return the date this attachment was last updated."}, {"name": "getParent", "parameters": [], "result": "Page", "description": "Get the parent page of this attachment."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Return the title of this attachment."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Return the download url for this attachment."}, {"name": "setContentType", "parameters": [{"name": "contentType", "type": "String"}], "result": "Attachment", "description": "Set the mime type of this attachment."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Attachment", "description": "Set the descripton of this attachment."}, {"name": "setFrom", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Attachment", "description": "Set the actual data of this attachment."}, {"name": "setParent", "parameters": [{"name": "parent", "type": "Page"}], "result": "Attachment", "description": "Set the parent page of this attachment."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Attachment", "description": "Set the title of this attachment."}, {"name": "setUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Attachment", "description": "Sets the download url for this attachment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/slides/auto-text", "name": "AutoText", "type": "class", "methods": [{"name": "getAutoTextType", "parameters": [], "result": "AutoTextType", "description": "Returns the type of auto text."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Returns the index of the auto text."}, {"name": "getRange", "parameters": [], "result": "TextRange", "description": "Returns a TextRange spanning the auto text."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/sites/list-item", "name": "ListItem", "type": "class", "methods": [{"name": "deleteListItem", "parameters": [], "result": "void", "description": "Deletes this list item."}, {"name": "getDatePublished", "parameters": [], "result": "Date", "description": "Return the date this list item was first published."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Return the date this comment was last updated."}, {"name": "getParent", "parameters": [], "result": "Page", "description": "Get the parent page of this list item."}, {"name": "getValueByIndex", "parameters": [{"name": "index", "type": "Integer"}], "result": "String", "description": "Get the value of this ListItem for a numbered column."}, {"name": "getValueByName", "parameters": [{"name": "name", "type": "String"}], "result": "String", "description": "Get the value of this ListItem for a named column."}, {"name": "setParent", "parameters": [{"name": "parent", "type": "Page"}], "result": "ListItem", "description": "Set the parent page of this list item."}, {"name": "setValueByIndex", "parameters": [{"name": "index", "type": "Integer"}, {"name": "value", "type": "String"}], "result": "ListItem", "description": "Set the value of this ListItem for a numbered column."}, {"name": "setValueByName", "parameters": [{"name": "name", "type": "String"}, {"name": "value", "type": "String"}], "result": "ListItem", "description": "Set the value of this ListItem for a numbered column."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/sites/page", "name": "Page", "type": "class", "methods": [{"name": "addColumn", "parameters": [{"name": "name", "type": "String"}], "result": "Column", "description": "Add a new column to the list."}, {"name": "addHostedAttachment", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Attachment", "description": "Add an attachment to the page."}, {"name": "addHostedAttachment", "parameters": [{"name": "blob", "type": "BlobSource"}, {"name": "description", "type": "String"}], "result": "Attachment", "description": "Add an attachment to the page."}, {"name": "addListItem", "parameters": [{"name": "values", "type": "String"}], "result": "ListItem", "description": "Add a list item to the list."}, {"name": "addWebAttachment", "parameters": [{"name": "title", "type": "String"}, {"name": "description", "type": "String"}, {"name": "url", "type": "String"}], "result": "Attachment", "description": "Add a web attachment to the page."}, {"name": "createAnnouncement", "parameters": [{"name": "title", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create an announcements for this page."}, {"name": "createAnnouncement", "parameters": [{"name": "title", "type": "String"}, {"name": "html", "type": "String"}, {"name": "asDraft", "type": "Boolean"}], "result": "Page", "description": "Create an announcements for this page."}, {"name": "createAnnouncementsPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create a new announcements page."}, {"name": "createFileCabinetPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create a new file-cabinet page."}, {"name": "createListPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Page", "description": "Create a new list page."}, {"name": "createPageFromTemplate", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "template", "type": "Page"}], "result": "Page", "description": "Create a new page from a template."}, {"name": "createWebPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create a new web page."}, {"name": "deletePage", "parameters": [], "result": "void", "description": "Deletes this page."}, {"name": "getAllDescendants", "parameters": [], "result": "Page[]", "description": "Gets an array of descendant pages (direct and indirect), up to a limit of 200 pages."}, {"name": "getAllDescendants", "parameters": [{"name": "options", "type": "Object"}], "result": "Page[]", "description": "Gets an array of descendant pages, with optional advanced arguments."}, {"name": "getAnnouncements", "parameters": [], "result": "Page[]", "description": "Get the announcements for this page."}, {"name": "getAnnouncements", "parameters": [{"name": "optOptions", "type": "Object"}], "result": "Page[]", "description": "Get the announcements for this page."}, {"name": "getAttachments", "parameters": [], "result": "Attachment[]", "description": "Get the attachments for this page."}, {"name": "getAttachments", "parameters": [{"name": "optOptions", "type": "Object"}], "result": "Attachment[]", "description": "Get the attachments for this page."}, {"name": "getAuthors", "parameters": [], "result": "String[]", "description": "Get the emails of the authors of the page"}, {"name": "getChildByName", "parameters": [{"name": "name", "type": "String"}], "result": "Page", "description": "Gets a particular child page."}, {"name": "getChildren", "parameters": [], "result": "Page[]", "description": "Gets an array of child pages, up to a limit of 200 pages."}, {"name": "getChildren", "parameters": [{"name": "options", "type": "Object"}], "result": "Page[]", "description": "Gets an array of child pages, with optional advanced arguments."}, {"name": "getColumns", "parameters": [], "result": "Column[]", "description": "Get the columns for the list."}, {"name": "getDatePublished", "parameters": [], "result": "Date", "description": "Return the date this page was first published."}, {"name": "getHtmlContent", "parameters": [], "result": "String", "description": "Get the HTML content of the page."}, {"name": "getIsDraft", "parameters": [], "result": "Boolean", "description": "Returns whether the page is in draft mode."}, {"name": "getLastEdited", "parameters": [], "result": "Date", "description": "Return the last edit date, which includes only content edits."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Return the last updated date, which includes non-content changes like moving."}, {"name": "getListItems", "parameters": [], "result": "ListItem[]", "description": "Get the list items for the list."}, {"name": "getListItems", "parameters": [{"name": "optOptions", "type": "Object"}], "result": "ListItem[]", "description": "Get the list items for the list."}, {"name": "getName", "parameters": [], "result": "String", "description": "Return the page's name."}, {"name": "getPageType", "parameters": [], "result": "PageType", "description": "Return the type of this page as a SitesApp.PageType enum."}, {"name": "getParent", "parameters": [], "result": "Page", "description": "Return the parent of this page."}, {"name": "getTextContent", "parameters": [], "result": "String", "description": "Returns the plain-text page content."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Return the page's title."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Get the url of the page."}, {"name": "isDeleted", "parameters": [], "result": "Boolean", "description": "Returns whether a page has been deleted."}, {"name": "isTemplate", "parameters": [], "result": "Boolean", "description": "Returns whether this page is a copyable template."}, {"name": "publishAsTemplate", "parameters": [{"name": "name", "type": "String"}], "result": "Page", "description": "Publish this page as a copyable template."}, {"name": "search", "parameters": [{"name": "query", "type": "String"}], "result": "Page[]", "description": "Gets an array of descendant pages that match a search query, up to a limit of 200 pages."}, {"name": "search", "parameters": [{"name": "query", "type": "String"}, {"name": "options", "type": "Object"}], "result": "Page[]", "description": "Gets an array of descendant pages that match a search query, with optional advanced arguments."}, {"name": "setHtmlContent", "parameters": [{"name": "html", "type": "String"}], "result": "Page", "description": "Set the HTML content of the page."}, {"name": "setIsDraft", "parameters": [{"name": "draft", "type": "Boolean"}], "result": "Page", "description": "Sets whether the page is in draft mode."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Page", "description": "Set this page's name."}, {"name": "setParent", "parameters": [{"name": "parent", "type": "Page"}], "result": "Page", "description": "Set the parent of this page."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Page", "description": "Set the page's title."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/maps/type", "name": "Type", "type": "enum", "methods": [], "properties": [{"name": "ROADMAP", "type": "Enum", "url": "", "description": "A standard roadmap, as is normally shown on the Google Maps website."}, {"name": "SATELLITE", "type": "Enum", "url": "", "description": "A satellite map."}, {"name": "TERRAIN", "type": "Enum", "url": "", "description": "A physical relief map, showing terrain and vegetation."}, {"name": "HYBRID", "type": "Enum", "url": "", "description": "A hybrid of the satellite and roadmap maps, showing a transparent layer of major streets and\nplace names on the satellite map."}]},
{"url": "https://developers.google.com/apps-script/reference/sites", "name": "Sites", "type": "sites", "methods": [{"name": "deleteAttachment", "parameters": [], "result": "void", "description": "Deletes this attachment."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getAttachmentType", "parameters": [], "result": "AttachmentType", "description": "Return the type of this attachment (HOSTED or WEB)."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getContentType", "parameters": [], "result": "String", "description": "Return the mime type of this attachment."}, {"name": "getDatePublished", "parameters": [], "result": "Date", "description": "Return the date this attachment was first published."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Return the description of this attachment."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Return the date this attachment was last updated."}, {"name": "getParent", "parameters": [], "result": "Page", "description": "Get the parent page of this attachment."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Return the title of this attachment."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Return the download url for this attachment."}, {"name": "setContentType", "parameters": [{"name": "contentType", "type": "String"}], "result": "Attachment", "description": "Set the mime type of this attachment."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Attachment", "description": "Set the descripton of this attachment."}, {"name": "setFrom", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Attachment", "description": "Set the actual data of this attachment."}, {"name": "setParent", "parameters": [{"name": "parent", "type": "Page"}], "result": "Attachment", "description": "Set the parent page of this attachment."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Attachment", "description": "Set the title of this attachment."}, {"name": "setUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Attachment", "description": "Sets the download url for this attachment."}, {"name": "deleteColumn", "parameters": [], "result": "void", "description": "Deletes this column."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this column."}, {"name": "getParent", "parameters": [], "result": "Page", "description": "Returns the List Page this column belongs to."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Column", "description": "Sets the name of this column."}, {"name": "deleteComment", "parameters": [], "result": "void", "description": "Deletes this comment."}, {"name": "getAuthorEmail", "parameters": [], "result": "String", "description": "Gets the email address of the author of this comment."}, {"name": "getAuthorName", "parameters": [], "result": "String", "description": "Gets the name of the author of this comment."}, {"name": "getContent", "parameters": [], "result": "String", "description": "Return the content of this comment as a String."}, {"name": "getDatePublished", "parameters": [], "result": "Date", "description": "Return the date this comment was originally published."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Return the date this comment was last updated."}, {"name": "getParent", "parameters": [], "result": "Page", "description": "Get the parent page of this comment."}, {"name": "setContent", "parameters": [{"name": "content", "type": "String"}], "result": "Comment", "description": "Set the content of this comment."}, {"name": "setParent", "parameters": [{"name": "parent", "type": "Page"}], "result": "Comment", "description": "Set the parent page of this comment."}, {"name": "deleteListItem", "parameters": [], "result": "void", "description": "Deletes this list item."}, {"name": "getDatePublished", "parameters": [], "result": "Date", "description": "Return the date this list item was first published."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Return the date this comment was last updated."}, {"name": "getParent", "parameters": [], "result": "Page", "description": "Get the parent page of this list item."}, {"name": "getValueByIndex", "parameters": [{"name": "index", "type": "Integer"}], "result": "String", "description": "Get the value of this ListItem for a numbered column."}, {"name": "getValueByName", "parameters": [{"name": "name", "type": "String"}], "result": "String", "description": "Get the value of this ListItem for a named column."}, {"name": "setParent", "parameters": [{"name": "parent", "type": "Page"}], "result": "ListItem", "description": "Set the parent page of this list item."}, {"name": "setValueByIndex", "parameters": [{"name": "index", "type": "Integer"}, {"name": "value", "type": "String"}], "result": "ListItem", "description": "Set the value of this ListItem for a numbered column."}, {"name": "setValueByName", "parameters": [{"name": "name", "type": "String"}, {"name": "value", "type": "String"}], "result": "ListItem", "description": "Set the value of this ListItem for a numbered column."}, {"name": "addColumn", "parameters": [{"name": "name", "type": "String"}], "result": "Column", "description": "Add a new column to the list."}, {"name": "addHostedAttachment", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "Attachment", "description": "Add an attachment to the page."}, {"name": "addHostedAttachment", "parameters": [{"name": "blob", "type": "BlobSource"}, {"name": "description", "type": "String"}], "result": "Attachment", "description": "Add an attachment to the page."}, {"name": "addListItem", "parameters": [{"name": "values", "type": "String"}], "result": "ListItem", "description": "Add a list item to the list."}, {"name": "addWebAttachment", "parameters": [{"name": "title", "type": "String"}, {"name": "description", "type": "String"}, {"name": "url", "type": "String"}], "result": "Attachment", "description": "Add a web attachment to the page."}, {"name": "createAnnouncement", "parameters": [{"name": "title", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create an announcements for this page."}, {"name": "createAnnouncement", "parameters": [{"name": "title", "type": "String"}, {"name": "html", "type": "String"}, {"name": "asDraft", "type": "Boolean"}], "result": "Page", "description": "Create an announcements for this page."}, {"name": "createAnnouncementsPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create a new announcements page."}, {"name": "createFileCabinetPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create a new file-cabinet page."}, {"name": "createListPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Page", "description": "Create a new list page."}, {"name": "createPageFromTemplate", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "template", "type": "Page"}], "result": "Page", "description": "Create a new page from a template."}, {"name": "createWebPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create a new web page."}, {"name": "deletePage", "parameters": [], "result": "void", "description": "Deletes this page."}, {"name": "getAllDescendants", "parameters": [], "result": "Page[]", "description": "Gets an array of descendant pages (direct and indirect), up to a limit of 200 pages."}, {"name": "getAllDescendants", "parameters": [{"name": "options", "type": "Object"}], "result": "Page[]", "description": "Gets an array of descendant pages, with optional advanced arguments."}, {"name": "getAnnouncements", "parameters": [], "result": "Page[]", "description": "Get the announcements for this page."}, {"name": "getAnnouncements", "parameters": [{"name": "optOptions", "type": "Object"}], "result": "Page[]", "description": "Get the announcements for this page."}, {"name": "getAttachments", "parameters": [], "result": "Attachment[]", "description": "Get the attachments for this page."}, {"name": "getAttachments", "parameters": [{"name": "optOptions", "type": "Object"}], "result": "Attachment[]", "description": "Get the attachments for this page."}, {"name": "getAuthors", "parameters": [], "result": "String[]", "description": "Get the emails of the authors of the page"}, {"name": "getChildByName", "parameters": [{"name": "name", "type": "String"}], "result": "Page", "description": "Gets a particular child page."}, {"name": "getChildren", "parameters": [], "result": "Page[]", "description": "Gets an array of child pages, up to a limit of 200 pages."}, {"name": "getChildren", "parameters": [{"name": "options", "type": "Object"}], "result": "Page[]", "description": "Gets an array of child pages, with optional advanced arguments."}, {"name": "getColumns", "parameters": [], "result": "Column[]", "description": "Get the columns for the list."}, {"name": "getDatePublished", "parameters": [], "result": "Date", "description": "Return the date this page was first published."}, {"name": "getHtmlContent", "parameters": [], "result": "String", "description": "Get the HTML content of the page."}, {"name": "getIsDraft", "parameters": [], "result": "Boolean", "description": "Returns whether the page is in draft mode."}, {"name": "getLastEdited", "parameters": [], "result": "Date", "description": "Return the last edit date, which includes only content edits."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Return the last updated date, which includes non-content changes like moving."}, {"name": "getListItems", "parameters": [], "result": "ListItem[]", "description": "Get the list items for the list."}, {"name": "getListItems", "parameters": [{"name": "optOptions", "type": "Object"}], "result": "ListItem[]", "description": "Get the list items for the list."}, {"name": "getName", "parameters": [], "result": "String", "description": "Return the page's name."}, {"name": "getPageType", "parameters": [], "result": "PageType", "description": "Return the type of this page as a SitesApp.PageType enum."}, {"name": "getParent", "parameters": [], "result": "Page", "description": "Return the parent of this page."}, {"name": "getTextContent", "parameters": [], "result": "String", "description": "Returns the plain-text page content."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Return the page's title."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Get the url of the page."}, {"name": "isDeleted", "parameters": [], "result": "Boolean", "description": "Returns whether a page has been deleted."}, {"name": "isTemplate", "parameters": [], "result": "Boolean", "description": "Returns whether this page is a copyable template."}, {"name": "publishAsTemplate", "parameters": [{"name": "name", "type": "String"}], "result": "Page", "description": "Publish this page as a copyable template."}, {"name": "search", "parameters": [{"name": "query", "type": "String"}], "result": "Page[]", "description": "Gets an array of descendant pages that match a search query, up to a limit of 200 pages."}, {"name": "search", "parameters": [{"name": "query", "type": "String"}, {"name": "options", "type": "Object"}], "result": "Page[]", "description": "Gets an array of descendant pages that match a search query, with optional advanced arguments."}, {"name": "setHtmlContent", "parameters": [{"name": "html", "type": "String"}], "result": "Page", "description": "Set the HTML content of the page."}, {"name": "setIsDraft", "parameters": [{"name": "draft", "type": "Boolean"}], "result": "Page", "description": "Sets whether the page is in draft mode."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Page", "description": "Set this page's name."}, {"name": "setParent", "parameters": [{"name": "parent", "type": "Page"}], "result": "Page", "description": "Set the parent of this page."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Page", "description": "Set the page's title."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Site", "description": "Adds the given user to the list of editors for the Site."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Site", "description": "Adds the given user to the list of editors for the Site."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Site", "description": "Adds the given array of users to the list of editors for the Site."}, {"name": "addOwner", "parameters": [{"name": "email", "type": "String"}], "result": "Site", "description": "Add a new owner to the website"}, {"name": "addOwner", "parameters": [{"name": "user", "type": "User"}], "result": "Site", "description": "Add a new owner to the website"}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Site", "description": "Adds the given user to the list of viewers for the Site."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Site", "description": "Adds the given user to the list of viewers for the Site."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Site", "description": "Adds the given array of users to the list of viewers for the Site."}, {"name": "createAnnouncementsPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create a new announcements page."}, {"name": "createFileCabinetPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create a new file-cabinet page."}, {"name": "createListPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}, {"name": "columnNames", "type": "String"}], "result": "Page", "description": "Create a new list page."}, {"name": "createPageFromTemplate", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "template", "type": "Page"}], "result": "Page", "description": "Create a new page from a template."}, {"name": "createWebPage", "parameters": [{"name": "title", "type": "String"}, {"name": "name", "type": "String"}, {"name": "html", "type": "String"}], "result": "Page", "description": "Create a new web page."}, {"name": "getAllDescendants", "parameters": [], "result": "Page[]", "description": "Gets an array of descendant pages (direct and indirect), up to a limit of 200 pages."}, {"name": "getAllDescendants", "parameters": [{"name": "options", "type": "Object"}], "result": "Page[]", "description": "Gets an array of descendant pages, with optional advanced arguments."}, {"name": "getChildByName", "parameters": [{"name": "name", "type": "String"}], "result": "Page", "description": "Gets a particular child page."}, {"name": "getChildren", "parameters": [], "result": "Page[]", "description": "Gets an array of child pages, up to a limit of 200 pages."}, {"name": "getChildren", "parameters": [{"name": "options", "type": "Object"}], "result": "Page[]", "description": "Gets an array of child pages, with optional advanced arguments."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Site."}, {"name": "getName", "parameters": [], "result": "String", "description": "Return the name of the site"}, {"name": "getOwners", "parameters": [], "result": "User[]", "description": "Retrieves list of owners for the site"}, {"name": "getSummary", "parameters": [], "result": "String", "description": "Return the summary of the web site"}, {"name": "getTemplates", "parameters": [], "result": "Page[]", "description": "Returns all template pages."}, {"name": "getTheme", "parameters": [], "result": "String", "description": "Gets the theme of the site"}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Return the title of the site"}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Retrieves the url of this Site."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this Site."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Site", "description": "Removes the given user from the list of editors for the Site."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Site", "description": "Removes the given user from the list of editors for the Site."}, {"name": "removeOwner", "parameters": [{"name": "email", "type": "String"}], "result": "Site", "description": "Removes owner from the site by user email"}, {"name": "removeOwner", "parameters": [{"name": "user", "type": "User"}], "result": "Site", "description": "Removes owner from the site"}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Site", "description": "Removes the given user from the list of viewers and commenters for the Site."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Site", "description": "Removes the given user from the list of viewers and commenters for the Site."}, {"name": "search", "parameters": [{"name": "query", "type": "String"}], "result": "Page[]", "description": "Gets an array of descendant pages that match a search query, up to a limit of 200 pages."}, {"name": "search", "parameters": [{"name": "query", "type": "String"}, {"name": "options", "type": "Object"}], "result": "Page[]", "description": "Gets an array of descendant pages that match a search query, with optional advanced arguments."}, {"name": "setSummary", "parameters": [{"name": "summary", "type": "String"}], "result": "Site", "description": "Set the summary of the web site"}, {"name": "setTheme", "parameters": [{"name": "theme", "type": "String"}], "result": "Site", "description": "Sets the theme of the site"}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Site", "description": "Set the title of the site"}, {"name": "copySite", "parameters": [{"name": "domain", "type": "String"}, {"name": "name", "type": "String"}, {"name": "title", "type": "String"}, {"name": "summary", "type": "String"}, {"name": "site", "type": "Site"}], "result": "Site", "description": "Creates a new Site by copying an existing Site."}, {"name": "createSite", "parameters": [{"name": "domain", "type": "String"}, {"name": "name", "type": "String"}, {"name": "title", "type": "String"}, {"name": "summary", "type": "String"}], "result": "Site", "description": "Creates a new Site."}, {"name": "getActivePage", "parameters": [], "result": "Page", "description": "Returns the active page, if the script is hosted in a container, or null otherwise."}, {"name": "getActiveSite", "parameters": [], "result": "Site", "description": "Returns the active container, if the script is hosted in a container, or null\notherwise."}, {"name": "getAllSites", "parameters": [{"name": "domain", "type": "String"}], "result": "Site[]", "description": "Retrieves first 200 Sites belonging to this domain."}, {"name": "getAllSites", "parameters": [{"name": "domain", "type": "String"}, {"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "Site[]", "description": "Retrieves all Sites belonging to this domain."}, {"name": "getPageByUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Page", "description": "Retrieves a Page by url."}, {"name": "getSite", "parameters": [{"name": "name", "type": "String"}], "result": "Site", "description": "Retrieves a Site for the given Google Site, if the user is a consumer who does not have a\nhosted domain."}, {"name": "getSite", "parameters": [{"name": "domain", "type": "String"}, {"name": "name", "type": "String"}], "result": "Site", "description": "Retrieves a Site for the given Google Site."}, {"name": "getSiteByUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Site", "description": "Retrieves a Site by url."}, {"name": "getSites", "parameters": [], "result": "Site[]", "description": "Retrieves first page of Sites for a user, if the user is a consumer who does not have a hosted\ndomain."}, {"name": "getSites", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "Site[]", "description": "Retrieves Sites for a user between the given bounds if the user is a consumer who does not have\na hosted domain."}, {"name": "getSites", "parameters": [{"name": "domain", "type": "String"}], "result": "Site[]", "description": "Retrieves first page of Sites belonging to this user in this domain."}, {"name": "getSites", "parameters": [{"name": "domain", "type": "String"}, {"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "Site[]", "description": "Retrieves all Sites belonging to this user in this domain for the given range given."}], "properties": [{"name": "WEB", "type": "Enum", "url": "", "description": ""}, {"name": "HOSTED", "type": "Enum", "url": "", "description": ""}, {"name": "WEB_PAGE", "type": "Enum", "url": "", "description": ""}, {"name": "LIST_PAGE", "type": "Enum", "url": "", "description": ""}, {"name": "ANNOUNCEMENT", "type": "Enum", "url": "", "description": ""}, {"name": "ANNOUNCEMENTS_PAGE", "type": "Enum", "url": "", "description": ""}, {"name": "FILE_CABINET_PAGE", "type": "Enum", "url": "", "description": ""}, {"name": "AttachmentType", "type": "AttachmentType", "url": "/apps-script/reference/sites/attachment-type", "description": ""}, {"name": "PageType", "type": "PageType", "url": "/apps-script/reference/sites/page-type", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/maps/marker-size", "name": "MarkerSize", "type": "enum", "methods": [], "properties": [{"name": "TINY", "type": "Enum", "url": "", "description": "Tiny sized markets (smallest available). Labels will not be visible on markers of this size."}, {"name": "MID", "type": "Enum", "url": "", "description": "Medium sized markers (largest available)."}, {"name": "SMALL", "type": "Enum", "url": "", "description": "Small sized markers. Labels will not be visible on markers of this size."}]},
{"url": "https://developers.google.com/apps-script/reference/maps/format", "name": "Format", "type": "enum", "methods": [], "properties": [{"name": "PNG", "type": "Enum", "url": "", "description": "8-bit PNG format."}, {"name": "PNG8", "type": "Enum", "url": "", "description": "8-bit PNG format."}, {"name": "PNG32", "type": "Enum", "url": "", "description": "32-bit PNG format."}, {"name": "GIF", "type": "Enum", "url": "", "description": "GIF format."}, {"name": "JPG", "type": "Enum", "url": "", "description": "JPEG format."}, {"name": "JPG_BASELINE", "type": "Enum", "url": "", "description": "Non-progressive JPEG format."}]},
{"url": "https://developers.google.com/apps-script/reference/maps/static-map-enums", "name": "StaticMapEnums", "type": "class", "methods": [], "properties": [{"name": "Color", "type": "Color", "url": "/apps-script/reference/maps/color", "description": ""}, {"name": "Format", "type": "Format", "url": "/apps-script/reference/maps/format", "description": ""}, {"name": "MarkerSize", "type": "MarkerSize", "url": "/apps-script/reference/maps/marker-size", "description": ""}, {"name": "Type", "type": "Type", "url": "/apps-script/reference/maps/type", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/maps/mode", "name": "Mode", "type": "enum", "methods": [], "properties": [{"name": "DRIVING", "type": "Enum", "url": "", "description": "Driving directions via roads."}, {"name": "WALKING", "type": "Enum", "url": "", "description": "Walking directions via pedestrian paths and sidewalks (where available)."}, {"name": "BICYCLING", "type": "Enum", "url": "", "description": "Bicycling directions via bicycle paths and preferred streets (where available)."}, {"name": "TRANSIT", "type": "Enum", "url": "", "description": "Transit directions via public transit routes (where available). This mode requires that you set\neither the departure or arrival time.\n\n// Log all available data for a public-transit trip.\nvar directions = Maps.newDirectionFinder()\n    .setOrigin('The Cloisters, New York, NY')\n    .setDestination('JFK airport, New York, NY')\n    .setMode(Maps.DirectionFinder.Mode.TRANSIT)\n    .setDepart(new Date())\n    .getDirections();\nvar route = directions.routes[0];\nLogger.log(route);\n"}]},
{"url": "https://developers.google.com/apps-script/reference/maps/avoid", "name": "Avoid", "type": "enum", "methods": [], "properties": [{"name": "TOLLS", "type": "Enum", "url": "", "description": "Avoid tolls."}, {"name": "HIGHWAYS", "type": "Enum", "url": "", "description": "Avoid highways."}]},
{"url": "https://developers.google.com/apps-script/reference/maps/geocoder", "name": "Geocoder", "type": "class", "methods": [{"name": "geocode", "parameters": [{"name": "address", "type": "String"}], "result": "Object", "description": "Gets the approximate geographic points for a given address."}, {"name": "reverseGeocode", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "Object", "description": "Gets the approximate addresses for a given geographic point."}, {"name": "reverseGeocode", "parameters": [{"name": "swLatitude", "type": "Number"}, {"name": "swLongitude", "type": "Number"}, {"name": "neLatitude", "type": "Number"}, {"name": "neLongitude", "type": "Number"}], "result": "Object", "description": "Gets the approximate addresses for a given area."}, {"name": "setBounds", "parameters": [{"name": "swLatitude", "type": "Number"}, {"name": "swLongitude", "type": "Number"}, {"name": "neLatitude", "type": "Number"}, {"name": "neLongitude", "type": "Number"}], "result": "Geocoder", "description": "Sets the bounds of an area that should be given extra preference in the results."}, {"name": "setLanguage", "parameters": [{"name": "language", "type": "String"}], "result": "Geocoder", "description": "Sets the language to be used in the results."}, {"name": "setRegion", "parameters": [{"name": "region", "type": "String"}], "result": "Geocoder", "description": "Sets a region to use when interpreting location names."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/maps/elevation-sampler", "name": "ElevationSampler", "type": "class", "methods": [{"name": "sampleLocation", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "Object", "description": "Returns elevation data for a single point (lat/lng)."}, {"name": "sampleLocations", "parameters": [{"name": "points", "type": "Number"}], "result": "Object", "description": "Returns elevation data for a series of points (lat/lng)."}, {"name": "sampleLocations", "parameters": [{"name": "encodedPolyline", "type": "String"}], "result": "Object", "description": "Returns elevation data for the points in an encoded polyline."}, {"name": "samplePath", "parameters": [{"name": "points", "type": "Number"}, {"name": "numSamples", "type": "Integer"}], "result": "Object", "description": "Returns elevation data for a number of samples along a line, defined using a series of points."}, {"name": "samplePath", "parameters": [{"name": "encodedPolyline", "type": "String"}, {"name": "numSamples", "type": "Integer"}], "result": "Object", "description": "Returns elevation data for a number of samples along a line, defined using an encoded polyline."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/maps/direction-finder", "name": "DirectionFinder", "type": "class", "methods": [{"name": "addWaypoint", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "DirectionFinder", "description": "Adds a waypoint that the route must pass through, using a point (lat/lng)."}, {"name": "addWaypoint", "parameters": [{"name": "address", "type": "String"}], "result": "DirectionFinder", "description": "Adds a waypoint that the route must pass through, using an address."}, {"name": "clearWaypoints", "parameters": [], "result": "DirectionFinder", "description": "Clears the current set of waypoints."}, {"name": "getDirections", "parameters": [], "result": "Object", "description": "Gets the directions using the origin, destination, and other options that were set."}, {"name": "setAlternatives", "parameters": [{"name": "useAlternatives", "type": "Boolean"}], "result": "DirectionFinder", "description": "Sets whether or not alternative routes should be returned, instead of just the highest ranked\nroute (defaults to false)."}, {"name": "setArrive", "parameters": [{"name": "time", "type": "Date"}], "result": "DirectionFinder", "description": "Sets the desired time of arrival (when applicable)."}, {"name": "setAvoid", "parameters": [{"name": "avoid", "type": "String"}], "result": "DirectionFinder", "description": "Sets whether to avoid certain types of restrictions."}, {"name": "setDepart", "parameters": [{"name": "time", "type": "Date"}], "result": "DirectionFinder", "description": "Sets the desired time of departure (when applicable)."}, {"name": "setDestination", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "DirectionFinder", "description": "Sets the ending location for which to calculate directions to, using a point (lat/lng)."}, {"name": "setDestination", "parameters": [{"name": "address", "type": "String"}], "result": "DirectionFinder", "description": "Sets the ending location for which to calculate directions to, using an address."}, {"name": "setLanguage", "parameters": [{"name": "language", "type": "String"}], "result": "DirectionFinder", "description": "Sets the language to be used for the directions."}, {"name": "setMode", "parameters": [{"name": "mode", "type": "String"}], "result": "DirectionFinder", "description": "Sets the mode of travel (defaults to driving)."}, {"name": "setOptimizeWaypoints", "parameters": [{"name": "optimizeOrder", "type": "Boolean"}], "result": "DirectionFinder", "description": "Sets whether or not to optimize the provided route by rearranging the waypoints in a more\nefficient order (defaults to false)."}, {"name": "setOrigin", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "DirectionFinder", "description": "Sets the starting location from which to calculate directions, using a point (lat/lng)."}, {"name": "setOrigin", "parameters": [{"name": "address", "type": "String"}], "result": "DirectionFinder", "description": "Sets the starting location from which to calculate directions, using an address."}, {"name": "setRegion", "parameters": [{"name": "region", "type": "String"}], "result": "DirectionFinder", "description": "Sets a region to use when interpreting location names."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/maps/maps", "name": "Maps", "type": "class", "methods": [{"name": "decodePolyline", "parameters": [{"name": "polyline", "type": "String"}], "result": "Number[]", "description": "Decodes an encoded polyline string back into an array of points."}, {"name": "encodePolyline", "parameters": [{"name": "points", "type": "Number"}], "result": "String", "description": "Encodes an array of points into a string."}, {"name": "newDirectionFinder", "parameters": [], "result": "DirectionFinder", "description": "Creates a new DirectionFinder object."}, {"name": "newElevationSampler", "parameters": [], "result": "ElevationSampler", "description": "Creates an ElevationSampler object."}, {"name": "newGeocoder", "parameters": [], "result": "Geocoder", "description": "Creates a new Geocoder object."}, {"name": "newStaticMap", "parameters": [], "result": "StaticMap", "description": "Creates a new StaticMap object."}, {"name": "setAuthentication", "parameters": [{"name": "clientId", "type": "String"}, {"name": "signingKey", "type": "String"}], "result": "void", "description": "Enables the use of an externally established Google Maps APIs Premium Plan account,\nto leverage additional quota\nallowances."}], "properties": [{"name": "DirectionFinder", "type": "DirectionFinderEnums", "url": "/apps-script/reference/maps/direction-finder-enums", "description": ""}, {"name": "StaticMap", "type": "StaticMapEnums", "url": "/apps-script/reference/maps/static-map-enums", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/maps/static-map", "name": "StaticMap", "type": "class", "methods": [{"name": "addAddress", "parameters": [{"name": "address", "type": "String"}], "result": "StaticMap", "description": "Adds a new address to the current path definition."}, {"name": "addMarker", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "StaticMap", "description": "Adds a marker to the map using a point (lat/lng)."}, {"name": "addMarker", "parameters": [{"name": "address", "type": "String"}], "result": "StaticMap", "description": "Adds a marker to the map using an address."}, {"name": "addPath", "parameters": [{"name": "points", "type": "Number"}], "result": "StaticMap", "description": "Adds a path to the map using an array of points."}, {"name": "addPath", "parameters": [{"name": "polyline", "type": "String"}], "result": "StaticMap", "description": "Adds a path to the map using an encoded polyline."}, {"name": "addPoint", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "StaticMap", "description": "Adds a new point (lat/lng) to the current path definition."}, {"name": "addVisible", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "StaticMap", "description": "Adds a point (lat/lng) location that must be visible in the map."}, {"name": "addVisible", "parameters": [{"name": "address", "type": "String"}], "result": "StaticMap", "description": "Adds an address location that must be visible in the map."}, {"name": "beginPath", "parameters": [], "result": "StaticMap", "description": "Starts a new path definition."}, {"name": "clearMarkers", "parameters": [], "result": "StaticMap", "description": "Clears the current set of markers."}, {"name": "clearPaths", "parameters": [], "result": "StaticMap", "description": "Clear the current set of paths."}, {"name": "clearVisibles", "parameters": [], "result": "StaticMap", "description": "Clears the current set of visible locations."}, {"name": "endPath", "parameters": [], "result": "StaticMap", "description": "Completes a path definition started with beginPath()."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Gets the image data as a Blob."}, {"name": "getMapImage", "parameters": [], "result": "Byte[]", "description": "Gets the raw image data as a byte array."}, {"name": "getMapUrl", "parameters": [], "result": "String", "description": "Gets the URL of the map image."}, {"name": "setCenter", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "StaticMap", "description": "Sets the center of the map using a point (lat/lng)."}, {"name": "setCenter", "parameters": [{"name": "address", "type": "String"}], "result": "StaticMap", "description": "Sets the center of the map using an address."}, {"name": "setCustomMarkerStyle", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "useShadow", "type": "Boolean"}], "result": "StaticMap", "description": "Sets the custom marker image to use when creating new markers."}, {"name": "setFormat", "parameters": [{"name": "format", "type": "String"}], "result": "StaticMap", "description": "Sets the format of the map image."}, {"name": "setLanguage", "parameters": [{"name": "language", "type": "String"}], "result": "StaticMap", "description": "Sets the language to be used for text on the map (where avaialbe)."}, {"name": "setMapType", "parameters": [{"name": "mapType", "type": "String"}], "result": "StaticMap", "description": "Sets the type of map to be shown."}, {"name": "setMarkerStyle", "parameters": [{"name": "size", "type": "String"}, {"name": "color", "type": "String"}, {"name": "label", "type": "String"}], "result": "StaticMap", "description": "Sets the marker style to use when creating new markers."}, {"name": "setMobile", "parameters": [{"name": "useMobileTiles", "type": "Boolean"}], "result": "StaticMap", "description": "Sets whether or not to use specialized tile sets for mobile devices."}, {"name": "setPathStyle", "parameters": [{"name": "weight", "type": "Integer"}, {"name": "color", "type": "String"}, {"name": "fillColor", "type": "String"}], "result": "StaticMap", "description": "Sets the path style to use when creating new paths."}, {"name": "setSize", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "StaticMap", "description": "Sets the width and height of the map image in pixels."}, {"name": "setZoom", "parameters": [{"name": "zoom", "type": "Integer"}], "result": "StaticMap", "description": "Sets the zoom factor, or magnification level, used for the map."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/language/language-app", "name": "LanguageApp", "type": "class", "methods": [{"name": "translate", "parameters": [{"name": "text", "type": "String"}, {"name": "sourceLanguage", "type": "String"}, {"name": "targetLanguage", "type": "String"}], "result": "String", "description": "Automatically translates some text from a source language to a destination language."}, {"name": "translate", "parameters": [{"name": "text", "type": "String"}, {"name": "sourceLanguage", "type": "String"}, {"name": "targetLanguage", "type": "String"}, {"name": "advancedArgs", "type": "Object"}], "result": "String", "description": "Automatically translates some text from a source language to a destination language."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/maps/direction-finder-enums", "name": "DirectionFinderEnums", "type": "class", "methods": [], "properties": [{"name": "Avoid", "type": "Avoid", "url": "/apps-script/reference/maps/avoid", "description": ""}, {"name": "Mode", "type": "Mode", "url": "/apps-script/reference/maps/mode", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/groups/group", "name": "Group", "type": "class", "methods": [{"name": "getEmail", "parameters": [], "result": "String", "description": "Gets this group's email address."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Retrieves the direct child groups of the group."}, {"name": "getRole", "parameters": [{"name": "email", "type": "String"}], "result": "Role", "description": "Retrieves a user's role in the context of the group."}, {"name": "getRole", "parameters": [{"name": "user", "type": "User"}], "result": "Role", "description": "Retrieves a user's role in the context of the group."}, {"name": "getRoles", "parameters": [{"name": "users", "type": "User"}], "result": "Role[]", "description": "Retrieves users' roles in the context of the group."}, {"name": "getUsers", "parameters": [], "result": "User[]", "description": "Retrieves the direct members of the group that have a known corresponding Google account."}, {"name": "hasGroup", "parameters": [{"name": "group", "type": "Group"}], "result": "Boolean", "description": "Tests if a group is a direct member of this group."}, {"name": "hasGroup", "parameters": [{"name": "email", "type": "String"}], "result": "Boolean", "description": "Tests if a group is a direct member of this group."}, {"name": "hasUser", "parameters": [{"name": "email", "type": "String"}], "result": "Boolean", "description": "Tests if a user is a direct member of the group."}, {"name": "hasUser", "parameters": [{"name": "user", "type": "User"}], "result": "Boolean", "description": "Tests if a user is a direct member of the group."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/language", "name": "Language", "type": "language", "methods": [{"name": "translate", "parameters": [{"name": "text", "type": "String"}, {"name": "sourceLanguage", "type": "String"}, {"name": "targetLanguage", "type": "String"}], "result": "String", "description": "Automatically translates some text from a source language to a destination language."}, {"name": "translate", "parameters": [{"name": "text", "type": "String"}, {"name": "sourceLanguage", "type": "String"}, {"name": "targetLanguage", "type": "String"}, {"name": "advancedArgs", "type": "Object"}], "result": "String", "description": "Automatically translates some text from a source language to a destination language."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/groups/role", "name": "Role", "type": "enum", "methods": [], "properties": [{"name": "OWNER", "type": "Enum", "url": "", "description": "The owner of a group."}, {"name": "MANAGER", "type": "Enum", "url": "", "description": "The manager of a group."}, {"name": "MEMBER", "type": "Enum", "url": "", "description": "A user who is a member of this group but is neither an owner nor a manager."}, {"name": "INVITED", "type": "Enum", "url": "", "description": "A user who has been invited to join a group by an owner or manager of the group but who has not\nyet accepted the invitation."}, {"name": "PENDING", "type": "Enum", "url": "", "description": "A user who has requested to join a group but who has not yet been approved by an owner or\nmanager."}]},
{"url": "https://developers.google.com/apps-script/reference/maps", "name": "Maps", "type": "maps", "methods": [{"name": "addWaypoint", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "DirectionFinder", "description": "Adds a waypoint that the route must pass through, using a point (lat/lng)."}, {"name": "addWaypoint", "parameters": [{"name": "address", "type": "String"}], "result": "DirectionFinder", "description": "Adds a waypoint that the route must pass through, using an address."}, {"name": "clearWaypoints", "parameters": [], "result": "DirectionFinder", "description": "Clears the current set of waypoints."}, {"name": "getDirections", "parameters": [], "result": "Object", "description": "Gets the directions using the origin, destination, and other options that were set."}, {"name": "setAlternatives", "parameters": [{"name": "useAlternatives", "type": "Boolean"}], "result": "DirectionFinder", "description": "Sets whether or not alternative routes should be returned, instead of just the highest ranked\nroute (defaults to false)."}, {"name": "setArrive", "parameters": [{"name": "time", "type": "Date"}], "result": "DirectionFinder", "description": "Sets the desired time of arrival (when applicable)."}, {"name": "setAvoid", "parameters": [{"name": "avoid", "type": "String"}], "result": "DirectionFinder", "description": "Sets whether to avoid certain types of restrictions."}, {"name": "setDepart", "parameters": [{"name": "time", "type": "Date"}], "result": "DirectionFinder", "description": "Sets the desired time of departure (when applicable)."}, {"name": "setDestination", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "DirectionFinder", "description": "Sets the ending location for which to calculate directions to, using a point (lat/lng)."}, {"name": "setDestination", "parameters": [{"name": "address", "type": "String"}], "result": "DirectionFinder", "description": "Sets the ending location for which to calculate directions to, using an address."}, {"name": "setLanguage", "parameters": [{"name": "language", "type": "String"}], "result": "DirectionFinder", "description": "Sets the language to be used for the directions."}, {"name": "setMode", "parameters": [{"name": "mode", "type": "String"}], "result": "DirectionFinder", "description": "Sets the mode of travel (defaults to driving)."}, {"name": "setOptimizeWaypoints", "parameters": [{"name": "optimizeOrder", "type": "Boolean"}], "result": "DirectionFinder", "description": "Sets whether or not to optimize the provided route by rearranging the waypoints in a more\nefficient order (defaults to false)."}, {"name": "setOrigin", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "DirectionFinder", "description": "Sets the starting location from which to calculate directions, using a point (lat/lng)."}, {"name": "setOrigin", "parameters": [{"name": "address", "type": "String"}], "result": "DirectionFinder", "description": "Sets the starting location from which to calculate directions, using an address."}, {"name": "setRegion", "parameters": [{"name": "region", "type": "String"}], "result": "DirectionFinder", "description": "Sets a region to use when interpreting location names."}, {"name": "sampleLocation", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "Object", "description": "Returns elevation data for a single point (lat/lng)."}, {"name": "sampleLocations", "parameters": [{"name": "points", "type": "Number"}], "result": "Object", "description": "Returns elevation data for a series of points (lat/lng)."}, {"name": "sampleLocations", "parameters": [{"name": "encodedPolyline", "type": "String"}], "result": "Object", "description": "Returns elevation data for the points in an encoded polyline."}, {"name": "samplePath", "parameters": [{"name": "points", "type": "Number"}, {"name": "numSamples", "type": "Integer"}], "result": "Object", "description": "Returns elevation data for a number of samples along a line, defined using a series of points."}, {"name": "samplePath", "parameters": [{"name": "encodedPolyline", "type": "String"}, {"name": "numSamples", "type": "Integer"}], "result": "Object", "description": "Returns elevation data for a number of samples along a line, defined using an encoded polyline."}, {"name": "geocode", "parameters": [{"name": "address", "type": "String"}], "result": "Object", "description": "Gets the approximate geographic points for a given address."}, {"name": "reverseGeocode", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "Object", "description": "Gets the approximate addresses for a given geographic point."}, {"name": "reverseGeocode", "parameters": [{"name": "swLatitude", "type": "Number"}, {"name": "swLongitude", "type": "Number"}, {"name": "neLatitude", "type": "Number"}, {"name": "neLongitude", "type": "Number"}], "result": "Object", "description": "Gets the approximate addresses for a given area."}, {"name": "setBounds", "parameters": [{"name": "swLatitude", "type": "Number"}, {"name": "swLongitude", "type": "Number"}, {"name": "neLatitude", "type": "Number"}, {"name": "neLongitude", "type": "Number"}], "result": "Geocoder", "description": "Sets the bounds of an area that should be given extra preference in the results."}, {"name": "setLanguage", "parameters": [{"name": "language", "type": "String"}], "result": "Geocoder", "description": "Sets the language to be used in the results."}, {"name": "setRegion", "parameters": [{"name": "region", "type": "String"}], "result": "Geocoder", "description": "Sets a region to use when interpreting location names."}, {"name": "decodePolyline", "parameters": [{"name": "polyline", "type": "String"}], "result": "Number[]", "description": "Decodes an encoded polyline string back into an array of points."}, {"name": "encodePolyline", "parameters": [{"name": "points", "type": "Number"}], "result": "String", "description": "Encodes an array of points into a string."}, {"name": "newDirectionFinder", "parameters": [], "result": "DirectionFinder", "description": "Creates a new DirectionFinder object."}, {"name": "newElevationSampler", "parameters": [], "result": "ElevationSampler", "description": "Creates an ElevationSampler object."}, {"name": "newGeocoder", "parameters": [], "result": "Geocoder", "description": "Creates a new Geocoder object."}, {"name": "newStaticMap", "parameters": [], "result": "StaticMap", "description": "Creates a new StaticMap object."}, {"name": "setAuthentication", "parameters": [{"name": "clientId", "type": "String"}, {"name": "signingKey", "type": "String"}], "result": "void", "description": "Enables the use of an externally established Google Maps APIs Premium Plan account,\nto leverage additional quota\nallowances."}, {"name": "addAddress", "parameters": [{"name": "address", "type": "String"}], "result": "StaticMap", "description": "Adds a new address to the current path definition."}, {"name": "addMarker", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "StaticMap", "description": "Adds a marker to the map using a point (lat/lng)."}, {"name": "addMarker", "parameters": [{"name": "address", "type": "String"}], "result": "StaticMap", "description": "Adds a marker to the map using an address."}, {"name": "addPath", "parameters": [{"name": "points", "type": "Number"}], "result": "StaticMap", "description": "Adds a path to the map using an array of points."}, {"name": "addPath", "parameters": [{"name": "polyline", "type": "String"}], "result": "StaticMap", "description": "Adds a path to the map using an encoded polyline."}, {"name": "addPoint", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "StaticMap", "description": "Adds a new point (lat/lng) to the current path definition."}, {"name": "addVisible", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "StaticMap", "description": "Adds a point (lat/lng) location that must be visible in the map."}, {"name": "addVisible", "parameters": [{"name": "address", "type": "String"}], "result": "StaticMap", "description": "Adds an address location that must be visible in the map."}, {"name": "beginPath", "parameters": [], "result": "StaticMap", "description": "Starts a new path definition."}, {"name": "clearMarkers", "parameters": [], "result": "StaticMap", "description": "Clears the current set of markers."}, {"name": "clearPaths", "parameters": [], "result": "StaticMap", "description": "Clear the current set of paths."}, {"name": "clearVisibles", "parameters": [], "result": "StaticMap", "description": "Clears the current set of visible locations."}, {"name": "endPath", "parameters": [], "result": "StaticMap", "description": "Completes a path definition started with beginPath()."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Gets the image data as a Blob."}, {"name": "getMapImage", "parameters": [], "result": "Byte[]", "description": "Gets the raw image data as a byte array."}, {"name": "getMapUrl", "parameters": [], "result": "String", "description": "Gets the URL of the map image."}, {"name": "setCenter", "parameters": [{"name": "latitude", "type": "Number"}, {"name": "longitude", "type": "Number"}], "result": "StaticMap", "description": "Sets the center of the map using a point (lat/lng)."}, {"name": "setCenter", "parameters": [{"name": "address", "type": "String"}], "result": "StaticMap", "description": "Sets the center of the map using an address."}, {"name": "setCustomMarkerStyle", "parameters": [{"name": "imageUrl", "type": "String"}, {"name": "useShadow", "type": "Boolean"}], "result": "StaticMap", "description": "Sets the custom marker image to use when creating new markers."}, {"name": "setFormat", "parameters": [{"name": "format", "type": "String"}], "result": "StaticMap", "description": "Sets the format of the map image."}, {"name": "setLanguage", "parameters": [{"name": "language", "type": "String"}], "result": "StaticMap", "description": "Sets the language to be used for text on the map (where avaialbe)."}, {"name": "setMapType", "parameters": [{"name": "mapType", "type": "String"}], "result": "StaticMap", "description": "Sets the type of map to be shown."}, {"name": "setMarkerStyle", "parameters": [{"name": "size", "type": "String"}, {"name": "color", "type": "String"}, {"name": "label", "type": "String"}], "result": "StaticMap", "description": "Sets the marker style to use when creating new markers."}, {"name": "setMobile", "parameters": [{"name": "useMobileTiles", "type": "Boolean"}], "result": "StaticMap", "description": "Sets whether or not to use specialized tile sets for mobile devices."}, {"name": "setPathStyle", "parameters": [{"name": "weight", "type": "Integer"}, {"name": "color", "type": "String"}, {"name": "fillColor", "type": "String"}], "result": "StaticMap", "description": "Sets the path style to use when creating new paths."}, {"name": "setSize", "parameters": [{"name": "width", "type": "Integer"}, {"name": "height", "type": "Integer"}], "result": "StaticMap", "description": "Sets the width and height of the map image in pixels."}, {"name": "setZoom", "parameters": [{"name": "zoom", "type": "Integer"}], "result": "StaticMap", "description": "Sets the zoom factor, or magnification level, used for the map."}], "properties": [{"name": "TOLLS", "type": "Enum", "url": "", "description": "Avoid tolls."}, {"name": "HIGHWAYS", "type": "Enum", "url": "", "description": "Avoid highways."}, {"name": "BLACK", "type": "Enum", "url": "", "description": ""}, {"name": "BROWN", "type": "Enum", "url": "", "description": ""}, {"name": "GREEN", "type": "Enum", "url": "", "description": ""}, {"name": "PURPLE", "type": "Enum", "url": "", "description": ""}, {"name": "YELLOW", "type": "Enum", "url": "", "description": ""}, {"name": "BLUE", "type": "Enum", "url": "", "description": ""}, {"name": "GRAY", "type": "Enum", "url": "", "description": ""}, {"name": "ORANGE", "type": "Enum", "url": "", "description": ""}, {"name": "RED", "type": "Enum", "url": "", "description": ""}, {"name": "WHITE", "type": "Enum", "url": "", "description": ""}, {"name": "Avoid", "type": "Avoid", "url": "/apps-script/reference/maps/avoid", "description": ""}, {"name": "Mode", "type": "Mode", "url": "/apps-script/reference/maps/mode", "description": ""}, {"name": "PNG", "type": "Enum", "url": "", "description": "8-bit PNG format."}, {"name": "PNG8", "type": "Enum", "url": "", "description": "8-bit PNG format."}, {"name": "PNG32", "type": "Enum", "url": "", "description": "32-bit PNG format."}, {"name": "GIF", "type": "Enum", "url": "", "description": "GIF format."}, {"name": "JPG", "type": "Enum", "url": "", "description": "JPEG format."}, {"name": "JPG_BASELINE", "type": "Enum", "url": "", "description": "Non-progressive JPEG format."}, {"name": "DirectionFinder", "type": "DirectionFinderEnums", "url": "/apps-script/reference/maps/direction-finder-enums", "description": ""}, {"name": "StaticMap", "type": "StaticMapEnums", "url": "/apps-script/reference/maps/static-map-enums", "description": ""}, {"name": "TINY", "type": "Enum", "url": "", "description": "Tiny sized markets (smallest available)."}, {"name": "MID", "type": "Enum", "url": "", "description": "Medium sized markers (largest available)."}, {"name": "SMALL", "type": "Enum", "url": "", "description": "Small sized markers."}, {"name": "DRIVING", "type": "Enum", "url": "", "description": "Driving directions via roads."}, {"name": "WALKING", "type": "Enum", "url": "", "description": "Walking directions via pedestrian paths and sidewalks (where available)."}, {"name": "BICYCLING", "type": "Enum", "url": "", "description": "Bicycling directions via bicycle paths and preferred streets (where available)."}, {"name": "TRANSIT", "type": "Enum", "url": "", "description": "Transit directions via public transit routes (where available)."}, {"name": "Color", "type": "Color", "url": "/apps-script/reference/maps/color", "description": ""}, {"name": "Format", "type": "Format", "url": "/apps-script/reference/maps/format", "description": ""}, {"name": "MarkerSize", "type": "MarkerSize", "url": "/apps-script/reference/maps/marker-size", "description": ""}, {"name": "Type", "type": "Type", "url": "/apps-script/reference/maps/type", "description": ""}, {"name": "ROADMAP", "type": "Enum", "url": "", "description": "A standard roadmap, as is normally shown on the Google Maps website."}, {"name": "SATELLITE", "type": "Enum", "url": "", "description": "A satellite map."}, {"name": "TERRAIN", "type": "Enum", "url": "", "description": "A physical relief map, showing terrain and vegetation."}, {"name": "HYBRID", "type": "Enum", "url": "", "description": "A hybrid of the satellite and roadmap maps, showing a transparent layer of major streets and\nplace names on the satellite map."}]},
{"url": "https://developers.google.com/apps-script/reference/groups", "name": "Groups", "type": "groups", "methods": [{"name": "getEmail", "parameters": [], "result": "String", "description": "Gets this group's email address."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Retrieves the direct child groups of the group."}, {"name": "getRole", "parameters": [{"name": "email", "type": "String"}], "result": "Role", "description": "Retrieves a user's role in the context of the group."}, {"name": "getRole", "parameters": [{"name": "user", "type": "User"}], "result": "Role", "description": "Retrieves a user's role in the context of the group."}, {"name": "getRoles", "parameters": [{"name": "users", "type": "User"}], "result": "Role[]", "description": "Retrieves users' roles in the context of the group."}, {"name": "getUsers", "parameters": [], "result": "User[]", "description": "Retrieves the direct members of the group that have a known corresponding Google account."}, {"name": "hasGroup", "parameters": [{"name": "group", "type": "Group"}], "result": "Boolean", "description": "Tests if a group is a direct member of this group."}, {"name": "hasGroup", "parameters": [{"name": "email", "type": "String"}], "result": "Boolean", "description": "Tests if a group is a direct member of this group."}, {"name": "hasUser", "parameters": [{"name": "email", "type": "String"}], "result": "Boolean", "description": "Tests if a user is a direct member of the group."}, {"name": "hasUser", "parameters": [{"name": "user", "type": "User"}], "result": "Boolean", "description": "Tests if a user is a direct member of the group."}, {"name": "getGroupByEmail", "parameters": [{"name": "email", "type": "String"}], "result": "Group", "description": "Retrieves the group having the specified email address."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Retrieves all the groups of which you are a direct member (or a pending member)."}], "properties": [{"name": "Role", "type": "Role", "url": "/apps-script/reference/groups/role", "description": ""}, {"name": "OWNER", "type": "Enum", "url": "", "description": "The owner of a group."}, {"name": "MANAGER", "type": "Enum", "url": "", "description": "The manager of a group."}, {"name": "MEMBER", "type": "Enum", "url": "", "description": "A user who is a member of this group but is neither an owner nor a manager."}, {"name": "INVITED", "type": "Enum", "url": "", "description": "A user who has been invited to join a group by an owner or manager of the group but who has not\nyet accepted the invitation."}, {"name": "PENDING", "type": "Enum", "url": "", "description": "A user who has requested to join a group but who has not yet been approved by an owner or\nmanager."}]},
{"url": "https://developers.google.com/apps-script/reference/groups/groups-app", "name": "GroupsApp", "type": "class", "methods": [{"name": "getGroupByEmail", "parameters": [{"name": "email", "type": "String"}], "result": "Group", "description": "Retrieves the group having the specified email address."}, {"name": "getGroups", "parameters": [], "result": "Group[]", "description": "Retrieves all the groups of which you are a direct member (or a pending member)."}], "properties": [{"name": "Role", "type": "Role", "url": "/apps-script/reference/groups/role", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/gmail/gmail-message", "name": "GmailMessage", "type": "class", "methods": [{"name": "createDraftReply", "parameters": [{"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of this message using the reply-to address."}, {"name": "createDraftReply", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of this message using the reply-to address, with\noptional arguments."}, {"name": "createDraftReplyAll", "parameters": [{"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender using the reply-to address and all recipients of\nthis message."}, {"name": "createDraftReplyAll", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of this message using the reply-to address and\nall recipients, with optional arguments."}, {"name": "forward", "parameters": [{"name": "recipient", "type": "String"}], "result": "GmailMessage", "description": "Forwards this message to new recipients."}, {"name": "forward", "parameters": [{"name": "recipient", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailMessage", "description": "Forwards this message to new recipients, with optional arguments."}, {"name": "getAttachments", "parameters": [], "result": "GmailAttachment[]", "description": "Gets all the attachments for this message."}, {"name": "getAttachments", "parameters": [{"name": "options", "type": "Object"}], "result": "GmailAttachment[]", "description": "Gets all the attachments for this message."}, {"name": "getBcc", "parameters": [], "result": "String", "description": "Gets the comma-separated recipients bcc'd on this message."}, {"name": "getBody", "parameters": [], "result": "String", "description": "Gets the HTML content of the body of this message."}, {"name": "getCc", "parameters": [], "result": "String", "description": "Gets the comma-separated recipients cc'd on this message."}, {"name": "getDate", "parameters": [], "result": "Date", "description": "Gets the date and time of this message."}, {"name": "getFrom", "parameters": [], "result": "String", "description": "Gets the sender of this message."}, {"name": "getHeader", "parameters": [{"name": "name", "type": "String"}], "result": "String", "description": "Gets the value of an RFC 2822 header given the header name."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of this message."}, {"name": "getPlainBody", "parameters": [], "result": "String", "description": "Gets the content of the body of this message without HTML formatting."}, {"name": "getRawContent", "parameters": [], "result": "String", "description": "Gets the raw content of this message."}, {"name": "getReplyTo", "parameters": [], "result": "String", "description": "Gets the reply-to address of this message (usually the sender)."}, {"name": "getSubject", "parameters": [], "result": "String", "description": "Gets the subject of this message."}, {"name": "getThread", "parameters": [], "result": "GmailThread", "description": "Gets the thread that contains this message."}, {"name": "getTo", "parameters": [], "result": "String", "description": "Gets the comma-separated recipients of this message."}, {"name": "isDraft", "parameters": [], "result": "Boolean", "description": "Gets whether this message is a draft."}, {"name": "isInChats", "parameters": [], "result": "Boolean", "description": "Gets whether this message is a chat."}, {"name": "isInInbox", "parameters": [], "result": "Boolean", "description": "Gets whether this message is in the inbox."}, {"name": "isInPriorityInbox", "parameters": [], "result": "Boolean", "description": "Returns true if this message is in the priority inbox; returns false otherwise."}, {"name": "isInTrash", "parameters": [], "result": "Boolean", "description": "Gets whether this message is in the trash."}, {"name": "isStarred", "parameters": [], "result": "Boolean", "description": "Gets whether this message is starred."}, {"name": "isUnread", "parameters": [], "result": "Boolean", "description": "Gets whether this message is unread."}, {"name": "markRead", "parameters": [], "result": "GmailMessage", "description": "Marks the message as read."}, {"name": "markUnread", "parameters": [], "result": "GmailMessage", "description": "Marks the message as unread."}, {"name": "moveToTrash", "parameters": [], "result": "GmailMessage", "description": "Moves the message to the trash."}, {"name": "refresh", "parameters": [], "result": "GmailMessage", "description": "Reloads this message and associated state from Gmail (useful in case the labels, read state,\netc., have changed)."}, {"name": "reply", "parameters": [{"name": "body", "type": "String"}], "result": "GmailMessage", "description": "Replies to the sender of this message using the reply-to address."}, {"name": "reply", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailMessage", "description": "Replies to the sender of this message using the reply-to address, with optional arguments."}, {"name": "replyAll", "parameters": [{"name": "body", "type": "String"}], "result": "GmailMessage", "description": "Replies to the sender using the reply-to address and all recipients of this message."}, {"name": "replyAll", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailMessage", "description": "Replies to the sender of this message using the reply-to address and all recipients, with\noptional arguments."}, {"name": "star", "parameters": [], "result": "GmailMessage", "description": "Stars the message."}, {"name": "unstar", "parameters": [], "result": "GmailMessage", "description": "Unstars the message."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/gmail/gmail-label", "name": "GmailLabel", "type": "class", "methods": [{"name": "addToThread", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailLabel", "description": "Adds this label to the given thread and forces the thread to refresh (GmailThread.refresh())."}, {"name": "addToThreads", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailLabel", "description": "Adds this label to the given threads and forces the threads to refresh."}, {"name": "deleteLabel", "parameters": [], "result": "void", "description": "Deletes this label."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this label."}, {"name": "getThreads", "parameters": [], "result": "GmailThread[]", "description": "Gets the threads that are marked with this label."}, {"name": "getThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Gets a range of threads marked with this label."}, {"name": "getUnreadCount", "parameters": [], "result": "Integer", "description": "Gets the number of unread threads tagged with this label."}, {"name": "removeFromThread", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailLabel", "description": "Removes this label from the given thread and forces the thread to refresh."}, {"name": "removeFromThreads", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailLabel", "description": "Removes this label from the given threads and forces the threads to refresh."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/gmail/gmail-thread", "name": "GmailThread", "type": "class", "methods": [{"name": "addLabel", "parameters": [{"name": "label", "type": "GmailLabel"}], "result": "GmailThread", "description": "Adds this label to the thread."}, {"name": "createDraftReply", "parameters": [{"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of the last message in this thread using the\nreply-to address."}, {"name": "createDraftReply", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of the last message in this thread using the\nreply-to address, with optional arguments."}, {"name": "createDraftReplyAll", "parameters": [{"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of the last message in this thread, using the\nreply-to address and all recipients of this message."}, {"name": "createDraftReplyAll", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of the last message in this thread, using the\nreply-to address and all recipients, with optional arguments."}, {"name": "getFirstMessageSubject", "parameters": [], "result": "String", "description": "Gets the subject of the first message in the thread."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of this thread."}, {"name": "getLabels", "parameters": [], "result": "GmailLabel[]", "description": "Returns the user-created labels on this thread."}, {"name": "getLastMessageDate", "parameters": [], "result": "Date", "description": "Gets the date of this thread's most recent message."}, {"name": "getMessageCount", "parameters": [], "result": "Integer", "description": "Returns the number of messages in the thread."}, {"name": "getMessages", "parameters": [], "result": "GmailMessage[]", "description": "Gets the messages in this thread."}, {"name": "getPermalink", "parameters": [], "result": "String", "description": "Gets a permalink for this thread."}, {"name": "hasStarredMessages", "parameters": [], "result": "Boolean", "description": "Returns whether the thread has any starred messages."}, {"name": "isImportant", "parameters": [], "result": "Boolean", "description": "Returns whether the thread is marked as important."}, {"name": "isInChats", "parameters": [], "result": "Boolean", "description": "Returns whether the thread is labeled a chat."}, {"name": "isInInbox", "parameters": [], "result": "Boolean", "description": "Returns whether the thread is in the inbox."}, {"name": "isInPriorityInbox", "parameters": [], "result": "Boolean", "description": "Returns true if this thread is in the priority inbox; returns false otherwise."}, {"name": "isInSpam", "parameters": [], "result": "Boolean", "description": "Returns whether the thread is marked as spam."}, {"name": "isInTrash", "parameters": [], "result": "Boolean", "description": "Returns whether the thread is in the trash."}, {"name": "isUnread", "parameters": [], "result": "Boolean", "description": "Returns whether the thread has any unread messages."}, {"name": "markImportant", "parameters": [], "result": "GmailThread", "description": "Marks this thread as important."}, {"name": "markRead", "parameters": [], "result": "GmailThread", "description": "Marks this thread as read."}, {"name": "markUnimportant", "parameters": [], "result": "GmailThread", "description": "Marks this thread as unimportant."}, {"name": "markUnread", "parameters": [], "result": "GmailThread", "description": "Marks this thread as unread."}, {"name": "moveToArchive", "parameters": [], "result": "GmailThread", "description": "Moves this thread to the archive."}, {"name": "moveToInbox", "parameters": [], "result": "GmailThread", "description": "Moves this thread to the inbox."}, {"name": "moveToSpam", "parameters": [], "result": "GmailThread", "description": "Moves this thread to spam."}, {"name": "moveToTrash", "parameters": [], "result": "GmailThread", "description": "Moves this thread to the trash."}, {"name": "refresh", "parameters": [], "result": "GmailThread", "description": "Reloads this thread, and associated state from Gmail (useful in case the labels, read state,\netc., have changed)."}, {"name": "removeLabel", "parameters": [{"name": "label", "type": "GmailLabel"}], "result": "GmailThread", "description": "Removes this label from the thread."}, {"name": "reply", "parameters": [{"name": "body", "type": "String"}], "result": "GmailThread", "description": "Reply to the sender of the last message on this thread using the replyTo address."}, {"name": "reply", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailThread", "description": "Reply to the sender of the last message on this thread using the replyTo address, with optional\narguments."}, {"name": "replyAll", "parameters": [{"name": "body", "type": "String"}], "result": "GmailThread", "description": "Reply to the sender (using the replyTo address), and all recipients of the last message on this\nthread."}, {"name": "replyAll", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailThread", "description": "Reply to the sender (using the replyTo address), and all recipients of the last message\non this thread, with optional arguments."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/gmail/gmail-draft", "name": "GmailDraft", "type": "class", "methods": [{"name": "deleteDraft", "parameters": [], "result": "void", "description": "Deletes this draft message."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of this draft message."}, {"name": "getMessage", "parameters": [], "result": "GmailMessage", "description": "Returns a GmailMessage representing this draft."}, {"name": "getMessageId", "parameters": [], "result": "String", "description": "Returns the ID of the GmailMessage representing this draft."}, {"name": "send", "parameters": [], "result": "GmailMessage", "description": "Sends this draft email message."}, {"name": "update", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Replaces the contents of this draft message."}, {"name": "update", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Replaces the contents of this draft message using optional arguments."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/gmail", "name": "Gmail", "type": "gmail", "methods": [{"name": "createDraft", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Creates a draft email message."}, {"name": "createDraft", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Creates a draft email message with optional arguments."}, {"name": "createLabel", "parameters": [{"name": "name", "type": "String"}], "result": "GmailLabel", "description": "Create a new user label of the given name."}, {"name": "deleteLabel", "parameters": [{"name": "label", "type": "GmailLabel"}], "result": "GmailApp", "description": "Deletes the specified label."}, {"name": "getAliases", "parameters": [], "result": "String[]", "description": "Gets a list of the emails that are set up as aliases for this account in Gmail."}, {"name": "getChatThreads", "parameters": [], "result": "GmailThread[]", "description": "Retrieves all chat threads irrespective of labels."}, {"name": "getChatThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Retrieves a range of chat threads irrespective of labels."}, {"name": "getDraft", "parameters": [{"name": "draftId", "type": "String"}], "result": "GmailDraft", "description": "Retrieve an email message draft by ID."}, {"name": "getDraftMessages", "parameters": [], "result": "GmailMessage[]", "description": "Retrieves all draft messages."}, {"name": "getDrafts", "parameters": [], "result": "GmailDraft[]", "description": "Gets all Gmail draft messages."}, {"name": "getInboxThreads", "parameters": [], "result": "GmailThread[]", "description": "Retrieves all Inbox threads irrespective of labels."}, {"name": "getInboxThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Retrieves a range of Inbox threads irrespective of labels."}, {"name": "getInboxUnreadCount", "parameters": [], "result": "Integer", "description": "Gets the number of unread threads in the inbox."}, {"name": "getMessageById", "parameters": [{"name": "id", "type": "String"}], "result": "GmailMessage", "description": "Gets a message by ID."}, {"name": "getMessagesForThread", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailMessage[]", "description": "Retrieve all messages in the specified thread."}, {"name": "getMessagesForThreads", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailMessage[][]", "description": "Retrieve all messages in the specified threads."}, {"name": "getPriorityInboxThreads", "parameters": [], "result": "GmailThread[]", "description": "Retrieves all Priority Inbox threads irrespective of labels."}, {"name": "getPriorityInboxThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Retrieves a range of Priority Inbox threads irrespective of labels."}, {"name": "getPriorityInboxUnreadCount", "parameters": [], "result": "Integer", "description": "Gets the number of unread threads in the Priority Inbox."}, {"name": "getSpamThreads", "parameters": [], "result": "GmailThread[]", "description": "Retrieves all spam threads irrespective of labels."}, {"name": "getSpamThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Retrieves a range of spam threads irrespective of labels."}, {"name": "getSpamUnreadCount", "parameters": [], "result": "Integer", "description": "Gets the number of unread threads that are spam."}, {"name": "getStarredThreads", "parameters": [], "result": "GmailThread[]", "description": "Retrieves all starred threads irrespective of labels."}, {"name": "getStarredThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Retrieves a range of starred threads irrespective of labels."}, {"name": "getStarredUnreadCount", "parameters": [], "result": "Integer", "description": "Gets the number of unread threads that are starred."}, {"name": "getThreadById", "parameters": [{"name": "id", "type": "String"}], "result": "GmailThread", "description": "Gets a thread by ID."}, {"name": "getTrashThreads", "parameters": [], "result": "GmailThread[]", "description": "Retrieves all trash threads irrespective of labels."}, {"name": "getTrashThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Retrieves a range of trash threads irrespective of labels."}, {"name": "getUserLabelByName", "parameters": [{"name": "name", "type": "String"}], "result": "GmailLabel", "description": "Retrieves a label given the label name."}, {"name": "getUserLabels", "parameters": [], "result": "GmailLabel[]", "description": "Retrieves a list of user-created labels."}, {"name": "markMessageRead", "parameters": [{"name": "message", "type": "GmailMessage"}], "result": "GmailApp", "description": "Marks this message read and forces the message to refresh."}, {"name": "markMessageUnread", "parameters": [{"name": "message", "type": "GmailMessage"}], "result": "GmailApp", "description": "Marks this message unread and forces the message to refresh."}, {"name": "markMessagesRead", "parameters": [{"name": "messages", "type": "GmailMessage"}], "result": "GmailApp", "description": "Marks these messages read and forces the messages to refresh."}, {"name": "markMessagesUnread", "parameters": [{"name": "messages", "type": "GmailMessage"}], "result": "GmailApp", "description": "Marks these messages unread and forces the messages to refresh."}, {"name": "markThreadImportant", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks this thread as important and forces the thread to refresh."}, {"name": "markThreadRead", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks this thread as read and forces the thread to refresh."}, {"name": "markThreadUnimportant", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks this thread as unimportant and forces the thread to refresh."}, {"name": "markThreadUnread", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks this thread unread and forces the thread to refresh."}, {"name": "markThreadsImportant", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks these threads as important and forces the threads to refresh."}, {"name": "markThreadsRead", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks these threads as read and forces the threads to refresh."}, {"name": "markThreadsUnimportant", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks these threads as unimportant and forces the threads to refresh."}, {"name": "markThreadsUnread", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks these threads as unread and forces the threads to refresh."}, {"name": "moveMessageToTrash", "parameters": [{"name": "message", "type": "GmailMessage"}], "result": "GmailApp", "description": "Moves the message to the trash and forces the message to refresh."}, {"name": "moveMessagesToTrash", "parameters": [{"name": "messages", "type": "GmailMessage"}], "result": "GmailApp", "description": "Moves the specified messages to the trash and forces the messages to refresh."}, {"name": "moveThreadToArchive", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves this thread to the archive and forces the thread to refresh."}, {"name": "moveThreadToInbox", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves this thread to the inbox and forces the thread to refresh."}, {"name": "moveThreadToSpam", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves this thread to spam and forces the thread to refresh."}, {"name": "moveThreadToTrash", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves this thread to the trash and forces the thread to refresh."}, {"name": "moveThreadsToArchive", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves these threads to the archive and forces the threads to refresh."}, {"name": "moveThreadsToInbox", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves these threads to the inbox and forces the threads to refresh."}, {"name": "moveThreadsToSpam", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves these threads to spam and forces the threads to refresh."}, {"name": "moveThreadsToTrash", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves these threads to the trash and forces the threads to refresh."}, {"name": "refreshMessage", "parameters": [{"name": "message", "type": "GmailMessage"}], "result": "GmailApp", "description": "Reloads the message and associated state from Gmail (useful in case the labels, read state,\netc., have changed)."}, {"name": "refreshMessages", "parameters": [{"name": "messages", "type": "GmailMessage"}], "result": "GmailApp", "description": "Reloads the messages and associated state from Gmail (useful in case the labels, read state,\netc., have changed)."}, {"name": "refreshThread", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Reloads the thread and associated state from Gmail (useful in case the labels, read state,\netc., have changed)."}, {"name": "refreshThreads", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Reloads the threads and associated state from Gmail (useful in case the labels, read state,\netc., have changed)."}, {"name": "search", "parameters": [{"name": "query", "type": "String"}], "result": "GmailThread[]", "description": "Search Gmail with the given query."}, {"name": "search", "parameters": [{"name": "query", "type": "String"}, {"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Search Gmail with the given query."}, {"name": "sendEmail", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}], "result": "GmailApp", "description": "Sends an email message."}, {"name": "sendEmail", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailApp", "description": "Sends an email message with optional arguments."}, {"name": "setCurrentMessageAccessToken", "parameters": [{"name": "accessToken", "type": "String"}], "result": "void", "description": "Sets the current message access\ntoken that enables the script to access the current GmailMessage properties."}, {"name": "starMessage", "parameters": [{"name": "message", "type": "GmailMessage"}], "result": "GmailApp", "description": "Adds a star to this message and forces the message to refresh."}, {"name": "starMessages", "parameters": [{"name": "messages", "type": "GmailMessage"}], "result": "GmailApp", "description": "Adds stars to these messages and forces the messages to refresh."}, {"name": "unstarMessage", "parameters": [{"name": "message", "type": "GmailMessage"}], "result": "GmailApp", "description": "Removes a star from this message and forces the message to refresh."}, {"name": "unstarMessages", "parameters": [{"name": "messages", "type": "GmailMessage"}], "result": "GmailApp", "description": "Removes stars from these messages and forces the messages to refresh."}, {"name": "copyBlob", "parameters": [], "result": "Blob", "description": "Returns a copy of this blob."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBytes", "parameters": [], "result": "Byte[]", "description": "Gets the data stored in this blob."}, {"name": "getContentType", "parameters": [], "result": "String", "description": "Gets the content type of the bytes in this blob."}, {"name": "getDataAsString", "parameters": [], "result": "String", "description": "Gets the data of this blob as a String with UTF-8 encoding."}, {"name": "getDataAsString", "parameters": [{"name": "charset", "type": "String"}], "result": "String", "description": "Gets the data of this blob as a string with the specified encoding."}, {"name": "getHash", "parameters": [], "result": "String", "description": "Gets the SHA1 content hash for this attachment."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this blob."}, {"name": "getSize", "parameters": [], "result": "Integer", "description": "Gets the size of this attachment."}, {"name": "isGoogleType", "parameters": [], "result": "Boolean", "description": "Returns whether this blob is a Google Workspace file (Sheets, Docs, etc.)."}, {"name": "setBytes", "parameters": [{"name": "data", "type": "Byte"}], "result": "Blob", "description": "Sets the data stored in this blob."}, {"name": "setContentType", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Sets the content type of the bytes in this blob."}, {"name": "setContentTypeFromExtension", "parameters": [], "result": "Blob", "description": "Sets the content type of the bytes in this blob based on the file extension."}, {"name": "setDataFromString", "parameters": [{"name": "string", "type": "String"}], "result": "Blob", "description": "Sets the data of this blob from a string with UTF-8 encoding."}, {"name": "setDataFromString", "parameters": [{"name": "string", "type": "String"}, {"name": "charset", "type": "String"}], "result": "Blob", "description": "Sets the data of this blob from a string with the specified encoding."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Blob", "description": "Sets the name of this blob."}, {"name": "deleteDraft", "parameters": [], "result": "void", "description": "Deletes this draft message."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of this draft message."}, {"name": "getMessage", "parameters": [], "result": "GmailMessage", "description": "Returns a GmailMessage representing this draft."}, {"name": "getMessageId", "parameters": [], "result": "String", "description": "Returns the ID of the GmailMessage representing this draft."}, {"name": "send", "parameters": [], "result": "GmailMessage", "description": "Sends this draft email message."}, {"name": "update", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Replaces the contents of this draft message."}, {"name": "update", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Replaces the contents of this draft message using optional arguments."}, {"name": "addToThread", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailLabel", "description": "Adds this label to the given thread and forces the thread to refresh (GmailThread.refresh())."}, {"name": "addToThreads", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailLabel", "description": "Adds this label to the given threads and forces the threads to refresh."}, {"name": "deleteLabel", "parameters": [], "result": "void", "description": "Deletes this label."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this label."}, {"name": "getThreads", "parameters": [], "result": "GmailThread[]", "description": "Gets the threads that are marked with this label."}, {"name": "getThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Gets a range of threads marked with this label."}, {"name": "getUnreadCount", "parameters": [], "result": "Integer", "description": "Gets the number of unread threads tagged with this label."}, {"name": "removeFromThread", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailLabel", "description": "Removes this label from the given thread and forces the thread to refresh."}, {"name": "removeFromThreads", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailLabel", "description": "Removes this label from the given threads and forces the threads to refresh."}, {"name": "createDraftReply", "parameters": [{"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of this message using the reply-to address."}, {"name": "createDraftReply", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of this message using the reply-to address, with\noptional arguments."}, {"name": "createDraftReplyAll", "parameters": [{"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender using the reply-to address and all recipients of\nthis message."}, {"name": "createDraftReplyAll", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of this message using the reply-to address and\nall recipients, with optional arguments."}, {"name": "forward", "parameters": [{"name": "recipient", "type": "String"}], "result": "GmailMessage", "description": "Forwards this message to new recipients."}, {"name": "forward", "parameters": [{"name": "recipient", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailMessage", "description": "Forwards this message to new recipients, with optional arguments."}, {"name": "getAttachments", "parameters": [], "result": "GmailAttachment[]", "description": "Gets all the attachments for this message."}, {"name": "getAttachments", "parameters": [{"name": "options", "type": "Object"}], "result": "GmailAttachment[]", "description": "Gets all the attachments for this message."}, {"name": "getBcc", "parameters": [], "result": "String", "description": "Gets the comma-separated recipients bcc'd on this message."}, {"name": "getBody", "parameters": [], "result": "String", "description": "Gets the HTML content of the body of this message."}, {"name": "getCc", "parameters": [], "result": "String", "description": "Gets the comma-separated recipients cc'd on this message."}, {"name": "getDate", "parameters": [], "result": "Date", "description": "Gets the date and time of this message."}, {"name": "getFrom", "parameters": [], "result": "String", "description": "Gets the sender of this message."}, {"name": "getHeader", "parameters": [{"name": "name", "type": "String"}], "result": "String", "description": "Gets the value of an RFC 2822 header given the header name."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of this message."}, {"name": "getPlainBody", "parameters": [], "result": "String", "description": "Gets the content of the body of this message without HTML formatting."}, {"name": "getRawContent", "parameters": [], "result": "String", "description": "Gets the raw content of this message."}, {"name": "getReplyTo", "parameters": [], "result": "String", "description": "Gets the reply-to address of this message (usually the sender)."}, {"name": "getSubject", "parameters": [], "result": "String", "description": "Gets the subject of this message."}, {"name": "getThread", "parameters": [], "result": "GmailThread", "description": "Gets the thread that contains this message."}, {"name": "getTo", "parameters": [], "result": "String", "description": "Gets the comma-separated recipients of this message."}, {"name": "isDraft", "parameters": [], "result": "Boolean", "description": "Gets whether this message is a draft."}, {"name": "isInChats", "parameters": [], "result": "Boolean", "description": "Gets whether this message is a chat."}, {"name": "isInInbox", "parameters": [], "result": "Boolean", "description": "Gets whether this message is in the inbox."}, {"name": "isInPriorityInbox", "parameters": [], "result": "Boolean", "description": "Returns true if this message is in the priority inbox; returns false otherwise."}, {"name": "isInTrash", "parameters": [], "result": "Boolean", "description": "Gets whether this message is in the trash."}, {"name": "isStarred", "parameters": [], "result": "Boolean", "description": "Gets whether this message is starred."}, {"name": "isUnread", "parameters": [], "result": "Boolean", "description": "Gets whether this message is unread."}, {"name": "markRead", "parameters": [], "result": "GmailMessage", "description": "Marks the message as read."}, {"name": "markUnread", "parameters": [], "result": "GmailMessage", "description": "Marks the message as unread."}, {"name": "moveToTrash", "parameters": [], "result": "GmailMessage", "description": "Moves the message to the trash."}, {"name": "refresh", "parameters": [], "result": "GmailMessage", "description": "Reloads this message and associated state from Gmail (useful in case the labels, read state,\netc., have changed)."}, {"name": "reply", "parameters": [{"name": "body", "type": "String"}], "result": "GmailMessage", "description": "Replies to the sender of this message using the reply-to address."}, {"name": "reply", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailMessage", "description": "Replies to the sender of this message using the reply-to address, with optional arguments."}, {"name": "replyAll", "parameters": [{"name": "body", "type": "String"}], "result": "GmailMessage", "description": "Replies to the sender using the reply-to address and all recipients of this message."}, {"name": "replyAll", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailMessage", "description": "Replies to the sender of this message using the reply-to address and all recipients, with\noptional arguments."}, {"name": "star", "parameters": [], "result": "GmailMessage", "description": "Stars the message."}, {"name": "unstar", "parameters": [], "result": "GmailMessage", "description": "Unstars the message."}, {"name": "addLabel", "parameters": [{"name": "label", "type": "GmailLabel"}], "result": "GmailThread", "description": "Adds this label to the thread."}, {"name": "createDraftReply", "parameters": [{"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of the last message in this thread using the\nreply-to address."}, {"name": "createDraftReply", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of the last message in this thread using the\nreply-to address, with optional arguments."}, {"name": "createDraftReplyAll", "parameters": [{"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of the last message in this thread, using the\nreply-to address and all recipients of this message."}, {"name": "createDraftReplyAll", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Creates a draft message replying to the sender of the last message in this thread, using the\nreply-to address and all recipients, with optional arguments."}, {"name": "getFirstMessageSubject", "parameters": [], "result": "String", "description": "Gets the subject of the first message in the thread."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of this thread."}, {"name": "getLabels", "parameters": [], "result": "GmailLabel[]", "description": "Returns the user-created labels on this thread."}, {"name": "getLastMessageDate", "parameters": [], "result": "Date", "description": "Gets the date of this thread's most recent message."}, {"name": "getMessageCount", "parameters": [], "result": "Integer", "description": "Returns the number of messages in the thread."}, {"name": "getMessages", "parameters": [], "result": "GmailMessage[]", "description": "Gets the messages in this thread."}, {"name": "getPermalink", "parameters": [], "result": "String", "description": "Gets a permalink for this thread."}, {"name": "hasStarredMessages", "parameters": [], "result": "Boolean", "description": "Returns whether the thread has any starred messages."}, {"name": "isImportant", "parameters": [], "result": "Boolean", "description": "Returns whether the thread is marked as important."}, {"name": "isInChats", "parameters": [], "result": "Boolean", "description": "Returns whether the thread is labeled a chat."}, {"name": "isInInbox", "parameters": [], "result": "Boolean", "description": "Returns whether the thread is in the inbox."}, {"name": "isInPriorityInbox", "parameters": [], "result": "Boolean", "description": "Returns true if this thread is in the priority inbox; returns false otherwise."}, {"name": "isInSpam", "parameters": [], "result": "Boolean", "description": "Returns whether the thread is marked as spam."}, {"name": "isInTrash", "parameters": [], "result": "Boolean", "description": "Returns whether the thread is in the trash."}, {"name": "isUnread", "parameters": [], "result": "Boolean", "description": "Returns whether the thread has any unread messages."}, {"name": "markImportant", "parameters": [], "result": "GmailThread", "description": "Marks this thread as important."}, {"name": "markRead", "parameters": [], "result": "GmailThread", "description": "Marks this thread as read."}, {"name": "markUnimportant", "parameters": [], "result": "GmailThread", "description": "Marks this thread as unimportant."}, {"name": "markUnread", "parameters": [], "result": "GmailThread", "description": "Marks this thread as unread."}, {"name": "moveToArchive", "parameters": [], "result": "GmailThread", "description": "Moves this thread to the archive."}, {"name": "moveToInbox", "parameters": [], "result": "GmailThread", "description": "Moves this thread to the inbox."}, {"name": "moveToSpam", "parameters": [], "result": "GmailThread", "description": "Moves this thread to spam."}, {"name": "moveToTrash", "parameters": [], "result": "GmailThread", "description": "Moves this thread to the trash."}, {"name": "refresh", "parameters": [], "result": "GmailThread", "description": "Reloads this thread, and associated state from Gmail (useful in case the labels, read state,\netc., have changed)."}, {"name": "removeLabel", "parameters": [{"name": "label", "type": "GmailLabel"}], "result": "GmailThread", "description": "Removes this label from the thread."}, {"name": "reply", "parameters": [{"name": "body", "type": "String"}], "result": "GmailThread", "description": "Reply to the sender of the last message on this thread using the replyTo address."}, {"name": "reply", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailThread", "description": "Reply to the sender of the last message on this thread using the replyTo address, with optional\narguments."}, {"name": "replyAll", "parameters": [{"name": "body", "type": "String"}], "result": "GmailThread", "description": "Reply to the sender (using the replyTo address), and all recipients of the last message on this\nthread."}, {"name": "replyAll", "parameters": [{"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailThread", "description": "Reply to the sender (using the replyTo address), and all recipients of the last message\non this thread, with optional arguments."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/gmail/gmail-attachment", "name": "GmailAttachment", "type": "class", "methods": [{"name": "copyBlob", "parameters": [], "result": "Blob", "description": "Returns a copy of this blob."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBytes", "parameters": [], "result": "Byte[]", "description": "Gets the data stored in this blob."}, {"name": "getContentType", "parameters": [], "result": "String", "description": "Gets the content type of the bytes in this blob."}, {"name": "getDataAsString", "parameters": [], "result": "String", "description": "Gets the data of this blob as a String with UTF-8 encoding."}, {"name": "getDataAsString", "parameters": [{"name": "charset", "type": "String"}], "result": "String", "description": "Gets the data of this blob as a string with the specified encoding."}, {"name": "getHash", "parameters": [], "result": "String", "description": "Gets the SHA1 content hash for this attachment."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this blob."}, {"name": "getSize", "parameters": [], "result": "Integer", "description": "Gets the size of this attachment."}, {"name": "isGoogleType", "parameters": [], "result": "Boolean", "description": "Returns whether this blob is a Google Workspace file (Sheets, Docs, etc.)."}, {"name": "setBytes", "parameters": [{"name": "data", "type": "Byte"}], "result": "Blob", "description": "Sets the data stored in this blob."}, {"name": "setContentType", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Sets the content type of the bytes in this blob."}, {"name": "setContentTypeFromExtension", "parameters": [], "result": "Blob", "description": "Sets the content type of the bytes in this blob based on the file extension."}, {"name": "setDataFromString", "parameters": [{"name": "string", "type": "String"}], "result": "Blob", "description": "Sets the data of this blob from a string with UTF-8 encoding."}, {"name": "setDataFromString", "parameters": [{"name": "string", "type": "String"}, {"name": "charset", "type": "String"}], "result": "Blob", "description": "Sets the data of this blob from a string with the specified encoding."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Blob", "description": "Sets the name of this blob."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/page-navigation-type", "name": "PageNavigationType", "type": "enum", "methods": [], "properties": [{"name": "CONTINUE", "type": "Enum", "url": "", "description": "Continue to the next page of the form after completing the current page."}, {"name": "GO_TO_PAGE", "type": "Enum", "url": "", "description": "Jump to a specified page of the form after completing the current page."}, {"name": "RESTART", "type": "Enum", "url": "", "description": "Restart the form from the beginning, without clearing answers entered so far, after completing\nthe current page."}, {"name": "SUBMIT", "type": "Enum", "url": "", "description": "Submit the form response after completing the current page."}]},
{"url": "https://developers.google.com/apps-script/reference/gmail/gmail-app", "name": "GmailApp", "type": "class", "methods": [{"name": "createDraft", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}], "result": "GmailDraft", "description": "Creates a draft email message."}, {"name": "createDraft", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailDraft", "description": "Creates a draft email message with optional arguments."}, {"name": "createLabel", "parameters": [{"name": "name", "type": "String"}], "result": "GmailLabel", "description": "Create a new user label of the given name."}, {"name": "deleteLabel", "parameters": [{"name": "label", "type": "GmailLabel"}], "result": "GmailApp", "description": "Deletes the specified label."}, {"name": "getAliases", "parameters": [], "result": "String[]", "description": "Gets a list of the emails that are set up as aliases for this account in Gmail."}, {"name": "getChatThreads", "parameters": [], "result": "GmailThread[]", "description": "Retrieves all chat threads irrespective of labels."}, {"name": "getChatThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Retrieves a range of chat threads irrespective of labels."}, {"name": "getDraft", "parameters": [{"name": "draftId", "type": "String"}], "result": "GmailDraft", "description": "Retrieve an email message draft by ID."}, {"name": "getDraftMessages", "parameters": [], "result": "GmailMessage[]", "description": "Retrieves all draft messages."}, {"name": "getDrafts", "parameters": [], "result": "GmailDraft[]", "description": "Gets all Gmail draft messages."}, {"name": "getInboxThreads", "parameters": [], "result": "GmailThread[]", "description": "Retrieves all Inbox threads irrespective of labels."}, {"name": "getInboxThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Retrieves a range of Inbox threads irrespective of labels."}, {"name": "getInboxUnreadCount", "parameters": [], "result": "Integer", "description": "Gets the number of unread threads in the inbox."}, {"name": "getMessageById", "parameters": [{"name": "id", "type": "String"}], "result": "GmailMessage", "description": "Gets a message by ID."}, {"name": "getMessagesForThread", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailMessage[]", "description": "Retrieve all messages in the specified thread."}, {"name": "getMessagesForThreads", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailMessage[][]", "description": "Retrieve all messages in the specified threads."}, {"name": "getPriorityInboxThreads", "parameters": [], "result": "GmailThread[]", "description": "Retrieves all Priority Inbox threads irrespective of labels."}, {"name": "getPriorityInboxThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Retrieves a range of Priority Inbox threads irrespective of labels."}, {"name": "getPriorityInboxUnreadCount", "parameters": [], "result": "Integer", "description": "Gets the number of unread threads in the Priority Inbox."}, {"name": "getSpamThreads", "parameters": [], "result": "GmailThread[]", "description": "Retrieves all spam threads irrespective of labels."}, {"name": "getSpamThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Retrieves a range of spam threads irrespective of labels."}, {"name": "getSpamUnreadCount", "parameters": [], "result": "Integer", "description": "Gets the number of unread threads that are spam."}, {"name": "getStarredThreads", "parameters": [], "result": "GmailThread[]", "description": "Retrieves all starred threads irrespective of labels."}, {"name": "getStarredThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Retrieves a range of starred threads irrespective of labels."}, {"name": "getStarredUnreadCount", "parameters": [], "result": "Integer", "description": "Gets the number of unread threads that are starred."}, {"name": "getThreadById", "parameters": [{"name": "id", "type": "String"}], "result": "GmailThread", "description": "Gets a thread by ID."}, {"name": "getTrashThreads", "parameters": [], "result": "GmailThread[]", "description": "Retrieves all trash threads irrespective of labels."}, {"name": "getTrashThreads", "parameters": [{"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Retrieves a range of trash threads irrespective of labels."}, {"name": "getUserLabelByName", "parameters": [{"name": "name", "type": "String"}], "result": "GmailLabel", "description": "Retrieves a label given the label name."}, {"name": "getUserLabels", "parameters": [], "result": "GmailLabel[]", "description": "Retrieves a list of user-created labels."}, {"name": "markMessageRead", "parameters": [{"name": "message", "type": "GmailMessage"}], "result": "GmailApp", "description": "Marks this message read and forces the message to refresh."}, {"name": "markMessageUnread", "parameters": [{"name": "message", "type": "GmailMessage"}], "result": "GmailApp", "description": "Marks this message unread and forces the message to refresh."}, {"name": "markMessagesRead", "parameters": [{"name": "messages", "type": "GmailMessage"}], "result": "GmailApp", "description": "Marks these messages read and forces the messages to refresh."}, {"name": "markMessagesUnread", "parameters": [{"name": "messages", "type": "GmailMessage"}], "result": "GmailApp", "description": "Marks these messages unread and forces the messages to refresh."}, {"name": "markThreadImportant", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks this thread as important and forces the thread to refresh."}, {"name": "markThreadRead", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks this thread as read and forces the thread to refresh."}, {"name": "markThreadUnimportant", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks this thread as unimportant and forces the thread to refresh."}, {"name": "markThreadUnread", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks this thread unread and forces the thread to refresh."}, {"name": "markThreadsImportant", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks these threads as important and forces the threads to refresh."}, {"name": "markThreadsRead", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks these threads as read and forces the threads to refresh."}, {"name": "markThreadsUnimportant", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks these threads as unimportant and forces the threads to refresh."}, {"name": "markThreadsUnread", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Marks these threads as unread and forces the threads to refresh."}, {"name": "moveMessageToTrash", "parameters": [{"name": "message", "type": "GmailMessage"}], "result": "GmailApp", "description": "Moves the message to the trash and forces the message to refresh."}, {"name": "moveMessagesToTrash", "parameters": [{"name": "messages", "type": "GmailMessage"}], "result": "GmailApp", "description": "Moves the specified messages to the trash and forces the messages to refresh."}, {"name": "moveThreadToArchive", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves this thread to the archive and forces the thread to refresh."}, {"name": "moveThreadToInbox", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves this thread to the inbox and forces the thread to refresh."}, {"name": "moveThreadToSpam", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves this thread to spam and forces the thread to refresh."}, {"name": "moveThreadToTrash", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves this thread to the trash and forces the thread to refresh."}, {"name": "moveThreadsToArchive", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves these threads to the archive and forces the threads to refresh."}, {"name": "moveThreadsToInbox", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves these threads to the inbox and forces the threads to refresh."}, {"name": "moveThreadsToSpam", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves these threads to spam and forces the threads to refresh."}, {"name": "moveThreadsToTrash", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Moves these threads to the trash and forces the threads to refresh."}, {"name": "refreshMessage", "parameters": [{"name": "message", "type": "GmailMessage"}], "result": "GmailApp", "description": "Reloads the message and associated state from Gmail (useful in case the labels, read state,\netc., have changed)."}, {"name": "refreshMessages", "parameters": [{"name": "messages", "type": "GmailMessage"}], "result": "GmailApp", "description": "Reloads the messages and associated state from Gmail (useful in case the labels, read state,\netc., have changed)."}, {"name": "refreshThread", "parameters": [{"name": "thread", "type": "GmailThread"}], "result": "GmailApp", "description": "Reloads the thread and associated state from Gmail (useful in case the labels, read state,\netc., have changed)."}, {"name": "refreshThreads", "parameters": [{"name": "threads", "type": "GmailThread"}], "result": "GmailApp", "description": "Reloads the threads and associated state from Gmail (useful in case the labels, read state,\netc., have changed)."}, {"name": "search", "parameters": [{"name": "query", "type": "String"}], "result": "GmailThread[]", "description": "Search Gmail with the given query."}, {"name": "search", "parameters": [{"name": "query", "type": "String"}, {"name": "start", "type": "Integer"}, {"name": "max", "type": "Integer"}], "result": "GmailThread[]", "description": "Search Gmail with the given query."}, {"name": "sendEmail", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}], "result": "GmailApp", "description": "Sends an email message."}, {"name": "sendEmail", "parameters": [{"name": "recipient", "type": "String"}, {"name": "subject", "type": "String"}, {"name": "body", "type": "String"}, {"name": "options", "type": "Object"}], "result": "GmailApp", "description": "Sends an email message with optional arguments."}, {"name": "setCurrentMessageAccessToken", "parameters": [{"name": "accessToken", "type": "String"}], "result": "void", "description": "Sets the current message access\ntoken that enables the script to access the current GmailMessage properties."}, {"name": "starMessage", "parameters": [{"name": "message", "type": "GmailMessage"}], "result": "GmailApp", "description": "Adds a star to this message and forces the message to refresh."}, {"name": "starMessages", "parameters": [{"name": "messages", "type": "GmailMessage"}], "result": "GmailApp", "description": "Adds stars to these messages and forces the messages to refresh."}, {"name": "unstarMessage", "parameters": [{"name": "message", "type": "GmailMessage"}], "result": "GmailApp", "description": "Removes a star from this message and forces the message to refresh."}, {"name": "unstarMessages", "parameters": [{"name": "messages", "type": "GmailMessage"}], "result": "GmailApp", "description": "Removes stars from these messages and forces the messages to refresh."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/destination-type", "name": "DestinationType", "type": "enum", "methods": [], "properties": [{"name": "SPREADSHEET", "type": "Enum", "url": "", "description": "A Google Sheets spreadsheet as a destination for form responses."}]},
{"url": "https://developers.google.com/apps-script/reference/forms/feedback-type", "name": "FeedbackType", "type": "enum", "methods": [], "properties": [{"name": "CORRECT", "type": "Enum", "url": "", "description": "Feedback that is automatically displayed to respondents for a question answered correctly.\nCorrect feedback can only be attached to a question type that supports autograding (e.g. radio,\ncheckbox, select)"}, {"name": "INCORRECT", "type": "Enum", "url": "", "description": "Feedback that is automatically displayed to respondents for a question answered incorrectly.\nIncorrect feedback can only be attached to a question type that supports autograding (e.g.\nradio, checkbox, select)"}, {"name": "GENERAL", "type": "Enum", "url": "", "description": "Feedback that is automatically displayed to respondents when they submit their response.\nGeneral feedback can only be attached to question types that do not support auto-grading, but\nare gradeable (ie everything but grid)"}]},
{"url": "https://developers.google.com/apps-script/reference/forms/item-type", "name": "ItemType", "type": "enum", "methods": [], "properties": [{"name": "CHECKBOX", "type": "Enum", "url": "", "description": "A question item that allows the respondent to select one or more checkboxes, as well as an\noptional \"other\" field."}, {"name": "CHECKBOX_GRID", "type": "Enum", "url": "", "description": "A question item, presented as a grid of columns and rows, that allows the respondent to select\nmultiple choices per row from a sequence of checkboxes."}, {"name": "DATE", "type": "Enum", "url": "", "description": "A question item that allows the respondent to indicate a date."}, {"name": "DATETIME", "type": "Enum", "url": "", "description": "A question item that allows the respondent to indicate a date and time."}, {"name": "DURATION", "type": "Enum", "url": "", "description": "A question item that allows the respondent to indicate a length of time."}, {"name": "GRID", "type": "Enum", "url": "", "description": "A question item, presented as a grid of columns and rows, that allows the respondent to select\none choice per row from a sequence of radio buttons."}, {"name": "IMAGE", "type": "Enum", "url": "", "description": "A layout item that displays an image."}, {"name": "LIST", "type": "Enum", "url": "", "description": "A question item that allows the respondent to select one choice from a drop-down list."}, {"name": "MULTIPLE_CHOICE", "type": "Enum", "url": "", "description": "A question item that allows the respondent to select one choice from a list of radio buttons or\nan optional \"other\" field."}, {"name": "PAGE_BREAK", "type": "Enum", "url": "", "description": "A layout item that marks the start of a page."}, {"name": "PARAGRAPH_TEXT", "type": "Enum", "url": "", "description": "A question item that allows the respondent to enter a block of text."}, {"name": "SCALE", "type": "Enum", "url": "", "description": "A question item that allows the respondent to choose one option from a numbered sequence of\nradio buttons."}, {"name": "SECTION_HEADER", "type": "Enum", "url": "", "description": "A layout item that visually indicates the start of a section."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "A question item that allows the respondent to enter a single line of text."}, {"name": "TIME", "type": "Enum", "url": "", "description": "A question item that allows the respondent to indicate a time of day."}, {"name": "VIDEO", "type": "Enum", "url": "", "description": "A layout item that displays a YouTube video."}]},
{"url": "https://developers.google.com/apps-script/reference/maps/color", "name": "Color", "type": "enum", "methods": [], "properties": [{"name": "BLACK", "type": "Enum", "url": "", "description": ""}, {"name": "BROWN", "type": "Enum", "url": "", "description": ""}, {"name": "GREEN", "type": "Enum", "url": "", "description": ""}, {"name": "PURPLE", "type": "Enum", "url": "", "description": ""}, {"name": "YELLOW", "type": "Enum", "url": "", "description": ""}, {"name": "BLUE", "type": "Enum", "url": "", "description": ""}, {"name": "GRAY", "type": "Enum", "url": "", "description": ""}, {"name": "ORANGE", "type": "Enum", "url": "", "description": ""}, {"name": "RED", "type": "Enum", "url": "", "description": ""}, {"name": "WHITE", "type": "Enum", "url": "", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/forms/video-item", "name": "VideoItem", "type": "class", "methods": [{"name": "duplicate", "parameters": [], "result": "VideoItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getAlignment", "parameters": [], "result": "Alignment", "description": "Gets the video's horizontal alignment."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Gets the video's width in pixels."}, {"name": "setAlignment", "parameters": [{"name": "alignment", "type": "Alignment"}], "result": "VideoItem", "description": "Sets the video's horizontal alignment."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "VideoItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "VideoItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setVideoUrl", "parameters": [{"name": "youtubeUrl", "type": "String"}], "result": "VideoItem", "description": "Sets the video itself from a given YouTube URL or YouTube video ID."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "VideoItem", "description": "Sets the video's width in pixels."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/text-validation-builder", "name": "TextValidationBuilder", "type": "class", "methods": [{"name": "requireNumber", "parameters": [], "result": "TextValidationBuilder", "description": "Requires text item to be a number."}, {"name": "requireNumberBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number between start and end, inclusive."}, {"name": "requireNumberEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number equal to value specified."}, {"name": "requireNumberGreaterThan", "parameters": [{"name": "number", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number greater than the value specified."}, {"name": "requireNumberGreaterThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number greater than or equal to the value specified."}, {"name": "requireNumberLessThan", "parameters": [{"name": "number", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number less than the value specified."}, {"name": "requireNumberLessThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number less than or equal to the value specified."}, {"name": "requireNumberNotBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number not between start and end, inclusive."}, {"name": "requireNumberNotEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number not equal to the value specified."}, {"name": "requireTextContainsPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "TextValidationBuilder", "description": "Requires response to contain pattern."}, {"name": "requireTextDoesNotContainPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "TextValidationBuilder", "description": "Requires response to not contain pattern."}, {"name": "requireTextDoesNotMatchPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "TextValidationBuilder", "description": "Requires response to not match pattern."}, {"name": "requireTextIsEmail", "parameters": [], "result": "TextValidationBuilder", "description": "Requires text item to be an email address."}, {"name": "requireTextIsUrl", "parameters": [], "result": "TextValidationBuilder", "description": "Requires text item to be a URL."}, {"name": "requireTextLengthGreaterThanOrEqualTo", "parameters": [{"name": "number", "type": "Integer"}], "result": "TextValidationBuilder", "description": "Requires response length to be greater than or equal to value."}, {"name": "requireTextLengthLessThanOrEqualTo", "parameters": [{"name": "number", "type": "Integer"}], "result": "TextValidationBuilder", "description": "Requires response length to be less than value."}, {"name": "requireTextMatchesPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "TextValidationBuilder", "description": "Requires response to match pattern."}, {"name": "requireWholeNumber", "parameters": [], "result": "TextValidationBuilder", "description": "Requires text item to be a whole number."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/time-item", "name": "TimeItem", "type": "class", "methods": [{"name": "createResponse", "parameters": [{"name": "hour", "type": "Integer"}, {"name": "minute", "type": "Integer"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this time item."}, {"name": "duplicate", "parameters": [], "result": "TimeItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "TimeItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "TimeItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "TimeItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "TimeItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "TimeItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/alignment", "name": "Alignment", "type": "enum", "methods": [], "properties": [{"name": "LEFT", "type": "Enum", "url": "", "description": "Align the image to the left side of the form."}, {"name": "CENTER", "type": "Enum", "url": "", "description": "Align the image to the center of the form."}, {"name": "RIGHT", "type": "Enum", "url": "", "description": "Align the image to the right side of the form."}]},
{"url": "https://developers.google.com/apps-script/reference/forms/text-validation", "name": "TextValidation", "type": "class", "methods": [], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/item", "name": "Item", "type": "interface", "methods": [{"name": "asCheckboxGridItem", "parameters": [], "result": "CheckboxGridItem", "description": "Returns the item as a checkbox grid item."}, {"name": "asCheckboxItem", "parameters": [], "result": "CheckboxItem", "description": "Returns the item as a checkbox item."}, {"name": "asDateItem", "parameters": [], "result": "DateItem", "description": "Returns the item as a date item."}, {"name": "asDateTimeItem", "parameters": [], "result": "DateTimeItem", "description": "Returns the item as a date-time item."}, {"name": "asDurationItem", "parameters": [], "result": "DurationItem", "description": "Returns the item as a duration item."}, {"name": "asGridItem", "parameters": [], "result": "GridItem", "description": "Returns the item as a grid item."}, {"name": "asImageItem", "parameters": [], "result": "ImageItem", "description": "Returns the item as an image item."}, {"name": "asListItem", "parameters": [], "result": "ListItem", "description": "Returns the item as a list item."}, {"name": "asMultipleChoiceItem", "parameters": [], "result": "MultipleChoiceItem", "description": "Returns the item as a multiple-choice item."}, {"name": "asPageBreakItem", "parameters": [], "result": "PageBreakItem", "description": "Returns the item as a page-break item."}, {"name": "asParagraphTextItem", "parameters": [], "result": "ParagraphTextItem", "description": "Returns the item as a paragraph-text item."}, {"name": "asScaleItem", "parameters": [], "result": "ScaleItem", "description": "Returns the item as a scale item."}, {"name": "asSectionHeaderItem", "parameters": [], "result": "SectionHeaderItem", "description": "Returns the item as a section-header item."}, {"name": "asTextItem", "parameters": [], "result": "TextItem", "description": "Returns the item as a text item."}, {"name": "asTimeItem", "parameters": [], "result": "TimeItem", "description": "Returns the item as a time item."}, {"name": "asVideoItem", "parameters": [], "result": "VideoItem", "description": "Returns the item as a video item."}, {"name": "duplicate", "parameters": [], "result": "Item", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "Item", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Item", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/section-header-item", "name": "SectionHeaderItem", "type": "class", "methods": [{"name": "duplicate", "parameters": [], "result": "SectionHeaderItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "SectionHeaderItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "SectionHeaderItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/text-item", "name": "TextItem", "type": "class", "methods": [{"name": "clearValidation", "parameters": [], "result": "TextItem", "description": "Removes any data validation for this text item."}, {"name": "createResponse", "parameters": [{"name": "response", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this text item."}, {"name": "duplicate", "parameters": [], "result": "TextItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "TextItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "TextItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "TextItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "TextItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "TextItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setValidation", "parameters": [{"name": "validation", "type": "TextValidation"}], "result": "TextItem", "description": "Sets the data validation for this text item."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/quiz-feedback-builder", "name": "QuizFeedbackBuilder", "type": "class", "methods": [{"name": "addLink", "parameters": [{"name": "url", "type": "String"}], "result": "QuizFeedbackBuilder", "description": "Adds a link to the feedback's supplemental material."}, {"name": "addLink", "parameters": [{"name": "url", "type": "String"}, {"name": "displayText", "type": "String"}], "result": "QuizFeedbackBuilder", "description": "Adds a link to the feedback's supplemental material."}, {"name": "build", "parameters": [], "result": "QuizFeedback", "description": "Builds a Feedback of the corresponding type for this builder."}, {"name": "copy", "parameters": [], "result": "QuizFeedbackBuilder", "description": "Returns a copy of this builder."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "QuizFeedbackBuilder", "description": "Sets the feedback text."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/scale-item", "name": "ScaleItem", "type": "class", "methods": [{"name": "createResponse", "parameters": [{"name": "response", "type": "Integer"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this scale item."}, {"name": "duplicate", "parameters": [], "result": "ScaleItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getLeftLabel", "parameters": [], "result": "String", "description": "Gets the label for the scale's lower bound, if any."}, {"name": "getLowerBound", "parameters": [], "result": "Integer", "description": "Gets the scale's lower bound."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getRightLabel", "parameters": [], "result": "String", "description": "Gets the label for the scale's upper bound, if any."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "getUpperBound", "parameters": [], "result": "Integer", "description": "Gets the scale's upper bound."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setBounds", "parameters": [{"name": "lower", "type": "Integer"}, {"name": "upper", "type": "Integer"}], "result": "ScaleItem", "description": "Sets the scale's lower and upper bounds."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "ScaleItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "ScaleItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setLabels", "parameters": [{"name": "lower", "type": "String"}, {"name": "upper", "type": "String"}], "result": "ScaleItem", "description": "Sets labels for the scale's lower and upper bounds."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "ScaleItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "ScaleItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ScaleItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/quiz-feedback", "name": "QuizFeedback", "type": "class", "methods": [{"name": "getLinkUrls", "parameters": [], "result": "String[]", "description": "Gets a list of the URLs associated with the Feedback."}, {"name": "getText", "parameters": [], "result": "String", "description": "Gets the Feedback's display text."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/paragraph-text-item", "name": "ParagraphTextItem", "type": "class", "methods": [{"name": "clearValidation", "parameters": [], "result": "ParagraphTextItem", "description": "Removes any data validation for this paragraph text item."}, {"name": "createResponse", "parameters": [{"name": "response", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this paragraph text item."}, {"name": "duplicate", "parameters": [], "result": "ParagraphTextItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "ParagraphTextItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "ParagraphTextItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "ParagraphTextItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "ParagraphTextItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ParagraphTextItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setValidation", "parameters": [{"name": "validation", "type": "ParagraphTextValidation"}], "result": "ParagraphTextItem", "description": "Sets the data validation for this paragraph text item."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/item-response", "name": "ItemResponse", "type": "class", "methods": [{"name": "getFeedback", "parameters": [], "result": "Object", "description": "Gets the feedback that was given for the respondent's submitted answer."}, {"name": "getItem", "parameters": [], "result": "Item", "description": "Gets the question item that this response answers."}, {"name": "getResponse", "parameters": [], "result": "Object", "description": "Gets the answer that the respondent submitted."}, {"name": "getScore", "parameters": [], "result": "Object", "description": "Gets the score for the respondent's submitted answer."}, {"name": "setFeedback", "parameters": [{"name": "feedback", "type": "Object"}], "result": "ItemResponse", "description": "Sets the feedback that should be displayed for the respondent's submitted answer."}, {"name": "setScore", "parameters": [{"name": "score", "type": "Object"}], "result": "ItemResponse", "description": "Sets the score for the respondent's submitted answer."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/paragraph-text-validation-builder", "name": "ParagraphTextValidationBuilder", "type": "class", "methods": [{"name": "requireTextContainsPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "ParagraphTextValidationBuilder", "description": "Requires response to contain pattern."}, {"name": "requireTextDoesNotContainPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "ParagraphTextValidationBuilder", "description": "Requires response to not contain pattern."}, {"name": "requireTextDoesNotMatchPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "ParagraphTextValidationBuilder", "description": "Requires response to not match pattern."}, {"name": "requireTextLengthGreaterThanOrEqualTo", "parameters": [{"name": "number", "type": "Integer"}], "result": "ParagraphTextValidationBuilder", "description": "Requires response length to be greater than or equal to value."}, {"name": "requireTextLengthLessThanOrEqualTo", "parameters": [{"name": "number", "type": "Integer"}], "result": "ParagraphTextValidationBuilder", "description": "Requires response length to be less than value."}, {"name": "requireTextMatchesPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "ParagraphTextValidationBuilder", "description": "Requires response to match pattern."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/list-item", "name": "ListItem", "type": "class", "methods": [{"name": "createChoice", "parameters": [{"name": "value", "type": "String"}], "result": "Choice", "description": "Creates a new choice."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "isCorrect", "type": "Boolean"}], "result": "Choice", "description": "Creates a new choice."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "navigationItem", "type": "PageBreakItem"}], "result": "Choice", "description": "Creates a new choice with a page-navigation option that jumps to a given page-break item."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "navigationType", "type": "PageNavigationType"}], "result": "Choice", "description": "Creates a new choice with a page-navigation option."}, {"name": "createResponse", "parameters": [{"name": "response", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this list item."}, {"name": "duplicate", "parameters": [], "result": "ListItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getChoices", "parameters": [], "result": "Choice[]", "description": "Gets all choices for an item."}, {"name": "getFeedbackForCorrect", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond correctly to a question."}, {"name": "getFeedbackForIncorrect", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond incorrectly to a question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setChoiceValues", "parameters": [{"name": "values", "type": "String"}], "result": "ListItem", "description": "Sets the choices for an item from an array of strings."}, {"name": "setChoices", "parameters": [{"name": "choices", "type": "Choice"}], "result": "ListItem", "description": "Sets an array of choices for an item."}, {"name": "setFeedbackForCorrect", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "ListItem", "description": "Sets the feedback to be shown to respondents when they respond correctly to a question."}, {"name": "setFeedbackForIncorrect", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "ListItem", "description": "Sets the feedback to be shown to respondents when they respond incorrectly to a question."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "ListItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "ListItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "ListItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ListItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/image-item", "name": "ImageItem", "type": "class", "methods": [{"name": "duplicate", "parameters": [], "result": "ImageItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getAlignment", "parameters": [], "result": "Alignment", "description": "Gets the image's horizontal alignment."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getImage", "parameters": [], "result": "Blob", "description": "Gets the image that is currently assigned to the item."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Gets the image's width in pixels."}, {"name": "setAlignment", "parameters": [{"name": "alignment", "type": "Alignment"}], "result": "ImageItem", "description": "Sets the image's horizontal alignment."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "ImageItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "ImageItem", "description": "Sets the image itself."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ImageItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "ImageItem", "description": "Sets the image's width in pixels."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/multiple-choice-item", "name": "MultipleChoiceItem", "type": "class", "methods": [{"name": "createChoice", "parameters": [{"name": "value", "type": "String"}], "result": "Choice", "description": "Creates a new choice."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "isCorrect", "type": "Boolean"}], "result": "Choice", "description": "Creates a new choice."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "navigationItem", "type": "PageBreakItem"}], "result": "Choice", "description": "Creates a new choice with a page-navigation option that jumps to a given page-break item."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "navigationType", "type": "PageNavigationType"}], "result": "Choice", "description": "Creates a new choice with a page-navigation option."}, {"name": "createResponse", "parameters": [{"name": "response", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this multiple-choice item."}, {"name": "duplicate", "parameters": [], "result": "MultipleChoiceItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getChoices", "parameters": [], "result": "Choice[]", "description": "Gets all choices for an item."}, {"name": "getFeedbackForCorrect", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond correctly to a question."}, {"name": "getFeedbackForIncorrect", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond incorrectly to a question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "hasOtherOption", "parameters": [], "result": "Boolean", "description": "Determines whether the item has an \"other\" option."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setChoiceValues", "parameters": [{"name": "values", "type": "String"}], "result": "MultipleChoiceItem", "description": "Sets the choices for an item from an array of strings."}, {"name": "setChoices", "parameters": [{"name": "choices", "type": "Choice"}], "result": "MultipleChoiceItem", "description": "Sets an array of choices for an item."}, {"name": "setFeedbackForCorrect", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "MultipleChoiceItem", "description": "Sets the feedback to be shown to respondents when they respond correctly to a question."}, {"name": "setFeedbackForIncorrect", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "MultipleChoiceItem", "description": "Sets the feedback to be shown to respondents when they respond incorrectly to a question."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "MultipleChoiceItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "MultipleChoiceItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "MultipleChoiceItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "MultipleChoiceItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "showOtherOption", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "MultipleChoiceItem", "description": "Sets whether the item has an \"other\" option."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/page-break-item", "name": "PageBreakItem", "type": "class", "methods": [{"name": "duplicate", "parameters": [], "result": "PageBreakItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGoToPage", "parameters": [], "result": "PageBreakItem", "description": "Gets the PageBreakItem that the form will jump to after completing the page before this\npage break (that is, upon reaching this page break by normal linear progression through the\nform)."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPageNavigationType", "parameters": [], "result": "PageNavigationType", "description": "Gets the type of page navigation that occurs after completing the page before this page break\n(that is, upon reaching this page break by normal linear progression through the form)."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "setGoToPage", "parameters": [{"name": "goToPageItem", "type": "PageBreakItem"}], "result": "PageBreakItem", "description": "Sets the page to jump to after completing the page before this page break (that is, upon\nreaching this page break by normal linear progression through the form)."}, {"name": "setGoToPage", "parameters": [{"name": "navigationType", "type": "PageNavigationType"}], "result": "PageBreakItem", "description": "Sets the type of page navigation that occurs after completing the page before this page break\n(that is, upon reaching this page break by normal linear progression through the form)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "PageBreakItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "PageBreakItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/paragraph-text-validation", "name": "ParagraphTextValidation", "type": "class", "methods": [], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/grid-validation-builder", "name": "GridValidationBuilder", "type": "class", "methods": [{"name": "requireLimitOneResponsePerColumn", "parameters": [], "result": "GridValidationBuilder", "description": "Requires limit of one response per column for a grid item."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/grid-item", "name": "GridItem", "type": "class", "methods": [{"name": "clearValidation", "parameters": [], "result": "GridItem", "description": "Removes any data validation for this grid item."}, {"name": "createResponse", "parameters": [{"name": "responses", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this grid item."}, {"name": "duplicate", "parameters": [], "result": "GridItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getColumns", "parameters": [], "result": "String[]", "description": "Gets the values for every column in the grid."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getRows", "parameters": [], "result": "String[]", "description": "Gets the values for every row in the grid."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setColumns", "parameters": [{"name": "columns", "type": "String"}], "result": "GridItem", "description": "Sets the columns of the grid based on an array of values."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "GridItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "GridItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setRows", "parameters": [{"name": "rows", "type": "String"}], "result": "GridItem", "description": "Sets the rows of the grid based on an array of values."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "GridItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setValidation", "parameters": [{"name": "validation", "type": "GridValidation"}], "result": "GridItem", "description": "Sets the data validation for this grid item."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/form-response", "name": "FormResponse", "type": "class", "methods": [{"name": "getEditResponseUrl", "parameters": [], "result": "String", "description": "Generates a URL that can be used to edit a response that has already been submitted."}, {"name": "getGradableItemResponses", "parameters": [], "result": "ItemResponse[]", "description": "Gets all item responses contained in a form response, in the same order that the items appear\nin the form."}, {"name": "getGradableResponseForItem", "parameters": [{"name": "item", "type": "Item"}], "result": "ItemResponse", "description": "Gets the item response contained in a form response for a given item."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the form response."}, {"name": "getItemResponses", "parameters": [], "result": "ItemResponse[]", "description": "Gets all item responses contained in a form response, in the same order that the items appear\nin the form."}, {"name": "getRespondentEmail", "parameters": [], "result": "String", "description": "Gets the email address of the person who submitted a response, if the Form.setCollectEmail(collect) setting is enabled."}, {"name": "getResponseForItem", "parameters": [{"name": "item", "type": "Item"}], "result": "ItemResponse", "description": "Gets the item response contained in this form response for a given item."}, {"name": "getTimestamp", "parameters": [], "result": "Date", "description": "Gets the timestamp for a form response submission."}, {"name": "submit", "parameters": [], "result": "FormResponse", "description": "Submits the response."}, {"name": "toPrefilledUrl", "parameters": [], "result": "String", "description": "Generates a URL for the form in which the answers are pre-filled based on the answers in this\nform response."}, {"name": "withItemGrade", "parameters": [{"name": "gradedResponse", "type": "ItemResponse"}], "result": "FormResponse", "description": "Adds the given item response's grades to a form response."}, {"name": "withItemResponse", "parameters": [{"name": "response", "type": "ItemResponse"}], "result": "FormResponse", "description": "Adds the given item response to a form response."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/form", "name": "Form", "type": "class", "methods": [{"name": "addCheckboxGridItem", "parameters": [], "result": "CheckboxGridItem", "description": "Appends a new question item, presented as a grid of columns and rows, that allows the\nrespondent to select multiple choices per row from a sequence of checkboxes."}, {"name": "addCheckboxItem", "parameters": [], "result": "CheckboxItem", "description": "Appends a new question item that allows the respondent to select one or more checkboxes, as\nwell as an optional \"other\" field."}, {"name": "addDateItem", "parameters": [], "result": "DateItem", "description": "Appends a new question item that allows the respondent to indicate a date."}, {"name": "addDateTimeItem", "parameters": [], "result": "DateTimeItem", "description": "Appends a new question item that allows the respondent to indicate a date and time."}, {"name": "addDurationItem", "parameters": [], "result": "DurationItem", "description": "Appends a new question item that allows the respondent to indicate a length of time."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Form", "description": "Adds the given user to the list of editors for the Form."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Form", "description": "Adds the given user to the list of editors for the Form."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Form", "description": "Adds the given array of users to the list of editors for the Form."}, {"name": "addGridItem", "parameters": [], "result": "GridItem", "description": "Appends a new question item, presented as a grid of columns and rows, that allows the\nrespondent to select one choice per row from a sequence of radio buttons."}, {"name": "addImageItem", "parameters": [], "result": "ImageItem", "description": "Appends a new layout item that displays an image."}, {"name": "addListItem", "parameters": [], "result": "ListItem", "description": "Appends a new question item that allows the respondent to select one choice from a drop-down\nlist."}, {"name": "addMultipleChoiceItem", "parameters": [], "result": "MultipleChoiceItem", "description": "Appends a new question item that allows the respondent to select one choice from a list of\nradio buttons or an optional \"other\" field."}, {"name": "addPageBreakItem", "parameters": [], "result": "PageBreakItem", "description": "Appends a new layout item that marks the start of a page."}, {"name": "addParagraphTextItem", "parameters": [], "result": "ParagraphTextItem", "description": "Appends a new question item that allows the respondent to enter a block of text."}, {"name": "addScaleItem", "parameters": [], "result": "ScaleItem", "description": "Appends a new question item that allows the respondent to choose one option from a numbered\nsequence of radio buttons."}, {"name": "addSectionHeaderItem", "parameters": [], "result": "SectionHeaderItem", "description": "Appends a new layout item that visually indicates the start of a section."}, {"name": "addTextItem", "parameters": [], "result": "TextItem", "description": "Appends a new question item that allows the respondent to enter a single line of text."}, {"name": "addTimeItem", "parameters": [], "result": "TimeItem", "description": "Appends a new question item that allows the respondent to indicate a time of day."}, {"name": "addVideoItem", "parameters": [], "result": "VideoItem", "description": "Appends a new layout item that displays a video."}, {"name": "canEditResponse", "parameters": [], "result": "Boolean", "description": "Determines whether the form displays a link to edit a response after submitting it."}, {"name": "collectsEmail", "parameters": [], "result": "Boolean", "description": "Determines whether the form collects respondents' email addresses."}, {"name": "createResponse", "parameters": [], "result": "FormResponse", "description": "Creates a new response to the form."}, {"name": "deleteAllResponses", "parameters": [], "result": "Form", "description": "Deletes all submitted responses from the form's response store."}, {"name": "deleteItem", "parameters": [{"name": "index", "type": "Integer"}], "result": "void", "description": "Deletes the item at a given index among all the items in the form."}, {"name": "deleteItem", "parameters": [{"name": "item", "type": "Item"}], "result": "void", "description": "Deletes the given item."}, {"name": "deleteResponse", "parameters": [{"name": "responseId", "type": "String"}], "result": "Form", "description": "Deletes a single response from the form's response store."}, {"name": "getConfirmationMessage", "parameters": [], "result": "String", "description": "Gets the form's confirmation message."}, {"name": "getCustomClosedFormMessage", "parameters": [], "result": "String", "description": "Gets the custom message that will be displayed if the form is not accepting responses, or an\nempty string if no custom message has been set."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the form's description."}, {"name": "getDestinationId", "parameters": [], "result": "String", "description": "Gets the ID of the form's response destination."}, {"name": "getDestinationType", "parameters": [], "result": "DestinationType", "description": "Gets the type of the form's response destination."}, {"name": "getEditUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to access the form's edit mode."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Form."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the form."}, {"name": "getItemById", "parameters": [{"name": "id", "type": "Integer"}], "result": "Item", "description": "Gets the item with a given ID."}, {"name": "getItems", "parameters": [], "result": "Item[]", "description": "Gets an array of all items in the form."}, {"name": "getItems", "parameters": [{"name": "itemType", "type": "ItemType"}], "result": "Item[]", "description": "Gets an array of all items of a given type."}, {"name": "getPublishedUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to respond to the form."}, {"name": "getResponse", "parameters": [{"name": "responseId", "type": "String"}], "result": "FormResponse", "description": "Gets a single form response based on its response ID."}, {"name": "getResponses", "parameters": [], "result": "FormResponse[]", "description": "Gets an array of all of the form's responses."}, {"name": "getResponses", "parameters": [{"name": "timestamp", "type": "Date"}], "result": "FormResponse[]", "description": "Gets an array of all of the form's responses after a given date and time."}, {"name": "getShuffleQuestions", "parameters": [], "result": "Boolean", "description": "Determines whether the order of the questions on each page of the form is randomized."}, {"name": "getSummaryUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to view a summary of the form's responses."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the form's title."}, {"name": "hasLimitOneResponsePerUser", "parameters": [], "result": "Boolean", "description": "Determines whether the form allows only one response per respondent."}, {"name": "hasProgressBar", "parameters": [], "result": "Boolean", "description": "Determines whether the form displays a progress bar."}, {"name": "hasRespondAgainLink", "parameters": [], "result": "Boolean", "description": "Determines whether the form displays a link to submit another response after a respondent\ncompletes the form."}, {"name": "isAcceptingResponses", "parameters": [], "result": "Boolean", "description": "Determines whether the form is currently accepting responses."}, {"name": "isPublishingSummary", "parameters": [], "result": "Boolean", "description": "Determines whether the form displays a link to view a summary of responses after a respondent\ncompletes the form."}, {"name": "isQuiz", "parameters": [], "result": "Boolean", "description": "Determines whether the form is a quiz."}, {"name": "moveItem", "parameters": [{"name": "from", "type": "Integer"}, {"name": "to", "type": "Integer"}], "result": "Item", "description": "Moves an item at a given index among all the items in the form to another given index."}, {"name": "moveItem", "parameters": [{"name": "item", "type": "Item"}, {"name": "toIndex", "type": "Integer"}], "result": "Item", "description": "Moves a given item to an given index among all the items in the form."}, {"name": "removeDestination", "parameters": [], "result": "Form", "description": "Unlinks the form from its current response destination."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Form", "description": "Removes the given user from the list of editors for the Form."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Form", "description": "Removes the given user from the list of editors for the Form."}, {"name": "requiresLogin", "parameters": [], "result": "Boolean", "description": "Determines whether the form requires respondents to log in to an account in the same domain or\na subdomain before responding."}, {"name": "setAcceptingResponses", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form is currently accepting responses."}, {"name": "setAllowResponseEdits", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form displays a link to edit a response after submitting it."}, {"name": "setCollectEmail", "parameters": [{"name": "collect", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form collects respondents' email addresses."}, {"name": "setConfirmationMessage", "parameters": [{"name": "message", "type": "String"}], "result": "Form", "description": "Sets the form's confirmation message."}, {"name": "setCustomClosedFormMessage", "parameters": [{"name": "message", "type": "String"}], "result": "Form", "description": "Sets the message to display if the form is not accepting responses."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Form", "description": "Sets the form's description."}, {"name": "setDestination", "parameters": [{"name": "type", "type": "DestinationType"}, {"name": "id", "type": "String"}], "result": "Form", "description": "Sets the destination where form responses are saved."}, {"name": "setIsQuiz", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form is a quiz."}, {"name": "setLimitOneResponsePerUser", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form allows only one response per respondent."}, {"name": "setProgressBar", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form has a progress bar."}, {"name": "setPublishingSummary", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form displays a link to view a summary of responses after a respondent submits\nthe form."}, {"name": "setRequireLogin", "parameters": [{"name": "requireLogin", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form requires respondents to log in to an account in the same domain or a\nsubdomain before responding."}, {"name": "setShowLinkToRespondAgain", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form displays a link to submit another response after a respondent completes\nthe form."}, {"name": "setShuffleQuestions", "parameters": [{"name": "shuffle", "type": "Boolean"}], "result": "Form", "description": "Sets whether the order of the questions on each page of the form is randomized."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Form", "description": "Sets the form's title."}, {"name": "shortenFormUrl", "parameters": [{"name": "url", "type": "String"}], "result": "String", "description": "Converts a long URL for a form to a short URL."}, {"name": "submitGrades", "parameters": [{"name": "responses", "type": "FormResponse"}], "result": "Form", "description": "Submits grades for the given FormResponses."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/date-time-item", "name": "DateTimeItem", "type": "class", "methods": [{"name": "createResponse", "parameters": [{"name": "response", "type": "Date"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this date-time item."}, {"name": "duplicate", "parameters": [], "result": "DateTimeItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "includesYear", "parameters": [], "result": "Boolean", "description": "Determines whether the date item includes a year option."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "DateTimeItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "DateTimeItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setIncludesYear", "parameters": [{"name": "enableYear", "type": "Boolean"}], "result": "DateTimeItem", "description": "Sets whether the date item includes a year setting."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "DateTimeItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "DateTimeItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "DateTimeItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/duration-item", "name": "DurationItem", "type": "class", "methods": [{"name": "createResponse", "parameters": [{"name": "hours", "type": "Integer"}, {"name": "minutes", "type": "Integer"}, {"name": "seconds", "type": "Integer"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this date item."}, {"name": "duplicate", "parameters": [], "result": "DurationItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "DurationItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "DurationItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "DurationItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "DurationItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "DurationItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/grid-validation", "name": "GridValidation", "type": "class", "methods": [], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/date-item", "name": "DateItem", "type": "class", "methods": [{"name": "createResponse", "parameters": [{"name": "response", "type": "Date"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this date item."}, {"name": "duplicate", "parameters": [], "result": "DateItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "includesYear", "parameters": [], "result": "Boolean", "description": "Determines whether the date item includes a year option."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "DateItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "DateItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setIncludesYear", "parameters": [{"name": "enableYear", "type": "Boolean"}], "result": "DateItem", "description": "Sets whether the date item includes a year setting."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "DateItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "DateItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "DateItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/checkbox-validation-builder", "name": "CheckboxValidationBuilder", "type": "class", "methods": [{"name": "requireSelectAtLeast", "parameters": [{"name": "number", "type": "Integer"}], "result": "CheckboxValidationBuilder", "description": "Require at least this many choices to be selected."}, {"name": "requireSelectAtMost", "parameters": [{"name": "number", "type": "Integer"}], "result": "CheckboxValidationBuilder", "description": "Require at most this many choices to be selected."}, {"name": "requireSelectExactly", "parameters": [{"name": "number", "type": "Integer"}], "result": "CheckboxValidationBuilder", "description": "Require exactly this many choices to be selected."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/choice", "name": "Choice", "type": "class", "methods": [{"name": "getGotoPage", "parameters": [], "result": "PageBreakItem", "description": "Gets the PageBreakItem set as a GO_TO_PAGE destination\nif the responder selects this choice and completes the current page."}, {"name": "getPageNavigationType", "parameters": [], "result": "PageNavigationType", "description": "Gets the PageNavigationType that occurs if the responder selects this choice and\ncompletes the current page."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the choice's value, which respondents see as a label when viewing the form."}, {"name": "isCorrectAnswer", "parameters": [], "result": "Boolean", "description": "Gets whether the choice is a correct answer for the question."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/checkbox-grid-validation", "name": "CheckboxGridValidation", "type": "class", "methods": [], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/checkbox-validation", "name": "CheckboxValidation", "type": "class", "methods": [], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/checkbox-grid-validation-builder", "name": "CheckboxGridValidationBuilder", "type": "class", "methods": [{"name": "requireLimitOneResponsePerColumn", "parameters": [], "result": "CheckboxGridValidationBuilder", "description": "Requires limit of one response per column for a grid item."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms", "name": "Forms", "type": "forms", "methods": [{"name": "clearValidation", "parameters": [], "result": "CheckboxGridItem", "description": "Removes any data validation for this grid item."}, {"name": "createResponse", "parameters": [{"name": "responses", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this checkbox grid item."}, {"name": "duplicate", "parameters": [], "result": "CheckboxGridItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getColumns", "parameters": [], "result": "String[]", "description": "Gets the values for every column in the grid."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getRows", "parameters": [], "result": "String[]", "description": "Gets the values for every row in the grid."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setColumns", "parameters": [{"name": "columns", "type": "String"}], "result": "CheckboxGridItem", "description": "Sets the columns of the grid based on an array of values."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "CheckboxGridItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "CheckboxGridItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setRows", "parameters": [{"name": "rows", "type": "String"}], "result": "CheckboxGridItem", "description": "Sets the rows of the grid based on an array of values."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "CheckboxGridItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setValidation", "parameters": [{"name": "validation", "type": "CheckboxGridValidation"}], "result": "CheckboxGridItem", "description": "Sets the data validation for this checkbox grid item."}, {"name": "requireLimitOneResponsePerColumn", "parameters": [], "result": "CheckboxGridValidationBuilder", "description": "Requires limit of one response per column for a grid item."}, {"name": "clearValidation", "parameters": [], "result": "CheckboxItem", "description": "Removes any data validation for this checkbox item."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}], "result": "Choice", "description": "Creates a new choice."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "isCorrect", "type": "Boolean"}], "result": "Choice", "description": "Creates a new choice."}, {"name": "createResponse", "parameters": [{"name": "responses", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this checkbox item."}, {"name": "duplicate", "parameters": [], "result": "CheckboxItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getChoices", "parameters": [], "result": "Choice[]", "description": "Gets all choices for an item."}, {"name": "getFeedbackForCorrect", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond correctly to a question."}, {"name": "getFeedbackForIncorrect", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond incorrectly to a question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "hasOtherOption", "parameters": [], "result": "Boolean", "description": "Determines whether the item has an \"other\" option."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setChoiceValues", "parameters": [{"name": "values", "type": "String"}], "result": "CheckboxItem", "description": "Sets the choices for an item from an array of strings."}, {"name": "setChoices", "parameters": [{"name": "choices", "type": "Choice"}], "result": "CheckboxItem", "description": "Sets an array of choices for an item."}, {"name": "setFeedbackForCorrect", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "CheckboxItem", "description": "Sets the feedback to be shown to respondents when they respond correctly to a question."}, {"name": "setFeedbackForIncorrect", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "CheckboxItem", "description": "Sets the feedback to be shown to respondents when they respond incorrectly to a question."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "CheckboxItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "CheckboxItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "CheckboxItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "CheckboxItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setValidation", "parameters": [{"name": "validation", "type": "CheckboxValidation"}], "result": "CheckboxItem", "description": "Sets the data validation for this checkbox item."}, {"name": "showOtherOption", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "CheckboxItem", "description": "Sets whether the item has an \"other\" option."}, {"name": "requireSelectAtLeast", "parameters": [{"name": "number", "type": "Integer"}], "result": "CheckboxValidationBuilder", "description": "Require at least this many choices to be selected."}, {"name": "requireSelectAtMost", "parameters": [{"name": "number", "type": "Integer"}], "result": "CheckboxValidationBuilder", "description": "Require at most this many choices to be selected."}, {"name": "requireSelectExactly", "parameters": [{"name": "number", "type": "Integer"}], "result": "CheckboxValidationBuilder", "description": "Require exactly this many choices to be selected."}, {"name": "getGotoPage", "parameters": [], "result": "PageBreakItem", "description": "Gets the PageBreakItem set as a GO_TO_PAGE destination\nif the responder selects this choice and completes the current page."}, {"name": "getPageNavigationType", "parameters": [], "result": "PageNavigationType", "description": "Gets the PageNavigationType that occurs if the responder selects this choice and\ncompletes the current page."}, {"name": "getValue", "parameters": [], "result": "String", "description": "Gets the choice's value, which respondents see as a label when viewing the form."}, {"name": "isCorrectAnswer", "parameters": [], "result": "Boolean", "description": "Gets whether the choice is a correct answer for the question."}, {"name": "createResponse", "parameters": [{"name": "response", "type": "Date"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this date item."}, {"name": "duplicate", "parameters": [], "result": "DateItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "includesYear", "parameters": [], "result": "Boolean", "description": "Determines whether the date item includes a year option."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "DateItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "DateItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setIncludesYear", "parameters": [{"name": "enableYear", "type": "Boolean"}], "result": "DateItem", "description": "Sets whether the date item includes a year setting."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "DateItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "DateItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "DateItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "createResponse", "parameters": [{"name": "response", "type": "Date"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this date-time item."}, {"name": "duplicate", "parameters": [], "result": "DateTimeItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "includesYear", "parameters": [], "result": "Boolean", "description": "Determines whether the date item includes a year option."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "DateTimeItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "DateTimeItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setIncludesYear", "parameters": [{"name": "enableYear", "type": "Boolean"}], "result": "DateTimeItem", "description": "Sets whether the date item includes a year setting."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "DateTimeItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "DateTimeItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "DateTimeItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "createResponse", "parameters": [{"name": "hours", "type": "Integer"}, {"name": "minutes", "type": "Integer"}, {"name": "seconds", "type": "Integer"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this date item."}, {"name": "duplicate", "parameters": [], "result": "DurationItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "DurationItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "DurationItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "DurationItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "DurationItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "DurationItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "addCheckboxGridItem", "parameters": [], "result": "CheckboxGridItem", "description": "Appends a new question item, presented as a grid of columns and rows, that allows the\nrespondent to select multiple choices per row from a sequence of checkboxes."}, {"name": "addCheckboxItem", "parameters": [], "result": "CheckboxItem", "description": "Appends a new question item that allows the respondent to select one or more checkboxes, as\nwell as an optional \"other\" field."}, {"name": "addDateItem", "parameters": [], "result": "DateItem", "description": "Appends a new question item that allows the respondent to indicate a date."}, {"name": "addDateTimeItem", "parameters": [], "result": "DateTimeItem", "description": "Appends a new question item that allows the respondent to indicate a date and time."}, {"name": "addDurationItem", "parameters": [], "result": "DurationItem", "description": "Appends a new question item that allows the respondent to indicate a length of time."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Form", "description": "Adds the given user to the list of editors for the Form."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Form", "description": "Adds the given user to the list of editors for the Form."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Form", "description": "Adds the given array of users to the list of editors for the Form."}, {"name": "addGridItem", "parameters": [], "result": "GridItem", "description": "Appends a new question item, presented as a grid of columns and rows, that allows the\nrespondent to select one choice per row from a sequence of radio buttons."}, {"name": "addImageItem", "parameters": [], "result": "ImageItem", "description": "Appends a new layout item that displays an image."}, {"name": "addListItem", "parameters": [], "result": "ListItem", "description": "Appends a new question item that allows the respondent to select one choice from a drop-down\nlist."}, {"name": "addMultipleChoiceItem", "parameters": [], "result": "MultipleChoiceItem", "description": "Appends a new question item that allows the respondent to select one choice from a list of\nradio buttons or an optional \"other\" field."}, {"name": "addPageBreakItem", "parameters": [], "result": "PageBreakItem", "description": "Appends a new layout item that marks the start of a page."}, {"name": "addParagraphTextItem", "parameters": [], "result": "ParagraphTextItem", "description": "Appends a new question item that allows the respondent to enter a block of text."}, {"name": "addScaleItem", "parameters": [], "result": "ScaleItem", "description": "Appends a new question item that allows the respondent to choose one option from a numbered\nsequence of radio buttons."}, {"name": "addSectionHeaderItem", "parameters": [], "result": "SectionHeaderItem", "description": "Appends a new layout item that visually indicates the start of a section."}, {"name": "addTextItem", "parameters": [], "result": "TextItem", "description": "Appends a new question item that allows the respondent to enter a single line of text."}, {"name": "addTimeItem", "parameters": [], "result": "TimeItem", "description": "Appends a new question item that allows the respondent to indicate a time of day."}, {"name": "addVideoItem", "parameters": [], "result": "VideoItem", "description": "Appends a new layout item that displays a video."}, {"name": "canEditResponse", "parameters": [], "result": "Boolean", "description": "Determines whether the form displays a link to edit a response after submitting it."}, {"name": "collectsEmail", "parameters": [], "result": "Boolean", "description": "Determines whether the form collects respondents' email addresses."}, {"name": "createResponse", "parameters": [], "result": "FormResponse", "description": "Creates a new response to the form."}, {"name": "deleteAllResponses", "parameters": [], "result": "Form", "description": "Deletes all submitted responses from the form's response store."}, {"name": "deleteItem", "parameters": [{"name": "index", "type": "Integer"}], "result": "void", "description": "Deletes the item at a given index among all the items in the form."}, {"name": "deleteItem", "parameters": [{"name": "item", "type": "Item"}], "result": "void", "description": "Deletes the given item."}, {"name": "deleteResponse", "parameters": [{"name": "responseId", "type": "String"}], "result": "Form", "description": "Deletes a single response from the form's response store."}, {"name": "getConfirmationMessage", "parameters": [], "result": "String", "description": "Gets the form's confirmation message."}, {"name": "getCustomClosedFormMessage", "parameters": [], "result": "String", "description": "Gets the custom message that will be displayed if the form is not accepting responses, or an\nempty string if no custom message has been set."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the form's description."}, {"name": "getDestinationId", "parameters": [], "result": "String", "description": "Gets the ID of the form's response destination."}, {"name": "getDestinationType", "parameters": [], "result": "DestinationType", "description": "Gets the type of the form's response destination."}, {"name": "getEditUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to access the form's edit mode."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Form."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the form."}, {"name": "getItemById", "parameters": [{"name": "id", "type": "Integer"}], "result": "Item", "description": "Gets the item with a given ID."}, {"name": "getItems", "parameters": [], "result": "Item[]", "description": "Gets an array of all items in the form."}, {"name": "getItems", "parameters": [{"name": "itemType", "type": "ItemType"}], "result": "Item[]", "description": "Gets an array of all items of a given type."}, {"name": "getPublishedUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to respond to the form."}, {"name": "getResponse", "parameters": [{"name": "responseId", "type": "String"}], "result": "FormResponse", "description": "Gets a single form response based on its response ID."}, {"name": "getResponses", "parameters": [], "result": "FormResponse[]", "description": "Gets an array of all of the form's responses."}, {"name": "getResponses", "parameters": [{"name": "timestamp", "type": "Date"}], "result": "FormResponse[]", "description": "Gets an array of all of the form's responses after a given date and time."}, {"name": "getShuffleQuestions", "parameters": [], "result": "Boolean", "description": "Determines whether the order of the questions on each page of the form is randomized."}, {"name": "getSummaryUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to view a summary of the form's responses."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the form's title."}, {"name": "hasLimitOneResponsePerUser", "parameters": [], "result": "Boolean", "description": "Determines whether the form allows only one response per respondent."}, {"name": "hasProgressBar", "parameters": [], "result": "Boolean", "description": "Determines whether the form displays a progress bar."}, {"name": "hasRespondAgainLink", "parameters": [], "result": "Boolean", "description": "Determines whether the form displays a link to submit another response after a respondent\ncompletes the form."}, {"name": "isAcceptingResponses", "parameters": [], "result": "Boolean", "description": "Determines whether the form is currently accepting responses."}, {"name": "isPublishingSummary", "parameters": [], "result": "Boolean", "description": "Determines whether the form displays a link to view a summary of responses after a respondent\ncompletes the form."}, {"name": "isQuiz", "parameters": [], "result": "Boolean", "description": "Determines whether the form is a quiz."}, {"name": "moveItem", "parameters": [{"name": "from", "type": "Integer"}, {"name": "to", "type": "Integer"}], "result": "Item", "description": "Moves an item at a given index among all the items in the form to another given index."}, {"name": "moveItem", "parameters": [{"name": "item", "type": "Item"}, {"name": "toIndex", "type": "Integer"}], "result": "Item", "description": "Moves a given item to an given index among all the items in the form."}, {"name": "removeDestination", "parameters": [], "result": "Form", "description": "Unlinks the form from its current response destination."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Form", "description": "Removes the given user from the list of editors for the Form."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Form", "description": "Removes the given user from the list of editors for the Form."}, {"name": "requiresLogin", "parameters": [], "result": "Boolean", "description": "Determines whether the form requires respondents to log in to an account in the same domain or\na subdomain before responding."}, {"name": "setAcceptingResponses", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form is currently accepting responses."}, {"name": "setAllowResponseEdits", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form displays a link to edit a response after submitting it."}, {"name": "setCollectEmail", "parameters": [{"name": "collect", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form collects respondents' email addresses."}, {"name": "setConfirmationMessage", "parameters": [{"name": "message", "type": "String"}], "result": "Form", "description": "Sets the form's confirmation message."}, {"name": "setCustomClosedFormMessage", "parameters": [{"name": "message", "type": "String"}], "result": "Form", "description": "Sets the message to display if the form is not accepting responses."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Form", "description": "Sets the form's description."}, {"name": "setDestination", "parameters": [{"name": "type", "type": "DestinationType"}, {"name": "id", "type": "String"}], "result": "Form", "description": "Sets the destination where form responses are saved."}, {"name": "setIsQuiz", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form is a quiz."}, {"name": "setLimitOneResponsePerUser", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form allows only one response per respondent."}, {"name": "setProgressBar", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form has a progress bar."}, {"name": "setPublishingSummary", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form displays a link to view a summary of responses after a respondent submits\nthe form."}, {"name": "setRequireLogin", "parameters": [{"name": "requireLogin", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form requires respondents to log in to an account in the same domain or a\nsubdomain before responding."}, {"name": "setShowLinkToRespondAgain", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "Form", "description": "Sets whether the form displays a link to submit another response after a respondent completes\nthe form."}, {"name": "setShuffleQuestions", "parameters": [{"name": "shuffle", "type": "Boolean"}], "result": "Form", "description": "Sets whether the order of the questions on each page of the form is randomized."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Form", "description": "Sets the form's title."}, {"name": "shortenFormUrl", "parameters": [{"name": "url", "type": "String"}], "result": "String", "description": "Converts a long URL for a form to a short URL."}, {"name": "submitGrades", "parameters": [{"name": "responses", "type": "FormResponse"}], "result": "Form", "description": "Submits grades for the given FormResponses."}, {"name": "create", "parameters": [{"name": "title", "type": "String"}], "result": "Form", "description": "Creates and returns a new Form."}, {"name": "createCheckboxGridValidation", "parameters": [], "result": "CheckboxGridValidationBuilder", "description": "Returns an instance of a CheckboxGridValidationBuilder which can be used to set validation on a\nCheckboxGridItem."}, {"name": "createCheckboxValidation", "parameters": [], "result": "CheckboxValidationBuilder", "description": "Returns an instance of a CheckboxValidationBuilder which can be used to set validation on a\nCheckboxItem."}, {"name": "createFeedback", "parameters": [], "result": "QuizFeedbackBuilder", "description": "Returns an instance of a QuizFeedbackBuilder which can be used to set feedback on a gradeable\nItem."}, {"name": "createGridValidation", "parameters": [], "result": "GridValidationBuilder", "description": "Returns an instance of a GridValidationBuilder which can be used to set validation on a GridItem."}, {"name": "createParagraphTextValidation", "parameters": [], "result": "ParagraphTextValidationBuilder", "description": "Returns an instance of a ParagraphTextValidationBuilder which can be used to set validation on\na ParagraphTextItem."}, {"name": "createTextValidation", "parameters": [], "result": "TextValidationBuilder", "description": "Returns an instance of a TextValidationBuilder which can be used to set validation on a TextItem."}, {"name": "getActiveForm", "parameters": [], "result": "Form", "description": "Returns the form to which the script is container-bound."}, {"name": "getUi", "parameters": [], "result": "Ui", "description": "Returns an instance of the form editor's user-interface environment that allows the script to\nadd features like menus, dialogs, and sidebars."}, {"name": "openById", "parameters": [{"name": "id", "type": "String"}], "result": "Form", "description": "Returns the Form with the specified ID."}, {"name": "openByUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Form", "description": "Returns the Form with the specified URL."}, {"name": "getEditResponseUrl", "parameters": [], "result": "String", "description": "Generates a URL that can be used to edit a response that has already been submitted."}, {"name": "getGradableItemResponses", "parameters": [], "result": "ItemResponse[]", "description": "Gets all item responses contained in a form response, in the same order that the items appear\nin the form."}, {"name": "getGradableResponseForItem", "parameters": [{"name": "item", "type": "Item"}], "result": "ItemResponse", "description": "Gets the item response contained in a form response for a given item."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the form response."}, {"name": "getItemResponses", "parameters": [], "result": "ItemResponse[]", "description": "Gets all item responses contained in a form response, in the same order that the items appear\nin the form."}, {"name": "getRespondentEmail", "parameters": [], "result": "String", "description": "Gets the email address of the person who submitted a response, if the Form.setCollectEmail(collect) setting is enabled."}, {"name": "getResponseForItem", "parameters": [{"name": "item", "type": "Item"}], "result": "ItemResponse", "description": "Gets the item response contained in this form response for a given item."}, {"name": "getTimestamp", "parameters": [], "result": "Date", "description": "Gets the timestamp for a form response submission."}, {"name": "submit", "parameters": [], "result": "FormResponse", "description": "Submits the response."}, {"name": "toPrefilledUrl", "parameters": [], "result": "String", "description": "Generates a URL for the form in which the answers are pre-filled based on the answers in this\nform response."}, {"name": "withItemGrade", "parameters": [{"name": "gradedResponse", "type": "ItemResponse"}], "result": "FormResponse", "description": "Adds the given item response's grades to a form response."}, {"name": "withItemResponse", "parameters": [{"name": "response", "type": "ItemResponse"}], "result": "FormResponse", "description": "Adds the given item response to a form response."}, {"name": "clearValidation", "parameters": [], "result": "GridItem", "description": "Removes any data validation for this grid item."}, {"name": "createResponse", "parameters": [{"name": "responses", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this grid item."}, {"name": "duplicate", "parameters": [], "result": "GridItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getColumns", "parameters": [], "result": "String[]", "description": "Gets the values for every column in the grid."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getRows", "parameters": [], "result": "String[]", "description": "Gets the values for every row in the grid."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setColumns", "parameters": [{"name": "columns", "type": "String"}], "result": "GridItem", "description": "Sets the columns of the grid based on an array of values."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "GridItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "GridItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setRows", "parameters": [{"name": "rows", "type": "String"}], "result": "GridItem", "description": "Sets the rows of the grid based on an array of values."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "GridItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setValidation", "parameters": [{"name": "validation", "type": "GridValidation"}], "result": "GridItem", "description": "Sets the data validation for this grid item."}, {"name": "requireLimitOneResponsePerColumn", "parameters": [], "result": "GridValidationBuilder", "description": "Requires limit of one response per column for a grid item."}, {"name": "duplicate", "parameters": [], "result": "ImageItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getAlignment", "parameters": [], "result": "Alignment", "description": "Gets the image's horizontal alignment."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getImage", "parameters": [], "result": "Blob", "description": "Gets the image that is currently assigned to the item."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Gets the image's width in pixels."}, {"name": "setAlignment", "parameters": [{"name": "alignment", "type": "Alignment"}], "result": "ImageItem", "description": "Sets the image's horizontal alignment."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "ImageItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "ImageItem", "description": "Sets the image itself."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ImageItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "ImageItem", "description": "Sets the image's width in pixels."}, {"name": "asCheckboxGridItem", "parameters": [], "result": "CheckboxGridItem", "description": "Returns the item as a checkbox grid item."}, {"name": "asCheckboxItem", "parameters": [], "result": "CheckboxItem", "description": "Returns the item as a checkbox item."}, {"name": "asDateItem", "parameters": [], "result": "DateItem", "description": "Returns the item as a date item."}, {"name": "asDateTimeItem", "parameters": [], "result": "DateTimeItem", "description": "Returns the item as a date-time item."}, {"name": "asDurationItem", "parameters": [], "result": "DurationItem", "description": "Returns the item as a duration item."}, {"name": "asGridItem", "parameters": [], "result": "GridItem", "description": "Returns the item as a grid item."}, {"name": "asImageItem", "parameters": [], "result": "ImageItem", "description": "Returns the item as an image item."}, {"name": "asListItem", "parameters": [], "result": "ListItem", "description": "Returns the item as a list item."}, {"name": "asMultipleChoiceItem", "parameters": [], "result": "MultipleChoiceItem", "description": "Returns the item as a multiple-choice item."}, {"name": "asPageBreakItem", "parameters": [], "result": "PageBreakItem", "description": "Returns the item as a page-break item."}, {"name": "asParagraphTextItem", "parameters": [], "result": "ParagraphTextItem", "description": "Returns the item as a paragraph-text item."}, {"name": "asScaleItem", "parameters": [], "result": "ScaleItem", "description": "Returns the item as a scale item."}, {"name": "asSectionHeaderItem", "parameters": [], "result": "SectionHeaderItem", "description": "Returns the item as a section-header item."}, {"name": "asTextItem", "parameters": [], "result": "TextItem", "description": "Returns the item as a text item."}, {"name": "asTimeItem", "parameters": [], "result": "TimeItem", "description": "Returns the item as a time item."}, {"name": "asVideoItem", "parameters": [], "result": "VideoItem", "description": "Returns the item as a video item."}, {"name": "duplicate", "parameters": [], "result": "Item", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "Item", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "Item", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getFeedback", "parameters": [], "result": "Object", "description": "Gets the feedback that was given for the respondent's submitted answer."}, {"name": "getItem", "parameters": [], "result": "Item", "description": "Gets the question item that this response answers."}, {"name": "getResponse", "parameters": [], "result": "Object", "description": "Gets the answer that the respondent submitted."}, {"name": "getScore", "parameters": [], "result": "Object", "description": "Gets the score for the respondent's submitted answer."}, {"name": "setFeedback", "parameters": [{"name": "feedback", "type": "Object"}], "result": "ItemResponse", "description": "Sets the feedback that should be displayed for the respondent's submitted answer."}, {"name": "setScore", "parameters": [{"name": "score", "type": "Object"}], "result": "ItemResponse", "description": "Sets the score for the respondent's submitted answer."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}], "result": "Choice", "description": "Creates a new choice."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "isCorrect", "type": "Boolean"}], "result": "Choice", "description": "Creates a new choice."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "navigationItem", "type": "PageBreakItem"}], "result": "Choice", "description": "Creates a new choice with a page-navigation option that jumps to a given page-break item."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "navigationType", "type": "PageNavigationType"}], "result": "Choice", "description": "Creates a new choice with a page-navigation option."}, {"name": "createResponse", "parameters": [{"name": "response", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this list item."}, {"name": "duplicate", "parameters": [], "result": "ListItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getChoices", "parameters": [], "result": "Choice[]", "description": "Gets all choices for an item."}, {"name": "getFeedbackForCorrect", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond correctly to a question."}, {"name": "getFeedbackForIncorrect", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond incorrectly to a question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setChoiceValues", "parameters": [{"name": "values", "type": "String"}], "result": "ListItem", "description": "Sets the choices for an item from an array of strings."}, {"name": "setChoices", "parameters": [{"name": "choices", "type": "Choice"}], "result": "ListItem", "description": "Sets an array of choices for an item."}, {"name": "setFeedbackForCorrect", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "ListItem", "description": "Sets the feedback to be shown to respondents when they respond correctly to a question."}, {"name": "setFeedbackForIncorrect", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "ListItem", "description": "Sets the feedback to be shown to respondents when they respond incorrectly to a question."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "ListItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "ListItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "ListItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ListItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}], "result": "Choice", "description": "Creates a new choice."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "isCorrect", "type": "Boolean"}], "result": "Choice", "description": "Creates a new choice."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "navigationItem", "type": "PageBreakItem"}], "result": "Choice", "description": "Creates a new choice with a page-navigation option that jumps to a given page-break item."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "navigationType", "type": "PageNavigationType"}], "result": "Choice", "description": "Creates a new choice with a page-navigation option."}, {"name": "createResponse", "parameters": [{"name": "response", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this multiple-choice item."}, {"name": "duplicate", "parameters": [], "result": "MultipleChoiceItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getChoices", "parameters": [], "result": "Choice[]", "description": "Gets all choices for an item."}, {"name": "getFeedbackForCorrect", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond correctly to a question."}, {"name": "getFeedbackForIncorrect", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond incorrectly to a question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "hasOtherOption", "parameters": [], "result": "Boolean", "description": "Determines whether the item has an \"other\" option."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setChoiceValues", "parameters": [{"name": "values", "type": "String"}], "result": "MultipleChoiceItem", "description": "Sets the choices for an item from an array of strings."}, {"name": "setChoices", "parameters": [{"name": "choices", "type": "Choice"}], "result": "MultipleChoiceItem", "description": "Sets an array of choices for an item."}, {"name": "setFeedbackForCorrect", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "MultipleChoiceItem", "description": "Sets the feedback to be shown to respondents when they respond correctly to a question."}, {"name": "setFeedbackForIncorrect", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "MultipleChoiceItem", "description": "Sets the feedback to be shown to respondents when they respond incorrectly to a question."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "MultipleChoiceItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "MultipleChoiceItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "MultipleChoiceItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "MultipleChoiceItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "showOtherOption", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "MultipleChoiceItem", "description": "Sets whether the item has an \"other\" option."}, {"name": "duplicate", "parameters": [], "result": "PageBreakItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGoToPage", "parameters": [], "result": "PageBreakItem", "description": "Gets the PageBreakItem that the form will jump to after completing the page before this\npage break (that is, upon reaching this page break by normal linear progression through the\nform)."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPageNavigationType", "parameters": [], "result": "PageNavigationType", "description": "Gets the type of page navigation that occurs after completing the page before this page break\n(that is, upon reaching this page break by normal linear progression through the form)."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "setGoToPage", "parameters": [{"name": "goToPageItem", "type": "PageBreakItem"}], "result": "PageBreakItem", "description": "Sets the page to jump to after completing the page before this page break (that is, upon\nreaching this page break by normal linear progression through the form)."}, {"name": "setGoToPage", "parameters": [{"name": "navigationType", "type": "PageNavigationType"}], "result": "PageBreakItem", "description": "Sets the type of page navigation that occurs after completing the page before this page break\n(that is, upon reaching this page break by normal linear progression through the form)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "PageBreakItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "PageBreakItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "clearValidation", "parameters": [], "result": "ParagraphTextItem", "description": "Removes any data validation for this paragraph text item."}, {"name": "createResponse", "parameters": [{"name": "response", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this paragraph text item."}, {"name": "duplicate", "parameters": [], "result": "ParagraphTextItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "ParagraphTextItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "ParagraphTextItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "ParagraphTextItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "ParagraphTextItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ParagraphTextItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setValidation", "parameters": [{"name": "validation", "type": "ParagraphTextValidation"}], "result": "ParagraphTextItem", "description": "Sets the data validation for this paragraph text item."}, {"name": "requireTextContainsPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "ParagraphTextValidationBuilder", "description": "Requires response to contain pattern."}, {"name": "requireTextDoesNotContainPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "ParagraphTextValidationBuilder", "description": "Requires response to not contain pattern."}, {"name": "requireTextDoesNotMatchPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "ParagraphTextValidationBuilder", "description": "Requires response to not match pattern."}, {"name": "requireTextLengthGreaterThanOrEqualTo", "parameters": [{"name": "number", "type": "Integer"}], "result": "ParagraphTextValidationBuilder", "description": "Requires response length to be greater than or equal to value."}, {"name": "requireTextLengthLessThanOrEqualTo", "parameters": [{"name": "number", "type": "Integer"}], "result": "ParagraphTextValidationBuilder", "description": "Requires response length to be less than value."}, {"name": "requireTextMatchesPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "ParagraphTextValidationBuilder", "description": "Requires response to match pattern."}, {"name": "getLinkUrls", "parameters": [], "result": "String[]", "description": "Gets a list of the URLs associated with the Feedback."}, {"name": "getText", "parameters": [], "result": "String", "description": "Gets the Feedback's display text."}, {"name": "addLink", "parameters": [{"name": "url", "type": "String"}], "result": "QuizFeedbackBuilder", "description": "Adds a link to the feedback's supplemental material."}, {"name": "addLink", "parameters": [{"name": "url", "type": "String"}, {"name": "displayText", "type": "String"}], "result": "QuizFeedbackBuilder", "description": "Adds a link to the feedback's supplemental material."}, {"name": "build", "parameters": [], "result": "QuizFeedback", "description": "Builds a Feedback of the corresponding type for this builder."}, {"name": "copy", "parameters": [], "result": "QuizFeedbackBuilder", "description": "Returns a copy of this builder."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "QuizFeedbackBuilder", "description": "Sets the feedback text."}, {"name": "createResponse", "parameters": [{"name": "response", "type": "Integer"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this scale item."}, {"name": "duplicate", "parameters": [], "result": "ScaleItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getLeftLabel", "parameters": [], "result": "String", "description": "Gets the label for the scale's lower bound, if any."}, {"name": "getLowerBound", "parameters": [], "result": "Integer", "description": "Gets the scale's lower bound."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getRightLabel", "parameters": [], "result": "String", "description": "Gets the label for the scale's upper bound, if any."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "getUpperBound", "parameters": [], "result": "Integer", "description": "Gets the scale's upper bound."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setBounds", "parameters": [{"name": "lower", "type": "Integer"}, {"name": "upper", "type": "Integer"}], "result": "ScaleItem", "description": "Sets the scale's lower and upper bounds."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "ScaleItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "ScaleItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setLabels", "parameters": [{"name": "lower", "type": "String"}, {"name": "upper", "type": "String"}], "result": "ScaleItem", "description": "Sets labels for the scale's lower and upper bounds."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "ScaleItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "ScaleItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "ScaleItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "duplicate", "parameters": [], "result": "SectionHeaderItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "SectionHeaderItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "SectionHeaderItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "clearValidation", "parameters": [], "result": "TextItem", "description": "Removes any data validation for this text item."}, {"name": "createResponse", "parameters": [{"name": "response", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this text item."}, {"name": "duplicate", "parameters": [], "result": "TextItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "TextItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "TextItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "TextItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "TextItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "TextItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setValidation", "parameters": [{"name": "validation", "type": "TextValidation"}], "result": "TextItem", "description": "Sets the data validation for this text item."}, {"name": "requireNumber", "parameters": [], "result": "TextValidationBuilder", "description": "Requires text item to be a number."}, {"name": "requireNumberBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number between start and end, inclusive."}, {"name": "requireNumberEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number equal to value specified."}, {"name": "requireNumberGreaterThan", "parameters": [{"name": "number", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number greater than the value specified."}, {"name": "requireNumberGreaterThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number greater than or equal to the value specified."}, {"name": "requireNumberLessThan", "parameters": [{"name": "number", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number less than the value specified."}, {"name": "requireNumberLessThanOrEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number less than or equal to the value specified."}, {"name": "requireNumberNotBetween", "parameters": [{"name": "start", "type": "Number"}, {"name": "end", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number not between start and end, inclusive."}, {"name": "requireNumberNotEqualTo", "parameters": [{"name": "number", "type": "Number"}], "result": "TextValidationBuilder", "description": "Requires text item to be a number not equal to the value specified."}, {"name": "requireTextContainsPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "TextValidationBuilder", "description": "Requires response to contain pattern."}, {"name": "requireTextDoesNotContainPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "TextValidationBuilder", "description": "Requires response to not contain pattern."}, {"name": "requireTextDoesNotMatchPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "TextValidationBuilder", "description": "Requires response to not match pattern."}, {"name": "requireTextIsEmail", "parameters": [], "result": "TextValidationBuilder", "description": "Requires text item to be an email address."}, {"name": "requireTextIsUrl", "parameters": [], "result": "TextValidationBuilder", "description": "Requires text item to be a URL."}, {"name": "requireTextLengthGreaterThanOrEqualTo", "parameters": [{"name": "number", "type": "Integer"}], "result": "TextValidationBuilder", "description": "Requires response length to be greater than or equal to value."}, {"name": "requireTextLengthLessThanOrEqualTo", "parameters": [{"name": "number", "type": "Integer"}], "result": "TextValidationBuilder", "description": "Requires response length to be less than value."}, {"name": "requireTextMatchesPattern", "parameters": [{"name": "pattern", "type": "String"}], "result": "TextValidationBuilder", "description": "Requires response to match pattern."}, {"name": "requireWholeNumber", "parameters": [], "result": "TextValidationBuilder", "description": "Requires text item to be a whole number."}, {"name": "createResponse", "parameters": [{"name": "hour", "type": "Integer"}, {"name": "minute", "type": "Integer"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this time item."}, {"name": "duplicate", "parameters": [], "result": "TimeItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getGeneralFeedback", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond to a gradeable question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setGeneralFeedback", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "TimeItem", "description": "Sets the feedback to be shown to respondents when they respond to a gradeable question that\ndoesn't have a correct or incorrect answer (ie questions that require manual grading)."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "TimeItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "TimeItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "TimeItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "TimeItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "duplicate", "parameters": [], "result": "VideoItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getAlignment", "parameters": [], "result": "Alignment", "description": "Gets the video's horizontal alignment."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Gets the video's width in pixels."}, {"name": "setAlignment", "parameters": [{"name": "alignment", "type": "Alignment"}], "result": "VideoItem", "description": "Sets the video's horizontal alignment."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "VideoItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "VideoItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setVideoUrl", "parameters": [{"name": "youtubeUrl", "type": "String"}], "result": "VideoItem", "description": "Sets the video itself from a given YouTube URL or YouTube video ID."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "VideoItem", "description": "Sets the video's width in pixels."}], "properties": [{"name": "LEFT", "type": "Enum", "url": "", "description": "Align the image to the left side of the form."}, {"name": "CENTER", "type": "Enum", "url": "", "description": "Align the image to the center of the form."}, {"name": "RIGHT", "type": "Enum", "url": "", "description": "Align the image to the right side of the form."}, {"name": "SPREADSHEET", "type": "Enum", "url": "", "description": "A Google Sheets spreadsheet as a destination for form responses."}, {"name": "CORRECT", "type": "Enum", "url": "", "description": "Feedback that is automatically displayed to respondents for a question answered correctly."}, {"name": "INCORRECT", "type": "Enum", "url": "", "description": "Feedback that is automatically displayed to respondents for a question answered incorrectly."}, {"name": "GENERAL", "type": "Enum", "url": "", "description": "Feedback that is automatically displayed to respondents when they submit their response."}, {"name": "Alignment", "type": "Alignment", "url": "/apps-script/reference/forms/alignment", "description": "An enumeration of types of image alignment."}, {"name": "DestinationType", "type": "DestinationType", "url": "/apps-script/reference/forms/destination-type", "description": "An enumeration of types of destinations that can store form responses."}, {"name": "FeedbackType", "type": "FeedbackType", "url": "/apps-script/reference/forms/feedback-type", "description": "An enumeration of types of form Feedbacks."}, {"name": "ItemType", "type": "ItemType", "url": "/apps-script/reference/forms/item-type", "description": "An enumeration of types of form Items."}, {"name": "PageNavigationType", "type": "PageNavigationType", "url": "/apps-script/reference/forms/page-navigation-type", "description": "An enumeration of possible behaviors for navigating pages."}, {"name": "CHECKBOX", "type": "Enum", "url": "", "description": "A question item that allows the respondent to select one or more checkboxes, as well as an\noptional \"other\" field."}, {"name": "CHECKBOX_GRID", "type": "Enum", "url": "", "description": "A question item, presented as a grid of columns and rows, that allows the respondent to select\nmultiple choices per row from a sequence of checkboxes."}, {"name": "DATE", "type": "Enum", "url": "", "description": "A question item that allows the respondent to indicate a date."}, {"name": "DATETIME", "type": "Enum", "url": "", "description": "A question item that allows the respondent to indicate a date and time."}, {"name": "DURATION", "type": "Enum", "url": "", "description": "A question item that allows the respondent to indicate a length of time."}, {"name": "GRID", "type": "Enum", "url": "", "description": "A question item, presented as a grid of columns and rows, that allows the respondent to select\none choice per row from a sequence of radio buttons."}, {"name": "IMAGE", "type": "Enum", "url": "", "description": "A layout item that displays an image."}, {"name": "LIST", "type": "Enum", "url": "", "description": "A question item that allows the respondent to select one choice from a drop-down list."}, {"name": "MULTIPLE_CHOICE", "type": "Enum", "url": "", "description": "A question item that allows the respondent to select one choice from a list of radio buttons or\nan optional \"other\" field."}, {"name": "PAGE_BREAK", "type": "Enum", "url": "", "description": "A layout item that marks the start of a page."}, {"name": "PARAGRAPH_TEXT", "type": "Enum", "url": "", "description": "A question item that allows the respondent to enter a block of text."}, {"name": "SCALE", "type": "Enum", "url": "", "description": "A question item that allows the respondent to choose one option from a numbered sequence of\nradio buttons."}, {"name": "SECTION_HEADER", "type": "Enum", "url": "", "description": "A layout item that visually indicates the start of a section."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "A question item that allows the respondent to enter a single line of text."}, {"name": "TIME", "type": "Enum", "url": "", "description": "A question item that allows the respondent to indicate a time of day."}, {"name": "VIDEO", "type": "Enum", "url": "", "description": "A layout item that displays a YouTube video."}, {"name": "CONTINUE", "type": "Enum", "url": "", "description": "Continue to the next page of the form after completing the current page."}, {"name": "GO_TO_PAGE", "type": "Enum", "url": "", "description": "Jump to a specified page of the form after completing the current page."}, {"name": "RESTART", "type": "Enum", "url": "", "description": "Restart the form from the beginning, without clearing answers entered so far, after completing\nthe current page."}, {"name": "SUBMIT", "type": "Enum", "url": "", "description": "Submit the form response after completing the current page."}]},
{"url": "https://developers.google.com/apps-script/reference/forms/form-app", "name": "FormApp", "type": "class", "methods": [{"name": "create", "parameters": [{"name": "title", "type": "String"}], "result": "Form", "description": "Creates and returns a new Form."}, {"name": "createCheckboxGridValidation", "parameters": [], "result": "CheckboxGridValidationBuilder", "description": "Returns an instance of a CheckboxGridValidationBuilder which can be used to set validation on a\nCheckboxGridItem."}, {"name": "createCheckboxValidation", "parameters": [], "result": "CheckboxValidationBuilder", "description": "Returns an instance of a CheckboxValidationBuilder which can be used to set validation on a\nCheckboxItem."}, {"name": "createFeedback", "parameters": [], "result": "QuizFeedbackBuilder", "description": "Returns an instance of a QuizFeedbackBuilder which can be used to set feedback on a gradeable\nItem."}, {"name": "createGridValidation", "parameters": [], "result": "GridValidationBuilder", "description": "Returns an instance of a GridValidationBuilder which can be used to set validation on a GridItem."}, {"name": "createParagraphTextValidation", "parameters": [], "result": "ParagraphTextValidationBuilder", "description": "Returns an instance of a ParagraphTextValidationBuilder which can be used to set validation on\na ParagraphTextItem."}, {"name": "createTextValidation", "parameters": [], "result": "TextValidationBuilder", "description": "Returns an instance of a TextValidationBuilder which can be used to set validation on a TextItem."}, {"name": "getActiveForm", "parameters": [], "result": "Form", "description": "Returns the form to which the script is container-bound."}, {"name": "getUi", "parameters": [], "result": "Ui", "description": "Returns an instance of the form editor's user-interface environment that allows the script to\nadd features like menus, dialogs, and sidebars."}, {"name": "openById", "parameters": [{"name": "id", "type": "String"}], "result": "Form", "description": "Returns the Form with the specified ID."}, {"name": "openByUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Form", "description": "Returns the Form with the specified URL."}], "properties": [{"name": "Alignment", "type": "Alignment", "url": "/apps-script/reference/forms/alignment", "description": "An enumeration of types of image alignment."}, {"name": "DestinationType", "type": "DestinationType", "url": "/apps-script/reference/forms/destination-type", "description": "An enumeration of types of destinations that can store form responses."}, {"name": "FeedbackType", "type": "FeedbackType", "url": "/apps-script/reference/forms/feedback-type", "description": "An enumeration of types of form Feedbacks."}, {"name": "ItemType", "type": "ItemType", "url": "/apps-script/reference/forms/item-type", "description": "An enumeration of types of form Items."}, {"name": "PageNavigationType", "type": "PageNavigationType", "url": "/apps-script/reference/forms/page-navigation-type", "description": "An enumeration of possible behaviors for navigating pages."}]},
{"url": "https://developers.google.com/apps-script/reference/drive/user", "name": "User", "type": "class", "methods": [{"name": "getDomain", "parameters": [], "result": "String", "description": "Gets the domain name associated with the user's account."}, {"name": "getEmail", "parameters": [], "result": "String", "description": "Gets the user's email address."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the user's name."}, {"name": "getPhotoUrl", "parameters": [], "result": "String", "description": "Gets the URL for the user's photo."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/drive/permission", "name": "Permission", "type": "enum", "methods": [], "properties": [{"name": "VIEW", "type": "Enum", "url": "", "description": "Users who can access the file or folder are able only to view it or copy it. Passing this value\nto File.setSharing(accessType, permissionType) throws an exception if the type of file\ndoes not support it."}, {"name": "EDIT", "type": "Enum", "url": "", "description": "Users who can access the file or folder are able to edit it. Unless File.setShareableByEditors(shareable) is set to false, users can also change the sharing\nsettings. Passing this value to File.setSharing(accessType, permissionType) throws an\nexception if the type of file does not support it."}, {"name": "COMMENT", "type": "Enum", "url": "", "description": "Users who can access the file or folder are able only to view it, copy it, or comment on it.\nPassing this value to File.setSharing(accessType, permissionType) throws an exception if\nthe type of file does not support it."}, {"name": "OWNER", "type": "Enum", "url": "", "description": "The user owns the file or folder. This value can be returned, but passing it to File.setSharing(accessType, permissionType) throws an exception."}, {"name": "ORGANIZER", "type": "Enum", "url": "", "description": "Users who can organize files and folders within a shared drive. This value can be returned, but\npassing it to File.setSharing(accessType, permissionType) throws an exception."}, {"name": "FILE_ORGANIZER", "type": "Enum", "url": "", "description": "Users who can edit, trash, and move content within a shared drive. This value can be returned,\nbut passing it to File.setSharing(accessType, permissionType) throws an exception."}, {"name": "NONE", "type": "Enum", "url": "", "description": "The user does not have any permissions for the file or folder. This value can be returned, but\npassing it to File.setSharing(accessType, permissionType) throws an exception unless it\nis set in combination with Access.ANYONE."}]},
{"url": "https://developers.google.com/apps-script/reference/forms/checkbox-grid-item", "name": "CheckboxGridItem", "type": "class", "methods": [{"name": "clearValidation", "parameters": [], "result": "CheckboxGridItem", "description": "Removes any data validation for this grid item."}, {"name": "createResponse", "parameters": [{"name": "responses", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this checkbox grid item."}, {"name": "duplicate", "parameters": [], "result": "CheckboxGridItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getColumns", "parameters": [], "result": "String[]", "description": "Gets the values for every column in the grid."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getRows", "parameters": [], "result": "String[]", "description": "Gets the values for every row in the grid."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setColumns", "parameters": [{"name": "columns", "type": "String"}], "result": "CheckboxGridItem", "description": "Sets the columns of the grid based on an array of values."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "CheckboxGridItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "CheckboxGridItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setRows", "parameters": [{"name": "rows", "type": "String"}], "result": "CheckboxGridItem", "description": "Sets the rows of the grid based on an array of values."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "CheckboxGridItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setValidation", "parameters": [{"name": "validation", "type": "CheckboxGridValidation"}], "result": "CheckboxGridItem", "description": "Sets the data validation for this checkbox grid item."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/drive/folder-iterator", "name": "FolderIterator", "type": "class", "methods": [{"name": "getContinuationToken", "parameters": [], "result": "String", "description": "Gets a token that can be used to resume this iteration at a later time."}, {"name": "hasNext", "parameters": [], "result": "Boolean", "description": "Determines whether calling next() will return an item."}, {"name": "next", "parameters": [], "result": "Folder", "description": "Gets the next item in the collection of files or folders."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/forms/checkbox-item", "name": "CheckboxItem", "type": "class", "methods": [{"name": "clearValidation", "parameters": [], "result": "CheckboxItem", "description": "Removes any data validation for this checkbox item."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}], "result": "Choice", "description": "Creates a new choice."}, {"name": "createChoice", "parameters": [{"name": "value", "type": "String"}, {"name": "isCorrect", "type": "Boolean"}], "result": "Choice", "description": "Creates a new choice."}, {"name": "createResponse", "parameters": [{"name": "responses", "type": "String"}], "result": "ItemResponse", "description": "Creates a new ItemResponse for this checkbox item."}, {"name": "duplicate", "parameters": [], "result": "CheckboxItem", "description": "Creates a copy of this item and appends it to the end of the form."}, {"name": "getChoices", "parameters": [], "result": "Choice[]", "description": "Gets all choices for an item."}, {"name": "getFeedbackForCorrect", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond correctly to a question."}, {"name": "getFeedbackForIncorrect", "parameters": [], "result": "QuizFeedback", "description": "Returns the feedback that is shown to respondents when they respond incorrectly to a question."}, {"name": "getHelpText", "parameters": [], "result": "String", "description": "Gets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "getId", "parameters": [], "result": "Integer", "description": "Gets the item's unique identifier."}, {"name": "getIndex", "parameters": [], "result": "Integer", "description": "Gets the index of the item among all the items in the form."}, {"name": "getPoints", "parameters": [], "result": "Integer", "description": "Returns the point value of a gradeable item."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "getType", "parameters": [], "result": "ItemType", "description": "Gets the item's type, represented as an ItemType."}, {"name": "hasOtherOption", "parameters": [], "result": "Boolean", "description": "Determines whether the item has an \"other\" option."}, {"name": "isRequired", "parameters": [], "result": "Boolean", "description": "Determines whether the respondent must answer the question."}, {"name": "setChoiceValues", "parameters": [{"name": "values", "type": "String"}], "result": "CheckboxItem", "description": "Sets the choices for an item from an array of strings."}, {"name": "setChoices", "parameters": [{"name": "choices", "type": "Choice"}], "result": "CheckboxItem", "description": "Sets an array of choices for an item."}, {"name": "setFeedbackForCorrect", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "CheckboxItem", "description": "Sets the feedback to be shown to respondents when they respond correctly to a question."}, {"name": "setFeedbackForIncorrect", "parameters": [{"name": "feedback", "type": "QuizFeedback"}], "result": "CheckboxItem", "description": "Sets the feedback to be shown to respondents when they respond incorrectly to a question."}, {"name": "setHelpText", "parameters": [{"name": "text", "type": "String"}], "result": "CheckboxItem", "description": "Sets the item's help text (sometimes called description text for layout items like ImageItems, PageBreakItems, and SectionHeaderItems)."}, {"name": "setPoints", "parameters": [{"name": "points", "type": "Integer"}], "result": "CheckboxItem", "description": "Sets the number of points a gradeable item is worth."}, {"name": "setRequired", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "CheckboxItem", "description": "Sets whether the respondent must answer the question."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "CheckboxItem", "description": "Sets the item's title (sometimes called header text, in the case of a SectionHeaderItem)."}, {"name": "setValidation", "parameters": [{"name": "validation", "type": "CheckboxValidation"}], "result": "CheckboxItem", "description": "Sets the data validation for this checkbox item."}, {"name": "showOtherOption", "parameters": [{"name": "enabled", "type": "Boolean"}], "result": "CheckboxItem", "description": "Sets whether the item has an \"other\" option."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/drive/file", "name": "File", "type": "class", "methods": [{"name": "addCommenter", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Add the given user to the list of commenters for the File."}, {"name": "addCommenter", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Add the given user to the list of commenters for the File."}, {"name": "addCommenters", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "File", "description": "Add the given array of users to the list of commenters for the File."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Adds the given user to the list of editors for the File."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Adds the given user to the list of editors for the File."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "File", "description": "Adds the given array of users to the list of editors for the File."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Adds the given user to the list of viewers for the File."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Adds the given user to the list of viewers for the File."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "File", "description": "Adds the given array of users to the list of viewers for the File."}, {"name": "getAccess", "parameters": [{"name": "email", "type": "String"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getAccess", "parameters": [{"name": "user", "type": "User"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getDateCreated", "parameters": [], "result": "Date", "description": "Gets the date the File was created."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description for the File."}, {"name": "getDownloadUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to download the file."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this File."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the File."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Gets the date the File was last updated."}, {"name": "getMimeType", "parameters": [], "result": "String", "description": "Gets the MIME type of the file."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the File."}, {"name": "getOwner", "parameters": [], "result": "User", "description": "Gets the owner of the File."}, {"name": "getParents", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of folders that are immediate parents of the File."}, {"name": "getSharingAccess", "parameters": [], "result": "Access", "description": "Gets which class of users can access the File, besides any individual\nusers who have been explicitly given access."}, {"name": "getSharingPermission", "parameters": [], "result": "Permission", "description": "Gets the permission granted to those users who can access the File,\nbesides any individual users who have been explicitly given access."}, {"name": "getSize", "parameters": [], "result": "Integer", "description": "Gets the number of bytes used to store the File in Drive."}, {"name": "getTargetId", "parameters": [], "result": "String", "description": "If this is a Shortcut, returns the ID of the item it points to."}, {"name": "getTargetMimeType", "parameters": [], "result": "String", "description": "If this is a Shortcut, returns the mime type of the item it points to."}, {"name": "getThumbnail", "parameters": [], "result": "Blob", "description": "Gets a thumbnail image for the file, or null if no thumbnail exists."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to open the File in a Google App like\nDrive or Docs."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this File."}, {"name": "isShareableByEditors", "parameters": [], "result": "Boolean", "description": "Determines whether users with edit permissions to the File are allowed to\nshare with other users or change the permissions."}, {"name": "isStarred", "parameters": [], "result": "Boolean", "description": "Determines whether the File has been starred in the user's Drive."}, {"name": "isTrashed", "parameters": [], "result": "Boolean", "description": "Determines whether the File is in the trash of the user's Drive."}, {"name": "makeCopy", "parameters": [], "result": "File", "description": "Creates a copy of the file."}, {"name": "makeCopy", "parameters": [{"name": "destination", "type": "Folder"}], "result": "File", "description": "Creates a copy of the file in the destination directory."}, {"name": "makeCopy", "parameters": [{"name": "name", "type": "String"}], "result": "File", "description": "Creates a copy of the file and names it with the name provided."}, {"name": "makeCopy", "parameters": [{"name": "name", "type": "String"}, {"name": "destination", "type": "Folder"}], "result": "File", "description": "Creates a copy of the file in the destination directory and names it with the name provided."}, {"name": "moveTo", "parameters": [{"name": "destination", "type": "Folder"}], "result": "File", "description": "Moves this item to the provided destination folder."}, {"name": "removeCommenter", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Removes the given user from the list of commenters for the File."}, {"name": "removeCommenter", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Removes the given user from the list of commenters for the File."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Removes the given user from the list of editors for the File."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Removes the given user from the list of editors for the File."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Removes the given user from the list of viewers and commenters for the File."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Removes the given user from the list of viewers and commenters for the File."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "String"}], "result": "File", "description": "Revokes the access to the File granted to the given user."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Revokes the access to the File granted to the given user."}, {"name": "setContent", "parameters": [{"name": "content", "type": "String"}], "result": "File", "description": "Overwrites the content of the file with a given replacement."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "File", "description": "Sets the description for the File."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "File", "description": "Sets the name of the File."}, {"name": "setOwner", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Changes the owner of the File."}, {"name": "setOwner", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Changes the owner of the File."}, {"name": "setShareableByEditors", "parameters": [{"name": "shareable", "type": "Boolean"}], "result": "File", "description": "Sets whether users with edit permissions to the File are allowed to share\nwith other users or change the permissions."}, {"name": "setSharing", "parameters": [{"name": "accessType", "type": "Access"}, {"name": "permissionType", "type": "Permission"}], "result": "File", "description": "Sets which class of users can access the File and what permissions\nthose users are granted, besides any individual users who have been explicitly given access."}, {"name": "setStarred", "parameters": [{"name": "starred", "type": "Boolean"}], "result": "File", "description": "Sets whether the File is starred in the user's Drive."}, {"name": "setTrashed", "parameters": [{"name": "trashed", "type": "Boolean"}], "result": "File", "description": "Sets whether the File is in the trash of the user's Drive."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/drive/access", "name": "Access", "type": "enum", "methods": [], "properties": [{"name": "ANYONE", "type": "Enum", "url": "", "description": "Anyone on the Internet can find and access. No sign-in required.\n\nDomain administrators can prohibit this setting for users of a Google Workspace domain. If\nthe setting is disabled, passing this value to File.setSharing(accessType, permissionType) throws an exception.\n"}, {"name": "ANYONE_WITH_LINK", "type": "Enum", "url": "", "description": "Anyone who has the link can access. No sign-in required.\n\nDomain administrators can prohibit this setting for users of a Google Workspace domain. If\nthe setting is disabled, passing this value to File.setSharing(accessType, permissionType) throws an exception.\n"}, {"name": "DOMAIN", "type": "Enum", "url": "", "description": "People in your domain can find and access. Sign-in required.\n\nThis setting is available only for users of a Google Workspace domain. For other types of\nGoogle accounts, passing this value to File.setSharing(accessType, permissionType) throws\nan exception.\n"}, {"name": "DOMAIN_WITH_LINK", "type": "Enum", "url": "", "description": "People in your domain who have the link can access. Sign-in required.\n\nThis setting is available only for users of a Google Workspace domain. For other types of\nGoogle accounts, passing this value to File.setSharing(accessType, permissionType) throws\nan exception.\n"}, {"name": "PRIVATE", "type": "Enum", "url": "", "description": "Only people explicitly granted permission can access. Sign-in required."}]},
{"url": "https://developers.google.com/apps-script/reference/drive/folder", "name": "Folder", "type": "class", "methods": [{"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Adds the given user to the list of editors for the Folder."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Adds the given user to the list of editors for the Folder."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Folder", "description": "Adds the given array of users to the list of editors for the Folder."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Adds the given user to the list of viewers for the Folder."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Adds the given user to the list of viewers for the Folder."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Folder", "description": "Adds the given array of users to the list of viewers for the Folder."}, {"name": "createFile", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "File", "description": "Creates a file in the current folder from a given Blob of arbitrary data."}, {"name": "createFile", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}], "result": "File", "description": "Creates a text file in the current folder with the given name and contents."}, {"name": "createFile", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}, {"name": "mimeType", "type": "String"}], "result": "File", "description": "Creates a file in the current folder with the given name, contents, and MIME type."}, {"name": "createFolder", "parameters": [{"name": "name", "type": "String"}], "result": "Folder", "description": "Creates a folder in the current folder with the given name."}, {"name": "createShortcut", "parameters": [{"name": "targetId", "type": "String"}], "result": "File", "description": "Creates a shortcut to the provided Drive item ID, and returns it."}, {"name": "getAccess", "parameters": [{"name": "email", "type": "String"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getAccess", "parameters": [{"name": "user", "type": "User"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getDateCreated", "parameters": [], "result": "Date", "description": "Gets the date the Folder was created."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description for the Folder."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Folder."}, {"name": "getFiles", "parameters": [], "result": "FileIterator", "description": "Gets a collection of all files that are children of the current folder."}, {"name": "getFilesByName", "parameters": [{"name": "name", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files that are children of the current folder and have the given name."}, {"name": "getFilesByType", "parameters": [{"name": "mimeType", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files that are children of the current folder and have the given MIME type."}, {"name": "getFolders", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of all folders that are children of the current folder."}, {"name": "getFoldersByName", "parameters": [{"name": "name", "type": "String"}], "result": "FolderIterator", "description": "Gets a collection of all folders that are children of the current folder and have the given name."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the Folder."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Gets the date the Folder was last updated."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the Folder."}, {"name": "getOwner", "parameters": [], "result": "User", "description": "Gets the owner of the Folder."}, {"name": "getParents", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of folders that are immediate parents of the Folder."}, {"name": "getSharingAccess", "parameters": [], "result": "Access", "description": "Gets which class of users can access the Folder, besides any individual\nusers who have been explicitly given access."}, {"name": "getSharingPermission", "parameters": [], "result": "Permission", "description": "Gets the permission granted to those users who can access the Folder,\nbesides any individual users who have been explicitly given access."}, {"name": "getSize", "parameters": [], "result": "Integer", "description": "Gets the number of bytes used to store the Folder in Drive."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to open the Folder in a Google App like\nDrive or Docs."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this Folder."}, {"name": "isShareableByEditors", "parameters": [], "result": "Boolean", "description": "Determines whether users with edit permissions to the Folder are allowed to\nshare with other users or change the permissions."}, {"name": "isStarred", "parameters": [], "result": "Boolean", "description": "Determines whether the Folder has been starred in the user's Drive."}, {"name": "isTrashed", "parameters": [], "result": "Boolean", "description": "Determines whether the Folder is in the trash of the user's Drive."}, {"name": "moveTo", "parameters": [{"name": "destination", "type": "Folder"}], "result": "Folder", "description": "Moves this item to the provided destination folder."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Removes the given user from the list of editors for the Folder."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Removes the given user from the list of editors for the Folder."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Removes the given user from the list of viewers and commenters for the Folder."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Removes the given user from the list of viewers and commenters for the Folder."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "String"}], "result": "Folder", "description": "Revokes the access to the Folder granted to the given user."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Revokes the access to the Folder granted to the given user."}, {"name": "searchFiles", "parameters": [{"name": "params", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files that are children of the current folder and match the given search\ncriteria."}, {"name": "searchFolders", "parameters": [{"name": "params", "type": "String"}], "result": "FolderIterator", "description": "Gets a collection of all folders that are children of the current folder and match the given search\ncriteria."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Folder", "description": "Sets the description for the Folder."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Folder", "description": "Sets the name of the Folder."}, {"name": "setOwner", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Changes the owner of the Folder."}, {"name": "setOwner", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Changes the owner of the Folder."}, {"name": "setShareableByEditors", "parameters": [{"name": "shareable", "type": "Boolean"}], "result": "Folder", "description": "Sets whether users with edit permissions to the Folder are allowed to share\nwith other users or change the permissions."}, {"name": "setSharing", "parameters": [{"name": "accessType", "type": "Access"}, {"name": "permissionType", "type": "Permission"}], "result": "Folder", "description": "Sets which class of users can access the Folder and what permissions\nthose users are granted, besides any individual users who have been explicitly given access."}, {"name": "setStarred", "parameters": [{"name": "starred", "type": "Boolean"}], "result": "Folder", "description": "Sets whether the Folder is starred in the user's Drive."}, {"name": "setTrashed", "parameters": [{"name": "trashed", "type": "Boolean"}], "result": "Folder", "description": "Sets whether the Folder is in the trash of the user's Drive."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/drive/file-iterator", "name": "FileIterator", "type": "class", "methods": [{"name": "getContinuationToken", "parameters": [], "result": "String", "description": "Gets a token that can be used to resume this iteration at a later time."}, {"name": "hasNext", "parameters": [], "result": "Boolean", "description": "Determines whether calling next() will return an item."}, {"name": "next", "parameters": [], "result": "File", "description": "Gets the next item in the collection of files or folders."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/text-alignment", "name": "TextAlignment", "type": "enum", "methods": [], "properties": [{"name": "NORMAL", "type": "Enum", "url": "", "description": "The normal text alignment."}, {"name": "SUPERSCRIPT", "type": "Enum", "url": "", "description": "The superscript text alignment."}, {"name": "SUBSCRIPT", "type": "Enum", "url": "", "description": "The subscript text alignment."}]},
{"url": "https://developers.google.com/apps-script/reference/document/vertical-alignment", "name": "VerticalAlignment", "type": "enum", "methods": [], "properties": [{"name": "BOTTOM", "type": "Enum", "url": "", "description": "The bottom-alignment option."}, {"name": "CENTER", "type": "Enum", "url": "", "description": "The center-alignment option."}, {"name": "TOP", "type": "Enum", "url": "", "description": "The top-alignment option."}]},
{"url": "https://developers.google.com/apps-script/reference/drive/drive-app", "name": "DriveApp", "type": "class", "methods": [{"name": "continueFileIterator", "parameters": [{"name": "continuationToken", "type": "String"}], "result": "FileIterator", "description": "Resumes a file iteration using a continuation token from a previous iterator."}, {"name": "continueFolderIterator", "parameters": [{"name": "continuationToken", "type": "String"}], "result": "FolderIterator", "description": "Resumes a folder iteration using a continuation token from a previous iterator."}, {"name": "createFile", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "File", "description": "Creates a file in the root of the user's Drive from a given Blob of arbitrary data."}, {"name": "createFile", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}], "result": "File", "description": "Creates a text file in the root of the user's Drive with the given name and contents."}, {"name": "createFile", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}, {"name": "mimeType", "type": "String"}], "result": "File", "description": "Creates a file in the root of the user's Drive with the given name, contents, and MIME type."}, {"name": "createFolder", "parameters": [{"name": "name", "type": "String"}], "result": "Folder", "description": "Creates a folder in the root of the user's Drive with the given name."}, {"name": "createShortcut", "parameters": [{"name": "targetId", "type": "String"}], "result": "File", "description": "Creates a shortcut to the provided Drive item ID, and returns it."}, {"name": "enforceSingleParent", "parameters": [{"name": "value", "type": "Boolean"}], "result": "void", "description": "Enables or disables enforceSingleParent behavior for all calls affecting item parents."}, {"name": "getFileById", "parameters": [{"name": "id", "type": "String"}], "result": "File", "description": "Gets the file with the given ID."}, {"name": "getFiles", "parameters": [], "result": "FileIterator", "description": "Gets a collection of all files in the user's Drive."}, {"name": "getFilesByName", "parameters": [{"name": "name", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files in the user's Drive that have the given name."}, {"name": "getFilesByType", "parameters": [{"name": "mimeType", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files in the user's Drive that have the given MIME type."}, {"name": "getFolderById", "parameters": [{"name": "id", "type": "String"}], "result": "Folder", "description": "Gets the folder with the given ID."}, {"name": "getFolders", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of all folders in the user's Drive."}, {"name": "getFoldersByName", "parameters": [{"name": "name", "type": "String"}], "result": "FolderIterator", "description": "Gets a collection of all folders in the user's Drive that have the given name."}, {"name": "getRootFolder", "parameters": [], "result": "Folder", "description": "Gets the folder at the root of the user's Drive."}, {"name": "getStorageLimit", "parameters": [], "result": "Integer", "description": "Gets the number of bytes the user is allowed to store in Drive."}, {"name": "getStorageUsed", "parameters": [], "result": "Integer", "description": "Gets the number of bytes the user is currently storing in Drive."}, {"name": "getTrashedFiles", "parameters": [], "result": "FileIterator", "description": "Gets a collection of all the files in the trash of the user's Drive."}, {"name": "getTrashedFolders", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of all the folders in the trash of the user's Drive."}, {"name": "searchFiles", "parameters": [{"name": "params", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files in the user's Drive that match the given search\ncriteria."}, {"name": "searchFolders", "parameters": [{"name": "params", "type": "String"}], "result": "FolderIterator", "description": "Gets a collection of all folders in the user's Drive that match the given search\ncriteria."}], "properties": [{"name": "Access", "type": "Access", "url": "/apps-script/reference/drive/access", "description": "An enum representing classes of users who can access a file or folder, besides any individual\nusers who have been explicitly given access."}, {"name": "Permission", "type": "Permission", "url": "/apps-script/reference/drive/permission", "description": "An enum representing the permissions granted to users who can access a file or folder, besides\nany individual users who have been explicitly given access."}]},
{"url": "https://developers.google.com/apps-script/reference/document/paragraph-heading", "name": "ParagraphHeading", "type": "enum", "methods": [], "properties": [{"name": "NORMAL", "type": "Enum", "url": "", "description": "The heading option for normal text."}, {"name": "HEADING1", "type": "Enum", "url": "", "description": "The highest heading option."}, {"name": "HEADING2", "type": "Enum", "url": "", "description": "The second heading option."}, {"name": "HEADING3", "type": "Enum", "url": "", "description": "The third heading option"}, {"name": "HEADING4", "type": "Enum", "url": "", "description": "The fourth heading option."}, {"name": "HEADING5", "type": "Enum", "url": "", "description": "The fifth heading option."}, {"name": "HEADING6", "type": "Enum", "url": "", "description": "The lowest heading option."}, {"name": "TITLE", "type": "Enum", "url": "", "description": "The title heading option."}, {"name": "SUBTITLE", "type": "Enum", "url": "", "description": "The subtitle heading option."}]},
{"url": "https://developers.google.com/apps-script/reference/drive", "name": "Drive", "type": "drive", "methods": [{"name": "continueFileIterator", "parameters": [{"name": "continuationToken", "type": "String"}], "result": "FileIterator", "description": "Resumes a file iteration using a continuation token from a previous iterator."}, {"name": "continueFolderIterator", "parameters": [{"name": "continuationToken", "type": "String"}], "result": "FolderIterator", "description": "Resumes a folder iteration using a continuation token from a previous iterator."}, {"name": "createFile", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "File", "description": "Creates a file in the root of the user's Drive from a given Blob of arbitrary data."}, {"name": "createFile", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}], "result": "File", "description": "Creates a text file in the root of the user's Drive with the given name and contents."}, {"name": "createFile", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}, {"name": "mimeType", "type": "String"}], "result": "File", "description": "Creates a file in the root of the user's Drive with the given name, contents, and MIME type."}, {"name": "createFolder", "parameters": [{"name": "name", "type": "String"}], "result": "Folder", "description": "Creates a folder in the root of the user's Drive with the given name."}, {"name": "createShortcut", "parameters": [{"name": "targetId", "type": "String"}], "result": "File", "description": "Creates a shortcut to the provided Drive item ID, and returns it."}, {"name": "enforceSingleParent", "parameters": [{"name": "value", "type": "Boolean"}], "result": "void", "description": "Enables or disables enforceSingleParent behavior for all calls affecting item parents."}, {"name": "getFileById", "parameters": [{"name": "id", "type": "String"}], "result": "File", "description": "Gets the file with the given ID."}, {"name": "getFiles", "parameters": [], "result": "FileIterator", "description": "Gets a collection of all files in the user's Drive."}, {"name": "getFilesByName", "parameters": [{"name": "name", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files in the user's Drive that have the given name."}, {"name": "getFilesByType", "parameters": [{"name": "mimeType", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files in the user's Drive that have the given MIME type."}, {"name": "getFolderById", "parameters": [{"name": "id", "type": "String"}], "result": "Folder", "description": "Gets the folder with the given ID."}, {"name": "getFolders", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of all folders in the user's Drive."}, {"name": "getFoldersByName", "parameters": [{"name": "name", "type": "String"}], "result": "FolderIterator", "description": "Gets a collection of all folders in the user's Drive that have the given name."}, {"name": "getRootFolder", "parameters": [], "result": "Folder", "description": "Gets the folder at the root of the user's Drive."}, {"name": "getStorageLimit", "parameters": [], "result": "Integer", "description": "Gets the number of bytes the user is allowed to store in Drive."}, {"name": "getStorageUsed", "parameters": [], "result": "Integer", "description": "Gets the number of bytes the user is currently storing in Drive."}, {"name": "getTrashedFiles", "parameters": [], "result": "FileIterator", "description": "Gets a collection of all the files in the trash of the user's Drive."}, {"name": "getTrashedFolders", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of all the folders in the trash of the user's Drive."}, {"name": "searchFiles", "parameters": [{"name": "params", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files in the user's Drive that match the given search\ncriteria."}, {"name": "searchFolders", "parameters": [{"name": "params", "type": "String"}], "result": "FolderIterator", "description": "Gets a collection of all folders in the user's Drive that match the given search\ncriteria."}, {"name": "addCommenter", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Add the given user to the list of commenters for the File."}, {"name": "addCommenter", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Add the given user to the list of commenters for the File."}, {"name": "addCommenters", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "File", "description": "Add the given array of users to the list of commenters for the File."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Adds the given user to the list of editors for the File."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Adds the given user to the list of editors for the File."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "File", "description": "Adds the given array of users to the list of editors for the File."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Adds the given user to the list of viewers for the File."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Adds the given user to the list of viewers for the File."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "File", "description": "Adds the given array of users to the list of viewers for the File."}, {"name": "getAccess", "parameters": [{"name": "email", "type": "String"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getAccess", "parameters": [{"name": "user", "type": "User"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getDateCreated", "parameters": [], "result": "Date", "description": "Gets the date the File was created."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description for the File."}, {"name": "getDownloadUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to download the file."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this File."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the File."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Gets the date the File was last updated."}, {"name": "getMimeType", "parameters": [], "result": "String", "description": "Gets the MIME type of the file."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the File."}, {"name": "getOwner", "parameters": [], "result": "User", "description": "Gets the owner of the File."}, {"name": "getParents", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of folders that are immediate parents of the File."}, {"name": "getSharingAccess", "parameters": [], "result": "Access", "description": "Gets which class of users can access the File, besides any individual\nusers who have been explicitly given access."}, {"name": "getSharingPermission", "parameters": [], "result": "Permission", "description": "Gets the permission granted to those users who can access the File,\nbesides any individual users who have been explicitly given access."}, {"name": "getSize", "parameters": [], "result": "Integer", "description": "Gets the number of bytes used to store the File in Drive."}, {"name": "getTargetId", "parameters": [], "result": "String", "description": "If this is a Shortcut, returns the ID of the item it points to."}, {"name": "getTargetMimeType", "parameters": [], "result": "String", "description": "If this is a Shortcut, returns the mime type of the item it points to."}, {"name": "getThumbnail", "parameters": [], "result": "Blob", "description": "Gets a thumbnail image for the file, or null if no thumbnail exists."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to open the File in a Google App like\nDrive or Docs."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this File."}, {"name": "isShareableByEditors", "parameters": [], "result": "Boolean", "description": "Determines whether users with edit permissions to the File are allowed to\nshare with other users or change the permissions."}, {"name": "isStarred", "parameters": [], "result": "Boolean", "description": "Determines whether the File has been starred in the user's Drive."}, {"name": "isTrashed", "parameters": [], "result": "Boolean", "description": "Determines whether the File is in the trash of the user's Drive."}, {"name": "makeCopy", "parameters": [], "result": "File", "description": "Creates a copy of the file."}, {"name": "makeCopy", "parameters": [{"name": "destination", "type": "Folder"}], "result": "File", "description": "Creates a copy of the file in the destination directory."}, {"name": "makeCopy", "parameters": [{"name": "name", "type": "String"}], "result": "File", "description": "Creates a copy of the file and names it with the name provided."}, {"name": "makeCopy", "parameters": [{"name": "name", "type": "String"}, {"name": "destination", "type": "Folder"}], "result": "File", "description": "Creates a copy of the file in the destination directory and names it with the name provided."}, {"name": "moveTo", "parameters": [{"name": "destination", "type": "Folder"}], "result": "File", "description": "Moves this item to the provided destination folder."}, {"name": "removeCommenter", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Removes the given user from the list of commenters for the File."}, {"name": "removeCommenter", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Removes the given user from the list of commenters for the File."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Removes the given user from the list of editors for the File."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Removes the given user from the list of editors for the File."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Removes the given user from the list of viewers and commenters for the File."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Removes the given user from the list of viewers and commenters for the File."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "String"}], "result": "File", "description": "Revokes the access to the File granted to the given user."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Revokes the access to the File granted to the given user."}, {"name": "setContent", "parameters": [{"name": "content", "type": "String"}], "result": "File", "description": "Overwrites the content of the file with a given replacement."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "File", "description": "Sets the description for the File."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "File", "description": "Sets the name of the File."}, {"name": "setOwner", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "File", "description": "Changes the owner of the File."}, {"name": "setOwner", "parameters": [{"name": "user", "type": "User"}], "result": "File", "description": "Changes the owner of the File."}, {"name": "setShareableByEditors", "parameters": [{"name": "shareable", "type": "Boolean"}], "result": "File", "description": "Sets whether users with edit permissions to the File are allowed to share\nwith other users or change the permissions."}, {"name": "setSharing", "parameters": [{"name": "accessType", "type": "Access"}, {"name": "permissionType", "type": "Permission"}], "result": "File", "description": "Sets which class of users can access the File and what permissions\nthose users are granted, besides any individual users who have been explicitly given access."}, {"name": "setStarred", "parameters": [{"name": "starred", "type": "Boolean"}], "result": "File", "description": "Sets whether the File is starred in the user's Drive."}, {"name": "setTrashed", "parameters": [{"name": "trashed", "type": "Boolean"}], "result": "File", "description": "Sets whether the File is in the trash of the user's Drive."}, {"name": "getContinuationToken", "parameters": [], "result": "String", "description": "Gets a token that can be used to resume this iteration at a later time."}, {"name": "hasNext", "parameters": [], "result": "Boolean", "description": "Determines whether calling next() will return an item."}, {"name": "next", "parameters": [], "result": "File", "description": "Gets the next item in the collection of files or folders."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Adds the given user to the list of editors for the Folder."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Adds the given user to the list of editors for the Folder."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Folder", "description": "Adds the given array of users to the list of editors for the Folder."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Adds the given user to the list of viewers for the Folder."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Adds the given user to the list of viewers for the Folder."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Folder", "description": "Adds the given array of users to the list of viewers for the Folder."}, {"name": "createFile", "parameters": [{"name": "blob", "type": "BlobSource"}], "result": "File", "description": "Creates a file in the current folder from a given Blob of arbitrary data."}, {"name": "createFile", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}], "result": "File", "description": "Creates a text file in the current folder with the given name and contents."}, {"name": "createFile", "parameters": [{"name": "name", "type": "String"}, {"name": "content", "type": "String"}, {"name": "mimeType", "type": "String"}], "result": "File", "description": "Creates a file in the current folder with the given name, contents, and MIME type."}, {"name": "createFolder", "parameters": [{"name": "name", "type": "String"}], "result": "Folder", "description": "Creates a folder in the current folder with the given name."}, {"name": "createShortcut", "parameters": [{"name": "targetId", "type": "String"}], "result": "File", "description": "Creates a shortcut to the provided Drive item ID, and returns it."}, {"name": "getAccess", "parameters": [{"name": "email", "type": "String"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getAccess", "parameters": [{"name": "user", "type": "User"}], "result": "Permission", "description": "Gets the permission granted to the given user."}, {"name": "getDateCreated", "parameters": [], "result": "Date", "description": "Gets the date the Folder was created."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description for the Folder."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Folder."}, {"name": "getFiles", "parameters": [], "result": "FileIterator", "description": "Gets a collection of all files that are children of the current folder."}, {"name": "getFilesByName", "parameters": [{"name": "name", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files that are children of the current folder and have the given name."}, {"name": "getFilesByType", "parameters": [{"name": "mimeType", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files that are children of the current folder and have the given MIME type."}, {"name": "getFolders", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of all folders that are children of the current folder."}, {"name": "getFoldersByName", "parameters": [{"name": "name", "type": "String"}], "result": "FolderIterator", "description": "Gets a collection of all folders that are children of the current folder and have the given name."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the Folder."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Gets the date the Folder was last updated."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the Folder."}, {"name": "getOwner", "parameters": [], "result": "User", "description": "Gets the owner of the Folder."}, {"name": "getParents", "parameters": [], "result": "FolderIterator", "description": "Gets a collection of folders that are immediate parents of the Folder."}, {"name": "getSharingAccess", "parameters": [], "result": "Access", "description": "Gets which class of users can access the Folder, besides any individual\nusers who have been explicitly given access."}, {"name": "getSharingPermission", "parameters": [], "result": "Permission", "description": "Gets the permission granted to those users who can access the Folder,\nbesides any individual users who have been explicitly given access."}, {"name": "getSize", "parameters": [], "result": "Integer", "description": "Gets the number of bytes used to store the Folder in Drive."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Gets the URL that can be used to open the Folder in a Google App like\nDrive or Docs."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this Folder."}, {"name": "isShareableByEditors", "parameters": [], "result": "Boolean", "description": "Determines whether users with edit permissions to the Folder are allowed to\nshare with other users or change the permissions."}, {"name": "isStarred", "parameters": [], "result": "Boolean", "description": "Determines whether the Folder has been starred in the user's Drive."}, {"name": "isTrashed", "parameters": [], "result": "Boolean", "description": "Determines whether the Folder is in the trash of the user's Drive."}, {"name": "moveTo", "parameters": [{"name": "destination", "type": "Folder"}], "result": "Folder", "description": "Moves this item to the provided destination folder."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Removes the given user from the list of editors for the Folder."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Removes the given user from the list of editors for the Folder."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Removes the given user from the list of viewers and commenters for the Folder."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Removes the given user from the list of viewers and commenters for the Folder."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "String"}], "result": "Folder", "description": "Revokes the access to the Folder granted to the given user."}, {"name": "revokePermissions", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Revokes the access to the Folder granted to the given user."}, {"name": "searchFiles", "parameters": [{"name": "params", "type": "String"}], "result": "FileIterator", "description": "Gets a collection of all files that are children of the current folder and match the given search\ncriteria."}, {"name": "searchFolders", "parameters": [{"name": "params", "type": "String"}], "result": "FolderIterator", "description": "Gets a collection of all folders that are children of the current folder and match the given search\ncriteria."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Folder", "description": "Sets the description for the Folder."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Folder", "description": "Sets the name of the Folder."}, {"name": "setOwner", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Folder", "description": "Changes the owner of the Folder."}, {"name": "setOwner", "parameters": [{"name": "user", "type": "User"}], "result": "Folder", "description": "Changes the owner of the Folder."}, {"name": "setShareableByEditors", "parameters": [{"name": "shareable", "type": "Boolean"}], "result": "Folder", "description": "Sets whether users with edit permissions to the Folder are allowed to share\nwith other users or change the permissions."}, {"name": "setSharing", "parameters": [{"name": "accessType", "type": "Access"}, {"name": "permissionType", "type": "Permission"}], "result": "Folder", "description": "Sets which class of users can access the Folder and what permissions\nthose users are granted, besides any individual users who have been explicitly given access."}, {"name": "setStarred", "parameters": [{"name": "starred", "type": "Boolean"}], "result": "Folder", "description": "Sets whether the Folder is starred in the user's Drive."}, {"name": "setTrashed", "parameters": [{"name": "trashed", "type": "Boolean"}], "result": "Folder", "description": "Sets whether the Folder is in the trash of the user's Drive."}, {"name": "getContinuationToken", "parameters": [], "result": "String", "description": "Gets a token that can be used to resume this iteration at a later time."}, {"name": "hasNext", "parameters": [], "result": "Boolean", "description": "Determines whether calling next() will return an item."}, {"name": "next", "parameters": [], "result": "Folder", "description": "Gets the next item in the collection of files or folders."}, {"name": "getDomain", "parameters": [], "result": "String", "description": "Gets the domain name associated with the user's account."}, {"name": "getEmail", "parameters": [], "result": "String", "description": "Gets the user's email address."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the user's name."}, {"name": "getPhotoUrl", "parameters": [], "result": "String", "description": "Gets the URL for the user's photo."}], "properties": [{"name": "ANYONE", "type": "Enum", "url": "", "description": "Anyone on the Internet can find and access."}, {"name": "ANYONE_WITH_LINK", "type": "Enum", "url": "", "description": "Anyone who has the link can access."}, {"name": "DOMAIN", "type": "Enum", "url": "", "description": "People in your domain can find and access."}, {"name": "DOMAIN_WITH_LINK", "type": "Enum", "url": "", "description": "People in your domain who have the link can access."}, {"name": "PRIVATE", "type": "Enum", "url": "", "description": "Only people explicitly granted permission can access."}, {"name": "Access", "type": "Access", "url": "/apps-script/reference/drive/access", "description": "An enum representing classes of users who can access a file or folder, besides any individual\nusers who have been explicitly given access."}, {"name": "Permission", "type": "Permission", "url": "/apps-script/reference/drive/permission", "description": "An enum representing the permissions granted to users who can access a file or folder, besides\nany individual users who have been explicitly given access."}, {"name": "VIEW", "type": "Enum", "url": "", "description": "Users who can access the file or folder are able only to view it or copy it."}, {"name": "EDIT", "type": "Enum", "url": "", "description": "Users who can access the file or folder are able to edit it."}, {"name": "COMMENT", "type": "Enum", "url": "", "description": "Users who can access the file or folder are able only to view it, copy it, or comment on it."}, {"name": "OWNER", "type": "Enum", "url": "", "description": "The user owns the file or folder."}, {"name": "ORGANIZER", "type": "Enum", "url": "", "description": "Users who can organize files and folders within a shared drive."}, {"name": "FILE_ORGANIZER", "type": "Enum", "url": "", "description": "Users who can edit, trash, and move content within a shared drive."}, {"name": "NONE", "type": "Enum", "url": "", "description": "The user does not have any permissions for the file or folder."}]},
{"url": "https://developers.google.com/apps-script/reference/document/positioned-layout", "name": "PositionedLayout", "type": "enum", "methods": [], "properties": [{"name": "ABOVE_TEXT", "type": "Enum", "url": "", "description": "The image is positioned above the text."}, {"name": "BREAK_BOTH", "type": "Enum", "url": "", "description": "The image breaks the text on the left and right."}, {"name": "BREAK_LEFT", "type": "Enum", "url": "", "description": "The image breaks the text on the left."}, {"name": "BREAK_RIGHT", "type": "Enum", "url": "", "description": "The image breaks the text on the right."}, {"name": "WRAP_TEXT", "type": "Enum", "url": "", "description": "The image is wrapped by text."}]},
{"url": "https://developers.google.com/apps-script/reference/document/attribute", "name": "Attribute", "type": "enum", "methods": [], "properties": [{"name": "BACKGROUND_COLOR", "type": "Enum", "url": "", "description": "The background color of an element (Paragraph, Table, etc) or document."}, {"name": "BOLD", "type": "Enum", "url": "", "description": "The font weight setting, for rich text."}, {"name": "BORDER_COLOR", "type": "Enum", "url": "", "description": "The border color, for table elements."}, {"name": "BORDER_WIDTH", "type": "Enum", "url": "", "description": "The border width in points, for table elements."}, {"name": "CODE", "type": "Enum", "url": "", "description": "The code contents, for equation elements."}, {"name": "FONT_FAMILY", "type": "Enum", "url": "", "description": "The font family setting, for rich text."}, {"name": "FONT_SIZE", "type": "Enum", "url": "", "description": "The font size setting in points, for rich text."}, {"name": "FOREGROUND_COLOR", "type": "Enum", "url": "", "description": "The foreground color setting, for rich text."}, {"name": "HEADING", "type": "Enum", "url": "", "description": "The heading type, for paragraph elements (for example, DocumentApp.ParagraphHeading.HEADING1)."}, {"name": "HEIGHT", "type": "Enum", "url": "", "description": "The height setting, for image elements."}, {"name": "HORIZONTAL_ALIGNMENT", "type": "Enum", "url": "", "description": "The horizontal alignment, for paragraph elements (for example, DocumentApp.HorizontalAlignment.CENTER)."}, {"name": "INDENT_END", "type": "Enum", "url": "", "description": "The end indentation setting in points, for paragraph elements."}, {"name": "INDENT_FIRST_LINE", "type": "Enum", "url": "", "description": "The first line indentation setting in points, for paragraph elements."}, {"name": "INDENT_START", "type": "Enum", "url": "", "description": "The start indentation setting in points, for paragraph elements."}, {"name": "ITALIC", "type": "Enum", "url": "", "description": "The font style setting, for rich text."}, {"name": "GLYPH_TYPE", "type": "Enum", "url": "", "description": "The glyph type, for list item elements."}, {"name": "LEFT_TO_RIGHT", "type": "Enum", "url": "", "description": "The text direction setting, for rich text."}, {"name": "LINE_SPACING", "type": "Enum", "url": "", "description": "The line spacing setting as a multiplier, for paragraph elements."}, {"name": "LINK_URL", "type": "Enum", "url": "", "description": "The link URL, for rich text. The default link style (foreground color, underline) is\nautomatically applied."}, {"name": "LIST_ID", "type": "Enum", "url": "", "description": "The ID of the encompassing list, for list item elements."}, {"name": "MARGIN_BOTTOM", "type": "Enum", "url": "", "description": "The bottom margin setting in points, for paragraph elements."}, {"name": "MARGIN_LEFT", "type": "Enum", "url": "", "description": "The left margin setting in points, for paragraph elements."}, {"name": "MARGIN_RIGHT", "type": "Enum", "url": "", "description": "The right margin setting in points, for paragraph elements."}, {"name": "MARGIN_TOP", "type": "Enum", "url": "", "description": "The top margin setting in points, for paragraph elements."}, {"name": "NESTING_LEVEL", "type": "Enum", "url": "", "description": "The item nesting level, for list item elements."}, {"name": "MINIMUM_HEIGHT", "type": "Enum", "url": "", "description": "The minimum height setting in points, for table row elements."}, {"name": "PADDING_BOTTOM", "type": "Enum", "url": "", "description": "The bottom padding setting in points, for table cell elements."}, {"name": "PADDING_LEFT", "type": "Enum", "url": "", "description": "The left padding setting in points, for table cell elements."}, {"name": "PADDING_RIGHT", "type": "Enum", "url": "", "description": "The right padding setting in points, for table cell elements."}, {"name": "PADDING_TOP", "type": "Enum", "url": "", "description": "The top padding setting in points, for table cell elements."}, {"name": "PAGE_HEIGHT", "type": "Enum", "url": "", "description": "The page height setting in points, for documents."}, {"name": "PAGE_WIDTH", "type": "Enum", "url": "", "description": "The page width setting in points, for documents."}, {"name": "SPACING_AFTER", "type": "Enum", "url": "", "description": "The bottom spacing setting in points, for paragraph elements."}, {"name": "SPACING_BEFORE", "type": "Enum", "url": "", "description": "The top spacing setting in points, for paragraph elements."}, {"name": "STRIKETHROUGH", "type": "Enum", "url": "", "description": "The strike-through setting, for rich text."}, {"name": "UNDERLINE", "type": "Enum", "url": "", "description": "The underline setting, for rich text."}, {"name": "VERTICAL_ALIGNMENT", "type": "Enum", "url": "", "description": "The vertical alignment setting, for table cell elements."}, {"name": "WIDTH", "type": "Enum", "url": "", "description": "The width setting, for table cell and image elements."}]},
{"url": "https://developers.google.com/apps-script/reference/document/element-type", "name": "ElementType", "type": "enum", "methods": [], "properties": [{"name": "BODY_SECTION", "type": "Enum", "url": "", "description": "The type corresponding to the Body element."}, {"name": "COMMENT_SECTION", "type": "Enum", "url": "", "description": "The type corresponding to the CommentSection element."}, {"name": "DOCUMENT", "type": "Enum", "url": "", "description": "The type that corresponds to the root of the document."}, {"name": "EQUATION", "type": "Enum", "url": "", "description": "The type corresponding to the Equation element."}, {"name": "EQUATION_FUNCTION", "type": "Enum", "url": "", "description": "The type corresponding to the EquationFunction element."}, {"name": "EQUATION_FUNCTION_ARGUMENT_SEPARATOR", "type": "Enum", "url": "", "description": "The type corresponding to the EquationFunctionArgumentSeparator\nelement."}, {"name": "EQUATION_SYMBOL", "type": "Enum", "url": "", "description": "The type corresponding to the EquationSymbol element."}, {"name": "FOOTER_SECTION", "type": "Enum", "url": "", "description": "The type corresponding to the FooterSection element."}, {"name": "FOOTNOTE", "type": "Enum", "url": "", "description": "The type corresponding to the Footnote element."}, {"name": "FOOTNOTE_SECTION", "type": "Enum", "url": "", "description": "The type corresponding to the FootnoteSection element."}, {"name": "HEADER_SECTION", "type": "Enum", "url": "", "description": "The type corresponding to the HeaderSection element."}, {"name": "HORIZONTAL_RULE", "type": "Enum", "url": "", "description": "The type corresponding to the HorizontalRule element."}, {"name": "INLINE_DRAWING", "type": "Enum", "url": "", "description": "The type corresponding to the InlineDrawing element."}, {"name": "INLINE_IMAGE", "type": "Enum", "url": "", "description": "The type corresponding to the InlineImage element."}, {"name": "LIST_ITEM", "type": "Enum", "url": "", "description": "The type corresponding to the ListItem element."}, {"name": "PAGE_BREAK", "type": "Enum", "url": "", "description": "The type corresponding to the PageBreak element."}, {"name": "PARAGRAPH", "type": "Enum", "url": "", "description": "The type corresponding to the Paragraph element."}, {"name": "TABLE", "type": "Enum", "url": "", "description": "The type corresponding to the Table element."}, {"name": "TABLE_CELL", "type": "Enum", "url": "", "description": "The type corresponding to the TableCell element."}, {"name": "TABLE_OF_CONTENTS", "type": "Enum", "url": "", "description": "The type corresponding to the TableOfContents element."}, {"name": "TABLE_ROW", "type": "Enum", "url": "", "description": "The type corresponding to the TableRow element."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "The type corresponding to the Text\nelement."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "The type corresponding to UnsupportedElement. Unsupported elements\nrepresent document portions that do not support scripting."}]},
{"url": "https://developers.google.com/apps-script/reference/document/element", "name": "Element", "type": "interface", "methods": [{"name": "asBody", "parameters": [], "result": "Body", "description": "Returns the current element as a Body."}, {"name": "asEquation", "parameters": [], "result": "Equation", "description": "Returns the current element as a Equation."}, {"name": "asEquationFunction", "parameters": [], "result": "EquationFunction", "description": "Returns the current element as a EquationFunction."}, {"name": "asEquationFunctionArgumentSeparator", "parameters": [], "result": "EquationFunctionArgumentSeparator", "description": "Returns the current element as a EquationFunctionArgumentSeparator."}, {"name": "asEquationSymbol", "parameters": [], "result": "EquationSymbol", "description": "Returns the current element as a EquationSymbol."}, {"name": "asFooterSection", "parameters": [], "result": "FooterSection", "description": "Returns the current element as a FooterSection."}, {"name": "asFootnote", "parameters": [], "result": "Footnote", "description": "Returns the current element as a Footnote."}, {"name": "asFootnoteSection", "parameters": [], "result": "FootnoteSection", "description": "Returns the current element as a FootnoteSection."}, {"name": "asHeaderSection", "parameters": [], "result": "HeaderSection", "description": "Returns the current element as a HeaderSection."}, {"name": "asHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Returns the current element as a HorizontalRule."}, {"name": "asInlineDrawing", "parameters": [], "result": "InlineDrawing", "description": "Returns the current element as a InlineDrawing."}, {"name": "asInlineImage", "parameters": [], "result": "InlineImage", "description": "Returns the current element as a InlineImage."}, {"name": "asListItem", "parameters": [], "result": "ListItem", "description": "Returns the current element as a ListItem."}, {"name": "asPageBreak", "parameters": [], "result": "PageBreak", "description": "Returns the current element as a PageBreak."}, {"name": "asParagraph", "parameters": [], "result": "Paragraph", "description": "Returns the current element as a Paragraph."}, {"name": "asTable", "parameters": [], "result": "Table", "description": "Returns the current element as a Table."}, {"name": "asTableCell", "parameters": [], "result": "TableCell", "description": "Returns the current element as a TableCell."}, {"name": "asTableOfContents", "parameters": [], "result": "TableOfContents", "description": "Returns the current element as a TableOfContents."}, {"name": "asTableRow", "parameters": [], "result": "TableRow", "description": "Returns the current element as a TableRow."}, {"name": "asText", "parameters": [], "result": "Text", "description": "Returns the current element as a Text."}, {"name": "copy", "parameters": [], "result": "Element", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "Element", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "Element", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Element", "description": "Sets the element's attributes."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/horizontal-alignment", "name": "HorizontalAlignment", "type": "enum", "methods": [], "properties": [{"name": "LEFT", "type": "Enum", "url": "", "description": "The left-alignment option."}, {"name": "CENTER", "type": "Enum", "url": "", "description": "The center-alignment option."}, {"name": "RIGHT", "type": "Enum", "url": "", "description": "The right-alignment option."}, {"name": "JUSTIFY", "type": "Enum", "url": "", "description": "The justify-alignment option."}]},
{"url": "https://developers.google.com/apps-script/reference/document/unsupported-element", "name": "UnsupportedElement", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "UnsupportedElement", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "UnsupportedElement", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "UnsupportedElement", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "UnsupportedElement", "description": "Sets the element's attributes."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/text", "name": "Text", "type": "class", "methods": [{"name": "appendText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Adds the specified text to the end of this text region."}, {"name": "copy", "parameters": [], "result": "Text", "description": "Returns a detached, deep copy of the current element."}, {"name": "deleteText", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}], "result": "Text", "description": "Deletes a range of text."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getAttributes", "parameters": [{"name": "offset", "type": "Integer"}], "result": "Object", "description": "Retrieves the attributes at the specified character offset."}, {"name": "getBackgroundColor", "parameters": [], "result": "String", "description": "Retrieves the background color setting."}, {"name": "getBackgroundColor", "parameters": [{"name": "offset", "type": "Integer"}], "result": "String", "description": "Retrieves the background color at the specified character offset."}, {"name": "getFontFamily", "parameters": [], "result": "String", "description": "Retrieves the font family setting."}, {"name": "getFontFamily", "parameters": [{"name": "offset", "type": "Integer"}], "result": "String", "description": "Retrieves the font family at the specified character offset."}, {"name": "getFontSize", "parameters": [], "result": "Number", "description": "Retrieves the font size setting."}, {"name": "getFontSize", "parameters": [{"name": "offset", "type": "Integer"}], "result": "Number", "description": "Retrieves the font size at the specified character offset."}, {"name": "getForegroundColor", "parameters": [], "result": "String", "description": "Retrieves the foreground color setting."}, {"name": "getForegroundColor", "parameters": [{"name": "offset", "type": "Integer"}], "result": "String", "description": "Retrieves the foreground color at the specified character offset."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getLinkUrl", "parameters": [{"name": "offset", "type": "Integer"}], "result": "String", "description": "Retrieves the link url at the specified character offset."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getTextAlignment", "parameters": [{"name": "offset", "type": "Integer"}], "result": "TextAlignment", "description": "Gets the text alignment for a single character."}, {"name": "getTextAttributeIndices", "parameters": [], "result": "Integer[]", "description": "Retrieves the set of text indices that correspond to the start of distinct text formatting\nruns."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertText", "parameters": [{"name": "offset", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Text", "description": "Inserts the specified text at the given character offset."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "isBold", "parameters": [], "result": "Boolean", "description": "Retrieves the bold setting."}, {"name": "isBold", "parameters": [{"name": "offset", "type": "Integer"}], "result": "Boolean", "description": "Retrieves the bold setting at the specified character offset."}, {"name": "isItalic", "parameters": [], "result": "Boolean", "description": "Retrieves the italic setting."}, {"name": "isItalic", "parameters": [{"name": "offset", "type": "Integer"}], "result": "Boolean", "description": "Retrieves the italic setting at the specified character offset."}, {"name": "isStrikethrough", "parameters": [], "result": "Boolean", "description": "Retrieves the strikethrough setting."}, {"name": "isStrikethrough", "parameters": [{"name": "offset", "type": "Integer"}], "result": "Boolean", "description": "Retrieves the strikethrough setting at the specified character offset."}, {"name": "isUnderline", "parameters": [], "result": "Boolean", "description": "Retrieves the underline setting."}, {"name": "isUnderline", "parameters": [{"name": "offset", "type": "Integer"}], "result": "Boolean", "description": "Retrieves the underline setting at the specified character offset."}, {"name": "merge", "parameters": [], "result": "Text", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "Text", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "attributes", "type": "Object"}], "result": "Text", "description": "Applies the specified attributes to the given character range."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Text", "description": "Sets the element's attributes."}, {"name": "setBackgroundColor", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "color", "type": "String"}], "result": "Text", "description": "Sets the background color for the specified character range."}, {"name": "setBackgroundColor", "parameters": [{"name": "color", "type": "String"}], "result": "Text", "description": "Sets the background color."}, {"name": "setBold", "parameters": [{"name": "bold", "type": "Boolean"}], "result": "Text", "description": "Sets the bold setting."}, {"name": "setBold", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "bold", "type": "Boolean"}], "result": "Text", "description": "Sets the bold setting for the specified character range."}, {"name": "setFontFamily", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "fontFamilyName", "type": "String"}], "result": "Text", "description": "Sets the font family for the specified character range."}, {"name": "setFontFamily", "parameters": [{"name": "fontFamilyName", "type": "String"}], "result": "Text", "description": "Sets the font family."}, {"name": "setFontSize", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "size", "type": "Number"}], "result": "Text", "description": "Sets the font size for the specified character range."}, {"name": "setFontSize", "parameters": [{"name": "size", "type": "Number"}], "result": "Text", "description": "Sets the font size."}, {"name": "setForegroundColor", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "color", "type": "String"}], "result": "Text", "description": "Sets the foreground color for the specified character range."}, {"name": "setForegroundColor", "parameters": [{"name": "color", "type": "String"}], "result": "Text", "description": "Sets the foreground color."}, {"name": "setItalic", "parameters": [{"name": "italic", "type": "Boolean"}], "result": "Text", "description": "Sets the italic setting."}, {"name": "setItalic", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "italic", "type": "Boolean"}], "result": "Text", "description": "Sets the italic setting for the specified character range."}, {"name": "setLinkUrl", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "url", "type": "String"}], "result": "Text", "description": "Sets the link url for the specified character range."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Text", "description": "Sets the link url."}, {"name": "setStrikethrough", "parameters": [{"name": "strikethrough", "type": "Boolean"}], "result": "Text", "description": "Sets the strikethrough setting."}, {"name": "setStrikethrough", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "strikethrough", "type": "Boolean"}], "result": "Text", "description": "Sets the strikethrough setting for the specified character range."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Sets the text contents."}, {"name": "setTextAlignment", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "textAlignment", "type": "TextAlignment"}], "result": "Text", "description": "Sets the text alignment for a given character range."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "Text", "description": "Sets the text alignment."}, {"name": "setUnderline", "parameters": [{"name": "underline", "type": "Boolean"}], "result": "Text", "description": "Sets the underline setting."}, {"name": "setUnderline", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "underline", "type": "Boolean"}], "result": "Text", "description": "Sets the underline setting for the specified character range."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/table-of-contents", "name": "TableOfContents", "type": "class", "methods": [{"name": "clear", "parameters": [], "result": "TableOfContents", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "TableOfContents", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "removeFromParent", "parameters": [], "result": "TableOfContents", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "TableOfContents", "description": "Sets the element's attributes."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "TableOfContents", "description": "Sets the link url."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "TableOfContents", "description": "Sets the text alignment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/table-row", "name": "TableRow", "type": "class", "methods": [{"name": "appendTableCell", "parameters": [], "result": "TableCell", "description": "Creates and appends a new TableCell."}, {"name": "appendTableCell", "parameters": [{"name": "textContents", "type": "String"}], "result": "TableCell", "description": "Appends the given TableCell containing the specified text."}, {"name": "appendTableCell", "parameters": [{"name": "tableCell", "type": "TableCell"}], "result": "TableCell", "description": "Appends the given TableCell."}, {"name": "clear", "parameters": [], "result": "TableRow", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "TableRow", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getCell", "parameters": [{"name": "cellIndex", "type": "Integer"}], "result": "TableCell", "description": "Retrieves the TableCell at the specified cell index."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getMinimumHeight", "parameters": [], "result": "Number", "description": "Retrieves the minimum height, in points."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumCells", "parameters": [], "result": "Integer", "description": "Retrieves the number of cells in the row."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getParentTable", "parameters": [], "result": "Table", "description": "Retrieves the Table containing the current row."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertTableCell", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "TableCell", "description": "Creates and inserts a new TableCell at the specified index."}, {"name": "insertTableCell", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "textContents", "type": "String"}], "result": "TableCell", "description": "Inserts the given TableCell at the specified index, containing the given text."}, {"name": "insertTableCell", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "tableCell", "type": "TableCell"}], "result": "TableCell", "description": "Inserts the given TableCell at the specified index."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "TableRow", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeCell", "parameters": [{"name": "cellIndex", "type": "Integer"}], "result": "TableCell", "description": "Removes the TableCell at the specified cell index."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "TableRow", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "TableRow", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "TableRow", "description": "Sets the element's attributes."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "TableRow", "description": "Sets the link url."}, {"name": "setMinimumHeight", "parameters": [{"name": "minHeight", "type": "Number"}], "result": "TableRow", "description": "Sets the minimum height, in points."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "TableRow", "description": "Sets the text alignment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/glyph-type", "name": "GlyphType", "type": "enum", "methods": [], "properties": [{"name": "BULLET", "type": "Enum", "url": "", "description": "The default bullet, circular and filled."}, {"name": "HOLLOW_BULLET", "type": "Enum", "url": "", "description": "A hollow bullet."}, {"name": "SQUARE_BULLET", "type": "Enum", "url": "", "description": "A square bullet."}, {"name": "NUMBER", "type": "Enum", "url": "", "description": "A number based bullet."}, {"name": "LATIN_UPPER", "type": "Enum", "url": "", "description": "A latin, uppercase bullet."}, {"name": "LATIN_LOWER", "type": "Enum", "url": "", "description": "A latin, lowercase bullet."}, {"name": "ROMAN_UPPER", "type": "Enum", "url": "", "description": "A roman numeral, uppercase bullet."}, {"name": "ROMAN_LOWER", "type": "Enum", "url": "", "description": "A roman numeral, lowercase bullet."}]},
{"url": "https://developers.google.com/apps-script/reference/document/font-family", "name": "FontFamily", "type": "enum", "methods": [], "properties": [{"name": "AMARANTH", "type": "Enum", "url": "", "description": "The Amaranth font family."}, {"name": "ARIAL", "type": "Enum", "url": "", "description": "The Arial font family."}, {"name": "ARIAL_BLACK", "type": "Enum", "url": "", "description": "The Arial Black font family."}, {"name": "ARIAL_NARROW", "type": "Enum", "url": "", "description": "The Arial Narrow font family."}, {"name": "ARVO", "type": "Enum", "url": "", "description": "The Arvo font family."}, {"name": "CALIBRI", "type": "Enum", "url": "", "description": "The Calibri font family."}, {"name": "CAMBRIA", "type": "Enum", "url": "", "description": "The Cambria font family."}, {"name": "COMIC_SANS_MS", "type": "Enum", "url": "", "description": "The Comic Sans MS font family."}, {"name": "CONSOLAS", "type": "Enum", "url": "", "description": "The Consolas font family."}, {"name": "CORSIVA", "type": "Enum", "url": "", "description": "The Corsiva font family."}, {"name": "COURIER_NEW", "type": "Enum", "url": "", "description": "The Courier New font family."}, {"name": "DANCING_SCRIPT", "type": "Enum", "url": "", "description": "The Dancing Script font family."}, {"name": "DROID_SANS", "type": "Enum", "url": "", "description": "The Droid Sans font family."}, {"name": "DROID_SERIF", "type": "Enum", "url": "", "description": "The Droid Serif font family."}, {"name": "GARAMOND", "type": "Enum", "url": "", "description": "The Garamond font family."}, {"name": "GEORGIA", "type": "Enum", "url": "", "description": "The Georgia font family."}, {"name": "GLORIA_HALLELUJAH", "type": "Enum", "url": "", "description": "The Gloria Hallelujah font family."}, {"name": "GREAT_VIBES", "type": "Enum", "url": "", "description": "The Great Vibes font family."}, {"name": "LOBSTER", "type": "Enum", "url": "", "description": "The Lobster font family."}, {"name": "MERRIWEATHER", "type": "Enum", "url": "", "description": "The Merriweather font family."}, {"name": "PACIFICO", "type": "Enum", "url": "", "description": "The Pacifico font family."}, {"name": "PHILOSOPHER", "type": "Enum", "url": "", "description": "The Philosopher font family."}, {"name": "POIRET_ONE", "type": "Enum", "url": "", "description": "The Poiret One font family"}, {"name": "QUATTROCENTO", "type": "Enum", "url": "", "description": "The Quattrocento font family."}, {"name": "ROBOTO", "type": "Enum", "url": "", "description": "The Roboto font family"}, {"name": "SHADOWS_INTO_LIGHT", "type": "Enum", "url": "", "description": "The Shadows Into Light font family."}, {"name": "SYNCOPATE", "type": "Enum", "url": "", "description": "The Syncopate font family."}, {"name": "TAHOMA", "type": "Enum", "url": "", "description": "The Tahoma font family."}, {"name": "TIMES_NEW_ROMAN", "type": "Enum", "url": "", "description": "The Times New Roman font family."}, {"name": "TREBUCHET_MS", "type": "Enum", "url": "", "description": "The Trebuchet MS font family."}, {"name": "UBUNTU", "type": "Enum", "url": "", "description": "The Ubuntu font family."}, {"name": "VERDANA", "type": "Enum", "url": "", "description": "The Verdana font family."}]},
{"url": "https://developers.google.com/apps-script/reference/document/table", "name": "Table", "type": "class", "methods": [{"name": "appendTableRow", "parameters": [], "result": "TableRow", "description": "Creates and appends a new TableRow."}, {"name": "appendTableRow", "parameters": [{"name": "tableRow", "type": "TableRow"}], "result": "TableRow", "description": "Appends the given TableRow."}, {"name": "clear", "parameters": [], "result": "Table", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "Table", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getBorderColor", "parameters": [], "result": "String", "description": "Retrieves the border color."}, {"name": "getBorderWidth", "parameters": [], "result": "Number", "description": "Retrieves the border width, in points."}, {"name": "getCell", "parameters": [{"name": "rowIndex", "type": "Integer"}, {"name": "cellIndex", "type": "Integer"}], "result": "TableCell", "description": "Retrieves the TableCell at the specified row and cell indices."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getColumnWidth", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Number", "description": "Retrieves the width of the specified table column, in points."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getNumRows", "parameters": [], "result": "Integer", "description": "Retrieves the number of TableRows."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getRow", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "TableRow", "description": "Retrieves the TableRow at the specified row index."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertTableRow", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "TableRow", "description": "Creates and inserts a new TableRow at the specified index."}, {"name": "insertTableRow", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "tableRow", "type": "TableRow"}], "result": "TableRow", "description": "Inserts the given TableRow at the specified index."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "Table", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "Table", "description": "Removes the element from its parent."}, {"name": "removeRow", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "TableRow", "description": "Removes the TableRow at the specified row index."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Table", "description": "Sets the element's attributes."}, {"name": "setBorderColor", "parameters": [{"name": "color", "type": "String"}], "result": "Table", "description": "Sets the border color."}, {"name": "setBorderWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Table", "description": "Sets the border width, in points."}, {"name": "setColumnWidth", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "width", "type": "Number"}], "result": "Table", "description": "Sets the width of the specified column, in points."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Table", "description": "Sets the link url."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "Table", "description": "Sets the text alignment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/range-element", "name": "RangeElement", "type": "class", "methods": [{"name": "getElement", "parameters": [], "result": "Element", "description": "Gets the Element that corresponds to this RangeElement."}, {"name": "getEndOffsetInclusive", "parameters": [], "result": "Integer", "description": "Gets the position of the end of a partial range within the range element."}, {"name": "getStartOffset", "parameters": [], "result": "Integer", "description": "Gets the position of the start of a partial range within the range element."}, {"name": "isPartial", "parameters": [], "result": "Boolean", "description": "Determines whether this range element covers the entire element or a partial selection of the\nelement's characters."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/range-builder", "name": "RangeBuilder", "type": "class", "methods": [{"name": "addElement", "parameters": [{"name": "element", "type": "Element"}], "result": "RangeBuilder", "description": "Adds an entire Element to this RangeBuilder."}, {"name": "addElement", "parameters": [{"name": "textElement", "type": "Text"}, {"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}], "result": "RangeBuilder", "description": "Adds a partial Text element to this RangeBuilder."}, {"name": "addElementsBetween", "parameters": [{"name": "startElement", "type": "Element"}, {"name": "endElementInclusive", "type": "Element"}], "result": "RangeBuilder", "description": "Adds two entire elements, and all elements between them, to this RangeBuilder."}, {"name": "addElementsBetween", "parameters": [{"name": "startTextElement", "type": "Text"}, {"name": "startOffset", "type": "Integer"}, {"name": "endTextElementInclusive", "type": "Text"}, {"name": "endOffsetInclusive", "type": "Integer"}], "result": "RangeBuilder", "description": "Adds two partial Text elements, and all elements between them, to the RangeBuilder."}, {"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "RangeBuilder", "description": "Adds the contents of another Range to this RangeBuilder."}, {"name": "build", "parameters": [], "result": "Range", "description": "Constructs a Range from the settings applied to the builder."}, {"name": "getRangeElements", "parameters": [], "result": "RangeElement[]", "description": "Gets all elements in this Range, including any partial Text elements (for example, in the case\nof a selection that includes only part of a Text element)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/range", "name": "Range", "type": "class", "methods": [{"name": "getRangeElements", "parameters": [], "result": "RangeElement[]", "description": "Gets all elements in this Range, including any partial Text elements (for example, in the case\nof a selection that includes only part of a Text element)."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/positioned-image", "name": "PositionedImage", "type": "class", "methods": [{"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Retrieves the image's height, in pixels."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the image's ID."}, {"name": "getLayout", "parameters": [], "result": "PositionedLayout", "description": "Gets an enum value that represents how the image is laid out."}, {"name": "getLeftOffset", "parameters": [], "result": "Number", "description": "Gets the image's offset, in points, from the paragraph's left."}, {"name": "getParagraph", "parameters": [], "result": "Paragraph", "description": "Gets the Paragraph the image is anchored to."}, {"name": "getTopOffset", "parameters": [], "result": "Number", "description": "Gets the image's offset, in points, from the paragraph's top."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Retrieves the image's width, in pixels."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Integer"}], "result": "PositionedImage", "description": "Sets the image's height, in pixels."}, {"name": "setLayout", "parameters": [{"name": "layout", "type": "PositionedLayout"}], "result": "PositionedImage", "description": "Sets the definition of how the image is laid out."}, {"name": "setLeftOffset", "parameters": [{"name": "offset", "type": "Number"}], "result": "PositionedImage", "description": "Sets the image's offset, in points, from the paragraph's left."}, {"name": "setTopOffset", "parameters": [{"name": "offset", "type": "Number"}], "result": "PositionedImage", "description": "Sets the image's offset, in points, from the paragraph's top."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "PositionedImage", "description": "Sets the image's width, in pixels."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/table-cell", "name": "TableCell", "type": "class", "methods": [{"name": "appendHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Creates and appends a new HorizontalRule."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and appends a new InlineImage from the specified image blob."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Appends the given InlineImage."}, {"name": "appendListItem", "parameters": [{"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Appends the given ListItem."}, {"name": "appendListItem", "parameters": [{"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and appends a new ListItem."}, {"name": "appendParagraph", "parameters": [{"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Appends the given Paragraph."}, {"name": "appendParagraph", "parameters": [{"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and appends a new Paragraph."}, {"name": "appendTable", "parameters": [], "result": "Table", "description": "Creates and appends a new Table."}, {"name": "appendTable", "parameters": [{"name": "cells", "type": "String"}], "result": "Table", "description": "Appends a new Table containing the specified cells."}, {"name": "appendTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Appends the given Table."}, {"name": "clear", "parameters": [], "result": "TableCell", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "TableCell", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getBackgroundColor", "parameters": [], "result": "String", "description": "Retrieves the background color."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getColSpan", "parameters": [], "result": "Integer", "description": "Retrieves the column span, which is the number of columns of table cells this cell spans."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getPaddingBottom", "parameters": [], "result": "Number", "description": "Retrieves the bottom padding, in points."}, {"name": "getPaddingLeft", "parameters": [], "result": "Number", "description": "Retrieves the left padding, in points."}, {"name": "getPaddingRight", "parameters": [], "result": "Number", "description": "Retrieves the right padding, in points."}, {"name": "getPaddingTop", "parameters": [], "result": "Number", "description": "Retrieves the top padding, in points."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getParentRow", "parameters": [], "result": "TableRow", "description": "Retrieves the TableRow containing the current TableCell."}, {"name": "getParentTable", "parameters": [], "result": "Table", "description": "Retrieves the Table containing the current TableCell."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getRowSpan", "parameters": [], "result": "Integer", "description": "Retrieves the row span, which is the number of rows of table cells this cell spans."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "getVerticalAlignment", "parameters": [], "result": "VerticalAlignment", "description": "Retrieves the VerticalAlignment."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Retrieves the width of the column containing the cell, in points."}, {"name": "insertHorizontalRule", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "HorizontalRule", "description": "Creates and inserts a new HorizontalRule at the specified index."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts an InlineImage from the specified image blob, at the specified\nindex."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Inserts the given InlineImage at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Inserts the given ListItem at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and inserts a new ListItem at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Inserts the given Paragraph at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and inserts a new Paragraph at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Table", "description": "Creates and inserts a new Table at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "cells", "type": "String"}], "result": "Table", "description": "Creates and inserts a new Table containing the specified cells, at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts the given Table at the specified index."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "TableCell", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "TableCell", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "TableCell", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "TableCell", "description": "Sets the element's attributes."}, {"name": "setBackgroundColor", "parameters": [{"name": "color", "type": "String"}], "result": "TableCell", "description": "Sets the background color."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "TableCell", "description": "Sets the link url."}, {"name": "setPaddingBottom", "parameters": [{"name": "paddingBottom", "type": "Number"}], "result": "TableCell", "description": "Sets the bottom padding, in points."}, {"name": "setPaddingLeft", "parameters": [{"name": "paddingLeft", "type": "Number"}], "result": "TableCell", "description": "Sets the left padding, in points."}, {"name": "setPaddingRight", "parameters": [{"name": "paddingTop", "type": "Number"}], "result": "TableCell", "description": "Sets the right padding, in points."}, {"name": "setPaddingTop", "parameters": [{"name": "paddingTop", "type": "Number"}], "result": "TableCell", "description": "Sets the top padding, in points."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "TableCell", "description": "Sets the contents as plain text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "TableCell", "description": "Sets the text alignment."}, {"name": "setVerticalAlignment", "parameters": [{"name": "alignment", "type": "VerticalAlignment"}], "result": "TableCell", "description": "Sets the vertical alignment."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "TableCell", "description": "Sets the width of the column containing the current cell, in points."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/named-range", "name": "NamedRange", "type": "class", "methods": [{"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of this NamedRange."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this NamedRange."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Gets the range of elements associated with this NamedRange."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this NamedRange from the document."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/position", "name": "Position", "type": "class", "methods": [{"name": "getElement", "parameters": [], "result": "Element", "description": "Gets the element that contains this Position."}, {"name": "getOffset", "parameters": [], "result": "Integer", "description": "Gets this Position's relative location within the element that contains it."}, {"name": "getSurroundingText", "parameters": [], "result": "Text", "description": "Creates an artificial Text element that represents the text and formatting of the\nParagraph or ListItem that contains the Position, either directly or through a chain of child elements."}, {"name": "getSurroundingTextOffset", "parameters": [], "result": "Integer", "description": "Gets the offset of this Position within the Text element returned by getSurroundingText()."}, {"name": "insertBookmark", "parameters": [], "result": "Bookmark", "description": "Creates and inserts a new Bookmark at this Position."}, {"name": "insertInlineImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts a new InlineImage at this Position from the specified image\nblob."}, {"name": "insertText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Inserts the specified text at this Position."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/page-break", "name": "PageBreak", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "PageBreak", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "removeFromParent", "parameters": [], "result": "PageBreak", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "PageBreak", "description": "Sets the element's attributes."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/inline-image", "name": "InlineImage", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "InlineImage", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAltDescription", "parameters": [], "result": "String", "description": "Returns the image's alternate description."}, {"name": "getAltTitle", "parameters": [], "result": "String", "description": "Returns the image's alternate title."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Retrieves the image's height, in pixels."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link URL."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Retrieves the image's width, in pixels."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "InlineImage", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "InlineImage", "description": "Removes the element from its parent."}, {"name": "setAltDescription", "parameters": [{"name": "description", "type": "String"}], "result": "InlineImage", "description": "Sets the image's alternate description."}, {"name": "setAltTitle", "parameters": [{"name": "title", "type": "String"}], "result": "InlineImage", "description": "Sets the image's alternate title."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "InlineImage", "description": "Sets the element's attributes."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Integer"}], "result": "InlineImage", "description": "Sets the image's height, in pixels."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "InlineImage", "description": "Sets the link URL."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "InlineImage", "description": "Sets the image's width, in pixels."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/paragraph", "name": "Paragraph", "type": "class", "methods": [{"name": "addPositionedImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "PositionedImage", "description": "Creates and inserts a new PositionedImage from the specified image blob."}, {"name": "appendHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Creates and appends a new HorizontalRule."}, {"name": "appendInlineImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and appends a new InlineImage from the specified image blob."}, {"name": "appendInlineImage", "parameters": [{"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Appends the given InlineImage."}, {"name": "appendPageBreak", "parameters": [], "result": "PageBreak", "description": "Creates and appends a new PageBreak."}, {"name": "appendPageBreak", "parameters": [{"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Appends the given PageBreak."}, {"name": "appendText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Creates and appends a new Text element with the specified contents."}, {"name": "appendText", "parameters": [{"name": "text", "type": "Text"}], "result": "Text", "description": "Appends the given Text element."}, {"name": "clear", "parameters": [], "result": "Paragraph", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "Paragraph", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAlignment", "parameters": [], "result": "HorizontalAlignment", "description": "Retrieves the HorizontalAlignment."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getHeading", "parameters": [], "result": "ParagraphHeading", "description": "Retrieves the ParagraphHeading."}, {"name": "getIndentEnd", "parameters": [], "result": "Number", "description": "Retrieves the end indentation, in points."}, {"name": "getIndentFirstLine", "parameters": [], "result": "Number", "description": "Retrieves the first line indentation, in points."}, {"name": "getIndentStart", "parameters": [], "result": "Number", "description": "Retrieves the start indentation."}, {"name": "getLineSpacing", "parameters": [], "result": "Number", "description": "Retrieves the line spacing, in points."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPositionedImage", "parameters": [{"name": "id", "type": "String"}], "result": "PositionedImage", "description": "Gets a PositionedImage by the image's ID."}, {"name": "getPositionedImages", "parameters": [], "result": "PositionedImage[]", "description": "Gets all PositionedImage objects anchored to the paragraph."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getSpacingAfter", "parameters": [], "result": "Number", "description": "Retrieves the spacing after the element, in points."}, {"name": "getSpacingBefore", "parameters": [], "result": "Number", "description": "Retrieves the spacing before the element, in points."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertHorizontalRule", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "HorizontalRule", "description": "Creates and inserts a HorizontalRule at the specified index."}, {"name": "insertInlineImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts a new InlineImage from the specified image blob, at the specified\nindex."}, {"name": "insertInlineImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Inserts the given InlineImage at the specified index."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "PageBreak", "description": "Creates and inserts a new PageBreak at the specified index."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Inserts the given PageBreak at the specified index."}, {"name": "insertText", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Text", "description": "Creates and inserts a new text element at the specified index."}, {"name": "insertText", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "Text"}], "result": "Text", "description": "Inserts the given Text element at the specified index, with the specified text\ncontents."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "isLeftToRight", "parameters": [], "result": "Boolean", "description": "Retrieves the left-to-right setting."}, {"name": "merge", "parameters": [], "result": "Paragraph", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "Paragraph", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "Paragraph", "description": "Removes the element from its parent."}, {"name": "removePositionedImage", "parameters": [{"name": "id", "type": "String"}], "result": "Boolean", "description": "Removes a PositionedImage by the image's ID."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAlignment", "parameters": [{"name": "alignment", "type": "HorizontalAlignment"}], "result": "Paragraph", "description": "Sets the HorizontalAlignment."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Paragraph", "description": "Sets the element's attributes."}, {"name": "setHeading", "parameters": [{"name": "heading", "type": "ParagraphHeading"}], "result": "Paragraph", "description": "Sets the ParagraphHeading."}, {"name": "setIndentEnd", "parameters": [{"name": "indentEnd", "type": "Number"}], "result": "Paragraph", "description": "Sets the end indentation, in points."}, {"name": "setIndentFirstLine", "parameters": [{"name": "indentFirstLine", "type": "Number"}], "result": "Paragraph", "description": "Sets the first line indentation, in points."}, {"name": "setIndentStart", "parameters": [{"name": "indentStart", "type": "Number"}], "result": "Paragraph", "description": "Sets the start indentation, in points."}, {"name": "setLeftToRight", "parameters": [{"name": "leftToRight", "type": "Boolean"}], "result": "Paragraph", "description": "Sets the left-to-right setting."}, {"name": "setLineSpacing", "parameters": [{"name": "multiplier", "type": "Number"}], "result": "Paragraph", "description": "Sets the line spacing, as a quantity indicating the number of lines to use for spacing."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Paragraph", "description": "Sets the link url."}, {"name": "setSpacingAfter", "parameters": [{"name": "spacingAfter", "type": "Number"}], "result": "Paragraph", "description": "Sets the spacing after the element, in points."}, {"name": "setSpacingBefore", "parameters": [{"name": "spacingBefore", "type": "Number"}], "result": "Paragraph", "description": "Sets the spacing before the element, in points."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "void", "description": "Sets the contents of the paragraph as text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "Paragraph", "description": "Sets the text alignment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/list-item", "name": "ListItem", "type": "class", "methods": [{"name": "addPositionedImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "PositionedImage", "description": "Creates and inserts a new PositionedImage from the specified image blob."}, {"name": "appendHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Creates and appends a new HorizontalRule."}, {"name": "appendInlineImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and appends a new InlineImage from the specified image blob."}, {"name": "appendInlineImage", "parameters": [{"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Appends the given InlineImage."}, {"name": "appendPageBreak", "parameters": [], "result": "PageBreak", "description": "Creates and appends a new PageBreak."}, {"name": "appendPageBreak", "parameters": [{"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Appends the given PageBreak."}, {"name": "appendText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Creates and appends a new Text element with the specified contents."}, {"name": "appendText", "parameters": [{"name": "text", "type": "Text"}], "result": "Text", "description": "Appends the given Text element."}, {"name": "clear", "parameters": [], "result": "ListItem", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "ListItem", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAlignment", "parameters": [], "result": "HorizontalAlignment", "description": "Retrieves the HorizontalAlignment."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getGlyphType", "parameters": [], "result": "GlyphType", "description": "Retrieves the list item's GlyphType."}, {"name": "getHeading", "parameters": [], "result": "ParagraphHeading", "description": "Retrieves the ParagraphHeading."}, {"name": "getIndentEnd", "parameters": [], "result": "Number", "description": "Retrieves the end indentation, in points."}, {"name": "getIndentFirstLine", "parameters": [], "result": "Number", "description": "Retrieves the first line indentation, in points."}, {"name": "getIndentStart", "parameters": [], "result": "Number", "description": "Retrieves the start indentation."}, {"name": "getLineSpacing", "parameters": [], "result": "Number", "description": "Retrieves the line spacing, in points."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getListId", "parameters": [], "result": "String", "description": "Retrieves the list ID."}, {"name": "getNestingLevel", "parameters": [], "result": "Integer", "description": "Retrieves the list item's nesting level."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPositionedImage", "parameters": [{"name": "id", "type": "String"}], "result": "PositionedImage", "description": "Gets a PositionedImage by the image's ID."}, {"name": "getPositionedImages", "parameters": [], "result": "PositionedImage[]", "description": "Gets all PositionedImage objects anchored to the paragraph."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getSpacingAfter", "parameters": [], "result": "Number", "description": "Retrieves the spacing after the element, in points."}, {"name": "getSpacingBefore", "parameters": [], "result": "Number", "description": "Retrieves the spacing before the element, in points."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertHorizontalRule", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "HorizontalRule", "description": "Creates and inserts a HorizontalRule at the specified index."}, {"name": "insertInlineImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts a new InlineImage from the specified image blob, at the specified\nindex."}, {"name": "insertInlineImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Inserts the given InlineImage at the specified index."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "PageBreak", "description": "Creates and inserts a new PageBreak at the specified index."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Inserts the given PageBreak at the specified index."}, {"name": "insertText", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Text", "description": "Creates and inserts a new text element at the specified index."}, {"name": "insertText", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "Text"}], "result": "Text", "description": "Inserts the given Text element at the specified index, with the specified text\ncontents."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "isLeftToRight", "parameters": [], "result": "Boolean", "description": "Retrieves the left-to-right setting."}, {"name": "merge", "parameters": [], "result": "ListItem", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "ListItem", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "ListItem", "description": "Removes the element from its parent."}, {"name": "removePositionedImage", "parameters": [{"name": "id", "type": "String"}], "result": "Boolean", "description": "Removes a PositionedImage by the image's ID."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAlignment", "parameters": [{"name": "alignment", "type": "HorizontalAlignment"}], "result": "ListItem", "description": "Sets the HorizontalAlignment."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "ListItem", "description": "Sets the element's attributes."}, {"name": "setGlyphType", "parameters": [{"name": "glyphType", "type": "GlyphType"}], "result": "ListItem", "description": "Sets the list item's GlyphType."}, {"name": "setHeading", "parameters": [{"name": "heading", "type": "ParagraphHeading"}], "result": "ListItem", "description": "Sets the ParagraphHeading."}, {"name": "setIndentEnd", "parameters": [{"name": "indentEnd", "type": "Number"}], "result": "ListItem", "description": "Sets the end indentation, in points."}, {"name": "setIndentFirstLine", "parameters": [{"name": "indentFirstLine", "type": "Number"}], "result": "ListItem", "description": "Sets the first line indentation, in points."}, {"name": "setIndentStart", "parameters": [{"name": "indentStart", "type": "Number"}], "result": "ListItem", "description": "Sets the start indentation, in points."}, {"name": "setLeftToRight", "parameters": [{"name": "leftToRight", "type": "Boolean"}], "result": "ListItem", "description": "Sets the left-to-right setting."}, {"name": "setLineSpacing", "parameters": [{"name": "multiplier", "type": "Number"}], "result": "ListItem", "description": "Sets the line spacing, as a quantity indicating the number of lines to use for spacing."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "ListItem", "description": "Sets the link url."}, {"name": "setListId", "parameters": [{"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Sets the list ID."}, {"name": "setNestingLevel", "parameters": [{"name": "nestingLevel", "type": "Integer"}], "result": "ListItem", "description": "Sets the list item's nesting level."}, {"name": "setSpacingAfter", "parameters": [{"name": "spacingAfter", "type": "Number"}], "result": "ListItem", "description": "Sets the spacing after the element, in points."}, {"name": "setSpacingBefore", "parameters": [{"name": "spacingBefore", "type": "Number"}], "result": "ListItem", "description": "Sets the spacing before the element, in points."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "void", "description": "Sets the contents of the list item as text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "ListItem", "description": "Sets the text alignment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/footnote", "name": "Footnote", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "Footnote", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getFootnoteContents", "parameters": [], "result": "FootnoteSection", "description": "Retrieves the contents of the footnote element."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "removeFromParent", "parameters": [], "result": "Footnote", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Footnote", "description": "Sets the element's attributes."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/horizontal-rule", "name": "HorizontalRule", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "HorizontalRule", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "removeFromParent", "parameters": [], "result": "HorizontalRule", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "HorizontalRule", "description": "Sets the element's attributes."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/footnote-section", "name": "FootnoteSection", "type": "class", "methods": [{"name": "appendParagraph", "parameters": [{"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Appends the given Paragraph."}, {"name": "appendParagraph", "parameters": [{"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and appends a new Paragraph containing the specified text contents."}, {"name": "clear", "parameters": [], "result": "FootnoteSection", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "FootnoteSection", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Retrieves all the Paragraphs contained in the section (including ListItems)."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Inserts the given Paragraph at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and inserts a new Paragraph at the specified index, containing the specified\ntext contents."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "FootnoteSection", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "FootnoteSection", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "FootnoteSection", "description": "Sets the element's attributes."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "FootnoteSection", "description": "Sets the contents as plain text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "FootnoteSection", "description": "Sets the text alignment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/equation-function-argument-separator", "name": "EquationFunctionArgumentSeparator", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "EquationFunctionArgumentSeparator", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "EquationFunctionArgumentSeparator", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "EquationFunctionArgumentSeparator", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "EquationFunctionArgumentSeparator", "description": "Sets the element's attributes."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/inline-drawing", "name": "InlineDrawing", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "InlineDrawing", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAltDescription", "parameters": [], "result": "String", "description": "Returns the drawing's alternate description."}, {"name": "getAltTitle", "parameters": [], "result": "String", "description": "Returns the drawing's alternate title."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "InlineDrawing", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "InlineDrawing", "description": "Removes the element from its parent."}, {"name": "setAltDescription", "parameters": [{"name": "description", "type": "String"}], "result": "InlineDrawing", "description": "Sets the drawing's alternate description."}, {"name": "setAltTitle", "parameters": [{"name": "title", "type": "String"}], "result": "InlineDrawing", "description": "Sets the drawing's alternate title."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "InlineDrawing", "description": "Sets the element's attributes."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/footer-section", "name": "FooterSection", "type": "class", "methods": [{"name": "appendHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Creates and appends a new HorizontalRule."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and appends a new InlineImage from the specified image blob."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Appends the given InlineImage."}, {"name": "appendListItem", "parameters": [{"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Appends the given ListItem."}, {"name": "appendListItem", "parameters": [{"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and appends a new ListItem containing the specified text contents."}, {"name": "appendParagraph", "parameters": [{"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Appends the given Paragraph."}, {"name": "appendParagraph", "parameters": [{"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and appends a new Paragraph containing the specified text contents."}, {"name": "appendTable", "parameters": [], "result": "Table", "description": "Creates and appends a new Table."}, {"name": "appendTable", "parameters": [{"name": "cells", "type": "String"}], "result": "Table", "description": "Appends a new Table containing a TableCell for each specified string value."}, {"name": "appendTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Appends the given Table."}, {"name": "clear", "parameters": [], "result": "FooterSection", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "FooterSection", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getImages", "parameters": [], "result": "InlineImage[]", "description": "Retrieves all the InlineImages contained in the section."}, {"name": "getListItems", "parameters": [], "result": "ListItem[]", "description": "Retrieves all the ListItems contained in the section."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Retrieves all the Paragraphs contained in the section (including ListItems)."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Retrieves all the Tables contained in the section."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertHorizontalRule", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "HorizontalRule", "description": "Creates and inserts a new HorizontalRule at the specified index."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts an InlineImage from the specified image blob, at the specified\nindex."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Inserts the given InlineImage at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Inserts the given ListItem at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and inserts a new ListItem at the specified index, containing the specified\ntext contents."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Inserts the given Paragraph at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and inserts a new Paragraph at the specified index, containing the specified\ntext contents."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Table", "description": "Creates and inserts a new Table at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "cells", "type": "String"}], "result": "Table", "description": "Creates and inserts a new Table containing the specified cells, at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts the given Table at the specified index."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "FooterSection", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "FooterSection", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "FooterSection", "description": "Sets the element's attributes."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "FooterSection", "description": "Sets the contents as plain text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "FooterSection", "description": "Sets the text alignment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/equation-symbol", "name": "EquationSymbol", "type": "class", "methods": [{"name": "copy", "parameters": [], "result": "EquationSymbol", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getCode", "parameters": [], "result": "String", "description": "Retrieves the code corresponding to the equation symbol."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "EquationSymbol", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "EquationSymbol", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "EquationSymbol", "description": "Sets the element's attributes."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/equation-function", "name": "EquationFunction", "type": "class", "methods": [{"name": "clear", "parameters": [], "result": "EquationFunction", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "EquationFunction", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getCode", "parameters": [], "result": "String", "description": "Retrieves the code corresponding to the equation function."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "EquationFunction", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "EquationFunction", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "EquationFunction", "description": "Sets the element's attributes."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "EquationFunction", "description": "Sets the link url."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "EquationFunction", "description": "Sets the text alignment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/container-element", "name": "ContainerElement", "type": "class", "methods": [{"name": "asBody", "parameters": [], "result": "Body", "description": "Returns the current element as a Body."}, {"name": "asEquation", "parameters": [], "result": "Equation", "description": "Returns the current element as a Equation."}, {"name": "asFooterSection", "parameters": [], "result": "FooterSection", "description": "Returns the current element as a FooterSection."}, {"name": "asFootnoteSection", "parameters": [], "result": "FootnoteSection", "description": "Returns the current element as a FootnoteSection."}, {"name": "asHeaderSection", "parameters": [], "result": "HeaderSection", "description": "Returns the current element as a HeaderSection."}, {"name": "asListItem", "parameters": [], "result": "ListItem", "description": "Returns the current element as a ListItem."}, {"name": "asParagraph", "parameters": [], "result": "Paragraph", "description": "Returns the current element as a Paragraph."}, {"name": "asTable", "parameters": [], "result": "Table", "description": "Returns the current element as a Table."}, {"name": "asTableCell", "parameters": [], "result": "TableCell", "description": "Returns the current element as a TableCell."}, {"name": "asTableOfContents", "parameters": [], "result": "TableOfContents", "description": "Returns the current element as a TableOfContents."}, {"name": "asTableRow", "parameters": [], "result": "TableRow", "description": "Returns the current element as a TableRow."}, {"name": "clear", "parameters": [], "result": "ContainerElement", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "ContainerElement", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "ContainerElement", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "ContainerElement", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "ContainerElement", "description": "Sets the element's attributes."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "ContainerElement", "description": "Sets the link url."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "ContainerElement", "description": "Sets the text alignment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/equation", "name": "Equation", "type": "class", "methods": [{"name": "clear", "parameters": [], "result": "Equation", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "Equation", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "Equation", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "Equation", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Equation", "description": "Sets the element's attributes."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Equation", "description": "Sets the link url."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "Equation", "description": "Sets the text alignment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/header-section", "name": "HeaderSection", "type": "class", "methods": [{"name": "appendHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Creates and appends a new HorizontalRule."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and appends a new InlineImage from the specified image blob."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Appends the given InlineImage."}, {"name": "appendListItem", "parameters": [{"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Appends the given ListItem."}, {"name": "appendListItem", "parameters": [{"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and appends a new ListItem containing the specified text contents."}, {"name": "appendParagraph", "parameters": [{"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Appends the given Paragraph."}, {"name": "appendParagraph", "parameters": [{"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and appends a new Paragraph containing the specified text contents."}, {"name": "appendTable", "parameters": [], "result": "Table", "description": "Creates and appends a new Table."}, {"name": "appendTable", "parameters": [{"name": "cells", "type": "String"}], "result": "Table", "description": "Appends a new Table containing a TableCell for each specified string value."}, {"name": "appendTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Appends the given Table."}, {"name": "clear", "parameters": [], "result": "HeaderSection", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "HeaderSection", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getImages", "parameters": [], "result": "InlineImage[]", "description": "Retrieves all the InlineImages contained in the section."}, {"name": "getListItems", "parameters": [], "result": "ListItem[]", "description": "Retrieves all the ListItems contained in the section."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Retrieves all the Paragraphs contained in the section (including ListItems)."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Retrieves all the Tables contained in the section."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertHorizontalRule", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "HorizontalRule", "description": "Creates and inserts a new HorizontalRule at the specified index."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts an InlineImage from the specified image blob, at the specified\nindex."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Inserts the given InlineImage at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Inserts the given ListItem at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and inserts a new ListItem at the specified index, containing the specified\ntext contents."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Inserts the given Paragraph at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and inserts a new Paragraph at the specified index, containing the specified\ntext contents."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Table", "description": "Creates and inserts a new Table at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "cells", "type": "String"}], "result": "Table", "description": "Creates and inserts a new Table containing the specified cells, at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts the given Table at the specified index."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "HeaderSection", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "HeaderSection", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "HeaderSection", "description": "Sets the element's attributes."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "HeaderSection", "description": "Sets the contents as plain text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "HeaderSection", "description": "Sets the text alignment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/document", "name": "Document", "type": "class", "methods": [{"name": "addBookmark", "parameters": [{"name": "position", "type": "Position"}], "result": "Bookmark", "description": "Adds a Bookmark at the given Position."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Document", "description": "Adds the given user to the list of editors for the Document."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Document", "description": "Adds the given user to the list of editors for the Document."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Document", "description": "Adds the given array of users to the list of editors for the Document."}, {"name": "addFooter", "parameters": [], "result": "FooterSection", "description": "Adds a document footer section, if none exists."}, {"name": "addHeader", "parameters": [], "result": "HeaderSection", "description": "Adds a document header section, if none exists."}, {"name": "addNamedRange", "parameters": [{"name": "name", "type": "String"}, {"name": "range", "type": "Range"}], "result": "NamedRange", "description": "Adds a new NamedRange, which is a Range that has a name and ID to allow\nlater retrieval."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Document", "description": "Adds the given user to the list of viewers for the Document."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Document", "description": "Adds the given user to the list of viewers for the Document."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Document", "description": "Adds the given array of users to the list of viewers for the Document."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Retrieves the current Document contents as a blob of the specified type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Retrieves the current Document contents as a blob."}, {"name": "getBody", "parameters": [], "result": "Body", "description": "Retrieves the active document's Body."}, {"name": "getBookmark", "parameters": [{"name": "id", "type": "String"}], "result": "Bookmark", "description": "Gets the Bookmark with the given ID."}, {"name": "getBookmarks", "parameters": [], "result": "Bookmark[]", "description": "Gets all Bookmark objects in the document."}, {"name": "getCursor", "parameters": [], "result": "Position", "description": "Gets the user's cursor in the active document."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Document."}, {"name": "getFooter", "parameters": [], "result": "FooterSection", "description": "Retrieves the document's footer section, if one exists."}, {"name": "getFootnotes", "parameters": [], "result": "Footnote[]", "description": "Retrieves all the Footnote elements in the document body."}, {"name": "getHeader", "parameters": [], "result": "HeaderSection", "description": "Retrieves the document's header section, if one exists."}, {"name": "getId", "parameters": [], "result": "String", "description": "Retrieves the document's unique identifier."}, {"name": "getLanguage", "parameters": [], "result": "String", "description": "Gets the document's language code."}, {"name": "getName", "parameters": [], "result": "String", "description": "Retrieves the title of the document."}, {"name": "getNamedRangeById", "parameters": [{"name": "id", "type": "String"}], "result": "NamedRange", "description": "Gets the NamedRange with the given ID."}, {"name": "getNamedRanges", "parameters": [], "result": "NamedRange[]", "description": "Gets all NamedRange objects in the document."}, {"name": "getNamedRanges", "parameters": [{"name": "name", "type": "String"}], "result": "NamedRange[]", "description": "Gets all NamedRange objects in the document with the given name."}, {"name": "getSelection", "parameters": [], "result": "Range", "description": "Gets the user's selection in the active document."}, {"name": "getSupportedLanguageCodes", "parameters": [], "result": "String[]", "description": "Gets all language codes that are supported in Google Docs files."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Retrieves the URL to access the current document."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this Document."}, {"name": "newPosition", "parameters": [{"name": "element", "type": "Element"}, {"name": "offset", "type": "Integer"}], "result": "Position", "description": "Creates a new Position, which is a reference to a location in the document, relative to\na specific element."}, {"name": "newRange", "parameters": [], "result": "RangeBuilder", "description": "Creates a builder used to construct Range objects from document elements."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Document", "description": "Removes the given user from the list of editors for the Document."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Document", "description": "Removes the given user from the list of editors for the Document."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Document", "description": "Removes the given user from the list of viewers and commenters for the Document."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Document", "description": "Removes the given user from the list of viewers and commenters for the Document."}, {"name": "saveAndClose", "parameters": [], "result": "void", "description": "Saves the current Document."}, {"name": "setCursor", "parameters": [{"name": "position", "type": "Position"}], "result": "Document", "description": "Sets the user's cursor in the active document, given a Position."}, {"name": "setLanguage", "parameters": [{"name": "languageCode", "type": "String"}], "result": "Document", "description": "Sets the document's language code."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Document", "description": "Sets the document title."}, {"name": "setSelection", "parameters": [{"name": "range", "type": "Range"}], "result": "Document", "description": "Sets the user's selection in the active document, given a Range."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/field-type", "name": "FieldType", "type": "enum", "methods": [], "properties": [{"name": "YEAR", "type": "Enum", "url": "", "description": "Year in the format of YYYY such as 2017."}, {"name": "YEAR_QUARTER", "type": "Enum", "url": "", "description": "Year and quarter in the format of YYYYQ such as 20171."}, {"name": "YEAR_MONTH", "type": "Enum", "url": "", "description": "Year and month in the format of YYYYMM such as 201703."}, {"name": "YEAR_WEEK", "type": "Enum", "url": "", "description": "Year and week in the format of YYYYww such as 201707."}, {"name": "YEAR_MONTH_DAY", "type": "Enum", "url": "", "description": "Year, month, and day in the format of YYYYMMDD such as 20170317."}, {"name": "YEAR_MONTH_DAY_HOUR", "type": "Enum", "url": "", "description": "Year, month, day, and hour in the format of YYYYMMDDHH such as 2017031703."}, {"name": "YEAR_MONTH_DAY_MINUTE", "type": "Enum", "url": "", "description": "Year, month, day, hour, and minute in the format of YYYYMMDDHHmm such as 201703170230."}, {"name": "YEAR_MONTH_DAY_SECOND", "type": "Enum", "url": "", "description": "Year, month, day, hour, minute, and second in the format of YYYYMMDDHHmmss such as\n20170317023017."}, {"name": "QUARTER", "type": "Enum", "url": "", "description": "Quarter in the format of 1, 2, 3, or 4)."}, {"name": "MONTH", "type": "Enum", "url": "", "description": "Month in the format of MM such as 03."}, {"name": "WEEK", "type": "Enum", "url": "", "description": "Week in the format of ww such as 07."}, {"name": "MONTH_DAY", "type": "Enum", "url": "", "description": "Month and day in the format of MMDD such as 0317."}, {"name": "DAY_OF_WEEK", "type": "Enum", "url": "", "description": "A number in the range of [0,6] with 0 representing Sunday."}, {"name": "DAY", "type": "Enum", "url": "", "description": "Day in the format of DD such as 17."}, {"name": "HOUR", "type": "Enum", "url": "", "description": "Hour in the format of HH such as 13."}, {"name": "MINUTE", "type": "Enum", "url": "", "description": "Minute in the format of mm such as 12."}, {"name": "DURATION", "type": "Enum", "url": "", "description": "A duration of time in seconds."}, {"name": "COUNTRY", "type": "Enum", "url": "", "description": "A country such as United States."}, {"name": "COUNTRY_CODE", "type": "Enum", "url": "", "description": "A country code such as US."}, {"name": "CONTINENT", "type": "Enum", "url": "", "description": "A continent such as Americas."}, {"name": "CONTINENT_CODE", "type": "Enum", "url": "", "description": "A continent code such as 019."}, {"name": "SUB_CONTINENT", "type": "Enum", "url": "", "description": "A sub-continent such as North America."}, {"name": "SUB_CONTINENT_CODE", "type": "Enum", "url": "", "description": "A sub-continent code such as 003."}, {"name": "REGION", "type": "Enum", "url": "", "description": "A region such as California."}, {"name": "REGION_CODE", "type": "Enum", "url": "", "description": "A region code such as CA."}, {"name": "CITY", "type": "Enum", "url": "", "description": "A city such as Mountain View."}, {"name": "CITY_CODE", "type": "Enum", "url": "", "description": "A city code such as 1014044."}, {"name": "METRO", "type": "Enum", "url": "", "description": "A metro such as San Francisco-Oakland-San Jose CA."}, {"name": "METRO_CODE", "type": "Enum", "url": "", "description": "A metro code such as 200807."}, {"name": "LATITUDE_LONGITUDE", "type": "Enum", "url": "", "description": "A latitude longitude pair such as 51.5074, -0.1278."}, {"name": "NUMBER", "type": "Enum", "url": "", "description": "A decimal number."}, {"name": "PERCENT", "type": "Enum", "url": "", "description": "Decimal percentage (can be over 1.0). For example, 137% is represented as 1.37."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "Free-form text."}, {"name": "BOOLEAN", "type": "Enum", "url": "", "description": "A true or false boolean value."}, {"name": "URL", "type": "Enum", "url": "", "description": "A URL as text such as https://google.com."}, {"name": "HYPERLINK", "type": "Enum", "url": "", "description": "A hyperlink. Only use this for calculated fields with the HYPERLINK\nfunction."}, {"name": "IMAGE", "type": "Enum", "url": "", "description": "An image. Only use this for calculated fields with the IMAGE function."}, {"name": "IMAGE_LINK", "type": "Enum", "url": "", "description": "An image link. Only use this for calculated fields with the HYPERLINK function\nwhile using IMAGE for the link label."}, {"name": "CURRENCY_AED", "type": "Enum", "url": "", "description": "Currency from AED."}, {"name": "CURRENCY_ALL", "type": "Enum", "url": "", "description": "Currency from ALL."}, {"name": "CURRENCY_ARS", "type": "Enum", "url": "", "description": "Currency from ARS."}, {"name": "CURRENCY_AUD", "type": "Enum", "url": "", "description": "Currency from AUD."}, {"name": "CURRENCY_BDT", "type": "Enum", "url": "", "description": "Currency from BDT."}, {"name": "CURRENCY_BGN", "type": "Enum", "url": "", "description": "Currency from BGN."}, {"name": "CURRENCY_BOB", "type": "Enum", "url": "", "description": "Currency from BOB."}, {"name": "CURRENCY_BRL", "type": "Enum", "url": "", "description": "Currency from BRL."}, {"name": "CURRENCY_CAD", "type": "Enum", "url": "", "description": "Currency from CAD."}, {"name": "CURRENCY_CDF", "type": "Enum", "url": "", "description": "Currency from CDF."}, {"name": "CURRENCY_CHF", "type": "Enum", "url": "", "description": "Currency from CHF."}, {"name": "CURRENCY_CLP", "type": "Enum", "url": "", "description": "Currency from CLP."}, {"name": "CURRENCY_CNY", "type": "Enum", "url": "", "description": "Currency from CNY."}, {"name": "CURRENCY_COP", "type": "Enum", "url": "", "description": "Currency from COP."}, {"name": "CURRENCY_CRC", "type": "Enum", "url": "", "description": "Currency from CRC."}, {"name": "CURRENCY_CZK", "type": "Enum", "url": "", "description": "Currency from CZK."}, {"name": "CURRENCY_DKK", "type": "Enum", "url": "", "description": "Currency from DKK."}, {"name": "CURRENCY_DOP", "type": "Enum", "url": "", "description": "Currency from DOP."}, {"name": "CURRENCY_EGP", "type": "Enum", "url": "", "description": "Currency from EGP."}, {"name": "CURRENCY_ETB", "type": "Enum", "url": "", "description": "Currency from ETB."}, {"name": "CURRENCY_EUR", "type": "Enum", "url": "", "description": "Currency from EUR."}, {"name": "CURRENCY_GBP", "type": "Enum", "url": "", "description": "Currency from GBP."}, {"name": "CURRENCY_HKD", "type": "Enum", "url": "", "description": "Currency from HKD."}, {"name": "CURRENCY_HRK", "type": "Enum", "url": "", "description": "Currency from HRK."}, {"name": "CURRENCY_HUF", "type": "Enum", "url": "", "description": "Currency from HUF."}, {"name": "CURRENCY_IDR", "type": "Enum", "url": "", "description": "Currency from IDR."}, {"name": "CURRENCY_ILS", "type": "Enum", "url": "", "description": "Currency from ILS."}, {"name": "CURRENCY_INR", "type": "Enum", "url": "", "description": "Currency from INR."}, {"name": "CURRENCY_IRR", "type": "Enum", "url": "", "description": "Currency from IRR."}, {"name": "CURRENCY_ISK", "type": "Enum", "url": "", "description": "Currency from ISK."}, {"name": "CURRENCY_JMD", "type": "Enum", "url": "", "description": "Currency from JMD."}, {"name": "CURRENCY_JPY", "type": "Enum", "url": "", "description": "Currency from JPY."}, {"name": "CURRENCY_KRW", "type": "Enum", "url": "", "description": "Currency from KRW."}, {"name": "CURRENCY_LKR", "type": "Enum", "url": "", "description": "Currency from LKR."}, {"name": "CURRENCY_LTL", "type": "Enum", "url": "", "description": "Currency from LTL."}, {"name": "CURRENCY_MNT", "type": "Enum", "url": "", "description": "Currency from MNT."}, {"name": "CURRENCY_MVR", "type": "Enum", "url": "", "description": "Currency from MVR."}, {"name": "CURRENCY_MXN", "type": "Enum", "url": "", "description": "Currency from MXN."}, {"name": "CURRENCY_MYR", "type": "Enum", "url": "", "description": "Currency from MYR."}, {"name": "CURRENCY_NOK", "type": "Enum", "url": "", "description": "Currency from NOK."}, {"name": "CURRENCY_NZD", "type": "Enum", "url": "", "description": "Currency from NZD."}, {"name": "CURRENCY_PAB", "type": "Enum", "url": "", "description": "Currency from PAB."}, {"name": "CURRENCY_PEN", "type": "Enum", "url": "", "description": "Currency from PEN."}, {"name": "CURRENCY_PHP", "type": "Enum", "url": "", "description": "Currency from PHP."}, {"name": "CURRENCY_PKR", "type": "Enum", "url": "", "description": "Currency from PKR."}, {"name": "CURRENCY_PLN", "type": "Enum", "url": "", "description": "Currency from PLN."}, {"name": "CURRENCY_RON", "type": "Enum", "url": "", "description": "Currency from RON."}, {"name": "CURRENCY_RSD", "type": "Enum", "url": "", "description": "Currency from RSD."}, {"name": "CURRENCY_RUB", "type": "Enum", "url": "", "description": "Currency from RUB."}, {"name": "CURRENCY_SAR", "type": "Enum", "url": "", "description": "Currency from SAR."}, {"name": "CURRENCY_SEK", "type": "Enum", "url": "", "description": "Currency from SEK."}, {"name": "CURRENCY_SGD", "type": "Enum", "url": "", "description": "Currency from SGD."}, {"name": "CURRENCY_THB", "type": "Enum", "url": "", "description": "Currency from THB."}, {"name": "CURRENCY_TRY", "type": "Enum", "url": "", "description": "Currency from TRY."}, {"name": "CURRENCY_TWD", "type": "Enum", "url": "", "description": "Currency from TWD."}, {"name": "CURRENCY_TZS", "type": "Enum", "url": "", "description": "Currency from TZS."}, {"name": "CURRENCY_UAH", "type": "Enum", "url": "", "description": "Currency from UAH."}, {"name": "CURRENCY_USD", "type": "Enum", "url": "", "description": "Currency from USD."}, {"name": "CURRENCY_UYU", "type": "Enum", "url": "", "description": "Currency from UYU."}, {"name": "CURRENCY_VEF", "type": "Enum", "url": "", "description": "Currency from VEF."}, {"name": "CURRENCY_VND", "type": "Enum", "url": "", "description": "Currency from VND."}, {"name": "CURRENCY_YER", "type": "Enum", "url": "", "description": "Currency from YER."}, {"name": "CURRENCY_ZAR", "type": "Enum", "url": "", "description": "Currency from ZAR."}]},
{"url": "https://developers.google.com/apps-script/reference/document/bookmark", "name": "Bookmark", "type": "class", "methods": [{"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the Bookmark."}, {"name": "getPosition", "parameters": [], "result": "Position", "description": "Gets the Position of the Bookmark within the Document."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes the Bookmark."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/body", "name": "Body", "type": "class", "methods": [{"name": "appendHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Creates and appends a new HorizontalRule."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and appends a new InlineImage from the specified image blob."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Appends the given InlineImage."}, {"name": "appendListItem", "parameters": [{"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Appends the given ListItem."}, {"name": "appendListItem", "parameters": [{"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and appends a new ListItem containing the specified text contents."}, {"name": "appendPageBreak", "parameters": [], "result": "PageBreak", "description": "Creates and appends a new PageBreak."}, {"name": "appendPageBreak", "parameters": [{"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Appends the given PageBreak."}, {"name": "appendParagraph", "parameters": [{"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Appends the given Paragraph."}, {"name": "appendParagraph", "parameters": [{"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and appends a new Paragraph containing the specified text contents."}, {"name": "appendTable", "parameters": [], "result": "Table", "description": "Creates and appends a new Table."}, {"name": "appendTable", "parameters": [{"name": "cells", "type": "String"}], "result": "Table", "description": "Appends a new Table containing a TableCell for each specified string value."}, {"name": "appendTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Appends the given Table."}, {"name": "clear", "parameters": [], "result": "Body", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "Body", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getHeadingAttributes", "parameters": [{"name": "paragraphHeading", "type": "ParagraphHeading"}], "result": "Object", "description": "Retrieves the set of attributes for the provided ParagraphHeading."}, {"name": "getImages", "parameters": [], "result": "InlineImage[]", "description": "Retrieves all the InlineImages contained in the section."}, {"name": "getListItems", "parameters": [], "result": "ListItem[]", "description": "Retrieves all the ListItems contained in the section."}, {"name": "getMarginBottom", "parameters": [], "result": "Number", "description": "Retrieves the bottom margin, in points."}, {"name": "getMarginLeft", "parameters": [], "result": "Number", "description": "Retrieves the left margin, in points."}, {"name": "getMarginRight", "parameters": [], "result": "Number", "description": "Retrieves the right margin."}, {"name": "getMarginTop", "parameters": [], "result": "Number", "description": "Retrieves the top margin."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getPageHeight", "parameters": [], "result": "Number", "description": "Retrieves the page height, in points."}, {"name": "getPageWidth", "parameters": [], "result": "Number", "description": "Retrieves the page width, in points."}, {"name": "getParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Retrieves all the Paragraphs contained in the section (including ListItems)."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Retrieves all the Tables contained in the section."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertHorizontalRule", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "HorizontalRule", "description": "Creates and inserts a new HorizontalRule at the specified index."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts an InlineImage from the specified image blob, at the specified\nindex."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Inserts the given InlineImage at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Inserts the given ListItem at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and inserts a new ListItem at the specified index, containing the specified\ntext contents."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "PageBreak", "description": "Creates and inserts a new PageBreak at the specified index."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Inserts the given PageBreak at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Inserts the given Paragraph at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and inserts a new Paragraph at the specified index, containing the specified\ntext contents."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Table", "description": "Creates and inserts a new Table at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "cells", "type": "String"}], "result": "Table", "description": "Creates and inserts a new Table containing the specified cells, at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts the given Table at the specified index."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "Body", "description": "Removes the specified child element."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Body", "description": "Sets the element's attributes."}, {"name": "setHeadingAttributes", "parameters": [{"name": "paragraphHeading", "type": "ParagraphHeading"}, {"name": "attributes", "type": "Object"}], "result": "Body", "description": "Sets the attributes for the provided ParagraphHeading."}, {"name": "setMarginBottom", "parameters": [{"name": "marginBottom", "type": "Number"}], "result": "Body", "description": "Sets the bottom margin, in points."}, {"name": "setMarginLeft", "parameters": [{"name": "marginLeft", "type": "Number"}], "result": "Body", "description": "Sets the left margin, in points."}, {"name": "setMarginRight", "parameters": [{"name": "marginRight", "type": "Number"}], "result": "Body", "description": "Sets the right margin, in points."}, {"name": "setMarginTop", "parameters": [{"name": "marginTop", "type": "Number"}], "result": "Body", "description": "Sets the top margin."}, {"name": "setPageHeight", "parameters": [{"name": "pageHeight", "type": "Number"}], "result": "Body", "description": "Sets the page height, in points."}, {"name": "setPageWidth", "parameters": [{"name": "pageWidth", "type": "Number"}], "result": "Body", "description": "Sets the page width, in points."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Body", "description": "Sets the contents as plain text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "Body", "description": "Sets the text alignment."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document/document-app", "name": "DocumentApp", "type": "class", "methods": [{"name": "create", "parameters": [{"name": "name", "type": "String"}], "result": "Document", "description": "Creates and returns a new document."}, {"name": "getActiveDocument", "parameters": [], "result": "Document", "description": "Returns the document to which the script is container-bound."}, {"name": "getUi", "parameters": [], "result": "Ui", "description": "Returns an instance of the document's user-interface environment that allows the script to add\nfeatures like menus, dialogs, and sidebars."}, {"name": "openById", "parameters": [{"name": "id", "type": "String"}], "result": "Document", "description": "Returns the document with the specified ID."}, {"name": "openByUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Document", "description": "Opens and returns the document with the specified URL."}], "properties": [{"name": "Attribute", "type": "Attribute", "url": "/apps-script/reference/document/attribute", "description": "The Attribute enumeration."}, {"name": "ElementType", "type": "ElementType", "url": "/apps-script/reference/document/element-type", "description": "The ElementType enumeration."}, {"name": "FontFamily", "type": "FontFamily", "url": "/apps-script/reference/document/font-family", "description": "The FontFamily enumeration."}, {"name": "GlyphType", "type": "GlyphType", "url": "/apps-script/reference/document/glyph-type", "description": "The GlyphType enumeration."}, {"name": "HorizontalAlignment", "type": "HorizontalAlignment", "url": "/apps-script/reference/document/horizontal-alignment", "description": "The HorizontalAlignment enumeration."}, {"name": "ParagraphHeading", "type": "ParagraphHeading", "url": "/apps-script/reference/document/paragraph-heading", "description": "The ParagraphHeading enumeration."}, {"name": "PositionedLayout", "type": "PositionedLayout", "url": "/apps-script/reference/document/positioned-layout", "description": "The PositionedLayout enumeration."}, {"name": "TextAlignment", "type": "TextAlignment", "url": "/apps-script/reference/document/text-alignment", "description": "The TextAlignment enumeration."}, {"name": "VerticalAlignment", "type": "VerticalAlignment", "url": "/apps-script/reference/document/vertical-alignment", "description": "The VerticalAlignment enumeration."}]},
{"url": "https://developers.google.com/apps-script/reference/data-studio/big-query-parameter-type", "name": "BigQueryParameterType", "type": "enum", "methods": [], "properties": [{"name": "STRING", "type": "Enum", "url": "", "description": "String."}, {"name": "INT64", "type": "Enum", "url": "", "description": "64-bit integer."}, {"name": "BOOL", "type": "Enum", "url": "", "description": "Boolean."}, {"name": "FLOAT64", "type": "Enum", "url": "", "description": "64-bit floating point number."}]},
{"url": "https://developers.google.com/apps-script/reference/data-studio/aggregation-type", "name": "AggregationType", "type": "enum", "methods": [], "properties": [{"name": "AVG", "type": "Enum", "url": "", "description": "Average."}, {"name": "COUNT", "type": "Enum", "url": "", "description": "Count."}, {"name": "COUNT_DISTINCT", "type": "Enum", "url": "", "description": "Count Distinct."}, {"name": "MAX", "type": "Enum", "url": "", "description": "Max."}, {"name": "MIN", "type": "Enum", "url": "", "description": "Min."}, {"name": "SUM", "type": "Enum", "url": "", "description": "Sum."}, {"name": "AUTO", "type": "Enum", "url": "", "description": "Auto. Use Auto for calculated fields which reference an aggregated field."}, {"name": "NO_AGGREGATION", "type": "Enum", "url": "", "description": "DEPRECATED: Use AUTO instead. No aggregation."}]},
{"url": "https://developers.google.com/apps-script/reference/data-studio/user-error", "name": "UserError", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setDebugText", "parameters": [{"name": "text", "type": "String"}], "result": "UserError", "description": "Sets the text of the debug error, which is only shown to admins."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "UserError", "description": "Sets the text of the user error."}, {"name": "throwException", "parameters": [], "result": "void", "description": "Triggers this exception to be thrown."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/auth-type", "name": "AuthType", "type": "enum", "methods": [], "properties": [{"name": "NONE", "type": "Enum", "url": "", "description": "No authorization needed."}, {"name": "OAUTH2", "type": "Enum", "url": "", "description": "OAuth2 authorization needed."}, {"name": "USER_PASS", "type": "Enum", "url": "", "description": "Username and password credentials needed."}, {"name": "PATH_USER_PASS", "type": "Enum", "url": "", "description": "Username, path, and password needed."}, {"name": "KEY", "type": "Enum", "url": "", "description": "API Key or Token needed."}, {"name": "USER_TOKEN", "type": "Enum", "url": "", "description": "Username and token needed."}]},
{"url": "https://developers.google.com/apps-script/reference/data-studio/text-input", "name": "TextInput", "type": "class", "methods": [{"name": "setAllowOverride", "parameters": [{"name": "allowOverride", "type": "Boolean"}], "result": "TextInput", "description": "Enables overriding for this config entry."}, {"name": "setHelpText", "parameters": [{"name": "helpText", "type": "String"}], "result": "TextInput", "description": "Sets the help text for this configuration entry."}, {"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "TextInput", "description": "Sets the unique ID for this configuration entry."}, {"name": "setIsDynamic", "parameters": [{"name": "isDynamic", "type": "Boolean"}], "result": "TextInput", "description": "Sets the dynamic status for this configuration entry."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "TextInput", "description": "Sets the display name for this configuration entry."}, {"name": "setPlaceholder", "parameters": [{"name": "placeholder", "type": "String"}], "result": "TextInput", "description": "Sets the placeholder text for this configuration entry."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/text-area", "name": "TextArea", "type": "class", "methods": [{"name": "setAllowOverride", "parameters": [{"name": "allowOverride", "type": "Boolean"}], "result": "TextArea", "description": "Enables overriding for this config entry."}, {"name": "setHelpText", "parameters": [{"name": "helpText", "type": "String"}], "result": "TextArea", "description": "Sets the help text for this configuration entry."}, {"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "TextArea", "description": "Sets the unique ID for this configuration entry."}, {"name": "setIsDynamic", "parameters": [{"name": "isDynamic", "type": "Boolean"}], "result": "TextArea", "description": "Sets the dynamic status for this configuration entry."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "TextArea", "description": "Sets the display name for this configuration entry."}, {"name": "setPlaceholder", "parameters": [{"name": "placeholder", "type": "String"}], "result": "TextArea", "description": "Sets the placeholder text for this configuration entry."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/document", "name": "Document", "type": "document", "methods": [{"name": "appendHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Creates and appends a new HorizontalRule."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and appends a new InlineImage from the specified image blob."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Appends the given InlineImage."}, {"name": "appendListItem", "parameters": [{"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Appends the given ListItem."}, {"name": "appendListItem", "parameters": [{"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and appends a new ListItem containing the specified text contents."}, {"name": "appendPageBreak", "parameters": [], "result": "PageBreak", "description": "Creates and appends a new PageBreak."}, {"name": "appendPageBreak", "parameters": [{"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Appends the given PageBreak."}, {"name": "appendParagraph", "parameters": [{"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Appends the given Paragraph."}, {"name": "appendParagraph", "parameters": [{"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and appends a new Paragraph containing the specified text contents."}, {"name": "appendTable", "parameters": [], "result": "Table", "description": "Creates and appends a new Table."}, {"name": "appendTable", "parameters": [{"name": "cells", "type": "String"}], "result": "Table", "description": "Appends a new Table containing a TableCell for each specified string value."}, {"name": "appendTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Appends the given Table."}, {"name": "clear", "parameters": [], "result": "Body", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "Body", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getHeadingAttributes", "parameters": [{"name": "paragraphHeading", "type": "ParagraphHeading"}], "result": "Object", "description": "Retrieves the set of attributes for the provided ParagraphHeading."}, {"name": "getImages", "parameters": [], "result": "InlineImage[]", "description": "Retrieves all the InlineImages contained in the section."}, {"name": "getListItems", "parameters": [], "result": "ListItem[]", "description": "Retrieves all the ListItems contained in the section."}, {"name": "getMarginBottom", "parameters": [], "result": "Number", "description": "Retrieves the bottom margin, in points."}, {"name": "getMarginLeft", "parameters": [], "result": "Number", "description": "Retrieves the left margin, in points."}, {"name": "getMarginRight", "parameters": [], "result": "Number", "description": "Retrieves the right margin."}, {"name": "getMarginTop", "parameters": [], "result": "Number", "description": "Retrieves the top margin."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getPageHeight", "parameters": [], "result": "Number", "description": "Retrieves the page height, in points."}, {"name": "getPageWidth", "parameters": [], "result": "Number", "description": "Retrieves the page width, in points."}, {"name": "getParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Retrieves all the Paragraphs contained in the section (including ListItems)."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Retrieves all the Tables contained in the section."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertHorizontalRule", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "HorizontalRule", "description": "Creates and inserts a new HorizontalRule at the specified index."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts an InlineImage from the specified image blob, at the specified\nindex."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Inserts the given InlineImage at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Inserts the given ListItem at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and inserts a new ListItem at the specified index, containing the specified\ntext contents."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "PageBreak", "description": "Creates and inserts a new PageBreak at the specified index."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Inserts the given PageBreak at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Inserts the given Paragraph at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and inserts a new Paragraph at the specified index, containing the specified\ntext contents."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Table", "description": "Creates and inserts a new Table at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "cells", "type": "String"}], "result": "Table", "description": "Creates and inserts a new Table containing the specified cells, at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts the given Table at the specified index."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "Body", "description": "Removes the specified child element."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Body", "description": "Sets the element's attributes."}, {"name": "setHeadingAttributes", "parameters": [{"name": "paragraphHeading", "type": "ParagraphHeading"}, {"name": "attributes", "type": "Object"}], "result": "Body", "description": "Sets the attributes for the provided ParagraphHeading."}, {"name": "setMarginBottom", "parameters": [{"name": "marginBottom", "type": "Number"}], "result": "Body", "description": "Sets the bottom margin, in points."}, {"name": "setMarginLeft", "parameters": [{"name": "marginLeft", "type": "Number"}], "result": "Body", "description": "Sets the left margin, in points."}, {"name": "setMarginRight", "parameters": [{"name": "marginRight", "type": "Number"}], "result": "Body", "description": "Sets the right margin, in points."}, {"name": "setMarginTop", "parameters": [{"name": "marginTop", "type": "Number"}], "result": "Body", "description": "Sets the top margin."}, {"name": "setPageHeight", "parameters": [{"name": "pageHeight", "type": "Number"}], "result": "Body", "description": "Sets the page height, in points."}, {"name": "setPageWidth", "parameters": [{"name": "pageWidth", "type": "Number"}], "result": "Body", "description": "Sets the page width, in points."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Body", "description": "Sets the contents as plain text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "Body", "description": "Sets the text alignment."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the Bookmark."}, {"name": "getPosition", "parameters": [], "result": "Position", "description": "Gets the Position of the Bookmark within the Document."}, {"name": "remove", "parameters": [], "result": "void", "description": "Deletes the Bookmark."}, {"name": "asBody", "parameters": [], "result": "Body", "description": "Returns the current element as a Body."}, {"name": "asEquation", "parameters": [], "result": "Equation", "description": "Returns the current element as a Equation."}, {"name": "asFooterSection", "parameters": [], "result": "FooterSection", "description": "Returns the current element as a FooterSection."}, {"name": "asFootnoteSection", "parameters": [], "result": "FootnoteSection", "description": "Returns the current element as a FootnoteSection."}, {"name": "asHeaderSection", "parameters": [], "result": "HeaderSection", "description": "Returns the current element as a HeaderSection."}, {"name": "asListItem", "parameters": [], "result": "ListItem", "description": "Returns the current element as a ListItem."}, {"name": "asParagraph", "parameters": [], "result": "Paragraph", "description": "Returns the current element as a Paragraph."}, {"name": "asTable", "parameters": [], "result": "Table", "description": "Returns the current element as a Table."}, {"name": "asTableCell", "parameters": [], "result": "TableCell", "description": "Returns the current element as a TableCell."}, {"name": "asTableOfContents", "parameters": [], "result": "TableOfContents", "description": "Returns the current element as a TableOfContents."}, {"name": "asTableRow", "parameters": [], "result": "TableRow", "description": "Returns the current element as a TableRow."}, {"name": "clear", "parameters": [], "result": "ContainerElement", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "ContainerElement", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "ContainerElement", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "ContainerElement", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "ContainerElement", "description": "Sets the element's attributes."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "ContainerElement", "description": "Sets the link url."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "ContainerElement", "description": "Sets the text alignment."}, {"name": "addBookmark", "parameters": [{"name": "position", "type": "Position"}], "result": "Bookmark", "description": "Adds a Bookmark at the given Position."}, {"name": "addEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Document", "description": "Adds the given user to the list of editors for the Document."}, {"name": "addEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Document", "description": "Adds the given user to the list of editors for the Document."}, {"name": "addEditors", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Document", "description": "Adds the given array of users to the list of editors for the Document."}, {"name": "addFooter", "parameters": [], "result": "FooterSection", "description": "Adds a document footer section, if none exists."}, {"name": "addHeader", "parameters": [], "result": "HeaderSection", "description": "Adds a document header section, if none exists."}, {"name": "addNamedRange", "parameters": [{"name": "name", "type": "String"}, {"name": "range", "type": "Range"}], "result": "NamedRange", "description": "Adds a new NamedRange, which is a Range that has a name and ID to allow\nlater retrieval."}, {"name": "addViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Document", "description": "Adds the given user to the list of viewers for the Document."}, {"name": "addViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Document", "description": "Adds the given user to the list of viewers for the Document."}, {"name": "addViewers", "parameters": [{"name": "emailAddresses", "type": "String"}], "result": "Document", "description": "Adds the given array of users to the list of viewers for the Document."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Retrieves the current Document contents as a blob of the specified type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Retrieves the current Document contents as a blob."}, {"name": "getBody", "parameters": [], "result": "Body", "description": "Retrieves the active document's Body."}, {"name": "getBookmark", "parameters": [{"name": "id", "type": "String"}], "result": "Bookmark", "description": "Gets the Bookmark with the given ID."}, {"name": "getBookmarks", "parameters": [], "result": "Bookmark[]", "description": "Gets all Bookmark objects in the document."}, {"name": "getCursor", "parameters": [], "result": "Position", "description": "Gets the user's cursor in the active document."}, {"name": "getEditors", "parameters": [], "result": "User[]", "description": "Gets the list of editors for this Document."}, {"name": "getFooter", "parameters": [], "result": "FooterSection", "description": "Retrieves the document's footer section, if one exists."}, {"name": "getFootnotes", "parameters": [], "result": "Footnote[]", "description": "Retrieves all the Footnote elements in the document body."}, {"name": "getHeader", "parameters": [], "result": "HeaderSection", "description": "Retrieves the document's header section, if one exists."}, {"name": "getId", "parameters": [], "result": "String", "description": "Retrieves the document's unique identifier."}, {"name": "getLanguage", "parameters": [], "result": "String", "description": "Gets the document's language code."}, {"name": "getName", "parameters": [], "result": "String", "description": "Retrieves the title of the document."}, {"name": "getNamedRangeById", "parameters": [{"name": "id", "type": "String"}], "result": "NamedRange", "description": "Gets the NamedRange with the given ID."}, {"name": "getNamedRanges", "parameters": [], "result": "NamedRange[]", "description": "Gets all NamedRange objects in the document."}, {"name": "getNamedRanges", "parameters": [{"name": "name", "type": "String"}], "result": "NamedRange[]", "description": "Gets all NamedRange objects in the document with the given name."}, {"name": "getSelection", "parameters": [], "result": "Range", "description": "Gets the user's selection in the active document."}, {"name": "getSupportedLanguageCodes", "parameters": [], "result": "String[]", "description": "Gets all language codes that are supported in Google Docs files."}, {"name": "getUrl", "parameters": [], "result": "String", "description": "Retrieves the URL to access the current document."}, {"name": "getViewers", "parameters": [], "result": "User[]", "description": "Gets the list of viewers and commenters for this Document."}, {"name": "newPosition", "parameters": [{"name": "element", "type": "Element"}, {"name": "offset", "type": "Integer"}], "result": "Position", "description": "Creates a new Position, which is a reference to a location in the document, relative to\na specific element."}, {"name": "newRange", "parameters": [], "result": "RangeBuilder", "description": "Creates a builder used to construct Range objects from document elements."}, {"name": "removeEditor", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Document", "description": "Removes the given user from the list of editors for the Document."}, {"name": "removeEditor", "parameters": [{"name": "user", "type": "User"}], "result": "Document", "description": "Removes the given user from the list of editors for the Document."}, {"name": "removeViewer", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Document", "description": "Removes the given user from the list of viewers and commenters for the Document."}, {"name": "removeViewer", "parameters": [{"name": "user", "type": "User"}], "result": "Document", "description": "Removes the given user from the list of viewers and commenters for the Document."}, {"name": "saveAndClose", "parameters": [], "result": "void", "description": "Saves the current Document."}, {"name": "setCursor", "parameters": [{"name": "position", "type": "Position"}], "result": "Document", "description": "Sets the user's cursor in the active document, given a Position."}, {"name": "setLanguage", "parameters": [{"name": "languageCode", "type": "String"}], "result": "Document", "description": "Sets the document's language code."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Document", "description": "Sets the document title."}, {"name": "setSelection", "parameters": [{"name": "range", "type": "Range"}], "result": "Document", "description": "Sets the user's selection in the active document, given a Range."}, {"name": "create", "parameters": [{"name": "name", "type": "String"}], "result": "Document", "description": "Creates and returns a new document."}, {"name": "getActiveDocument", "parameters": [], "result": "Document", "description": "Returns the document to which the script is container-bound."}, {"name": "getUi", "parameters": [], "result": "Ui", "description": "Returns an instance of the document's user-interface environment that allows the script to add\nfeatures like menus, dialogs, and sidebars."}, {"name": "openById", "parameters": [{"name": "id", "type": "String"}], "result": "Document", "description": "Returns the document with the specified ID."}, {"name": "openByUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Document", "description": "Opens and returns the document with the specified URL."}, {"name": "asBody", "parameters": [], "result": "Body", "description": "Returns the current element as a Body."}, {"name": "asEquation", "parameters": [], "result": "Equation", "description": "Returns the current element as a Equation."}, {"name": "asEquationFunction", "parameters": [], "result": "EquationFunction", "description": "Returns the current element as a EquationFunction."}, {"name": "asEquationFunctionArgumentSeparator", "parameters": [], "result": "EquationFunctionArgumentSeparator", "description": "Returns the current element as a EquationFunctionArgumentSeparator."}, {"name": "asEquationSymbol", "parameters": [], "result": "EquationSymbol", "description": "Returns the current element as a EquationSymbol."}, {"name": "asFooterSection", "parameters": [], "result": "FooterSection", "description": "Returns the current element as a FooterSection."}, {"name": "asFootnote", "parameters": [], "result": "Footnote", "description": "Returns the current element as a Footnote."}, {"name": "asFootnoteSection", "parameters": [], "result": "FootnoteSection", "description": "Returns the current element as a FootnoteSection."}, {"name": "asHeaderSection", "parameters": [], "result": "HeaderSection", "description": "Returns the current element as a HeaderSection."}, {"name": "asHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Returns the current element as a HorizontalRule."}, {"name": "asInlineDrawing", "parameters": [], "result": "InlineDrawing", "description": "Returns the current element as a InlineDrawing."}, {"name": "asInlineImage", "parameters": [], "result": "InlineImage", "description": "Returns the current element as a InlineImage."}, {"name": "asListItem", "parameters": [], "result": "ListItem", "description": "Returns the current element as a ListItem."}, {"name": "asPageBreak", "parameters": [], "result": "PageBreak", "description": "Returns the current element as a PageBreak."}, {"name": "asParagraph", "parameters": [], "result": "Paragraph", "description": "Returns the current element as a Paragraph."}, {"name": "asTable", "parameters": [], "result": "Table", "description": "Returns the current element as a Table."}, {"name": "asTableCell", "parameters": [], "result": "TableCell", "description": "Returns the current element as a TableCell."}, {"name": "asTableOfContents", "parameters": [], "result": "TableOfContents", "description": "Returns the current element as a TableOfContents."}, {"name": "asTableRow", "parameters": [], "result": "TableRow", "description": "Returns the current element as a TableRow."}, {"name": "asText", "parameters": [], "result": "Text", "description": "Returns the current element as a Text."}, {"name": "copy", "parameters": [], "result": "Element", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "Element", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "Element", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Element", "description": "Sets the element's attributes."}, {"name": "clear", "parameters": [], "result": "Equation", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "Equation", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "Equation", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "Equation", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Equation", "description": "Sets the element's attributes."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Equation", "description": "Sets the link url."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "Equation", "description": "Sets the text alignment."}, {"name": "clear", "parameters": [], "result": "EquationFunction", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "EquationFunction", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getCode", "parameters": [], "result": "String", "description": "Retrieves the code corresponding to the equation function."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "EquationFunction", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "EquationFunction", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "EquationFunction", "description": "Sets the element's attributes."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "EquationFunction", "description": "Sets the link url."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "EquationFunction", "description": "Sets the text alignment."}, {"name": "copy", "parameters": [], "result": "EquationFunctionArgumentSeparator", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "EquationFunctionArgumentSeparator", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "EquationFunctionArgumentSeparator", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "EquationFunctionArgumentSeparator", "description": "Sets the element's attributes."}, {"name": "copy", "parameters": [], "result": "EquationSymbol", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getCode", "parameters": [], "result": "String", "description": "Retrieves the code corresponding to the equation symbol."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "EquationSymbol", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "EquationSymbol", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "EquationSymbol", "description": "Sets the element's attributes."}, {"name": "appendHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Creates and appends a new HorizontalRule."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and appends a new InlineImage from the specified image blob."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Appends the given InlineImage."}, {"name": "appendListItem", "parameters": [{"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Appends the given ListItem."}, {"name": "appendListItem", "parameters": [{"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and appends a new ListItem containing the specified text contents."}, {"name": "appendParagraph", "parameters": [{"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Appends the given Paragraph."}, {"name": "appendParagraph", "parameters": [{"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and appends a new Paragraph containing the specified text contents."}, {"name": "appendTable", "parameters": [], "result": "Table", "description": "Creates and appends a new Table."}, {"name": "appendTable", "parameters": [{"name": "cells", "type": "String"}], "result": "Table", "description": "Appends a new Table containing a TableCell for each specified string value."}, {"name": "appendTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Appends the given Table."}, {"name": "clear", "parameters": [], "result": "FooterSection", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "FooterSection", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getImages", "parameters": [], "result": "InlineImage[]", "description": "Retrieves all the InlineImages contained in the section."}, {"name": "getListItems", "parameters": [], "result": "ListItem[]", "description": "Retrieves all the ListItems contained in the section."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Retrieves all the Paragraphs contained in the section (including ListItems)."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Retrieves all the Tables contained in the section."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertHorizontalRule", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "HorizontalRule", "description": "Creates and inserts a new HorizontalRule at the specified index."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts an InlineImage from the specified image blob, at the specified\nindex."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Inserts the given InlineImage at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Inserts the given ListItem at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and inserts a new ListItem at the specified index, containing the specified\ntext contents."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Inserts the given Paragraph at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and inserts a new Paragraph at the specified index, containing the specified\ntext contents."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Table", "description": "Creates and inserts a new Table at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "cells", "type": "String"}], "result": "Table", "description": "Creates and inserts a new Table containing the specified cells, at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts the given Table at the specified index."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "FooterSection", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "FooterSection", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "FooterSection", "description": "Sets the element's attributes."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "FooterSection", "description": "Sets the contents as plain text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "FooterSection", "description": "Sets the text alignment."}, {"name": "copy", "parameters": [], "result": "Footnote", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getFootnoteContents", "parameters": [], "result": "FootnoteSection", "description": "Retrieves the contents of the footnote element."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "removeFromParent", "parameters": [], "result": "Footnote", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Footnote", "description": "Sets the element's attributes."}, {"name": "appendParagraph", "parameters": [{"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Appends the given Paragraph."}, {"name": "appendParagraph", "parameters": [{"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and appends a new Paragraph containing the specified text contents."}, {"name": "clear", "parameters": [], "result": "FootnoteSection", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "FootnoteSection", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Retrieves all the Paragraphs contained in the section (including ListItems)."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Inserts the given Paragraph at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and inserts a new Paragraph at the specified index, containing the specified\ntext contents."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "FootnoteSection", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "FootnoteSection", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "FootnoteSection", "description": "Sets the element's attributes."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "FootnoteSection", "description": "Sets the contents as plain text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "FootnoteSection", "description": "Sets the text alignment."}, {"name": "appendHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Creates and appends a new HorizontalRule."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and appends a new InlineImage from the specified image blob."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Appends the given InlineImage."}, {"name": "appendListItem", "parameters": [{"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Appends the given ListItem."}, {"name": "appendListItem", "parameters": [{"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and appends a new ListItem containing the specified text contents."}, {"name": "appendParagraph", "parameters": [{"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Appends the given Paragraph."}, {"name": "appendParagraph", "parameters": [{"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and appends a new Paragraph containing the specified text contents."}, {"name": "appendTable", "parameters": [], "result": "Table", "description": "Creates and appends a new Table."}, {"name": "appendTable", "parameters": [{"name": "cells", "type": "String"}], "result": "Table", "description": "Appends a new Table containing a TableCell for each specified string value."}, {"name": "appendTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Appends the given Table."}, {"name": "clear", "parameters": [], "result": "HeaderSection", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "HeaderSection", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getImages", "parameters": [], "result": "InlineImage[]", "description": "Retrieves all the InlineImages contained in the section."}, {"name": "getListItems", "parameters": [], "result": "ListItem[]", "description": "Retrieves all the ListItems contained in the section."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParagraphs", "parameters": [], "result": "Paragraph[]", "description": "Retrieves all the Paragraphs contained in the section (including ListItems)."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getTables", "parameters": [], "result": "Table[]", "description": "Retrieves all the Tables contained in the section."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertHorizontalRule", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "HorizontalRule", "description": "Creates and inserts a new HorizontalRule at the specified index."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts an InlineImage from the specified image blob, at the specified\nindex."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Inserts the given InlineImage at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Inserts the given ListItem at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and inserts a new ListItem at the specified index, containing the specified\ntext contents."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Inserts the given Paragraph at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and inserts a new Paragraph at the specified index, containing the specified\ntext contents."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Table", "description": "Creates and inserts a new Table at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "cells", "type": "String"}], "result": "Table", "description": "Creates and inserts a new Table containing the specified cells, at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts the given Table at the specified index."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "HeaderSection", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "HeaderSection", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "HeaderSection", "description": "Sets the element's attributes."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "HeaderSection", "description": "Sets the contents as plain text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "HeaderSection", "description": "Sets the text alignment."}, {"name": "copy", "parameters": [], "result": "HorizontalRule", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "removeFromParent", "parameters": [], "result": "HorizontalRule", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "HorizontalRule", "description": "Sets the element's attributes."}, {"name": "copy", "parameters": [], "result": "InlineDrawing", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAltDescription", "parameters": [], "result": "String", "description": "Returns the drawing's alternate description."}, {"name": "getAltTitle", "parameters": [], "result": "String", "description": "Returns the drawing's alternate title."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "InlineDrawing", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "InlineDrawing", "description": "Removes the element from its parent."}, {"name": "setAltDescription", "parameters": [{"name": "description", "type": "String"}], "result": "InlineDrawing", "description": "Sets the drawing's alternate description."}, {"name": "setAltTitle", "parameters": [{"name": "title", "type": "String"}], "result": "InlineDrawing", "description": "Sets the drawing's alternate title."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "InlineDrawing", "description": "Sets the element's attributes."}, {"name": "copy", "parameters": [], "result": "InlineImage", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAltDescription", "parameters": [], "result": "String", "description": "Returns the image's alternate description."}, {"name": "getAltTitle", "parameters": [], "result": "String", "description": "Returns the image's alternate title."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Retrieves the image's height, in pixels."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link URL."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Retrieves the image's width, in pixels."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "InlineImage", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "InlineImage", "description": "Removes the element from its parent."}, {"name": "setAltDescription", "parameters": [{"name": "description", "type": "String"}], "result": "InlineImage", "description": "Sets the image's alternate description."}, {"name": "setAltTitle", "parameters": [{"name": "title", "type": "String"}], "result": "InlineImage", "description": "Sets the image's alternate title."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "InlineImage", "description": "Sets the element's attributes."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Integer"}], "result": "InlineImage", "description": "Sets the image's height, in pixels."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "InlineImage", "description": "Sets the link URL."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "InlineImage", "description": "Sets the image's width, in pixels."}, {"name": "addPositionedImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "PositionedImage", "description": "Creates and inserts a new PositionedImage from the specified image blob."}, {"name": "appendHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Creates and appends a new HorizontalRule."}, {"name": "appendInlineImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and appends a new InlineImage from the specified image blob."}, {"name": "appendInlineImage", "parameters": [{"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Appends the given InlineImage."}, {"name": "appendPageBreak", "parameters": [], "result": "PageBreak", "description": "Creates and appends a new PageBreak."}, {"name": "appendPageBreak", "parameters": [{"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Appends the given PageBreak."}, {"name": "appendText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Creates and appends a new Text element with the specified contents."}, {"name": "appendText", "parameters": [{"name": "text", "type": "Text"}], "result": "Text", "description": "Appends the given Text element."}, {"name": "clear", "parameters": [], "result": "ListItem", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "ListItem", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAlignment", "parameters": [], "result": "HorizontalAlignment", "description": "Retrieves the HorizontalAlignment."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getGlyphType", "parameters": [], "result": "GlyphType", "description": "Retrieves the list item's GlyphType."}, {"name": "getHeading", "parameters": [], "result": "ParagraphHeading", "description": "Retrieves the ParagraphHeading."}, {"name": "getIndentEnd", "parameters": [], "result": "Number", "description": "Retrieves the end indentation, in points."}, {"name": "getIndentFirstLine", "parameters": [], "result": "Number", "description": "Retrieves the first line indentation, in points."}, {"name": "getIndentStart", "parameters": [], "result": "Number", "description": "Retrieves the start indentation."}, {"name": "getLineSpacing", "parameters": [], "result": "Number", "description": "Retrieves the line spacing, in points."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getListId", "parameters": [], "result": "String", "description": "Retrieves the list ID."}, {"name": "getNestingLevel", "parameters": [], "result": "Integer", "description": "Retrieves the list item's nesting level."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPositionedImage", "parameters": [{"name": "id", "type": "String"}], "result": "PositionedImage", "description": "Gets a PositionedImage by the image's ID."}, {"name": "getPositionedImages", "parameters": [], "result": "PositionedImage[]", "description": "Gets all PositionedImage objects anchored to the paragraph."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getSpacingAfter", "parameters": [], "result": "Number", "description": "Retrieves the spacing after the element, in points."}, {"name": "getSpacingBefore", "parameters": [], "result": "Number", "description": "Retrieves the spacing before the element, in points."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertHorizontalRule", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "HorizontalRule", "description": "Creates and inserts a HorizontalRule at the specified index."}, {"name": "insertInlineImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts a new InlineImage from the specified image blob, at the specified\nindex."}, {"name": "insertInlineImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Inserts the given InlineImage at the specified index."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "PageBreak", "description": "Creates and inserts a new PageBreak at the specified index."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Inserts the given PageBreak at the specified index."}, {"name": "insertText", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Text", "description": "Creates and inserts a new text element at the specified index."}, {"name": "insertText", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "Text"}], "result": "Text", "description": "Inserts the given Text element at the specified index, with the specified text\ncontents."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "isLeftToRight", "parameters": [], "result": "Boolean", "description": "Retrieves the left-to-right setting."}, {"name": "merge", "parameters": [], "result": "ListItem", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "ListItem", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "ListItem", "description": "Removes the element from its parent."}, {"name": "removePositionedImage", "parameters": [{"name": "id", "type": "String"}], "result": "Boolean", "description": "Removes a PositionedImage by the image's ID."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAlignment", "parameters": [{"name": "alignment", "type": "HorizontalAlignment"}], "result": "ListItem", "description": "Sets the HorizontalAlignment."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "ListItem", "description": "Sets the element's attributes."}, {"name": "setGlyphType", "parameters": [{"name": "glyphType", "type": "GlyphType"}], "result": "ListItem", "description": "Sets the list item's GlyphType."}, {"name": "setHeading", "parameters": [{"name": "heading", "type": "ParagraphHeading"}], "result": "ListItem", "description": "Sets the ParagraphHeading."}, {"name": "setIndentEnd", "parameters": [{"name": "indentEnd", "type": "Number"}], "result": "ListItem", "description": "Sets the end indentation, in points."}, {"name": "setIndentFirstLine", "parameters": [{"name": "indentFirstLine", "type": "Number"}], "result": "ListItem", "description": "Sets the first line indentation, in points."}, {"name": "setIndentStart", "parameters": [{"name": "indentStart", "type": "Number"}], "result": "ListItem", "description": "Sets the start indentation, in points."}, {"name": "setLeftToRight", "parameters": [{"name": "leftToRight", "type": "Boolean"}], "result": "ListItem", "description": "Sets the left-to-right setting."}, {"name": "setLineSpacing", "parameters": [{"name": "multiplier", "type": "Number"}], "result": "ListItem", "description": "Sets the line spacing, as a quantity indicating the number of lines to use for spacing."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "ListItem", "description": "Sets the link url."}, {"name": "setListId", "parameters": [{"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Sets the list ID."}, {"name": "setNestingLevel", "parameters": [{"name": "nestingLevel", "type": "Integer"}], "result": "ListItem", "description": "Sets the list item's nesting level."}, {"name": "setSpacingAfter", "parameters": [{"name": "spacingAfter", "type": "Number"}], "result": "ListItem", "description": "Sets the spacing after the element, in points."}, {"name": "setSpacingBefore", "parameters": [{"name": "spacingBefore", "type": "Number"}], "result": "ListItem", "description": "Sets the spacing before the element, in points."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "void", "description": "Sets the contents of the list item as text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "ListItem", "description": "Sets the text alignment."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of this NamedRange."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this NamedRange."}, {"name": "getRange", "parameters": [], "result": "Range", "description": "Gets the range of elements associated with this NamedRange."}, {"name": "remove", "parameters": [], "result": "void", "description": "Removes this NamedRange from the document."}, {"name": "copy", "parameters": [], "result": "PageBreak", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "removeFromParent", "parameters": [], "result": "PageBreak", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "PageBreak", "description": "Sets the element's attributes."}, {"name": "addPositionedImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "PositionedImage", "description": "Creates and inserts a new PositionedImage from the specified image blob."}, {"name": "appendHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Creates and appends a new HorizontalRule."}, {"name": "appendInlineImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and appends a new InlineImage from the specified image blob."}, {"name": "appendInlineImage", "parameters": [{"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Appends the given InlineImage."}, {"name": "appendPageBreak", "parameters": [], "result": "PageBreak", "description": "Creates and appends a new PageBreak."}, {"name": "appendPageBreak", "parameters": [{"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Appends the given PageBreak."}, {"name": "appendText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Creates and appends a new Text element with the specified contents."}, {"name": "appendText", "parameters": [{"name": "text", "type": "Text"}], "result": "Text", "description": "Appends the given Text element."}, {"name": "clear", "parameters": [], "result": "Paragraph", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "Paragraph", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAlignment", "parameters": [], "result": "HorizontalAlignment", "description": "Retrieves the HorizontalAlignment."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getHeading", "parameters": [], "result": "ParagraphHeading", "description": "Retrieves the ParagraphHeading."}, {"name": "getIndentEnd", "parameters": [], "result": "Number", "description": "Retrieves the end indentation, in points."}, {"name": "getIndentFirstLine", "parameters": [], "result": "Number", "description": "Retrieves the first line indentation, in points."}, {"name": "getIndentStart", "parameters": [], "result": "Number", "description": "Retrieves the start indentation."}, {"name": "getLineSpacing", "parameters": [], "result": "Number", "description": "Retrieves the line spacing, in points."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPositionedImage", "parameters": [{"name": "id", "type": "String"}], "result": "PositionedImage", "description": "Gets a PositionedImage by the image's ID."}, {"name": "getPositionedImages", "parameters": [], "result": "PositionedImage[]", "description": "Gets all PositionedImage objects anchored to the paragraph."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getSpacingAfter", "parameters": [], "result": "Number", "description": "Retrieves the spacing after the element, in points."}, {"name": "getSpacingBefore", "parameters": [], "result": "Number", "description": "Retrieves the spacing before the element, in points."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertHorizontalRule", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "HorizontalRule", "description": "Creates and inserts a HorizontalRule at the specified index."}, {"name": "insertInlineImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts a new InlineImage from the specified image blob, at the specified\nindex."}, {"name": "insertInlineImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Inserts the given InlineImage at the specified index."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "PageBreak", "description": "Creates and inserts a new PageBreak at the specified index."}, {"name": "insertPageBreak", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "pageBreak", "type": "PageBreak"}], "result": "PageBreak", "description": "Inserts the given PageBreak at the specified index."}, {"name": "insertText", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Text", "description": "Creates and inserts a new text element at the specified index."}, {"name": "insertText", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "Text"}], "result": "Text", "description": "Inserts the given Text element at the specified index, with the specified text\ncontents."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "isLeftToRight", "parameters": [], "result": "Boolean", "description": "Retrieves the left-to-right setting."}, {"name": "merge", "parameters": [], "result": "Paragraph", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "Paragraph", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "Paragraph", "description": "Removes the element from its parent."}, {"name": "removePositionedImage", "parameters": [{"name": "id", "type": "String"}], "result": "Boolean", "description": "Removes a PositionedImage by the image's ID."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAlignment", "parameters": [{"name": "alignment", "type": "HorizontalAlignment"}], "result": "Paragraph", "description": "Sets the HorizontalAlignment."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Paragraph", "description": "Sets the element's attributes."}, {"name": "setHeading", "parameters": [{"name": "heading", "type": "ParagraphHeading"}], "result": "Paragraph", "description": "Sets the ParagraphHeading."}, {"name": "setIndentEnd", "parameters": [{"name": "indentEnd", "type": "Number"}], "result": "Paragraph", "description": "Sets the end indentation, in points."}, {"name": "setIndentFirstLine", "parameters": [{"name": "indentFirstLine", "type": "Number"}], "result": "Paragraph", "description": "Sets the first line indentation, in points."}, {"name": "setIndentStart", "parameters": [{"name": "indentStart", "type": "Number"}], "result": "Paragraph", "description": "Sets the start indentation, in points."}, {"name": "setLeftToRight", "parameters": [{"name": "leftToRight", "type": "Boolean"}], "result": "Paragraph", "description": "Sets the left-to-right setting."}, {"name": "setLineSpacing", "parameters": [{"name": "multiplier", "type": "Number"}], "result": "Paragraph", "description": "Sets the line spacing, as a quantity indicating the number of lines to use for spacing."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Paragraph", "description": "Sets the link url."}, {"name": "setSpacingAfter", "parameters": [{"name": "spacingAfter", "type": "Number"}], "result": "Paragraph", "description": "Sets the spacing after the element, in points."}, {"name": "setSpacingBefore", "parameters": [{"name": "spacingBefore", "type": "Number"}], "result": "Paragraph", "description": "Sets the spacing before the element, in points."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "void", "description": "Sets the contents of the paragraph as text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "Paragraph", "description": "Sets the text alignment."}, {"name": "getElement", "parameters": [], "result": "Element", "description": "Gets the element that contains this Position."}, {"name": "getOffset", "parameters": [], "result": "Integer", "description": "Gets this Position's relative location within the element that contains it."}, {"name": "getSurroundingText", "parameters": [], "result": "Text", "description": "Creates an artificial Text element that represents the text and formatting of the\nParagraph or ListItem that contains the Position, either directly or through a chain of child elements."}, {"name": "getSurroundingTextOffset", "parameters": [], "result": "Integer", "description": "Gets the offset of this Position within the Text element returned by getSurroundingText()."}, {"name": "insertBookmark", "parameters": [], "result": "Bookmark", "description": "Creates and inserts a new Bookmark at this Position."}, {"name": "insertInlineImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts a new InlineImage at this Position from the specified image\nblob."}, {"name": "insertText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Inserts the specified text at this Position."}, {"name": "getAs", "parameters": [{"name": "contentType", "type": "String"}], "result": "Blob", "description": "Return the data inside this object as a blob converted to the specified content type."}, {"name": "getBlob", "parameters": [], "result": "Blob", "description": "Return the data inside this object as a blob."}, {"name": "getHeight", "parameters": [], "result": "Integer", "description": "Retrieves the image's height, in pixels."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the image's ID."}, {"name": "getLayout", "parameters": [], "result": "PositionedLayout", "description": "Gets an enum value that represents how the image is laid out."}, {"name": "getLeftOffset", "parameters": [], "result": "Number", "description": "Gets the image's offset, in points, from the paragraph's left."}, {"name": "getParagraph", "parameters": [], "result": "Paragraph", "description": "Gets the Paragraph the image is anchored to."}, {"name": "getTopOffset", "parameters": [], "result": "Number", "description": "Gets the image's offset, in points, from the paragraph's top."}, {"name": "getWidth", "parameters": [], "result": "Integer", "description": "Retrieves the image's width, in pixels."}, {"name": "setHeight", "parameters": [{"name": "height", "type": "Integer"}], "result": "PositionedImage", "description": "Sets the image's height, in pixels."}, {"name": "setLayout", "parameters": [{"name": "layout", "type": "PositionedLayout"}], "result": "PositionedImage", "description": "Sets the definition of how the image is laid out."}, {"name": "setLeftOffset", "parameters": [{"name": "offset", "type": "Number"}], "result": "PositionedImage", "description": "Sets the image's offset, in points, from the paragraph's left."}, {"name": "setTopOffset", "parameters": [{"name": "offset", "type": "Number"}], "result": "PositionedImage", "description": "Sets the image's offset, in points, from the paragraph's top."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Integer"}], "result": "PositionedImage", "description": "Sets the image's width, in pixels."}, {"name": "getRangeElements", "parameters": [], "result": "RangeElement[]", "description": "Gets all elements in this Range, including any partial Text elements (for example, in the case\nof a selection that includes only part of a Text element)."}, {"name": "addElement", "parameters": [{"name": "element", "type": "Element"}], "result": "RangeBuilder", "description": "Adds an entire Element to this RangeBuilder."}, {"name": "addElement", "parameters": [{"name": "textElement", "type": "Text"}, {"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}], "result": "RangeBuilder", "description": "Adds a partial Text element to this RangeBuilder."}, {"name": "addElementsBetween", "parameters": [{"name": "startElement", "type": "Element"}, {"name": "endElementInclusive", "type": "Element"}], "result": "RangeBuilder", "description": "Adds two entire elements, and all elements between them, to this RangeBuilder."}, {"name": "addElementsBetween", "parameters": [{"name": "startTextElement", "type": "Text"}, {"name": "startOffset", "type": "Integer"}, {"name": "endTextElementInclusive", "type": "Text"}, {"name": "endOffsetInclusive", "type": "Integer"}], "result": "RangeBuilder", "description": "Adds two partial Text elements, and all elements between them, to the RangeBuilder."}, {"name": "addRange", "parameters": [{"name": "range", "type": "Range"}], "result": "RangeBuilder", "description": "Adds the contents of another Range to this RangeBuilder."}, {"name": "build", "parameters": [], "result": "Range", "description": "Constructs a Range from the settings applied to the builder."}, {"name": "getRangeElements", "parameters": [], "result": "RangeElement[]", "description": "Gets all elements in this Range, including any partial Text elements (for example, in the case\nof a selection that includes only part of a Text element)."}, {"name": "getElement", "parameters": [], "result": "Element", "description": "Gets the Element that corresponds to this RangeElement."}, {"name": "getEndOffsetInclusive", "parameters": [], "result": "Integer", "description": "Gets the position of the end of a partial range within the range element."}, {"name": "getStartOffset", "parameters": [], "result": "Integer", "description": "Gets the position of the start of a partial range within the range element."}, {"name": "isPartial", "parameters": [], "result": "Boolean", "description": "Determines whether this range element covers the entire element or a partial selection of the\nelement's characters."}, {"name": "appendTableRow", "parameters": [], "result": "TableRow", "description": "Creates and appends a new TableRow."}, {"name": "appendTableRow", "parameters": [{"name": "tableRow", "type": "TableRow"}], "result": "TableRow", "description": "Appends the given TableRow."}, {"name": "clear", "parameters": [], "result": "Table", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "Table", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getBorderColor", "parameters": [], "result": "String", "description": "Retrieves the border color."}, {"name": "getBorderWidth", "parameters": [], "result": "Number", "description": "Retrieves the border width, in points."}, {"name": "getCell", "parameters": [{"name": "rowIndex", "type": "Integer"}, {"name": "cellIndex", "type": "Integer"}], "result": "TableCell", "description": "Retrieves the TableCell at the specified row and cell indices."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getColumnWidth", "parameters": [{"name": "columnIndex", "type": "Integer"}], "result": "Number", "description": "Retrieves the width of the specified table column, in points."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getNumRows", "parameters": [], "result": "Integer", "description": "Retrieves the number of TableRows."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getRow", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "TableRow", "description": "Retrieves the TableRow at the specified row index."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertTableRow", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "TableRow", "description": "Creates and inserts a new TableRow at the specified index."}, {"name": "insertTableRow", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "tableRow", "type": "TableRow"}], "result": "TableRow", "description": "Inserts the given TableRow at the specified index."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "Table", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "Table", "description": "Removes the element from its parent."}, {"name": "removeRow", "parameters": [{"name": "rowIndex", "type": "Integer"}], "result": "TableRow", "description": "Removes the TableRow at the specified row index."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Table", "description": "Sets the element's attributes."}, {"name": "setBorderColor", "parameters": [{"name": "color", "type": "String"}], "result": "Table", "description": "Sets the border color."}, {"name": "setBorderWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "Table", "description": "Sets the border width, in points."}, {"name": "setColumnWidth", "parameters": [{"name": "columnIndex", "type": "Integer"}, {"name": "width", "type": "Number"}], "result": "Table", "description": "Sets the width of the specified column, in points."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Table", "description": "Sets the link url."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "Table", "description": "Sets the text alignment."}, {"name": "appendHorizontalRule", "parameters": [], "result": "HorizontalRule", "description": "Creates and appends a new HorizontalRule."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and appends a new InlineImage from the specified image blob."}, {"name": "appendImage", "parameters": [{"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Appends the given InlineImage."}, {"name": "appendListItem", "parameters": [{"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Appends the given ListItem."}, {"name": "appendListItem", "parameters": [{"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and appends a new ListItem."}, {"name": "appendParagraph", "parameters": [{"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Appends the given Paragraph."}, {"name": "appendParagraph", "parameters": [{"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and appends a new Paragraph."}, {"name": "appendTable", "parameters": [], "result": "Table", "description": "Creates and appends a new Table."}, {"name": "appendTable", "parameters": [{"name": "cells", "type": "String"}], "result": "Table", "description": "Appends a new Table containing the specified cells."}, {"name": "appendTable", "parameters": [{"name": "table", "type": "Table"}], "result": "Table", "description": "Appends the given Table."}, {"name": "clear", "parameters": [], "result": "TableCell", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "TableCell", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getBackgroundColor", "parameters": [], "result": "String", "description": "Retrieves the background color."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getColSpan", "parameters": [], "result": "Integer", "description": "Retrieves the column span, which is the number of columns of table cells this cell spans."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getPaddingBottom", "parameters": [], "result": "Number", "description": "Retrieves the bottom padding, in points."}, {"name": "getPaddingLeft", "parameters": [], "result": "Number", "description": "Retrieves the left padding, in points."}, {"name": "getPaddingRight", "parameters": [], "result": "Number", "description": "Retrieves the right padding, in points."}, {"name": "getPaddingTop", "parameters": [], "result": "Number", "description": "Retrieves the top padding, in points."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getParentRow", "parameters": [], "result": "TableRow", "description": "Retrieves the TableRow containing the current TableCell."}, {"name": "getParentTable", "parameters": [], "result": "Table", "description": "Retrieves the Table containing the current TableCell."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getRowSpan", "parameters": [], "result": "Integer", "description": "Retrieves the row span, which is the number of rows of table cells this cell spans."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "getVerticalAlignment", "parameters": [], "result": "VerticalAlignment", "description": "Retrieves the VerticalAlignment."}, {"name": "getWidth", "parameters": [], "result": "Number", "description": "Retrieves the width of the column containing the cell, in points."}, {"name": "insertHorizontalRule", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "HorizontalRule", "description": "Creates and inserts a new HorizontalRule at the specified index."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "BlobSource"}], "result": "InlineImage", "description": "Creates and inserts an InlineImage from the specified image blob, at the specified\nindex."}, {"name": "insertImage", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "image", "type": "InlineImage"}], "result": "InlineImage", "description": "Inserts the given InlineImage at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "listItem", "type": "ListItem"}], "result": "ListItem", "description": "Inserts the given ListItem at the specified index."}, {"name": "insertListItem", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "ListItem", "description": "Creates and inserts a new ListItem at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "paragraph", "type": "Paragraph"}], "result": "Paragraph", "description": "Inserts the given Paragraph at the specified index."}, {"name": "insertParagraph", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Paragraph", "description": "Creates and inserts a new Paragraph at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Table", "description": "Creates and inserts a new Table at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "cells", "type": "String"}], "result": "Table", "description": "Creates and inserts a new Table containing the specified cells, at the specified index."}, {"name": "insertTable", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "table", "type": "Table"}], "result": "Table", "description": "Inserts the given Table at the specified index."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "TableCell", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "TableCell", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "TableCell", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "TableCell", "description": "Sets the element's attributes."}, {"name": "setBackgroundColor", "parameters": [{"name": "color", "type": "String"}], "result": "TableCell", "description": "Sets the background color."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "TableCell", "description": "Sets the link url."}, {"name": "setPaddingBottom", "parameters": [{"name": "paddingBottom", "type": "Number"}], "result": "TableCell", "description": "Sets the bottom padding, in points."}, {"name": "setPaddingLeft", "parameters": [{"name": "paddingLeft", "type": "Number"}], "result": "TableCell", "description": "Sets the left padding, in points."}, {"name": "setPaddingRight", "parameters": [{"name": "paddingTop", "type": "Number"}], "result": "TableCell", "description": "Sets the right padding, in points."}, {"name": "setPaddingTop", "parameters": [{"name": "paddingTop", "type": "Number"}], "result": "TableCell", "description": "Sets the top padding, in points."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "TableCell", "description": "Sets the contents as plain text."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "TableCell", "description": "Sets the text alignment."}, {"name": "setVerticalAlignment", "parameters": [{"name": "alignment", "type": "VerticalAlignment"}], "result": "TableCell", "description": "Sets the vertical alignment."}, {"name": "setWidth", "parameters": [{"name": "width", "type": "Number"}], "result": "TableCell", "description": "Sets the width of the column containing the current cell, in points."}, {"name": "clear", "parameters": [], "result": "TableOfContents", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "TableOfContents", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "removeFromParent", "parameters": [], "result": "TableOfContents", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "TableOfContents", "description": "Sets the element's attributes."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "TableOfContents", "description": "Sets the link url."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "TableOfContents", "description": "Sets the text alignment."}, {"name": "appendTableCell", "parameters": [], "result": "TableCell", "description": "Creates and appends a new TableCell."}, {"name": "appendTableCell", "parameters": [{"name": "textContents", "type": "String"}], "result": "TableCell", "description": "Appends the given TableCell containing the specified text."}, {"name": "appendTableCell", "parameters": [{"name": "tableCell", "type": "TableCell"}], "result": "TableCell", "description": "Appends the given TableCell."}, {"name": "clear", "parameters": [], "result": "TableRow", "description": "Clears the contents of the element."}, {"name": "copy", "parameters": [], "result": "TableRow", "description": "Returns a detached, deep copy of the current element."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type."}, {"name": "findElement", "parameters": [{"name": "elementType", "type": "ElementType"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for a descendant of the specified type, starting from the\nspecified RangeElement."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getCell", "parameters": [{"name": "cellIndex", "type": "Integer"}], "result": "TableCell", "description": "Retrieves the TableCell at the specified cell index."}, {"name": "getChild", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "Element", "description": "Retrieves the child element at the specified child index."}, {"name": "getChildIndex", "parameters": [{"name": "child", "type": "Element"}], "result": "Integer", "description": "Retrieves the child index for the specified child element."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getMinimumHeight", "parameters": [], "result": "Number", "description": "Retrieves the minimum height, in points."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getNumCells", "parameters": [], "result": "Integer", "description": "Retrieves the number of cells in the row."}, {"name": "getNumChildren", "parameters": [], "result": "Integer", "description": "Retrieves the number of children."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getParentTable", "parameters": [], "result": "Table", "description": "Retrieves the Table containing the current row."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertTableCell", "parameters": [{"name": "childIndex", "type": "Integer"}], "result": "TableCell", "description": "Creates and inserts a new TableCell at the specified index."}, {"name": "insertTableCell", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "textContents", "type": "String"}], "result": "TableCell", "description": "Inserts the given TableCell at the specified index, containing the given text."}, {"name": "insertTableCell", "parameters": [{"name": "childIndex", "type": "Integer"}, {"name": "tableCell", "type": "TableCell"}], "result": "TableCell", "description": "Inserts the given TableCell at the specified index."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "TableRow", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeCell", "parameters": [{"name": "cellIndex", "type": "Integer"}], "result": "TableCell", "description": "Removes the TableCell at the specified cell index."}, {"name": "removeChild", "parameters": [{"name": "child", "type": "Element"}], "result": "TableRow", "description": "Removes the specified child element."}, {"name": "removeFromParent", "parameters": [], "result": "TableRow", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "TableRow", "description": "Sets the element's attributes."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "TableRow", "description": "Sets the link url."}, {"name": "setMinimumHeight", "parameters": [{"name": "minHeight", "type": "Number"}], "result": "TableRow", "description": "Sets the minimum height, in points."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "TableRow", "description": "Sets the text alignment."}, {"name": "appendText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Adds the specified text to the end of this text region."}, {"name": "copy", "parameters": [], "result": "Text", "description": "Returns a detached, deep copy of the current element."}, {"name": "deleteText", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}], "result": "Text", "description": "Deletes a range of text."}, {"name": "editAsText", "parameters": [], "result": "Text", "description": "Obtains a Text version of the current element, for editing."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern using regular expressions."}, {"name": "findText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "from", "type": "RangeElement"}], "result": "RangeElement", "description": "Searches the contents of the element for the specified text pattern, starting from a given\nsearch result."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getAttributes", "parameters": [{"name": "offset", "type": "Integer"}], "result": "Object", "description": "Retrieves the attributes at the specified character offset."}, {"name": "getBackgroundColor", "parameters": [], "result": "String", "description": "Retrieves the background color setting."}, {"name": "getBackgroundColor", "parameters": [{"name": "offset", "type": "Integer"}], "result": "String", "description": "Retrieves the background color at the specified character offset."}, {"name": "getFontFamily", "parameters": [], "result": "String", "description": "Retrieves the font family setting."}, {"name": "getFontFamily", "parameters": [{"name": "offset", "type": "Integer"}], "result": "String", "description": "Retrieves the font family at the specified character offset."}, {"name": "getFontSize", "parameters": [], "result": "Number", "description": "Retrieves the font size setting."}, {"name": "getFontSize", "parameters": [{"name": "offset", "type": "Integer"}], "result": "Number", "description": "Retrieves the font size at the specified character offset."}, {"name": "getForegroundColor", "parameters": [], "result": "String", "description": "Retrieves the foreground color setting."}, {"name": "getForegroundColor", "parameters": [{"name": "offset", "type": "Integer"}], "result": "String", "description": "Retrieves the foreground color at the specified character offset."}, {"name": "getLinkUrl", "parameters": [], "result": "String", "description": "Retrieves the link url."}, {"name": "getLinkUrl", "parameters": [{"name": "offset", "type": "Integer"}], "result": "String", "description": "Retrieves the link url at the specified character offset."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getText", "parameters": [], "result": "String", "description": "Retrieves the contents of the element as a text string."}, {"name": "getTextAlignment", "parameters": [], "result": "TextAlignment", "description": "Gets the text alignment."}, {"name": "getTextAlignment", "parameters": [{"name": "offset", "type": "Integer"}], "result": "TextAlignment", "description": "Gets the text alignment for a single character."}, {"name": "getTextAttributeIndices", "parameters": [], "result": "Integer[]", "description": "Retrieves the set of text indices that correspond to the start of distinct text formatting\nruns."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "insertText", "parameters": [{"name": "offset", "type": "Integer"}, {"name": "text", "type": "String"}], "result": "Text", "description": "Inserts the specified text at the given character offset."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "isBold", "parameters": [], "result": "Boolean", "description": "Retrieves the bold setting."}, {"name": "isBold", "parameters": [{"name": "offset", "type": "Integer"}], "result": "Boolean", "description": "Retrieves the bold setting at the specified character offset."}, {"name": "isItalic", "parameters": [], "result": "Boolean", "description": "Retrieves the italic setting."}, {"name": "isItalic", "parameters": [{"name": "offset", "type": "Integer"}], "result": "Boolean", "description": "Retrieves the italic setting at the specified character offset."}, {"name": "isStrikethrough", "parameters": [], "result": "Boolean", "description": "Retrieves the strikethrough setting."}, {"name": "isStrikethrough", "parameters": [{"name": "offset", "type": "Integer"}], "result": "Boolean", "description": "Retrieves the strikethrough setting at the specified character offset."}, {"name": "isUnderline", "parameters": [], "result": "Boolean", "description": "Retrieves the underline setting."}, {"name": "isUnderline", "parameters": [{"name": "offset", "type": "Integer"}], "result": "Boolean", "description": "Retrieves the underline setting at the specified character offset."}, {"name": "merge", "parameters": [], "result": "Text", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "Text", "description": "Removes the element from its parent."}, {"name": "replaceText", "parameters": [{"name": "searchPattern", "type": "String"}, {"name": "replacement", "type": "String"}], "result": "Element", "description": "Replaces all occurrences of a given text pattern with a given replacement string, using regular\nexpressions."}, {"name": "setAttributes", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "attributes", "type": "Object"}], "result": "Text", "description": "Applies the specified attributes to the given character range."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "Text", "description": "Sets the element's attributes."}, {"name": "setBackgroundColor", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "color", "type": "String"}], "result": "Text", "description": "Sets the background color for the specified character range."}, {"name": "setBackgroundColor", "parameters": [{"name": "color", "type": "String"}], "result": "Text", "description": "Sets the background color."}, {"name": "setBold", "parameters": [{"name": "bold", "type": "Boolean"}], "result": "Text", "description": "Sets the bold setting."}, {"name": "setBold", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "bold", "type": "Boolean"}], "result": "Text", "description": "Sets the bold setting for the specified character range."}, {"name": "setFontFamily", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "fontFamilyName", "type": "String"}], "result": "Text", "description": "Sets the font family for the specified character range."}, {"name": "setFontFamily", "parameters": [{"name": "fontFamilyName", "type": "String"}], "result": "Text", "description": "Sets the font family."}, {"name": "setFontSize", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "size", "type": "Number"}], "result": "Text", "description": "Sets the font size for the specified character range."}, {"name": "setFontSize", "parameters": [{"name": "size", "type": "Number"}], "result": "Text", "description": "Sets the font size."}, {"name": "setForegroundColor", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "color", "type": "String"}], "result": "Text", "description": "Sets the foreground color for the specified character range."}, {"name": "setForegroundColor", "parameters": [{"name": "color", "type": "String"}], "result": "Text", "description": "Sets the foreground color."}, {"name": "setItalic", "parameters": [{"name": "italic", "type": "Boolean"}], "result": "Text", "description": "Sets the italic setting."}, {"name": "setItalic", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "italic", "type": "Boolean"}], "result": "Text", "description": "Sets the italic setting for the specified character range."}, {"name": "setLinkUrl", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "url", "type": "String"}], "result": "Text", "description": "Sets the link url for the specified character range."}, {"name": "setLinkUrl", "parameters": [{"name": "url", "type": "String"}], "result": "Text", "description": "Sets the link url."}, {"name": "setStrikethrough", "parameters": [{"name": "strikethrough", "type": "Boolean"}], "result": "Text", "description": "Sets the strikethrough setting."}, {"name": "setStrikethrough", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "strikethrough", "type": "Boolean"}], "result": "Text", "description": "Sets the strikethrough setting for the specified character range."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Text", "description": "Sets the text contents."}, {"name": "setTextAlignment", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "textAlignment", "type": "TextAlignment"}], "result": "Text", "description": "Sets the text alignment for a given character range."}, {"name": "setTextAlignment", "parameters": [{"name": "textAlignment", "type": "TextAlignment"}], "result": "Text", "description": "Sets the text alignment."}, {"name": "setUnderline", "parameters": [{"name": "underline", "type": "Boolean"}], "result": "Text", "description": "Sets the underline setting."}, {"name": "setUnderline", "parameters": [{"name": "startOffset", "type": "Integer"}, {"name": "endOffsetInclusive", "type": "Integer"}, {"name": "underline", "type": "Boolean"}], "result": "Text", "description": "Sets the underline setting for the specified character range."}, {"name": "copy", "parameters": [], "result": "UnsupportedElement", "description": "Returns a detached, deep copy of the current element."}, {"name": "getAttributes", "parameters": [], "result": "Object", "description": "Retrieves the element's attributes."}, {"name": "getNextSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's next sibling element."}, {"name": "getParent", "parameters": [], "result": "ContainerElement", "description": "Retrieves the element's parent element."}, {"name": "getPreviousSibling", "parameters": [], "result": "Element", "description": "Retrieves the element's previous sibling element."}, {"name": "getType", "parameters": [], "result": "ElementType", "description": "Retrieves the element's ElementType."}, {"name": "isAtDocumentEnd", "parameters": [], "result": "Boolean", "description": "Determines whether the element is at the end of the Document."}, {"name": "merge", "parameters": [], "result": "UnsupportedElement", "description": "Merges the element with the preceding sibling of the same type."}, {"name": "removeFromParent", "parameters": [], "result": "UnsupportedElement", "description": "Removes the element from its parent."}, {"name": "setAttributes", "parameters": [{"name": "attributes", "type": "Object"}], "result": "UnsupportedElement", "description": "Sets the element's attributes."}], "properties": [{"name": "BACKGROUND_COLOR", "type": "Enum", "url": "", "description": "The background color of an element (Paragraph, Table, etc) or document."}, {"name": "BOLD", "type": "Enum", "url": "", "description": "The font weight setting, for rich text."}, {"name": "BORDER_COLOR", "type": "Enum", "url": "", "description": "The border color, for table elements."}, {"name": "BORDER_WIDTH", "type": "Enum", "url": "", "description": "The border width in points, for table elements."}, {"name": "CODE", "type": "Enum", "url": "", "description": "The code contents, for equation elements."}, {"name": "FONT_FAMILY", "type": "Enum", "url": "", "description": "The font family setting, for rich text."}, {"name": "FONT_SIZE", "type": "Enum", "url": "", "description": "The font size setting in points, for rich text."}, {"name": "FOREGROUND_COLOR", "type": "Enum", "url": "", "description": "The foreground color setting, for rich text."}, {"name": "HEADING", "type": "Enum", "url": "", "description": "The heading type, for paragraph elements (for example, DocumentApp.ParagraphHeading.HEADING1)."}, {"name": "HEIGHT", "type": "Enum", "url": "", "description": "The height setting, for image elements."}, {"name": "HORIZONTAL_ALIGNMENT", "type": "Enum", "url": "", "description": "The horizontal alignment, for paragraph elements (for example, DocumentApp.HorizontalAlignment.CENTER)."}, {"name": "INDENT_END", "type": "Enum", "url": "", "description": "The end indentation setting in points, for paragraph elements."}, {"name": "INDENT_FIRST_LINE", "type": "Enum", "url": "", "description": "The first line indentation setting in points, for paragraph elements."}, {"name": "INDENT_START", "type": "Enum", "url": "", "description": "The start indentation setting in points, for paragraph elements."}, {"name": "ITALIC", "type": "Enum", "url": "", "description": "The font style setting, for rich text."}, {"name": "GLYPH_TYPE", "type": "Enum", "url": "", "description": "The glyph type, for list item elements."}, {"name": "LEFT_TO_RIGHT", "type": "Enum", "url": "", "description": "The text direction setting, for rich text."}, {"name": "LINE_SPACING", "type": "Enum", "url": "", "description": "The line spacing setting as a multiplier, for paragraph elements."}, {"name": "LINK_URL", "type": "Enum", "url": "", "description": "The link URL, for rich text."}, {"name": "LIST_ID", "type": "Enum", "url": "", "description": "The ID of the encompassing list, for list item elements."}, {"name": "MARGIN_BOTTOM", "type": "Enum", "url": "", "description": "The bottom margin setting in points, for paragraph elements."}, {"name": "MARGIN_LEFT", "type": "Enum", "url": "", "description": "The left margin setting in points, for paragraph elements."}, {"name": "MARGIN_RIGHT", "type": "Enum", "url": "", "description": "The right margin setting in points, for paragraph elements."}, {"name": "MARGIN_TOP", "type": "Enum", "url": "", "description": "The top margin setting in points, for paragraph elements."}, {"name": "NESTING_LEVEL", "type": "Enum", "url": "", "description": "The item nesting level, for list item elements."}, {"name": "MINIMUM_HEIGHT", "type": "Enum", "url": "", "description": "The minimum height setting in points, for table row elements."}, {"name": "PADDING_BOTTOM", "type": "Enum", "url": "", "description": "The bottom padding setting in points, for table cell elements."}, {"name": "PADDING_LEFT", "type": "Enum", "url": "", "description": "The left padding setting in points, for table cell elements."}, {"name": "PADDING_RIGHT", "type": "Enum", "url": "", "description": "The right padding setting in points, for table cell elements."}, {"name": "PADDING_TOP", "type": "Enum", "url": "", "description": "The top padding setting in points, for table cell elements."}, {"name": "PAGE_HEIGHT", "type": "Enum", "url": "", "description": "The page height setting in points, for documents."}, {"name": "PAGE_WIDTH", "type": "Enum", "url": "", "description": "The page width setting in points, for documents."}, {"name": "SPACING_AFTER", "type": "Enum", "url": "", "description": "The bottom spacing setting in points, for paragraph elements."}, {"name": "SPACING_BEFORE", "type": "Enum", "url": "", "description": "The top spacing setting in points, for paragraph elements."}, {"name": "STRIKETHROUGH", "type": "Enum", "url": "", "description": "The strike-through setting, for rich text."}, {"name": "UNDERLINE", "type": "Enum", "url": "", "description": "The underline setting, for rich text."}, {"name": "VERTICAL_ALIGNMENT", "type": "Enum", "url": "", "description": "The vertical alignment setting, for table cell elements."}, {"name": "WIDTH", "type": "Enum", "url": "", "description": "The width setting, for table cell and image elements."}, {"name": "Attribute", "type": "Attribute", "url": "/apps-script/reference/document/attribute", "description": "The Attribute enumeration."}, {"name": "ElementType", "type": "ElementType", "url": "/apps-script/reference/document/element-type", "description": "The ElementType enumeration."}, {"name": "FontFamily", "type": "FontFamily", "url": "/apps-script/reference/document/font-family", "description": "The FontFamily enumeration."}, {"name": "GlyphType", "type": "GlyphType", "url": "/apps-script/reference/document/glyph-type", "description": "The GlyphType enumeration."}, {"name": "HorizontalAlignment", "type": "HorizontalAlignment", "url": "/apps-script/reference/document/horizontal-alignment", "description": "The HorizontalAlignment enumeration."}, {"name": "ParagraphHeading", "type": "ParagraphHeading", "url": "/apps-script/reference/document/paragraph-heading", "description": "The ParagraphHeading enumeration."}, {"name": "PositionedLayout", "type": "PositionedLayout", "url": "/apps-script/reference/document/positioned-layout", "description": "The PositionedLayout enumeration."}, {"name": "TextAlignment", "type": "TextAlignment", "url": "/apps-script/reference/document/text-alignment", "description": "The TextAlignment enumeration."}, {"name": "VerticalAlignment", "type": "VerticalAlignment", "url": "/apps-script/reference/document/vertical-alignment", "description": "The VerticalAlignment enumeration."}, {"name": "BODY_SECTION", "type": "Enum", "url": "", "description": "The type corresponding to the Body element."}, {"name": "COMMENT_SECTION", "type": "Enum", "url": "", "description": "The type corresponding to the CommentSection element."}, {"name": "DOCUMENT", "type": "Enum", "url": "", "description": "The type that corresponds to the root of the document."}, {"name": "EQUATION", "type": "Enum", "url": "", "description": "The type corresponding to the Equation element."}, {"name": "EQUATION_FUNCTION", "type": "Enum", "url": "", "description": "The type corresponding to the EquationFunction element."}, {"name": "EQUATION_FUNCTION_ARGUMENT_SEPARATOR", "type": "Enum", "url": "", "description": "The type corresponding to the EquationFunctionArgumentSeparator\nelement."}, {"name": "EQUATION_SYMBOL", "type": "Enum", "url": "", "description": "The type corresponding to the EquationSymbol element."}, {"name": "FOOTER_SECTION", "type": "Enum", "url": "", "description": "The type corresponding to the FooterSection element."}, {"name": "FOOTNOTE", "type": "Enum", "url": "", "description": "The type corresponding to the Footnote element."}, {"name": "FOOTNOTE_SECTION", "type": "Enum", "url": "", "description": "The type corresponding to the FootnoteSection element."}, {"name": "HEADER_SECTION", "type": "Enum", "url": "", "description": "The type corresponding to the HeaderSection element."}, {"name": "HORIZONTAL_RULE", "type": "Enum", "url": "", "description": "The type corresponding to the HorizontalRule element."}, {"name": "INLINE_DRAWING", "type": "Enum", "url": "", "description": "The type corresponding to the InlineDrawing element."}, {"name": "INLINE_IMAGE", "type": "Enum", "url": "", "description": "The type corresponding to the InlineImage element."}, {"name": "LIST_ITEM", "type": "Enum", "url": "", "description": "The type corresponding to the ListItem element."}, {"name": "PAGE_BREAK", "type": "Enum", "url": "", "description": "The type corresponding to the PageBreak element."}, {"name": "PARAGRAPH", "type": "Enum", "url": "", "description": "The type corresponding to the Paragraph element."}, {"name": "TABLE", "type": "Enum", "url": "", "description": "The type corresponding to the Table element."}, {"name": "TABLE_CELL", "type": "Enum", "url": "", "description": "The type corresponding to the TableCell element."}, {"name": "TABLE_OF_CONTENTS", "type": "Enum", "url": "", "description": "The type corresponding to the TableOfContents element."}, {"name": "TABLE_ROW", "type": "Enum", "url": "", "description": "The type corresponding to the TableRow element."}, {"name": "TEXT", "type": "Enum", "url": "", "description": "The type corresponding to the Text\nelement."}, {"name": "UNSUPPORTED", "type": "Enum", "url": "", "description": "The type corresponding to UnsupportedElement."}, {"name": "BULLET", "type": "Enum", "url": "", "description": "The default bullet, circular and filled."}, {"name": "HOLLOW_BULLET", "type": "Enum", "url": "", "description": "A hollow bullet."}, {"name": "SQUARE_BULLET", "type": "Enum", "url": "", "description": "A square bullet."}, {"name": "NUMBER", "type": "Enum", "url": "", "description": "A number based bullet."}, {"name": "LATIN_UPPER", "type": "Enum", "url": "", "description": "A latin, uppercase bullet."}, {"name": "LATIN_LOWER", "type": "Enum", "url": "", "description": "A latin, lowercase bullet."}, {"name": "ROMAN_UPPER", "type": "Enum", "url": "", "description": "A roman numeral, uppercase bullet."}, {"name": "ROMAN_LOWER", "type": "Enum", "url": "", "description": "A roman numeral, lowercase bullet."}, {"name": "LEFT", "type": "Enum", "url": "", "description": "The left-alignment option."}, {"name": "CENTER", "type": "Enum", "url": "", "description": "The center-alignment option."}, {"name": "RIGHT", "type": "Enum", "url": "", "description": "The right-alignment option."}, {"name": "JUSTIFY", "type": "Enum", "url": "", "description": "The justify-alignment option."}, {"name": "NORMAL", "type": "Enum", "url": "", "description": "The heading option for normal text."}, {"name": "HEADING1", "type": "Enum", "url": "", "description": "The highest heading option."}, {"name": "HEADING2", "type": "Enum", "url": "", "description": "The second heading option."}, {"name": "HEADING3", "type": "Enum", "url": "", "description": "The third heading option"}, {"name": "HEADING4", "type": "Enum", "url": "", "description": "The fourth heading option."}, {"name": "HEADING5", "type": "Enum", "url": "", "description": "The fifth heading option."}, {"name": "HEADING6", "type": "Enum", "url": "", "description": "The lowest heading option."}, {"name": "TITLE", "type": "Enum", "url": "", "description": "The title heading option."}, {"name": "SUBTITLE", "type": "Enum", "url": "", "description": "The subtitle heading option."}, {"name": "ABOVE_TEXT", "type": "Enum", "url": "", "description": "The image is positioned above the text."}, {"name": "BREAK_BOTH", "type": "Enum", "url": "", "description": "The image breaks the text on the left and right."}, {"name": "BREAK_LEFT", "type": "Enum", "url": "", "description": "The image breaks the text on the left."}, {"name": "BREAK_RIGHT", "type": "Enum", "url": "", "description": "The image breaks the text on the right."}, {"name": "WRAP_TEXT", "type": "Enum", "url": "", "description": "The image is wrapped by text."}, {"name": "NORMAL", "type": "Enum", "url": "", "description": "The normal text alignment."}, {"name": "SUPERSCRIPT", "type": "Enum", "url": "", "description": "The superscript text alignment."}, {"name": "SUBSCRIPT", "type": "Enum", "url": "", "description": "The subscript text alignment."}, {"name": "BOTTOM", "type": "Enum", "url": "", "description": "The bottom-alignment option."}, {"name": "CENTER", "type": "Enum", "url": "", "description": "The center-alignment option."}, {"name": "TOP", "type": "Enum", "url": "", "description": "The top-alignment option."}]},
{"url": "https://developers.google.com/apps-script/reference/data-studio/select-multiple", "name": "SelectMultiple", "type": "class", "methods": [{"name": "addOption", "parameters": [{"name": "optionBuilder", "type": "OptionBuilder"}], "result": "SelectMultiple", "description": "Adds a new select option."}, {"name": "setAllowOverride", "parameters": [{"name": "allowOverride", "type": "Boolean"}], "result": "SelectMultiple", "description": "Enables overriding for this config entry."}, {"name": "setHelpText", "parameters": [{"name": "helpText", "type": "String"}], "result": "SelectMultiple", "description": "Sets the help text for this configuration entry."}, {"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "SelectMultiple", "description": "Sets the unique ID for this configuration entry."}, {"name": "setIsDynamic", "parameters": [{"name": "isDynamic", "type": "Boolean"}], "result": "SelectMultiple", "description": "Sets the dynamic status for this configuration entry."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "SelectMultiple", "description": "Sets the display name for this configuration entry."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/set-credentials-response", "name": "SetCredentialsResponse", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "Object", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setIsValid", "parameters": [{"name": "isValid", "type": "Boolean"}], "result": "SetCredentialsResponse", "description": "Sets the valid status of this SetCredentialsResponse."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/info", "name": "Info", "type": "class", "methods": [{"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "Info", "description": "Sets the unique ID for this configuration entry."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "Info", "description": "Sets the text for this configuration entry."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/option-builder", "name": "OptionBuilder", "type": "class", "methods": [{"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "OptionBuilder", "description": "Sets the label of this option builder."}, {"name": "setValue", "parameters": [{"name": "value", "type": "String"}], "result": "OptionBuilder", "description": "Sets the value of this option builder."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/get-data-response", "name": "GetDataResponse", "type": "class", "methods": [{"name": "addAllRows", "parameters": [{"name": "rows", "type": "String"}], "result": "GetDataResponse", "description": "Adds multiple rows of data to this GetDataResponse."}, {"name": "addRow", "parameters": [{"name": "row", "type": "String"}], "result": "GetDataResponse", "description": "Adds a row of data to this GetDataResponse."}, {"name": "build", "parameters": [], "result": "Object", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "setFields", "parameters": [{"name": "fields", "type": "Fields"}], "result": "GetDataResponse", "description": "Sets the Fields of the builder."}, {"name": "setFiltersApplied", "parameters": [{"name": "filtersApplied", "type": "Boolean"}], "result": "GetDataResponse", "description": "Sets the filters applied status for this builder."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/select-single", "name": "SelectSingle", "type": "class", "methods": [{"name": "addOption", "parameters": [{"name": "optionBuilder", "type": "OptionBuilder"}], "result": "SelectSingle", "description": "Adds a new select option."}, {"name": "setAllowOverride", "parameters": [{"name": "allowOverride", "type": "Boolean"}], "result": "SelectSingle", "description": "Enables overriding for this config entry."}, {"name": "setHelpText", "parameters": [{"name": "helpText", "type": "String"}], "result": "SelectSingle", "description": "Sets the help text for this configuration entry."}, {"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "SelectSingle", "description": "Sets the unique ID for this configuration entry."}, {"name": "setIsDynamic", "parameters": [{"name": "isDynamic", "type": "Boolean"}], "result": "SelectSingle", "description": "Sets the dynamic status for this configuration entry."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "SelectSingle", "description": "Sets the display name for this configuration entry."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/fields", "name": "Fields", "type": "class", "methods": [{"name": "asArray", "parameters": [], "result": "Field[]", "description": "Returns a view of this object as an array."}, {"name": "build", "parameters": [], "result": "Object[]", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "forIds", "parameters": [{"name": "ids", "type": "String"}], "result": "Fields", "description": "Returns a new Fields object filtered to Fields with an ID in ids."}, {"name": "getDefaultDimension", "parameters": [], "result": "Field", "description": "Returns the default dimension to be used for the set of fields."}, {"name": "getDefaultMetric", "parameters": [], "result": "Field", "description": "Returns the default metric to be used for the set of fields."}, {"name": "getFieldById", "parameters": [{"name": "fieldId", "type": "String"}], "result": "Field", "description": "Returns a field with a given ID, or null if no field with that ID is in this Fields object."}, {"name": "newDimension", "parameters": [], "result": "Field", "description": "Returns a new dimension Field."}, {"name": "newMetric", "parameters": [], "result": "Field", "description": "Returns a new metric Field."}, {"name": "setDefaultDimension", "parameters": [{"name": "fieldId", "type": "String"}], "result": "void", "description": "Sets the default dimension to be used for the set of fields."}, {"name": "setDefaultMetric", "parameters": [{"name": "fieldId", "type": "String"}], "result": "void", "description": "Sets the default metric to be used for the set of fields."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/field", "name": "Field", "type": "class", "methods": [{"name": "getAggregation", "parameters": [], "result": "AggregationType", "description": "Returns the AggregationType of this Field."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Returns the description of this Field."}, {"name": "getFormula", "parameters": [], "result": "String", "description": "Returns the formula of this Field."}, {"name": "getGroup", "parameters": [], "result": "String", "description": "Returns the group of this Field."}, {"name": "getId", "parameters": [], "result": "String", "description": "Returns the ID of this Field."}, {"name": "getIsReaggregatable", "parameters": [], "result": "Boolean", "description": "Returns true if this field can be reaggregated, false otherwise."}, {"name": "getName", "parameters": [], "result": "String", "description": "Returns the name of this Field."}, {"name": "getType", "parameters": [], "result": "FieldType", "description": "Returns the FieldType of this Field."}, {"name": "isDefault", "parameters": [], "result": "Boolean", "description": "Returns true if this Field is the default metric or dimension."}, {"name": "isDimension", "parameters": [], "result": "Boolean", "description": "Returns true if this field is a dimension."}, {"name": "isHidden", "parameters": [], "result": "Boolean", "description": "Returns true if this Field is hidden."}, {"name": "isMetric", "parameters": [], "result": "Boolean", "description": "Returns true if this field is a metric."}, {"name": "setAggregation", "parameters": [{"name": "aggregation", "type": "AggregationType"}], "result": "Field", "description": "Sets the aggregation type of this Field."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Field", "description": "Sets the description of this Field."}, {"name": "setFormula", "parameters": [{"name": "formula", "type": "String"}], "result": "Field", "description": "Sets the formula of this Field."}, {"name": "setGroup", "parameters": [{"name": "group", "type": "String"}], "result": "Field", "description": "Sets the group of this Field."}, {"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "Field", "description": "Sets the ID of this Field."}, {"name": "setIsHidden", "parameters": [{"name": "isHidden", "type": "Boolean"}], "result": "Field", "description": "Sets the hidden status of this Field."}, {"name": "setIsReaggregatable", "parameters": [{"name": "isReaggregatable", "type": "Boolean"}], "result": "Field", "description": "Sets the reaggregation-permitted status for a Field."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Field", "description": "Sets the name of this Field."}, {"name": "setType", "parameters": [{"name": "type", "type": "FieldType"}], "result": "Field", "description": "Sets the FieldType of this Field."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/get-auth-type-response", "name": "GetAuthTypeResponse", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "Object", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setAuthType", "parameters": [{"name": "authType", "type": "AuthType"}], "result": "GetAuthTypeResponse", "description": "Sets the AuthType of the builder."}, {"name": "setHelpUrl", "parameters": [{"name": "helpUrl", "type": "String"}], "result": "GetAuthTypeResponse", "description": "Sets the help URL of the builder."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/get-schema-response", "name": "GetSchemaResponse", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "Object", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setFields", "parameters": [{"name": "fields", "type": "Fields"}], "result": "GetSchemaResponse", "description": "Sets the Fields of the builder."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/community-connector", "name": "CommunityConnector", "type": "class", "methods": [{"name": "getConfig", "parameters": [], "result": "Config", "description": "Returns a Config object."}, {"name": "getFields", "parameters": [], "result": "Fields", "description": "Returns a Fields object."}, {"name": "newAuthTypeResponse", "parameters": [], "result": "GetAuthTypeResponse", "description": "Returns a new GetAuthTypeResponse object."}, {"name": "newBigQueryConfig", "parameters": [], "result": "BigQueryConfig", "description": "Returns a new BigQueryConfig object."}, {"name": "newDebugError", "parameters": [], "result": "DebugError", "description": "Returns a new DebugError object."}, {"name": "newGetDataResponse", "parameters": [], "result": "GetDataResponse", "description": "Returns a new GetDataResponse object."}, {"name": "newGetSchemaResponse", "parameters": [], "result": "GetSchemaResponse", "description": "Returns a new GetSchemaResponse object."}, {"name": "newSetCredentialsResponse", "parameters": [], "result": "SetCredentialsResponse", "description": "Returns a new SetCredentialsResponse object."}, {"name": "newUserError", "parameters": [], "result": "UserError", "description": "Returns a new UserError object."}], "properties": [{"name": "AggregationType", "type": "AggregationType", "url": "/apps-script/reference/data-studio/aggregation-type", "description": "The AggregationType enumeration."}, {"name": "AuthType", "type": "AuthType", "url": "/apps-script/reference/data-studio/auth-type", "description": "The AuthType enumeration."}, {"name": "BigQueryParameterType", "type": "BigQueryParameterType", "url": "/apps-script/reference/data-studio/big-query-parameter-type", "description": "The BigQueryParameterType enumeration."}, {"name": "FieldType", "type": "FieldType", "url": "/apps-script/reference/data-studio/field-type", "description": "The FieldType enumeration."}]},
{"url": "https://developers.google.com/apps-script/reference/data-studio/debug-error", "name": "DebugError", "type": "class", "methods": [{"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setText", "parameters": [{"name": "text", "type": "String"}], "result": "DebugError", "description": "Sets the text of the debug error, which is only shown to admins."}, {"name": "throwException", "parameters": [], "result": "void", "description": "Triggers this exception to be thrown."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/data-studio-app", "name": "DataStudioApp", "type": "class", "methods": [{"name": "createCommunityConnector", "parameters": [], "result": "CommunityConnector", "description": "Creates a new Community Connector."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/big-query-config", "name": "BigQueryConfig", "type": "class", "methods": [{"name": "addQueryParameter", "parameters": [{"name": "name", "type": "String"}, {"name": "type", "type": "BigQueryParameterType"}, {"name": "value", "type": "String"}], "result": "BigQueryConfig", "description": "Adds a query parameter to this BigQueryConfig."}, {"name": "build", "parameters": [], "result": "Object", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setAccessToken", "parameters": [{"name": "accessToken", "type": "String"}], "result": "BigQueryConfig", "description": "Sets the access token of this BigQueryConfig."}, {"name": "setBillingProjectId", "parameters": [{"name": "billingProjectId", "type": "String"}], "result": "BigQueryConfig", "description": "Sets the billing project ID of this BigQueryConfig."}, {"name": "setQuery", "parameters": [{"name": "query", "type": "String"}], "result": "BigQueryConfig", "description": "Sets the SQL query of this BigQueryConfig."}, {"name": "setUseStandardSql", "parameters": [{"name": "useStandardSql", "type": "Boolean"}], "result": "BigQueryConfig", "description": "Determines if the query is interpreted as standard or legacy SQL."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/checkbox", "name": "Checkbox", "type": "class", "methods": [{"name": "setAllowOverride", "parameters": [{"name": "allowOverride", "type": "Boolean"}], "result": "Checkbox", "description": "Enables overriding for this config entry."}, {"name": "setHelpText", "parameters": [{"name": "helpText", "type": "String"}], "result": "Checkbox", "description": "Sets the help text for this configuration entry."}, {"name": "setId", "parameters": [{"name": "id", "type": "String"}], "result": "Checkbox", "description": "Sets the unique ID for this configuration entry."}, {"name": "setIsDynamic", "parameters": [{"name": "isDynamic", "type": "Boolean"}], "result": "Checkbox", "description": "Sets the dynamic status for this configuration entry."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Checkbox", "description": "Sets the display name for this configuration entry."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/data-studio/config", "name": "Config", "type": "class", "methods": [{"name": "build", "parameters": [], "result": "Object", "description": "Validates this object and returns it in the format needed by Data Studio."}, {"name": "newCheckbox", "parameters": [], "result": "Checkbox", "description": "Returns a new checkbox configuration entry."}, {"name": "newInfo", "parameters": [], "result": "Info", "description": "Returns a new info configuration entry."}, {"name": "newOptionBuilder", "parameters": [], "result": "OptionBuilder", "description": "Returns a new options builder."}, {"name": "newSelectMultiple", "parameters": [], "result": "SelectMultiple", "description": "Returns a new select multiple configuration entry."}, {"name": "newSelectSingle", "parameters": [], "result": "SelectSingle", "description": "Returns a new select single configuration entry."}, {"name": "newTextArea", "parameters": [], "result": "TextArea", "description": "Returns a new text area configuration entry."}, {"name": "newTextInput", "parameters": [], "result": "TextInput", "description": "Returns a new text input configuration entry."}, {"name": "printJson", "parameters": [], "result": "String", "description": "Prints the JSON representation of this object."}, {"name": "setDateRangeRequired", "parameters": [{"name": "dateRangeRequired", "type": "Boolean"}], "result": "Config", "description": "If true, a date range is provided for getData() requests."}, {"name": "setIsSteppedConfig", "parameters": [{"name": "isSteppedConfig", "type": "Boolean"}], "result": "Config", "description": "If true, getConfig() is called again with the current user configuration."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/contacts/contacts-app", "name": "ContactsApp", "type": "class", "methods": [{"name": "createContact", "parameters": [{"name": "givenName", "type": "String"}, {"name": "familyName", "type": "String"}, {"name": "email", "type": "String"}], "result": "Contact", "description": "Creates a new contact."}, {"name": "createContactGroup", "parameters": [{"name": "name", "type": "String"}], "result": "ContactGroup", "description": "Creates a contact group with the given name"}, {"name": "deleteContact", "parameters": [{"name": "contact", "type": "Contact"}], "result": "void", "description": "Deletes the contact."}, {"name": "deleteContactGroup", "parameters": [{"name": "group", "type": "ContactGroup"}], "result": "void", "description": "Deletes the contact group"}, {"name": "getContact", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Contact", "description": "Gets a contact by the email address."}, {"name": "getContactById", "parameters": [{"name": "id", "type": "String"}], "result": "Contact", "description": "Gets the contact with this id."}, {"name": "getContactGroup", "parameters": [{"name": "name", "type": "String"}], "result": "ContactGroup", "description": "Gets a contact group with the given name, or returns null if no such contact group is found."}, {"name": "getContactGroupById", "parameters": [{"name": "id", "type": "String"}], "result": "ContactGroup", "description": "Gets a contact group with the given id, or returns null if no such contact group is found."}, {"name": "getContactGroups", "parameters": [], "result": "ContactGroup[]", "description": "Gets the complete list of the user's contact groups."}, {"name": "getContacts", "parameters": [], "result": "Contact[]", "description": "Gets all of the user's contacts."}, {"name": "getContactsByAddress", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching an address."}, {"name": "getContactsByAddress", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching an address, limited to a specific field."}, {"name": "getContactsByAddress", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching an address, limited to the specified custom address label."}, {"name": "getContactsByCompany", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching the company field."}, {"name": "getContactsByCustomField", "parameters": [{"name": "query", "type": "Object"}, {"name": "label", "type": "ExtendedField"}], "result": "Contact[]", "description": "Get contacts matching a given value in a custom field."}, {"name": "getContactsByDate", "parameters": [{"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching a given month and day for a particular standard field."}, {"name": "getContactsByDate", "parameters": [{"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}, {"name": "year", "type": "Integer"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching a given month, day, and year for a particular standard field."}, {"name": "getContactsByDate", "parameters": [{"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}, {"name": "year", "type": "Integer"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a given month, day, and year for a particular custom field."}, {"name": "getContactsByDate", "parameters": [{"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a given month and day for a particular custom field."}, {"name": "getContactsByEmailAddress", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching an email address."}, {"name": "getContactsByEmailAddress", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching an email address, limited to a specific field."}, {"name": "getContactsByEmailAddress", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching an email address, limited to the specified custom email address label."}, {"name": "getContactsByGroup", "parameters": [{"name": "group", "type": "ContactGroup"}], "result": "Contact[]", "description": "Get the contacts in a given ContactGroup."}, {"name": "getContactsByIM", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching an instant messaging address."}, {"name": "getContactsByIM", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching an instant messaging address, limited to a specific field."}, {"name": "getContactsByIM", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching an instant messaging address, limited to the specified custom instant\nmessaging label."}, {"name": "getContactsByJobTitle", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching the job title field."}, {"name": "getContactsByName", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a name."}, {"name": "getContactsByName", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching a name, limited to a specific field."}, {"name": "getContactsByNotes", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching the notes field."}, {"name": "getContactsByPhone", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a phone number."}, {"name": "getContactsByPhone", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching a phone number, limited to a specific field."}, {"name": "getContactsByPhone", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a phone number, limited to the specified custom phone number label."}, {"name": "getContactsByUrl", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a URL."}, {"name": "getContactsByUrl", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching a URL, limited to a specific field."}, {"name": "getContactsByUrl", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a URL, limited to the specified custom URL label."}], "properties": [{"name": "ExtendedField", "type": "ExtendedField", "url": "/apps-script/reference/contacts/extended-field", "description": ""}, {"name": "Field", "type": "Field", "url": "/apps-script/reference/contacts/field", "description": ""}, {"name": "Gender", "type": "Gender", "url": "/apps-script/reference/contacts/gender", "description": ""}, {"name": "Month", "type": "Month", "url": "https://developers.google.com/apps-script/reference/base/month.html", "description": ""}, {"name": "Priority", "type": "Priority", "url": "/apps-script/reference/contacts/priority", "description": ""}, {"name": "Sensitivity", "type": "Sensitivity", "url": "/apps-script/reference/contacts/sensitivity", "description": ""}]},
{"url": "https://developers.google.com/apps-script/reference/calendar/visibility", "name": "Visibility", "type": "enum", "methods": [], "properties": [{"name": "CONFIDENTIAL", "type": "Enum", "url": "", "description": "The event is private. This value is provided for compatibility reasons."}, {"name": "DEFAULT", "type": "Enum", "url": "", "description": "Uses the default visibility for events on the calendar."}, {"name": "PRIVATE", "type": "Enum", "url": "", "description": "The event is private and only event attendees may view event details."}, {"name": "PUBLIC", "type": "Enum", "url": "", "description": "The event is public and event details are visible to all readers of the calendar."}]},
{"url": "https://developers.google.com/apps-script/reference/calendar/event-color", "name": "EventColor", "type": "enum", "methods": [], "properties": [{"name": "PALE_BLUE", "type": "Enum", "url": "", "description": "\n\n\n Pale Blue (\"1\")."}, {"name": "PALE_GREEN", "type": "Enum", "url": "", "description": "\n\n\n Pale Green (\"2\")."}, {"name": "MAUVE", "type": "Enum", "url": "", "description": "\n\n\n Mauve (\"3\")."}, {"name": "PALE_RED", "type": "Enum", "url": "", "description": "\n\n\n Pale Red (\"4\")."}, {"name": "YELLOW", "type": "Enum", "url": "", "description": "\n\n\n Yellow (\"5\")."}, {"name": "ORANGE", "type": "Enum", "url": "", "description": "\n\n\n Orange (\"6\")."}, {"name": "CYAN", "type": "Enum", "url": "", "description": "\n\n\n Cyan (\"7\")."}, {"name": "GRAY", "type": "Enum", "url": "", "description": "\n\n\n Gray (\"8\")."}, {"name": "BLUE", "type": "Enum", "url": "", "description": "\n\n\n Blue (\"9\")."}, {"name": "GREEN", "type": "Enum", "url": "", "description": "\n\n\n Green (\"10\")."}, {"name": "RED", "type": "Enum", "url": "", "description": "\n\n\n Red (\"11\")."}]},
{"url": "https://developers.google.com/apps-script/reference/calendar/guest-status", "name": "GuestStatus", "type": "enum", "methods": [], "properties": [{"name": "INVITED", "type": "Enum", "url": "", "description": "The guest has been invited, but has not indicated whether they are attending."}, {"name": "MAYBE", "type": "Enum", "url": "", "description": "The guest has indicated they might attend."}, {"name": "NO", "type": "Enum", "url": "", "description": "The guest has indicated they are not attending."}, {"name": "OWNER", "type": "Enum", "url": "", "description": "The guest is the owner of the event."}, {"name": "YES", "type": "Enum", "url": "", "description": "The guest has indicated they are attending."}]},
{"url": "https://developers.google.com/apps-script/reference/calendar/color", "name": "Color", "type": "enum", "methods": [], "properties": [{"name": "BLUE", "type": "Enum", "url": "", "description": "\n\n\n Blue (#2952A3)."}, {"name": "BROWN", "type": "Enum", "url": "", "description": "\n\n\n Brown (#8D6F47)."}, {"name": "CHARCOAL", "type": "Enum", "url": "", "description": "\n\n\n Charcoal (#4E5D6C)."}, {"name": "CHESTNUT", "type": "Enum", "url": "", "description": "\n\n\n Chestnut (#865A5A)."}, {"name": "GRAY", "type": "Enum", "url": "", "description": "\n\n\n Gray (#5A6986)."}, {"name": "GREEN", "type": "Enum", "url": "", "description": "\n\n\n Green (#0D7813)."}, {"name": "INDIGO", "type": "Enum", "url": "", "description": "\n\n\n Indigo (#5229A3)."}, {"name": "LIME", "type": "Enum", "url": "", "description": "\n\n\n Lime (#528800)."}, {"name": "MUSTARD", "type": "Enum", "url": "", "description": "\n\n\n Mustard (#88880E)."}, {"name": "OLIVE", "type": "Enum", "url": "", "description": "\n\n\n Olive (#6E6E41)."}, {"name": "ORANGE", "type": "Enum", "url": "", "description": "\n\n\n Orange (#BE6D00)."}, {"name": "PINK", "type": "Enum", "url": "", "description": "\n\n\n Pink (#B1365F)."}, {"name": "PLUM", "type": "Enum", "url": "", "description": "\n\n\n Plum (#705770)."}, {"name": "PURPLE", "type": "Enum", "url": "", "description": "\n\n\n Purple (#7A367A)."}, {"name": "RED", "type": "Enum", "url": "", "description": "\n\n\n Red (#A32929)."}, {"name": "RED_ORANGE", "type": "Enum", "url": "", "description": "\n\n\n Red-Orange (#B1440E)."}, {"name": "SEA_BLUE", "type": "Enum", "url": "", "description": "\n\n\n Sea Blue (#29527A)."}, {"name": "SLATE", "type": "Enum", "url": "", "description": "\n\n\n Slate (#4A716C)."}, {"name": "TEAL", "type": "Enum", "url": "", "description": "\n\n\n Teal (#28754E)."}, {"name": "TURQOISE", "type": "Enum", "url": "", "description": "\n\n\n Turquoise (#1B887A)."}, {"name": "YELLOW", "type": "Enum", "url": "", "description": "\n\n\n Yellow (#AB8B00)."}]},
{"url": "https://developers.google.com/apps-script/reference/contacts", "name": "Contacts", "type": "contacts", "methods": [{"name": "deleteAddressField", "parameters": [], "result": "void", "description": "Deletes this address field."}, {"name": "getAddress", "parameters": [], "result": "String", "description": "Get the address for this field."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "isPrimary", "parameters": [], "result": "Boolean", "description": "Gets whether this is the primary field value."}, {"name": "setAddress", "parameters": [{"name": "address", "type": "String"}], "result": "AddressField", "description": "Sets the address of this field."}, {"name": "setAsPrimary", "parameters": [], "result": "AddressField", "description": "Sets this field to primary."}, {"name": "setLabel", "parameters": [{"name": "field", "type": "Field"}], "result": "AddressField", "description": "Sets the label of this field."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "AddressField", "description": "Sets the label of this field."}, {"name": "deleteCompanyField", "parameters": [], "result": "void", "description": "Deletes this company field."}, {"name": "getCompanyName", "parameters": [], "result": "String", "description": "Gets the company name."}, {"name": "getJobTitle", "parameters": [], "result": "String", "description": "Gets the job title."}, {"name": "isPrimary", "parameters": [], "result": "Boolean", "description": "Gets whether this is the primary company."}, {"name": "setAsPrimary", "parameters": [], "result": "CompanyField", "description": "Sets this company as the primary company, and unsets whatever company was previously primary."}, {"name": "setCompanyName", "parameters": [{"name": "company", "type": "String"}], "result": "CompanyField", "description": "Sets the company name."}, {"name": "setJobTitle", "parameters": [{"name": "title", "type": "String"}], "result": "CompanyField", "description": "Sets the job title."}, {"name": "addAddress", "parameters": [{"name": "label", "type": "Object"}, {"name": "address", "type": "String"}], "result": "AddressField", "description": "Adds an address to the contact with either a standard or custom label."}, {"name": "addCompany", "parameters": [{"name": "company", "type": "String"}, {"name": "title", "type": "String"}], "result": "CompanyField", "description": "Adds a company to the contact."}, {"name": "addCustomField", "parameters": [{"name": "label", "type": "Object"}, {"name": "content", "type": "Object"}], "result": "CustomField", "description": "Adds a custom field to the contact with either an extended or custom label."}, {"name": "addDate", "parameters": [{"name": "label", "type": "Object"}, {"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}, {"name": "year", "type": "Integer"}], "result": "DateField", "description": "Adds a date to the contact with either an standard or custom label."}, {"name": "addEmail", "parameters": [{"name": "label", "type": "Object"}, {"name": "address", "type": "String"}], "result": "EmailField", "description": "Add an email address with a standard label (home, work, etc.) or a custom label"}, {"name": "addIM", "parameters": [{"name": "label", "type": "Object"}, {"name": "address", "type": "String"}], "result": "IMField", "description": "Adds an IM address to the contact with either a standard or custom label."}, {"name": "addPhone", "parameters": [{"name": "label", "type": "Object"}, {"name": "number", "type": "String"}], "result": "PhoneField", "description": "Adds a phone number to the contact with either a standard or custom label."}, {"name": "addToGroup", "parameters": [{"name": "group", "type": "ContactGroup"}], "result": "Contact", "description": "Adds this contact to the given contact group."}, {"name": "addUrl", "parameters": [{"name": "label", "type": "Object"}, {"name": "url", "type": "String"}], "result": "UrlField", "description": "Adds a URL to the contact with either a standard or custom label."}, {"name": "deleteContact", "parameters": [], "result": "void", "description": "Deletes this contact."}, {"name": "getAddresses", "parameters": [], "result": "AddressField[]", "description": "Gets all the addresses for this contact."}, {"name": "getAddresses", "parameters": [{"name": "label", "type": "Object"}], "result": "AddressField[]", "description": "Gets all the addresses for this contact matching a particular field."}, {"name": "getCompanies", "parameters": [], "result": "CompanyField[]", "description": "Gets all the companies for this contact."}, {"name": "getContactGroups", "parameters": [], "result": "ContactGroup[]", "description": "Gets all the contact groups that contain this contact."}, {"name": "getCustomFields", "parameters": [], "result": "CustomField[]", "description": "Gets all the custom fields for this contact."}, {"name": "getCustomFields", "parameters": [{"name": "label", "type": "Object"}], "result": "CustomField[]", "description": "Gets all the custom fields for this contact matching a particular field."}, {"name": "getDates", "parameters": [], "result": "DateField[]", "description": "Gets all the dates for this contact."}, {"name": "getDates", "parameters": [{"name": "label", "type": "Object"}], "result": "DateField[]", "description": "Gets all the dates for this contact matching a particular field."}, {"name": "getEmails", "parameters": [], "result": "EmailField[]", "description": "Gets the email addresses of this contact."}, {"name": "getEmails", "parameters": [{"name": "label", "type": "Object"}], "result": "EmailField[]", "description": "Gets the email addresses for this contact matching a particular field."}, {"name": "getFamilyName", "parameters": [], "result": "String", "description": "Gets the family name (last name) of the contact as a string."}, {"name": "getFullName", "parameters": [], "result": "String", "description": "Gets the full name (given name and last name) of the contact as a string."}, {"name": "getGivenName", "parameters": [], "result": "String", "description": "Gets the given name (first name) of the contact as a string."}, {"name": "getIMs", "parameters": [], "result": "IMField[]", "description": "Gets all the IM addresses for this contact."}, {"name": "getIMs", "parameters": [{"name": "label", "type": "Object"}], "result": "IMField[]", "description": "Gets all the IM addresses for this contact matching a particular field."}, {"name": "getId", "parameters": [], "result": "String", "description": "Returns the unique id of this contact."}, {"name": "getInitials", "parameters": [], "result": "String", "description": "Gets the contact's initials."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Gets the date this contact was last updated."}, {"name": "getMaidenName", "parameters": [], "result": "String", "description": "Gets the maiden name of the contact as a string."}, {"name": "getMiddleName", "parameters": [], "result": "String", "description": "Gets the middle name of the contact as a string."}, {"name": "getNickname", "parameters": [], "result": "String", "description": "Gets the nickname of the contact as a string."}, {"name": "getNotes", "parameters": [], "result": "String", "description": "Gets the notes associated with this contact, or an empty string if there are no notes."}, {"name": "getPhones", "parameters": [], "result": "PhoneField[]", "description": "Gets all the phone numbers for this contact."}, {"name": "getPhones", "parameters": [{"name": "label", "type": "Object"}], "result": "PhoneField[]", "description": "Gets all the phone numbers for this contact matching a particular field."}, {"name": "getPrefix", "parameters": [], "result": "String", "description": "Gets the prefix to the contact's name."}, {"name": "getPrimaryEmail", "parameters": [], "result": "String", "description": "Gets the primary email address of the contact as a string."}, {"name": "getShortName", "parameters": [], "result": "String", "description": "Gets the short name of the contact as a string."}, {"name": "getSuffix", "parameters": [], "result": "String", "description": "Gets the suffix to the contact's name."}, {"name": "getUrls", "parameters": [], "result": "UrlField[]", "description": "Gets all the URLs for this contact."}, {"name": "getUrls", "parameters": [{"name": "label", "type": "Object"}], "result": "UrlField[]", "description": "Gets all the URLs for this contact matching a particular field."}, {"name": "removeFromGroup", "parameters": [{"name": "group", "type": "ContactGroup"}], "result": "Contact", "description": "Removes this contact from the given contact group."}, {"name": "setFamilyName", "parameters": [{"name": "familyName", "type": "String"}], "result": "Contact", "description": "Sets the family name (last name) of the contact."}, {"name": "setFullName", "parameters": [{"name": "fullName", "type": "String"}], "result": "Contact", "description": "Sets the full name (given name and last name) of the contact."}, {"name": "setGivenName", "parameters": [{"name": "givenName", "type": "String"}], "result": "Contact", "description": "Sets the given name (first name) of the contact."}, {"name": "setInitials", "parameters": [{"name": "initials", "type": "String"}], "result": "Contact", "description": "Sets the contact's initials."}, {"name": "setMaidenName", "parameters": [{"name": "maidenName", "type": "String"}], "result": "Contact", "description": "Sets the maiden name of the contact."}, {"name": "setMiddleName", "parameters": [{"name": "middleName", "type": "String"}], "result": "Contact", "description": "Sets the middle name of the contact."}, {"name": "setNickname", "parameters": [{"name": "nickname", "type": "String"}], "result": "Contact", "description": "Sets the nickname of the contact."}, {"name": "setNotes", "parameters": [{"name": "notes", "type": "String"}], "result": "Contact", "description": "Sets the notes associated with this contact."}, {"name": "setPrefix", "parameters": [{"name": "prefix", "type": "String"}], "result": "Contact", "description": "Sets the prefix to the contact's name."}, {"name": "setShortName", "parameters": [{"name": "shortName", "type": "String"}], "result": "Contact", "description": "Sets the short name of the contact."}, {"name": "setSuffix", "parameters": [{"name": "suffix", "type": "String"}], "result": "Contact", "description": "Sets the suffix to the contact's name."}, {"name": "addContact", "parameters": [{"name": "contact", "type": "Contact"}], "result": "ContactGroup", "description": "Adds the given contact to this group"}, {"name": "deleteGroup", "parameters": [], "result": "void", "description": "Deletes this contact group."}, {"name": "getContacts", "parameters": [], "result": "Contact[]", "description": "Gets all the contacts in this contact group."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the id of this contact group."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of this contact group."}, {"name": "isSystemGroup", "parameters": [], "result": "Boolean", "description": "Gets a boolean value to determine whether this contact group is a system group (undeletable) or\nnot."}, {"name": "removeContact", "parameters": [{"name": "contact", "type": "Contact"}], "result": "ContactGroup", "description": "Removes the given contact from this group"}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "ContactGroup", "description": "Sets the name of this contact group."}, {"name": "createContact", "parameters": [{"name": "givenName", "type": "String"}, {"name": "familyName", "type": "String"}, {"name": "email", "type": "String"}], "result": "Contact", "description": "Creates a new contact."}, {"name": "createContactGroup", "parameters": [{"name": "name", "type": "String"}], "result": "ContactGroup", "description": "Creates a contact group with the given name"}, {"name": "deleteContact", "parameters": [{"name": "contact", "type": "Contact"}], "result": "void", "description": "Deletes the contact."}, {"name": "deleteContactGroup", "parameters": [{"name": "group", "type": "ContactGroup"}], "result": "void", "description": "Deletes the contact group"}, {"name": "getContact", "parameters": [{"name": "emailAddress", "type": "String"}], "result": "Contact", "description": "Gets a contact by the email address."}, {"name": "getContactById", "parameters": [{"name": "id", "type": "String"}], "result": "Contact", "description": "Gets the contact with this id."}, {"name": "getContactGroup", "parameters": [{"name": "name", "type": "String"}], "result": "ContactGroup", "description": "Gets a contact group with the given name, or returns null if no such contact group is found."}, {"name": "getContactGroupById", "parameters": [{"name": "id", "type": "String"}], "result": "ContactGroup", "description": "Gets a contact group with the given id, or returns null if no such contact group is found."}, {"name": "getContactGroups", "parameters": [], "result": "ContactGroup[]", "description": "Gets the complete list of the user's contact groups."}, {"name": "getContacts", "parameters": [], "result": "Contact[]", "description": "Gets all of the user's contacts."}, {"name": "getContactsByAddress", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching an address."}, {"name": "getContactsByAddress", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching an address, limited to a specific field."}, {"name": "getContactsByAddress", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching an address, limited to the specified custom address label."}, {"name": "getContactsByCompany", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching the company field."}, {"name": "getContactsByCustomField", "parameters": [{"name": "query", "type": "Object"}, {"name": "label", "type": "ExtendedField"}], "result": "Contact[]", "description": "Get contacts matching a given value in a custom field."}, {"name": "getContactsByDate", "parameters": [{"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching a given month and day for a particular standard field."}, {"name": "getContactsByDate", "parameters": [{"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}, {"name": "year", "type": "Integer"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching a given month, day, and year for a particular standard field."}, {"name": "getContactsByDate", "parameters": [{"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}, {"name": "year", "type": "Integer"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a given month, day, and year for a particular custom field."}, {"name": "getContactsByDate", "parameters": [{"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a given month and day for a particular custom field."}, {"name": "getContactsByEmailAddress", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching an email address."}, {"name": "getContactsByEmailAddress", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching an email address, limited to a specific field."}, {"name": "getContactsByEmailAddress", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching an email address, limited to the specified custom email address label."}, {"name": "getContactsByGroup", "parameters": [{"name": "group", "type": "ContactGroup"}], "result": "Contact[]", "description": "Get the contacts in a given ContactGroup."}, {"name": "getContactsByIM", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching an instant messaging address."}, {"name": "getContactsByIM", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching an instant messaging address, limited to a specific field."}, {"name": "getContactsByIM", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching an instant messaging address, limited to the specified custom instant\nmessaging label."}, {"name": "getContactsByJobTitle", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching the job title field."}, {"name": "getContactsByName", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a name."}, {"name": "getContactsByName", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching a name, limited to a specific field."}, {"name": "getContactsByNotes", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching the notes field."}, {"name": "getContactsByPhone", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a phone number."}, {"name": "getContactsByPhone", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching a phone number, limited to a specific field."}, {"name": "getContactsByPhone", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a phone number, limited to the specified custom phone number label."}, {"name": "getContactsByUrl", "parameters": [{"name": "query", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a URL."}, {"name": "getContactsByUrl", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "Field"}], "result": "Contact[]", "description": "Get contacts matching a URL, limited to a specific field."}, {"name": "getContactsByUrl", "parameters": [{"name": "query", "type": "String"}, {"name": "label", "type": "String"}], "result": "Contact[]", "description": "Get contacts matching a URL, limited to the specified custom URL label."}, {"name": "deleteCustomField", "parameters": [], "result": "void", "description": "Deletes this field."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "getValue", "parameters": [], "result": "Object", "description": "Gets the value of the field."}, {"name": "setLabel", "parameters": [{"name": "field", "type": "ExtendedField"}], "result": "CustomField", "description": "Sets the label of this field."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "CustomField", "description": "Sets the label of this field."}, {"name": "setValue", "parameters": [{"name": "value", "type": "Object"}], "result": "CustomField", "description": "Sets the value of this field."}, {"name": "deleteDateField", "parameters": [], "result": "void", "description": "Deletes this date."}, {"name": "getDay", "parameters": [], "result": "Integer", "description": "Gets the day of the month for this date."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "getMonth", "parameters": [], "result": "Month", "description": "Gets the month for this date."}, {"name": "getYear", "parameters": [], "result": "Integer", "description": "Gets the year for this date."}, {"name": "setDate", "parameters": [{"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}], "result": "DateField", "description": "Sets the date to this day, without a year."}, {"name": "setDate", "parameters": [{"name": "month", "type": "Month"}, {"name": "day", "type": "Integer"}, {"name": "year", "type": "Integer"}], "result": "DateField", "description": "Sets the date to this day."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "Field"}], "result": "DateField", "description": "Sets the label of this field, such as 'Birthday' or 'Anniversary'."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "DateField", "description": "Sets the label of this field."}, {"name": "deleteEmailField", "parameters": [], "result": "void", "description": "Deletes this email address from the Contact."}, {"name": "getAddress", "parameters": [], "result": "String", "description": "Get the address for this field."}, {"name": "getDisplayName", "parameters": [], "result": "String", "description": "Returns the display name for this email address."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "isPrimary", "parameters": [], "result": "Boolean", "description": "Gets whether this is the primary field value."}, {"name": "setAddress", "parameters": [{"name": "address", "type": "String"}], "result": "EmailField", "description": "Sets the address of this field."}, {"name": "setAsPrimary", "parameters": [], "result": "EmailField", "description": "Sets this field to primary."}, {"name": "setDisplayName", "parameters": [{"name": "name", "type": "String"}], "result": "EmailField", "description": "Sets the display name for this email address."}, {"name": "setLabel", "parameters": [{"name": "field", "type": "Field"}], "result": "EmailField", "description": "Sets the label of this field."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "EmailField", "description": "Sets the label of this field."}, {"name": "deleteIMField", "parameters": [], "result": "void", "description": "Deletes this instant messaging field."}, {"name": "getAddress", "parameters": [], "result": "String", "description": "Get the address for this field."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "isPrimary", "parameters": [], "result": "Boolean", "description": "Gets whether this is the primary field value."}, {"name": "setAddress", "parameters": [{"name": "address", "type": "String"}], "result": "IMField", "description": "Sets the address of this field."}, {"name": "setAsPrimary", "parameters": [], "result": "IMField", "description": "Sets this field to primary."}, {"name": "setLabel", "parameters": [{"name": "field", "type": "Field"}], "result": "IMField", "description": "Sets the label of this field."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "IMField", "description": "Sets the label of this field."}, {"name": "deletePhoneField", "parameters": [], "result": "void", "description": "Deletes this phone number field."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "getPhoneNumber", "parameters": [], "result": "String", "description": "Get the phone number for this field."}, {"name": "isPrimary", "parameters": [], "result": "Boolean", "description": "Gets whether this is the primary field value."}, {"name": "setAsPrimary", "parameters": [], "result": "PhoneField", "description": "Sets this field to primary."}, {"name": "setLabel", "parameters": [{"name": "field", "type": "Field"}], "result": "PhoneField", "description": "Sets the label of this field."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "PhoneField", "description": "Sets the label of this field."}, {"name": "setPhoneNumber", "parameters": [{"name": "number", "type": "String"}], "result": "PhoneField", "description": "Sets the phone number for this field."}, {"name": "deleteUrlField", "parameters": [], "result": "void", "description": "Deletes this URL field."}, {"name": "getAddress", "parameters": [], "result": "String", "description": "Get the address for this field."}, {"name": "getLabel", "parameters": [], "result": "Object", "description": "Gets the label for this field."}, {"name": "isPrimary", "parameters": [], "result": "Boolean", "description": "Gets whether this is the primary field value."}, {"name": "setAddress", "parameters": [{"name": "address", "type": "String"}], "result": "UrlField", "description": "Sets the address of this field."}, {"name": "setAsPrimary", "parameters": [], "result": "UrlField", "description": "Sets this field to primary."}, {"name": "setLabel", "parameters": [{"name": "field", "type": "Field"}], "result": "UrlField", "description": "Sets the label of this field."}, {"name": "setLabel", "parameters": [{"name": "label", "type": "String"}], "result": "UrlField", "description": "Sets the label of this field."}], "properties": [{"name": "ExtendedField", "type": "ExtendedField", "url": "/apps-script/reference/contacts/extended-field", "description": ""}, {"name": "Field", "type": "Field", "url": "/apps-script/reference/contacts/field", "description": ""}, {"name": "Gender", "type": "Gender", "url": "/apps-script/reference/contacts/gender", "description": ""}, {"name": "Month", "type": "Month", "url": "https://developers.google.com/apps-script/reference/base/month.html", "description": ""}, {"name": "Priority", "type": "Priority", "url": "/apps-script/reference/contacts/priority", "description": ""}, {"name": "Sensitivity", "type": "Sensitivity", "url": "/apps-script/reference/contacts/sensitivity", "description": ""}, {"name": "HOBBY", "type": "Enum", "url": "", "description": "the contact's hobby"}, {"name": "MILEAGE", "type": "Enum", "url": "", "description": "the contact's mileage"}, {"name": "LANGUAGE", "type": "Enum", "url": "", "description": "the contact's language"}, {"name": "GENDER", "type": "Enum", "url": "", "description": "the contact's gender"}, {"name": "BILLING_INFORMATION", "type": "Enum", "url": "", "description": "the contact's billing information"}, {"name": "DIRECTORY_SERVER", "type": "Enum", "url": "", "description": "the contact's directory server"}, {"name": "SENSITIVITY", "type": "Enum", "url": "", "description": "the contact's sensitivity"}, {"name": "PRIORITY", "type": "Enum", "url": "", "description": "the contact's priority"}, {"name": "HOME", "type": "Enum", "url": "", "description": "the contact's home information"}, {"name": "WORK", "type": "Enum", "url": "", "description": "the contact's work information"}, {"name": "USER", "type": "Enum", "url": "", "description": "the contact's user information"}, {"name": "OTHER", "type": "Enum", "url": "", "description": "the contact's other information"}, {"name": "FULL_NAME", "type": "Enum", "url": "", "description": "the contact's full name"}, {"name": "GIVEN_NAME", "type": "Enum", "url": "", "description": "the contact's given (first) name"}, {"name": "MIDDLE_NAME", "type": "Enum", "url": "", "description": "the contact's middle name"}, {"name": "FAMILY_NAME", "type": "Enum", "url": "", "description": "the contact's family (last) name"}, {"name": "MAIDEN_NAME", "type": "Enum", "url": "", "description": "the contact's maiden name"}, {"name": "NICKNAME", "type": "Enum", "url": "", "description": "the contact's nickname"}, {"name": "SHORT_NAME", "type": "Enum", "url": "", "description": "the contact's short name"}, {"name": "INITIALS", "type": "Enum", "url": "", "description": "the contact's initials"}, {"name": "PREFIX", "type": "Enum", "url": "", "description": "the prefix for the contact's name"}, {"name": "SUFFIX", "type": "Enum", "url": "", "description": "the suffix for the contact's name"}, {"name": "HOME_EMAIL", "type": "Enum", "url": "", "description": "the contact's home email address"}, {"name": "WORK_EMAIL", "type": "Enum", "url": "", "description": "the contact's work email address"}, {"name": "BIRTHDAY", "type": "Enum", "url": "", "description": "the contact's birthday"}, {"name": "ANNIVERSARY", "type": "Enum", "url": "", "description": "the contact's anniversary"}, {"name": "HOME_ADDRESS", "type": "Enum", "url": "", "description": "the contact's home address"}, {"name": "WORK_ADDRESS", "type": "Enum", "url": "", "description": "the contact's work address"}, {"name": "ASSISTANT_PHONE", "type": "Enum", "url": "", "description": "the contact's assistant's phone number"}, {"name": "CALLBACK_PHONE", "type": "Enum", "url": "", "description": "the contact's callback phone number"}, {"name": "MAIN_PHONE", "type": "Enum", "url": "", "description": "the contact's main phone number"}, {"name": "PAGER", "type": "Enum", "url": "", "description": "the contact's pager number"}, {"name": "HOME_FAX", "type": "Enum", "url": "", "description": "the contact's home fax number"}, {"name": "WORK_FAX", "type": "Enum", "url": "", "description": "the contact's work fax number"}, {"name": "HOME_PHONE", "type": "Enum", "url": "", "description": "the contact's home phone number"}, {"name": "WORK_PHONE", "type": "Enum", "url": "", "description": "the contact's work phone number"}, {"name": "MOBILE_PHONE", "type": "Enum", "url": "", "description": "the contact's mobile phone number"}, {"name": "GOOGLE_VOICE", "type": "Enum", "url": "", "description": "the contact's Google Voice number"}, {"name": "NOTES", "type": "Enum", "url": "", "description": "notes about the contact"}, {"name": "GOOGLE_TALK", "type": "Enum", "url": "", "description": "the contact's Google Talk identifier"}, {"name": "AIM", "type": "Enum", "url": "", "description": "the contact's AIM identifier"}, {"name": "YAHOO", "type": "Enum", "url": "", "description": "the contact's Yahoo instant messaging identifier"}, {"name": "SKYPE", "type": "Enum", "url": "", "description": "the contact's Skype identifier"}, {"name": "QQ", "type": "Enum", "url": "", "description": "the contact's QQ identifer"}, {"name": "MSN", "type": "Enum", "url": "", "description": "the contact's MSN identifier"}, {"name": "ICQ", "type": "Enum", "url": "", "description": "the contact's ICQ identifier"}, {"name": "JABBER", "type": "Enum", "url": "", "description": "the contact's Jabber identifier"}, {"name": "BLOG", "type": "Enum", "url": "", "description": "the contact's blog URL"}, {"name": "FTP", "type": "Enum", "url": "", "description": "the contact's FTP URL"}, {"name": "PROFILE", "type": "Enum", "url": "", "description": "the contact's profile URL"}, {"name": "HOME_PAGE", "type": "Enum", "url": "", "description": "the contact's home page URL"}, {"name": "WORK_WEBSITE", "type": "Enum", "url": "", "description": "the contact's work website URL"}, {"name": "HOME_WEBSITE", "type": "Enum", "url": "", "description": "the contact's home website URL"}, {"name": "JOB_TITLE", "type": "Enum", "url": "", "description": "the contact's job title"}, {"name": "COMPANY", "type": "Enum", "url": "", "description": "the contact's company"}, {"name": "MALE", "type": "Enum", "url": "", "description": "male gender"}, {"name": "FEMALE", "type": "Enum", "url": "", "description": "female gender"}, {"name": "HIGH", "type": "Enum", "url": "", "description": "high priority"}, {"name": "LOW", "type": "Enum", "url": "", "description": "low priority"}, {"name": "NORMAL", "type": "Enum", "url": "", "description": "normal priority"}, {"name": "CONFIDENTIAL", "type": "Enum", "url": "", "description": "confidential sensitivity"}, {"name": "NORMAL", "type": "Enum", "url": "", "description": "normal sensitivity"}, {"name": "PERSONAL", "type": "Enum", "url": "", "description": "personal sensitivity"}, {"name": "PRIVATE", "type": "Enum", "url": "", "description": "private sensitivity"}]},
{"url": "https://developers.google.com/apps-script/reference/calendar/recurrence-rule", "name": "RecurrenceRule", "type": "class", "methods": [{"name": "addDailyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a daily basis."}, {"name": "addDailyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a daily basis."}, {"name": "addDate", "parameters": [{"name": "date", "type": "Date"}], "result": "EventRecurrence", "description": "Adds a rule that causes the event to recur on a specific date."}, {"name": "addDateExclusion", "parameters": [{"name": "date", "type": "Date"}], "result": "EventRecurrence", "description": "Adds a rule that excludes an occurrence for a specific date."}, {"name": "addMonthlyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a monthly basis."}, {"name": "addMonthlyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a monthly basis."}, {"name": "addWeeklyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a weekly basis."}, {"name": "addWeeklyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a weekly basis."}, {"name": "addYearlyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a yearly basis."}, {"name": "addYearlyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a yearly basis."}, {"name": "interval", "parameters": [{"name": "interval", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply at this interval of the rule's time unit."}, {"name": "onlyInMonth", "parameters": [{"name": "month", "type": "Month"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to a specific month."}, {"name": "onlyInMonths", "parameters": [{"name": "months", "type": "Month"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to specific months."}, {"name": "onlyOnMonthDay", "parameters": [{"name": "day", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to a specific day of the month."}, {"name": "onlyOnMonthDays", "parameters": [{"name": "days", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to specific days of the month."}, {"name": "onlyOnWeek", "parameters": [{"name": "week", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to a specific week of the year."}, {"name": "onlyOnWeekday", "parameters": [{"name": "day", "type": "Weekday"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to a specific day of the week."}, {"name": "onlyOnWeekdays", "parameters": [{"name": "days", "type": "Weekday"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to specific days of the week."}, {"name": "onlyOnWeeks", "parameters": [{"name": "weeks", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to specific weeks of the year."}, {"name": "onlyOnYearDay", "parameters": [{"name": "day", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to a specific day of the year."}, {"name": "onlyOnYearDays", "parameters": [{"name": "days", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to specific days of the year."}, {"name": "setTimeZone", "parameters": [{"name": "timeZone", "type": "String"}], "result": "EventRecurrence", "description": "Sets the time zone for this recurrence."}, {"name": "times", "parameters": [{"name": "times", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to end after a given number of occurrences."}, {"name": "until", "parameters": [{"name": "endDate", "type": "Date"}], "result": "RecurrenceRule", "description": "Configures the rule to end on a given date (inclusive)."}, {"name": "weekStartsOn", "parameters": [{"name": "day", "type": "Weekday"}], "result": "RecurrenceRule", "description": "Configures which day a week starts on, for the purposes of applying the rule."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/calendar/event-recurrence", "name": "EventRecurrence", "type": "class", "methods": [{"name": "addDailyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a daily basis."}, {"name": "addDailyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a daily basis."}, {"name": "addDate", "parameters": [{"name": "date", "type": "Date"}], "result": "EventRecurrence", "description": "Adds a rule that causes the event to recur on a specific date."}, {"name": "addDateExclusion", "parameters": [{"name": "date", "type": "Date"}], "result": "EventRecurrence", "description": "Adds a rule that excludes an occurrence for a specific date."}, {"name": "addMonthlyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a monthly basis."}, {"name": "addMonthlyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a monthly basis."}, {"name": "addWeeklyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a weekly basis."}, {"name": "addWeeklyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a weekly basis."}, {"name": "addYearlyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a yearly basis."}, {"name": "addYearlyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a yearly basis."}, {"name": "setTimeZone", "parameters": [{"name": "timeZone", "type": "String"}], "result": "EventRecurrence", "description": "Sets the time zone for this recurrence."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/calendar/event-guest", "name": "EventGuest", "type": "class", "methods": [{"name": "getAdditionalGuests", "parameters": [], "result": "Integer", "description": "Gets the number of additional people that this guest has said are attending."}, {"name": "getEmail", "parameters": [], "result": "String", "description": "Gets the email address of the guest."}, {"name": "getGuestStatus", "parameters": [], "result": "GuestStatus", "description": "Gets the status of the guest for the event."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the guest."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/calendar/calendar-event", "name": "CalendarEvent", "type": "class", "methods": [{"name": "addEmailReminder", "parameters": [{"name": "minutesBefore", "type": "Integer"}], "result": "CalendarEvent", "description": "Adds a new email reminder to the event."}, {"name": "addGuest", "parameters": [{"name": "email", "type": "String"}], "result": "CalendarEvent", "description": "Adds a guest to the event."}, {"name": "addPopupReminder", "parameters": [{"name": "minutesBefore", "type": "Integer"}], "result": "CalendarEvent", "description": "Adds a new popup reminder to the event."}, {"name": "addSmsReminder", "parameters": [{"name": "minutesBefore", "type": "Integer"}], "result": "CalendarEvent", "description": "Adds a new SMS reminder to the event."}, {"name": "anyoneCanAddSelf", "parameters": [], "result": "Boolean", "description": "Determines whether anyone can invite themselves."}, {"name": "deleteEvent", "parameters": [], "result": "void", "description": "Deletes the event."}, {"name": "deleteTag", "parameters": [{"name": "key", "type": "String"}], "result": "CalendarEvent", "description": "Deletes a key/value tag from the event."}, {"name": "getAllDayEndDate", "parameters": [], "result": "Date", "description": "Gets the date on which this all-day calendar event ends."}, {"name": "getAllDayStartDate", "parameters": [], "result": "Date", "description": "Gets the date on which this all-day calendar event begins."}, {"name": "getAllTagKeys", "parameters": [], "result": "String[]", "description": "Gets all keys for tags that have been set on the event."}, {"name": "getColor", "parameters": [], "result": "String", "description": "Returns the color of the calendar event."}, {"name": "getCreators", "parameters": [], "result": "String[]", "description": "Gets the creators of the event."}, {"name": "getDateCreated", "parameters": [], "result": "Date", "description": "Gets the date the event was created."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description of the event."}, {"name": "getEmailReminders", "parameters": [], "result": "Integer[]", "description": "Gets the minute values for all email reminders for the event."}, {"name": "getEndTime", "parameters": [], "result": "Date", "description": "Gets the date and time at which this calendar event ends."}, {"name": "getEventSeries", "parameters": [], "result": "CalendarEventSeries", "description": "Gets the series of recurring events that this event belongs to."}, {"name": "getGuestByEmail", "parameters": [{"name": "email", "type": "String"}], "result": "EventGuest", "description": "Gets a guest by email address."}, {"name": "getGuestList", "parameters": [], "result": "EventGuest[]", "description": "Gets the guests for the event, not including the event owner."}, {"name": "getGuestList", "parameters": [{"name": "includeOwner", "type": "Boolean"}], "result": "EventGuest[]", "description": "Gets the guests for the event, potentially including the event owners."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the unique iCalUID of the event."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Gets the date the event was last updated."}, {"name": "getLocation", "parameters": [], "result": "String", "description": "Gets the location of the event."}, {"name": "getMyStatus", "parameters": [], "result": "GuestStatus", "description": "Gets the event status (attending, etc.) of the effective user."}, {"name": "getOriginalCalendarId", "parameters": [], "result": "String", "description": "Get the ID of the calendar where this event was originally created."}, {"name": "getPopupReminders", "parameters": [], "result": "Integer[]", "description": "Gets the minute values for all popup reminders for the event."}, {"name": "getSmsReminders", "parameters": [], "result": "Integer[]", "description": "Gets the minute values for all SMS reminders for the event."}, {"name": "getStartTime", "parameters": [], "result": "Date", "description": "Gets the date and time at which this calendar event begins."}, {"name": "getTag", "parameters": [{"name": "key", "type": "String"}], "result": "String", "description": "Gets a tag value of the event."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the title of the event."}, {"name": "getVisibility", "parameters": [], "result": "Visibility", "description": "Gets the visibility of the event."}, {"name": "guestsCanInviteOthers", "parameters": [], "result": "Boolean", "description": "Determines whether guests can invite other guests."}, {"name": "guestsCanModify", "parameters": [], "result": "Boolean", "description": "Determines whether guests can modify the event."}, {"name": "guestsCanSeeGuests", "parameters": [], "result": "Boolean", "description": "Determines whether guests can see other guests."}, {"name": "isAllDayEvent", "parameters": [], "result": "Boolean", "description": "Determines whether this is an all-day event."}, {"name": "isOwnedByMe", "parameters": [], "result": "Boolean", "description": "Determines whether the event is owned by the effective user."}, {"name": "isRecurringEvent", "parameters": [], "result": "Boolean", "description": "Determines whether the event is part of an event series."}, {"name": "removeAllReminders", "parameters": [], "result": "CalendarEvent", "description": "Removes all reminders from the event."}, {"name": "removeGuest", "parameters": [{"name": "email", "type": "String"}], "result": "CalendarEvent", "description": "Removes a guest from the event."}, {"name": "resetRemindersToDefault", "parameters": [], "result": "CalendarEvent", "description": "Resets the reminders using the calendar's default settings."}, {"name": "setAllDayDate", "parameters": [{"name": "date", "type": "Date"}], "result": "CalendarEvent", "description": "Sets the date of the event."}, {"name": "setAllDayDates", "parameters": [{"name": "startDate", "type": "Date"}, {"name": "endDate", "type": "Date"}], "result": "CalendarEvent", "description": "Sets the dates of the event."}, {"name": "setAnyoneCanAddSelf", "parameters": [{"name": "anyoneCanAddSelf", "type": "Boolean"}], "result": "CalendarEvent", "description": "Sets whether non-guests can add themselves to the event."}, {"name": "setColor", "parameters": [{"name": "color", "type": "String"}], "result": "CalendarEvent", "description": "Sets the color of the calendar event."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "CalendarEvent", "description": "Sets the description of the event."}, {"name": "setGuestsCanInviteOthers", "parameters": [{"name": "guestsCanInviteOthers", "type": "Boolean"}], "result": "CalendarEvent", "description": "Sets whether guests can invite other guests."}, {"name": "setGuestsCanModify", "parameters": [{"name": "guestsCanModify", "type": "Boolean"}], "result": "CalendarEvent", "description": "Sets whether guests can modify the event."}, {"name": "setGuestsCanSeeGuests", "parameters": [{"name": "guestsCanSeeGuests", "type": "Boolean"}], "result": "CalendarEvent", "description": "Sets whether guests can see other guests."}, {"name": "setLocation", "parameters": [{"name": "location", "type": "String"}], "result": "CalendarEvent", "description": "Sets the location of the event."}, {"name": "setMyStatus", "parameters": [{"name": "status", "type": "GuestStatus"}], "result": "CalendarEvent", "description": "Sets the event status (attending, etc.) of the effective user."}, {"name": "setTag", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "CalendarEvent", "description": "Sets a key/value tag on the event, for storing custom metadata."}, {"name": "setTime", "parameters": [{"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}], "result": "CalendarEvent", "description": "Sets the dates and times for the start and end of the event."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "CalendarEvent", "description": "Sets the title of the event."}, {"name": "setVisibility", "parameters": [{"name": "visibility", "type": "Visibility"}], "result": "CalendarEvent", "description": "Sets the visibility of the event."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/calendar/calendar-app", "name": "CalendarApp", "type": "class", "methods": [{"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "date", "type": "Date"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "endDate", "type": "Date"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "endDate", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "date", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}], "result": "CalendarEventSeries", "description": "Creates a new all-day event series."}, {"name": "createAllDayEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}, {"name": "options", "type": "Object"}], "result": "CalendarEventSeries", "description": "Creates a new all-day event series."}, {"name": "createCalendar", "parameters": [{"name": "name", "type": "String"}], "result": "Calendar", "description": "Creates a new calendar, owned by the user."}, {"name": "createCalendar", "parameters": [{"name": "name", "type": "String"}, {"name": "options", "type": "Object"}], "result": "Calendar", "description": "Creates a new calendar, owned by the user."}, {"name": "createEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}], "result": "CalendarEvent", "description": "Creates a new event."}, {"name": "createEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent", "description": "Creates a new event."}, {"name": "createEventFromDescription", "parameters": [{"name": "description", "type": "String"}], "result": "CalendarEvent", "description": "Creates an event from a free-form description."}, {"name": "createEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}], "result": "CalendarEventSeries", "description": "Creates a new event series."}, {"name": "createEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}, {"name": "options", "type": "Object"}], "result": "CalendarEventSeries", "description": "Creates a new event series."}, {"name": "getAllCalendars", "parameters": [], "result": "Calendar[]", "description": "Gets all calendars that the user owns or is subscribed to."}, {"name": "getAllOwnedCalendars", "parameters": [], "result": "Calendar[]", "description": "Gets all calendars that the user owns."}, {"name": "getCalendarById", "parameters": [{"name": "id", "type": "String"}], "result": "Calendar", "description": "Gets the calendar with the given ID."}, {"name": "getCalendarsByName", "parameters": [{"name": "name", "type": "String"}], "result": "Calendar[]", "description": "Gets all calendars with a given name that the user owns or is subscribed to."}, {"name": "getColor", "parameters": [], "result": "String", "description": "Gets the color of the calendar."}, {"name": "getDefaultCalendar", "parameters": [], "result": "Calendar", "description": "Gets the user's default calendar."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description of the calendar."}, {"name": "getEventById", "parameters": [{"name": "iCalId", "type": "String"}], "result": "CalendarEvent", "description": "Gets the event with the given ID."}, {"name": "getEventSeriesById", "parameters": [{"name": "iCalId", "type": "String"}], "result": "CalendarEventSeries", "description": "Gets the event series with the given ID."}, {"name": "getEvents", "parameters": [{"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}], "result": "CalendarEvent[]", "description": "Gets all events that occur within a given time range."}, {"name": "getEvents", "parameters": [{"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent[]", "description": "Gets all events that occur within a given time range and meet the specified criteria."}, {"name": "getEventsForDay", "parameters": [{"name": "date", "type": "Date"}], "result": "CalendarEvent[]", "description": "Gets all events that occur on a given day."}, {"name": "getEventsForDay", "parameters": [{"name": "date", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent[]", "description": "Gets all events that occur on a given day and meet specified criteria."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the calendar."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the calendar."}, {"name": "getOwnedCalendarById", "parameters": [{"name": "id", "type": "String"}], "result": "Calendar", "description": "Gets the calendar with the given ID, if the user owns it."}, {"name": "getOwnedCalendarsByName", "parameters": [{"name": "name", "type": "String"}], "result": "Calendar[]", "description": "Gets all calendars with a given name that the user owns."}, {"name": "getTimeZone", "parameters": [], "result": "String", "description": "Gets the time zone of the calendar."}, {"name": "isHidden", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar is hidden in the user interface."}, {"name": "isMyPrimaryCalendar", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar is the default calendar for the effective user."}, {"name": "isOwnedByMe", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar is owned by the effective user."}, {"name": "isSelected", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar's events are displayed in the user interface."}, {"name": "newRecurrence", "parameters": [], "result": "EventRecurrence", "description": "Creates a new recurrence object, which can be used to create rules for event recurrence."}, {"name": "setColor", "parameters": [{"name": "color", "type": "String"}], "result": "Calendar", "description": "Sets the color of the calendar."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Calendar", "description": "Sets the description of the calendar."}, {"name": "setHidden", "parameters": [{"name": "hidden", "type": "Boolean"}], "result": "Calendar", "description": "Sets whether the calendar is visible in the user interface."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Calendar", "description": "Sets the name of the calendar."}, {"name": "setSelected", "parameters": [{"name": "selected", "type": "Boolean"}], "result": "Calendar", "description": "Sets whether the calendar's events are displayed in the user interface."}, {"name": "setTimeZone", "parameters": [{"name": "timeZone", "type": "String"}], "result": "Calendar", "description": "Sets the time zone of the calendar."}, {"name": "subscribeToCalendar", "parameters": [{"name": "id", "type": "String"}], "result": "Calendar", "description": "Subscribes the user to the calendar with the given ID, if the user is allowed to subscribe."}, {"name": "subscribeToCalendar", "parameters": [{"name": "id", "type": "String"}, {"name": "options", "type": "Object"}], "result": "Calendar", "description": "Subscribes the user to the calendar with the given ID, if the user is allowed to subscribe."}], "properties": [{"name": "Color", "type": "Color", "url": "/apps-script/reference/calendar/color", "description": "An enum representing the named colors available in the Calendar service."}, {"name": "EventColor", "type": "EventColor", "url": "/apps-script/reference/calendar/event-color", "description": "An enum representing the named event colors available in the Calendar service."}, {"name": "GuestStatus", "type": "GuestStatus", "url": "/apps-script/reference/calendar/guest-status", "description": "An enum representing the statuses a guest can have for an event."}, {"name": "Month", "type": "Month", "url": "https://developers.google.com/apps-script/reference/base/month.html", "description": "An enum representing the months of the year."}, {"name": "Visibility", "type": "Visibility", "url": "/apps-script/reference/calendar/visibility", "description": "An enum representing the visibility of an event."}, {"name": "Weekday", "type": "Weekday", "url": "https://developers.google.com/apps-script/reference/base/weekday.html", "description": "An enum representing the days of the week."}]},
{"url": "https://developers.google.com/apps-script/reference/calendar/calendar", "name": "Calendar", "type": "class", "methods": [{"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "date", "type": "Date"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "endDate", "type": "Date"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "endDate", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "date", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}], "result": "CalendarEventSeries", "description": "Creates a new all-day event series."}, {"name": "createAllDayEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}, {"name": "options", "type": "Object"}], "result": "CalendarEventSeries", "description": "Creates a new all-day event series."}, {"name": "createEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}], "result": "CalendarEvent", "description": "Creates a new event."}, {"name": "createEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent", "description": "Creates a new event."}, {"name": "createEventFromDescription", "parameters": [{"name": "description", "type": "String"}], "result": "CalendarEvent", "description": "Creates an event from a free-form description."}, {"name": "createEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}], "result": "CalendarEventSeries", "description": "Creates a new event series."}, {"name": "createEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}, {"name": "options", "type": "Object"}], "result": "CalendarEventSeries", "description": "Creates a new event series."}, {"name": "deleteCalendar", "parameters": [], "result": "void", "description": "Deletes the calendar permanently."}, {"name": "getColor", "parameters": [], "result": "String", "description": "Gets the color of the calendar."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description of the calendar."}, {"name": "getEventById", "parameters": [{"name": "iCalId", "type": "String"}], "result": "CalendarEvent", "description": "Gets the event with the given ID."}, {"name": "getEventSeriesById", "parameters": [{"name": "iCalId", "type": "String"}], "result": "CalendarEventSeries", "description": "Gets the event series with the given ID."}, {"name": "getEvents", "parameters": [{"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}], "result": "CalendarEvent[]", "description": "Gets all events that occur within a given time range."}, {"name": "getEvents", "parameters": [{"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent[]", "description": "Gets all events that occur within a given time range and meet the specified criteria."}, {"name": "getEventsForDay", "parameters": [{"name": "date", "type": "Date"}], "result": "CalendarEvent[]", "description": "Gets all events that occur on a given day."}, {"name": "getEventsForDay", "parameters": [{"name": "date", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent[]", "description": "Gets all events that occur on a given day and meet specified criteria."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the calendar."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the calendar."}, {"name": "getTimeZone", "parameters": [], "result": "String", "description": "Gets the time zone of the calendar."}, {"name": "isHidden", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar is hidden in the user interface."}, {"name": "isMyPrimaryCalendar", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar is the default calendar for the effective user."}, {"name": "isOwnedByMe", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar is owned by the effective user."}, {"name": "isSelected", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar's events are displayed in the user interface."}, {"name": "setColor", "parameters": [{"name": "color", "type": "String"}], "result": "Calendar", "description": "Sets the color of the calendar."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Calendar", "description": "Sets the description of the calendar."}, {"name": "setHidden", "parameters": [{"name": "hidden", "type": "Boolean"}], "result": "Calendar", "description": "Sets whether the calendar is visible in the user interface."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Calendar", "description": "Sets the name of the calendar."}, {"name": "setSelected", "parameters": [{"name": "selected", "type": "Boolean"}], "result": "Calendar", "description": "Sets whether the calendar's events are displayed in the user interface."}, {"name": "setTimeZone", "parameters": [{"name": "timeZone", "type": "String"}], "result": "Calendar", "description": "Sets the time zone of the calendar."}, {"name": "unsubscribeFromCalendar", "parameters": [], "result": "void", "description": "Unsubscribes the user from the calendar."}], "properties": []},
{"url": "https://developers.google.com/apps-script/reference/calendar", "name": "Calendar", "type": "calendar", "methods": [{"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "date", "type": "Date"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "endDate", "type": "Date"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "endDate", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "date", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}], "result": "CalendarEventSeries", "description": "Creates a new all-day event series."}, {"name": "createAllDayEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}, {"name": "options", "type": "Object"}], "result": "CalendarEventSeries", "description": "Creates a new all-day event series."}, {"name": "createEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}], "result": "CalendarEvent", "description": "Creates a new event."}, {"name": "createEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent", "description": "Creates a new event."}, {"name": "createEventFromDescription", "parameters": [{"name": "description", "type": "String"}], "result": "CalendarEvent", "description": "Creates an event from a free-form description."}, {"name": "createEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}], "result": "CalendarEventSeries", "description": "Creates a new event series."}, {"name": "createEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}, {"name": "options", "type": "Object"}], "result": "CalendarEventSeries", "description": "Creates a new event series."}, {"name": "deleteCalendar", "parameters": [], "result": "void", "description": "Deletes the calendar permanently."}, {"name": "getColor", "parameters": [], "result": "String", "description": "Gets the color of the calendar."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description of the calendar."}, {"name": "getEventById", "parameters": [{"name": "iCalId", "type": "String"}], "result": "CalendarEvent", "description": "Gets the event with the given ID."}, {"name": "getEventSeriesById", "parameters": [{"name": "iCalId", "type": "String"}], "result": "CalendarEventSeries", "description": "Gets the event series with the given ID."}, {"name": "getEvents", "parameters": [{"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}], "result": "CalendarEvent[]", "description": "Gets all events that occur within a given time range."}, {"name": "getEvents", "parameters": [{"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent[]", "description": "Gets all events that occur within a given time range and meet the specified criteria."}, {"name": "getEventsForDay", "parameters": [{"name": "date", "type": "Date"}], "result": "CalendarEvent[]", "description": "Gets all events that occur on a given day."}, {"name": "getEventsForDay", "parameters": [{"name": "date", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent[]", "description": "Gets all events that occur on a given day and meet specified criteria."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the calendar."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the calendar."}, {"name": "getTimeZone", "parameters": [], "result": "String", "description": "Gets the time zone of the calendar."}, {"name": "isHidden", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar is hidden in the user interface."}, {"name": "isMyPrimaryCalendar", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar is the default calendar for the effective user."}, {"name": "isOwnedByMe", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar is owned by the effective user."}, {"name": "isSelected", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar's events are displayed in the user interface."}, {"name": "setColor", "parameters": [{"name": "color", "type": "String"}], "result": "Calendar", "description": "Sets the color of the calendar."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Calendar", "description": "Sets the description of the calendar."}, {"name": "setHidden", "parameters": [{"name": "hidden", "type": "Boolean"}], "result": "Calendar", "description": "Sets whether the calendar is visible in the user interface."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Calendar", "description": "Sets the name of the calendar."}, {"name": "setSelected", "parameters": [{"name": "selected", "type": "Boolean"}], "result": "Calendar", "description": "Sets whether the calendar's events are displayed in the user interface."}, {"name": "setTimeZone", "parameters": [{"name": "timeZone", "type": "String"}], "result": "Calendar", "description": "Sets the time zone of the calendar."}, {"name": "unsubscribeFromCalendar", "parameters": [], "result": "void", "description": "Unsubscribes the user from the calendar."}, {"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "date", "type": "Date"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "endDate", "type": "Date"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "endDate", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "date", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent", "description": "Creates a new all-day event."}, {"name": "createAllDayEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}], "result": "CalendarEventSeries", "description": "Creates a new all-day event series."}, {"name": "createAllDayEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startDate", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}, {"name": "options", "type": "Object"}], "result": "CalendarEventSeries", "description": "Creates a new all-day event series."}, {"name": "createCalendar", "parameters": [{"name": "name", "type": "String"}], "result": "Calendar", "description": "Creates a new calendar, owned by the user."}, {"name": "createCalendar", "parameters": [{"name": "name", "type": "String"}, {"name": "options", "type": "Object"}], "result": "Calendar", "description": "Creates a new calendar, owned by the user."}, {"name": "createEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}], "result": "CalendarEvent", "description": "Creates a new event."}, {"name": "createEvent", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent", "description": "Creates a new event."}, {"name": "createEventFromDescription", "parameters": [{"name": "description", "type": "String"}], "result": "CalendarEvent", "description": "Creates an event from a free-form description."}, {"name": "createEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}], "result": "CalendarEventSeries", "description": "Creates a new event series."}, {"name": "createEventSeries", "parameters": [{"name": "title", "type": "String"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "recurrence", "type": "EventRecurrence"}, {"name": "options", "type": "Object"}], "result": "CalendarEventSeries", "description": "Creates a new event series."}, {"name": "getAllCalendars", "parameters": [], "result": "Calendar[]", "description": "Gets all calendars that the user owns or is subscribed to."}, {"name": "getAllOwnedCalendars", "parameters": [], "result": "Calendar[]", "description": "Gets all calendars that the user owns."}, {"name": "getCalendarById", "parameters": [{"name": "id", "type": "String"}], "result": "Calendar", "description": "Gets the calendar with the given ID."}, {"name": "getCalendarsByName", "parameters": [{"name": "name", "type": "String"}], "result": "Calendar[]", "description": "Gets all calendars with a given name that the user owns or is subscribed to."}, {"name": "getColor", "parameters": [], "result": "String", "description": "Gets the color of the calendar."}, {"name": "getDefaultCalendar", "parameters": [], "result": "Calendar", "description": "Gets the user's default calendar."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description of the calendar."}, {"name": "getEventById", "parameters": [{"name": "iCalId", "type": "String"}], "result": "CalendarEvent", "description": "Gets the event with the given ID."}, {"name": "getEventSeriesById", "parameters": [{"name": "iCalId", "type": "String"}], "result": "CalendarEventSeries", "description": "Gets the event series with the given ID."}, {"name": "getEvents", "parameters": [{"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}], "result": "CalendarEvent[]", "description": "Gets all events that occur within a given time range."}, {"name": "getEvents", "parameters": [{"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent[]", "description": "Gets all events that occur within a given time range and meet the specified criteria."}, {"name": "getEventsForDay", "parameters": [{"name": "date", "type": "Date"}], "result": "CalendarEvent[]", "description": "Gets all events that occur on a given day."}, {"name": "getEventsForDay", "parameters": [{"name": "date", "type": "Date"}, {"name": "options", "type": "Object"}], "result": "CalendarEvent[]", "description": "Gets all events that occur on a given day and meet specified criteria."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the ID of the calendar."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the calendar."}, {"name": "getOwnedCalendarById", "parameters": [{"name": "id", "type": "String"}], "result": "Calendar", "description": "Gets the calendar with the given ID, if the user owns it."}, {"name": "getOwnedCalendarsByName", "parameters": [{"name": "name", "type": "String"}], "result": "Calendar[]", "description": "Gets all calendars with a given name that the user owns."}, {"name": "getTimeZone", "parameters": [], "result": "String", "description": "Gets the time zone of the calendar."}, {"name": "isHidden", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar is hidden in the user interface."}, {"name": "isMyPrimaryCalendar", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar is the default calendar for the effective user."}, {"name": "isOwnedByMe", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar is owned by the effective user."}, {"name": "isSelected", "parameters": [], "result": "Boolean", "description": "Determines whether the calendar's events are displayed in the user interface."}, {"name": "newRecurrence", "parameters": [], "result": "EventRecurrence", "description": "Creates a new recurrence object, which can be used to create rules for event recurrence."}, {"name": "setColor", "parameters": [{"name": "color", "type": "String"}], "result": "Calendar", "description": "Sets the color of the calendar."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "Calendar", "description": "Sets the description of the calendar."}, {"name": "setHidden", "parameters": [{"name": "hidden", "type": "Boolean"}], "result": "Calendar", "description": "Sets whether the calendar is visible in the user interface."}, {"name": "setName", "parameters": [{"name": "name", "type": "String"}], "result": "Calendar", "description": "Sets the name of the calendar."}, {"name": "setSelected", "parameters": [{"name": "selected", "type": "Boolean"}], "result": "Calendar", "description": "Sets whether the calendar's events are displayed in the user interface."}, {"name": "setTimeZone", "parameters": [{"name": "timeZone", "type": "String"}], "result": "Calendar", "description": "Sets the time zone of the calendar."}, {"name": "subscribeToCalendar", "parameters": [{"name": "id", "type": "String"}], "result": "Calendar", "description": "Subscribes the user to the calendar with the given ID, if the user is allowed to subscribe."}, {"name": "subscribeToCalendar", "parameters": [{"name": "id", "type": "String"}, {"name": "options", "type": "Object"}], "result": "Calendar", "description": "Subscribes the user to the calendar with the given ID, if the user is allowed to subscribe."}, {"name": "addEmailReminder", "parameters": [{"name": "minutesBefore", "type": "Integer"}], "result": "CalendarEvent", "description": "Adds a new email reminder to the event."}, {"name": "addGuest", "parameters": [{"name": "email", "type": "String"}], "result": "CalendarEvent", "description": "Adds a guest to the event."}, {"name": "addPopupReminder", "parameters": [{"name": "minutesBefore", "type": "Integer"}], "result": "CalendarEvent", "description": "Adds a new popup reminder to the event."}, {"name": "addSmsReminder", "parameters": [{"name": "minutesBefore", "type": "Integer"}], "result": "CalendarEvent", "description": "Adds a new SMS reminder to the event."}, {"name": "anyoneCanAddSelf", "parameters": [], "result": "Boolean", "description": "Determines whether anyone can invite themselves."}, {"name": "deleteEvent", "parameters": [], "result": "void", "description": "Deletes the event."}, {"name": "deleteTag", "parameters": [{"name": "key", "type": "String"}], "result": "CalendarEvent", "description": "Deletes a key/value tag from the event."}, {"name": "getAllDayEndDate", "parameters": [], "result": "Date", "description": "Gets the date on which this all-day calendar event ends."}, {"name": "getAllDayStartDate", "parameters": [], "result": "Date", "description": "Gets the date on which this all-day calendar event begins."}, {"name": "getAllTagKeys", "parameters": [], "result": "String[]", "description": "Gets all keys for tags that have been set on the event."}, {"name": "getColor", "parameters": [], "result": "String", "description": "Returns the color of the calendar event."}, {"name": "getCreators", "parameters": [], "result": "String[]", "description": "Gets the creators of the event."}, {"name": "getDateCreated", "parameters": [], "result": "Date", "description": "Gets the date the event was created."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description of the event."}, {"name": "getEmailReminders", "parameters": [], "result": "Integer[]", "description": "Gets the minute values for all email reminders for the event."}, {"name": "getEndTime", "parameters": [], "result": "Date", "description": "Gets the date and time at which this calendar event ends."}, {"name": "getEventSeries", "parameters": [], "result": "CalendarEventSeries", "description": "Gets the series of recurring events that this event belongs to."}, {"name": "getGuestByEmail", "parameters": [{"name": "email", "type": "String"}], "result": "EventGuest", "description": "Gets a guest by email address."}, {"name": "getGuestList", "parameters": [], "result": "EventGuest[]", "description": "Gets the guests for the event, not including the event owner."}, {"name": "getGuestList", "parameters": [{"name": "includeOwner", "type": "Boolean"}], "result": "EventGuest[]", "description": "Gets the guests for the event, potentially including the event owners."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the unique iCalUID of the event."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Gets the date the event was last updated."}, {"name": "getLocation", "parameters": [], "result": "String", "description": "Gets the location of the event."}, {"name": "getMyStatus", "parameters": [], "result": "GuestStatus", "description": "Gets the event status (attending, etc.) of the effective user."}, {"name": "getOriginalCalendarId", "parameters": [], "result": "String", "description": "Get the ID of the calendar where this event was originally created."}, {"name": "getPopupReminders", "parameters": [], "result": "Integer[]", "description": "Gets the minute values for all popup reminders for the event."}, {"name": "getSmsReminders", "parameters": [], "result": "Integer[]", "description": "Gets the minute values for all SMS reminders for the event."}, {"name": "getStartTime", "parameters": [], "result": "Date", "description": "Gets the date and time at which this calendar event begins."}, {"name": "getTag", "parameters": [{"name": "key", "type": "String"}], "result": "String", "description": "Gets a tag value of the event."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the title of the event."}, {"name": "getVisibility", "parameters": [], "result": "Visibility", "description": "Gets the visibility of the event."}, {"name": "guestsCanInviteOthers", "parameters": [], "result": "Boolean", "description": "Determines whether guests can invite other guests."}, {"name": "guestsCanModify", "parameters": [], "result": "Boolean", "description": "Determines whether guests can modify the event."}, {"name": "guestsCanSeeGuests", "parameters": [], "result": "Boolean", "description": "Determines whether guests can see other guests."}, {"name": "isAllDayEvent", "parameters": [], "result": "Boolean", "description": "Determines whether this is an all-day event."}, {"name": "isOwnedByMe", "parameters": [], "result": "Boolean", "description": "Determines whether the event is owned by the effective user."}, {"name": "isRecurringEvent", "parameters": [], "result": "Boolean", "description": "Determines whether the event is part of an event series."}, {"name": "removeAllReminders", "parameters": [], "result": "CalendarEvent", "description": "Removes all reminders from the event."}, {"name": "removeGuest", "parameters": [{"name": "email", "type": "String"}], "result": "CalendarEvent", "description": "Removes a guest from the event."}, {"name": "resetRemindersToDefault", "parameters": [], "result": "CalendarEvent", "description": "Resets the reminders using the calendar's default settings."}, {"name": "setAllDayDate", "parameters": [{"name": "date", "type": "Date"}], "result": "CalendarEvent", "description": "Sets the date of the event."}, {"name": "setAllDayDates", "parameters": [{"name": "startDate", "type": "Date"}, {"name": "endDate", "type": "Date"}], "result": "CalendarEvent", "description": "Sets the dates of the event."}, {"name": "setAnyoneCanAddSelf", "parameters": [{"name": "anyoneCanAddSelf", "type": "Boolean"}], "result": "CalendarEvent", "description": "Sets whether non-guests can add themselves to the event."}, {"name": "setColor", "parameters": [{"name": "color", "type": "String"}], "result": "CalendarEvent", "description": "Sets the color of the calendar event."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "CalendarEvent", "description": "Sets the description of the event."}, {"name": "setGuestsCanInviteOthers", "parameters": [{"name": "guestsCanInviteOthers", "type": "Boolean"}], "result": "CalendarEvent", "description": "Sets whether guests can invite other guests."}, {"name": "setGuestsCanModify", "parameters": [{"name": "guestsCanModify", "type": "Boolean"}], "result": "CalendarEvent", "description": "Sets whether guests can modify the event."}, {"name": "setGuestsCanSeeGuests", "parameters": [{"name": "guestsCanSeeGuests", "type": "Boolean"}], "result": "CalendarEvent", "description": "Sets whether guests can see other guests."}, {"name": "setLocation", "parameters": [{"name": "location", "type": "String"}], "result": "CalendarEvent", "description": "Sets the location of the event."}, {"name": "setMyStatus", "parameters": [{"name": "status", "type": "GuestStatus"}], "result": "CalendarEvent", "description": "Sets the event status (attending, etc.) of the effective user."}, {"name": "setTag", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "CalendarEvent", "description": "Sets a key/value tag on the event, for storing custom metadata."}, {"name": "setTime", "parameters": [{"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}], "result": "CalendarEvent", "description": "Sets the dates and times for the start and end of the event."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "CalendarEvent", "description": "Sets the title of the event."}, {"name": "setVisibility", "parameters": [{"name": "visibility", "type": "Visibility"}], "result": "CalendarEvent", "description": "Sets the visibility of the event."}, {"name": "addEmailReminder", "parameters": [{"name": "minutesBefore", "type": "Integer"}], "result": "CalendarEventSeries", "description": "Adds a new email reminder to the event."}, {"name": "addGuest", "parameters": [{"name": "email", "type": "String"}], "result": "CalendarEventSeries", "description": "Adds a guest to the event."}, {"name": "addPopupReminder", "parameters": [{"name": "minutesBefore", "type": "Integer"}], "result": "CalendarEventSeries", "description": "Adds a new popup reminder to the event."}, {"name": "addSmsReminder", "parameters": [{"name": "minutesBefore", "type": "Integer"}], "result": "CalendarEventSeries", "description": "Adds a new SMS reminder to the event."}, {"name": "anyoneCanAddSelf", "parameters": [], "result": "Boolean", "description": "Determines whether anyone can invite themselves."}, {"name": "deleteEventSeries", "parameters": [], "result": "void", "description": "Deletes the event series."}, {"name": "deleteTag", "parameters": [{"name": "key", "type": "String"}], "result": "CalendarEventSeries", "description": "Deletes a key/value tag from the event."}, {"name": "getAllTagKeys", "parameters": [], "result": "String[]", "description": "Gets all keys for tags that have been set on the event."}, {"name": "getColor", "parameters": [], "result": "String", "description": "Returns the color of the calendar event."}, {"name": "getCreators", "parameters": [], "result": "String[]", "description": "Gets the creators of the event."}, {"name": "getDateCreated", "parameters": [], "result": "Date", "description": "Gets the date the event was created."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description of the event."}, {"name": "getEmailReminders", "parameters": [], "result": "Integer[]", "description": "Gets the minute values for all email reminders for the event."}, {"name": "getGuestByEmail", "parameters": [{"name": "email", "type": "String"}], "result": "EventGuest", "description": "Gets a guest by email address."}, {"name": "getGuestList", "parameters": [], "result": "EventGuest[]", "description": "Gets the guests for the event, not including the event owner."}, {"name": "getGuestList", "parameters": [{"name": "includeOwner", "type": "Boolean"}], "result": "EventGuest[]", "description": "Gets the guests for the event, potentially including the event owners."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the unique iCalUID of the event."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Gets the date the event was last updated."}, {"name": "getLocation", "parameters": [], "result": "String", "description": "Gets the location of the event."}, {"name": "getMyStatus", "parameters": [], "result": "GuestStatus", "description": "Gets the event status (attending, etc.) of the effective user."}, {"name": "getOriginalCalendarId", "parameters": [], "result": "String", "description": "Get the ID of the calendar where this event was originally created."}, {"name": "getPopupReminders", "parameters": [], "result": "Integer[]", "description": "Gets the minute values for all popup reminders for the event."}, {"name": "getSmsReminders", "parameters": [], "result": "Integer[]", "description": "Gets the minute values for all SMS reminders for the event."}, {"name": "getTag", "parameters": [{"name": "key", "type": "String"}], "result": "String", "description": "Gets a tag value of the event."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the title of the event."}, {"name": "getVisibility", "parameters": [], "result": "Visibility", "description": "Gets the visibility of the event."}, {"name": "guestsCanInviteOthers", "parameters": [], "result": "Boolean", "description": "Determines whether guests can invite other guests."}, {"name": "guestsCanModify", "parameters": [], "result": "Boolean", "description": "Determines whether guests can modify the event."}, {"name": "guestsCanSeeGuests", "parameters": [], "result": "Boolean", "description": "Determines whether guests can see other guests."}, {"name": "isOwnedByMe", "parameters": [], "result": "Boolean", "description": "Determines whether the event is owned by the effective user."}, {"name": "removeAllReminders", "parameters": [], "result": "CalendarEventSeries", "description": "Removes all reminders from the event."}, {"name": "removeGuest", "parameters": [{"name": "email", "type": "String"}], "result": "CalendarEventSeries", "description": "Removes a guest from the event."}, {"name": "resetRemindersToDefault", "parameters": [], "result": "CalendarEventSeries", "description": "Resets the reminders using the calendar's default settings."}, {"name": "setAnyoneCanAddSelf", "parameters": [{"name": "anyoneCanAddSelf", "type": "Boolean"}], "result": "CalendarEventSeries", "description": "Sets whether non-guests can add themselves to the event."}, {"name": "setColor", "parameters": [{"name": "color", "type": "String"}], "result": "CalendarEventSeries", "description": "Sets the color of the calendar event."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "CalendarEventSeries", "description": "Sets the description of the event."}, {"name": "setGuestsCanInviteOthers", "parameters": [{"name": "guestsCanInviteOthers", "type": "Boolean"}], "result": "CalendarEventSeries", "description": "Sets whether guests can invite other guests."}, {"name": "setGuestsCanModify", "parameters": [{"name": "guestsCanModify", "type": "Boolean"}], "result": "CalendarEventSeries", "description": "Sets whether guests can modify the event."}, {"name": "setGuestsCanSeeGuests", "parameters": [{"name": "guestsCanSeeGuests", "type": "Boolean"}], "result": "CalendarEventSeries", "description": "Sets whether guests can see other guests."}, {"name": "setLocation", "parameters": [{"name": "location", "type": "String"}], "result": "CalendarEventSeries", "description": "Sets the location of the event."}, {"name": "setMyStatus", "parameters": [{"name": "status", "type": "GuestStatus"}], "result": "CalendarEventSeries", "description": "Sets the event status (attending, etc.) of the effective user."}, {"name": "setRecurrence", "parameters": [{"name": "recurrence", "type": "EventRecurrence"}, {"name": "startDate", "type": "Date"}], "result": "CalendarEventSeries", "description": "Sets the recurrence rules for an all-day event series."}, {"name": "setRecurrence", "parameters": [{"name": "recurrence", "type": "EventRecurrence"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}], "result": "CalendarEventSeries", "description": "Sets the recurrence rules for this event series."}, {"name": "setTag", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "CalendarEventSeries", "description": "Sets a key/value tag on the event, for storing custom metadata."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "CalendarEventSeries", "description": "Sets the title of the event."}, {"name": "setVisibility", "parameters": [{"name": "visibility", "type": "Visibility"}], "result": "CalendarEventSeries", "description": "Sets the visibility of the event."}, {"name": "getAdditionalGuests", "parameters": [], "result": "Integer", "description": "Gets the number of additional people that this guest has said are attending."}, {"name": "getEmail", "parameters": [], "result": "String", "description": "Gets the email address of the guest."}, {"name": "getGuestStatus", "parameters": [], "result": "GuestStatus", "description": "Gets the status of the guest for the event."}, {"name": "getName", "parameters": [], "result": "String", "description": "Gets the name of the guest."}, {"name": "addDailyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a daily basis."}, {"name": "addDailyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a daily basis."}, {"name": "addDate", "parameters": [{"name": "date", "type": "Date"}], "result": "EventRecurrence", "description": "Adds a rule that causes the event to recur on a specific date."}, {"name": "addDateExclusion", "parameters": [{"name": "date", "type": "Date"}], "result": "EventRecurrence", "description": "Adds a rule that excludes an occurrence for a specific date."}, {"name": "addMonthlyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a monthly basis."}, {"name": "addMonthlyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a monthly basis."}, {"name": "addWeeklyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a weekly basis."}, {"name": "addWeeklyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a weekly basis."}, {"name": "addYearlyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a yearly basis."}, {"name": "addYearlyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a yearly basis."}, {"name": "setTimeZone", "parameters": [{"name": "timeZone", "type": "String"}], "result": "EventRecurrence", "description": "Sets the time zone for this recurrence."}, {"name": "addDailyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a daily basis."}, {"name": "addDailyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a daily basis."}, {"name": "addDate", "parameters": [{"name": "date", "type": "Date"}], "result": "EventRecurrence", "description": "Adds a rule that causes the event to recur on a specific date."}, {"name": "addDateExclusion", "parameters": [{"name": "date", "type": "Date"}], "result": "EventRecurrence", "description": "Adds a rule that excludes an occurrence for a specific date."}, {"name": "addMonthlyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a monthly basis."}, {"name": "addMonthlyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a monthly basis."}, {"name": "addWeeklyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a weekly basis."}, {"name": "addWeeklyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a weekly basis."}, {"name": "addYearlyExclusion", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that excludes occurrences on a yearly basis."}, {"name": "addYearlyRule", "parameters": [], "result": "RecurrenceRule", "description": "Adds a rule that causes the event to recur on a yearly basis."}, {"name": "interval", "parameters": [{"name": "interval", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply at this interval of the rule's time unit."}, {"name": "onlyInMonth", "parameters": [{"name": "month", "type": "Month"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to a specific month."}, {"name": "onlyInMonths", "parameters": [{"name": "months", "type": "Month"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to specific months."}, {"name": "onlyOnMonthDay", "parameters": [{"name": "day", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to a specific day of the month."}, {"name": "onlyOnMonthDays", "parameters": [{"name": "days", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to specific days of the month."}, {"name": "onlyOnWeek", "parameters": [{"name": "week", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to a specific week of the year."}, {"name": "onlyOnWeekday", "parameters": [{"name": "day", "type": "Weekday"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to a specific day of the week."}, {"name": "onlyOnWeekdays", "parameters": [{"name": "days", "type": "Weekday"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to specific days of the week."}, {"name": "onlyOnWeeks", "parameters": [{"name": "weeks", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to specific weeks of the year."}, {"name": "onlyOnYearDay", "parameters": [{"name": "day", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to a specific day of the year."}, {"name": "onlyOnYearDays", "parameters": [{"name": "days", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to only apply to specific days of the year."}, {"name": "setTimeZone", "parameters": [{"name": "timeZone", "type": "String"}], "result": "EventRecurrence", "description": "Sets the time zone for this recurrence."}, {"name": "times", "parameters": [{"name": "times", "type": "Integer"}], "result": "RecurrenceRule", "description": "Configures the rule to end after a given number of occurrences."}, {"name": "until", "parameters": [{"name": "endDate", "type": "Date"}], "result": "RecurrenceRule", "description": "Configures the rule to end on a given date (inclusive)."}, {"name": "weekStartsOn", "parameters": [{"name": "day", "type": "Weekday"}], "result": "RecurrenceRule", "description": "Configures which day a week starts on, for the purposes of applying the rule."}], "properties": [{"name": "Color", "type": "Color", "url": "/apps-script/reference/calendar/color", "description": "An enum representing the named colors available in the Calendar service."}, {"name": "EventColor", "type": "EventColor", "url": "/apps-script/reference/calendar/event-color", "description": "An enum representing the named event colors available in the Calendar service."}, {"name": "GuestStatus", "type": "GuestStatus", "url": "/apps-script/reference/calendar/guest-status", "description": "An enum representing the statuses a guest can have for an event."}, {"name": "Month", "type": "Month", "url": "https://developers.google.com/apps-script/reference/base/month.html", "description": "An enum representing the months of the year."}, {"name": "Visibility", "type": "Visibility", "url": "/apps-script/reference/calendar/visibility", "description": "An enum representing the visibility of an event."}, {"name": "Weekday", "type": "Weekday", "url": "https://developers.google.com/apps-script/reference/base/weekday.html", "description": "An enum representing the days of the week."}, {"name": "BLUE", "type": "Enum", "url": "", "description": "\n\n\n Blue (#2952A3)."}, {"name": "BROWN", "type": "Enum", "url": "", "description": "\n\n\n Brown (#8D6F47)."}, {"name": "CHARCOAL", "type": "Enum", "url": "", "description": "\n\n\n Charcoal (#4E5D6C)."}, {"name": "CHESTNUT", "type": "Enum", "url": "", "description": "\n\n\n Chestnut (#865A5A)."}, {"name": "GRAY", "type": "Enum", "url": "", "description": "\n\n\n Gray (#5A6986)."}, {"name": "GREEN", "type": "Enum", "url": "", "description": "\n\n\n Green (#0D7813)."}, {"name": "INDIGO", "type": "Enum", "url": "", "description": "\n\n\n Indigo (#5229A3)."}, {"name": "LIME", "type": "Enum", "url": "", "description": "\n\n\n Lime (#528800)."}, {"name": "MUSTARD", "type": "Enum", "url": "", "description": "\n\n\n Mustard (#88880E)."}, {"name": "OLIVE", "type": "Enum", "url": "", "description": "\n\n\n Olive (#6E6E41)."}, {"name": "ORANGE", "type": "Enum", "url": "", "description": "\n\n\n Orange (#BE6D00)."}, {"name": "PINK", "type": "Enum", "url": "", "description": "\n\n\n Pink (#B1365F)."}, {"name": "PLUM", "type": "Enum", "url": "", "description": "\n\n\n Plum (#705770)."}, {"name": "PURPLE", "type": "Enum", "url": "", "description": "\n\n\n Purple (#7A367A)."}, {"name": "RED", "type": "Enum", "url": "", "description": "\n\n\n Red (#A32929)."}, {"name": "RED_ORANGE", "type": "Enum", "url": "", "description": "\n\n\n Red-Orange (#B1440E)."}, {"name": "SEA_BLUE", "type": "Enum", "url": "", "description": "\n\n\n Sea Blue (#29527A)."}, {"name": "SLATE", "type": "Enum", "url": "", "description": "\n\n\n Slate (#4A716C)."}, {"name": "TEAL", "type": "Enum", "url": "", "description": "\n\n\n Teal (#28754E)."}, {"name": "TURQOISE", "type": "Enum", "url": "", "description": "\n\n\n Turquoise (#1B887A)."}, {"name": "YELLOW", "type": "Enum", "url": "", "description": "\n\n\n Yellow (#AB8B00)."}, {"name": "PALE_BLUE", "type": "Enum", "url": "", "description": "\n\n\n Pale Blue (\"1\")."}, {"name": "PALE_GREEN", "type": "Enum", "url": "", "description": "\n\n\n Pale Green (\"2\")."}, {"name": "MAUVE", "type": "Enum", "url": "", "description": "\n\n\n Mauve (\"3\")."}, {"name": "PALE_RED", "type": "Enum", "url": "", "description": "\n\n\n Pale Red (\"4\")."}, {"name": "YELLOW", "type": "Enum", "url": "", "description": "\n\n\n Yellow (\"5\")."}, {"name": "ORANGE", "type": "Enum", "url": "", "description": "\n\n\n Orange (\"6\")."}, {"name": "CYAN", "type": "Enum", "url": "", "description": "\n\n\n Cyan (\"7\")."}, {"name": "GRAY", "type": "Enum", "url": "", "description": "\n\n\n Gray (\"8\")."}, {"name": "BLUE", "type": "Enum", "url": "", "description": "\n\n\n Blue (\"9\")."}, {"name": "GREEN", "type": "Enum", "url": "", "description": "\n\n\n Green (\"10\")."}, {"name": "RED", "type": "Enum", "url": "", "description": "\n\n\n Red (\"11\")."}, {"name": "INVITED", "type": "Enum", "url": "", "description": "The guest has been invited, but has not indicated whether they are attending."}, {"name": "MAYBE", "type": "Enum", "url": "", "description": "The guest has indicated they might attend."}, {"name": "NO", "type": "Enum", "url": "", "description": "The guest has indicated they are not attending."}, {"name": "OWNER", "type": "Enum", "url": "", "description": "The guest is the owner of the event."}, {"name": "YES", "type": "Enum", "url": "", "description": "The guest has indicated they are attending."}, {"name": "CONFIDENTIAL", "type": "Enum", "url": "", "description": "The event is private."}, {"name": "DEFAULT", "type": "Enum", "url": "", "description": "Uses the default visibility for events on the calendar."}, {"name": "PRIVATE", "type": "Enum", "url": "", "description": "The event is private and only event attendees may view event details."}, {"name": "PUBLIC", "type": "Enum", "url": "", "description": "The event is public and event details are visible to all readers of the calendar."}]},
{"url": "https://developers.google.com/apps-script/reference/calendar/calendar-event-series", "name": "CalendarEventSeries", "type": "class", "methods": [{"name": "addEmailReminder", "parameters": [{"name": "minutesBefore", "type": "Integer"}], "result": "CalendarEventSeries", "description": "Adds a new email reminder to the event."}, {"name": "addGuest", "parameters": [{"name": "email", "type": "String"}], "result": "CalendarEventSeries", "description": "Adds a guest to the event."}, {"name": "addPopupReminder", "parameters": [{"name": "minutesBefore", "type": "Integer"}], "result": "CalendarEventSeries", "description": "Adds a new popup reminder to the event."}, {"name": "addSmsReminder", "parameters": [{"name": "minutesBefore", "type": "Integer"}], "result": "CalendarEventSeries", "description": "Adds a new SMS reminder to the event."}, {"name": "anyoneCanAddSelf", "parameters": [], "result": "Boolean", "description": "Determines whether anyone can invite themselves."}, {"name": "deleteEventSeries", "parameters": [], "result": "void", "description": "Deletes the event series."}, {"name": "deleteTag", "parameters": [{"name": "key", "type": "String"}], "result": "CalendarEventSeries", "description": "Deletes a key/value tag from the event."}, {"name": "getAllTagKeys", "parameters": [], "result": "String[]", "description": "Gets all keys for tags that have been set on the event."}, {"name": "getColor", "parameters": [], "result": "String", "description": "Returns the color of the calendar event."}, {"name": "getCreators", "parameters": [], "result": "String[]", "description": "Gets the creators of the event."}, {"name": "getDateCreated", "parameters": [], "result": "Date", "description": "Gets the date the event was created."}, {"name": "getDescription", "parameters": [], "result": "String", "description": "Gets the description of the event."}, {"name": "getEmailReminders", "parameters": [], "result": "Integer[]", "description": "Gets the minute values for all email reminders for the event."}, {"name": "getGuestByEmail", "parameters": [{"name": "email", "type": "String"}], "result": "EventGuest", "description": "Gets a guest by email address."}, {"name": "getGuestList", "parameters": [], "result": "EventGuest[]", "description": "Gets the guests for the event, not including the event owner."}, {"name": "getGuestList", "parameters": [{"name": "includeOwner", "type": "Boolean"}], "result": "EventGuest[]", "description": "Gets the guests for the event, potentially including the event owners."}, {"name": "getId", "parameters": [], "result": "String", "description": "Gets the unique iCalUID of the event."}, {"name": "getLastUpdated", "parameters": [], "result": "Date", "description": "Gets the date the event was last updated."}, {"name": "getLocation", "parameters": [], "result": "String", "description": "Gets the location of the event."}, {"name": "getMyStatus", "parameters": [], "result": "GuestStatus", "description": "Gets the event status (attending, etc.) of the effective user."}, {"name": "getOriginalCalendarId", "parameters": [], "result": "String", "description": "Get the ID of the calendar where this event was originally created."}, {"name": "getPopupReminders", "parameters": [], "result": "Integer[]", "description": "Gets the minute values for all popup reminders for the event."}, {"name": "getSmsReminders", "parameters": [], "result": "Integer[]", "description": "Gets the minute values for all SMS reminders for the event."}, {"name": "getTag", "parameters": [{"name": "key", "type": "String"}], "result": "String", "description": "Gets a tag value of the event."}, {"name": "getTitle", "parameters": [], "result": "String", "description": "Gets the title of the event."}, {"name": "getVisibility", "parameters": [], "result": "Visibility", "description": "Gets the visibility of the event."}, {"name": "guestsCanInviteOthers", "parameters": [], "result": "Boolean", "description": "Determines whether guests can invite other guests."}, {"name": "guestsCanModify", "parameters": [], "result": "Boolean", "description": "Determines whether guests can modify the event."}, {"name": "guestsCanSeeGuests", "parameters": [], "result": "Boolean", "description": "Determines whether guests can see other guests."}, {"name": "isOwnedByMe", "parameters": [], "result": "Boolean", "description": "Determines whether the event is owned by the effective user."}, {"name": "removeAllReminders", "parameters": [], "result": "CalendarEventSeries", "description": "Removes all reminders from the event."}, {"name": "removeGuest", "parameters": [{"name": "email", "type": "String"}], "result": "CalendarEventSeries", "description": "Removes a guest from the event."}, {"name": "resetRemindersToDefault", "parameters": [], "result": "CalendarEventSeries", "description": "Resets the reminders using the calendar's default settings."}, {"name": "setAnyoneCanAddSelf", "parameters": [{"name": "anyoneCanAddSelf", "type": "Boolean"}], "result": "CalendarEventSeries", "description": "Sets whether non-guests can add themselves to the event."}, {"name": "setColor", "parameters": [{"name": "color", "type": "String"}], "result": "CalendarEventSeries", "description": "Sets the color of the calendar event."}, {"name": "setDescription", "parameters": [{"name": "description", "type": "String"}], "result": "CalendarEventSeries", "description": "Sets the description of the event."}, {"name": "setGuestsCanInviteOthers", "parameters": [{"name": "guestsCanInviteOthers", "type": "Boolean"}], "result": "CalendarEventSeries", "description": "Sets whether guests can invite other guests."}, {"name": "setGuestsCanModify", "parameters": [{"name": "guestsCanModify", "type": "Boolean"}], "result": "CalendarEventSeries", "description": "Sets whether guests can modify the event."}, {"name": "setGuestsCanSeeGuests", "parameters": [{"name": "guestsCanSeeGuests", "type": "Boolean"}], "result": "CalendarEventSeries", "description": "Sets whether guests can see other guests."}, {"name": "setLocation", "parameters": [{"name": "location", "type": "String"}], "result": "CalendarEventSeries", "description": "Sets the location of the event."}, {"name": "setMyStatus", "parameters": [{"name": "status", "type": "GuestStatus"}], "result": "CalendarEventSeries", "description": "Sets the event status (attending, etc.) of the effective user."}, {"name": "setRecurrence", "parameters": [{"name": "recurrence", "type": "EventRecurrence"}, {"name": "startDate", "type": "Date"}], "result": "CalendarEventSeries", "description": "Sets the recurrence rules for an all-day event series."}, {"name": "setRecurrence", "parameters": [{"name": "recurrence", "type": "EventRecurrence"}, {"name": "startTime", "type": "Date"}, {"name": "endTime", "type": "Date"}], "result": "CalendarEventSeries", "description": "Sets the recurrence rules for this event series."}, {"name": "setTag", "parameters": [{"name": "key", "type": "String"}, {"name": "value", "type": "String"}], "result": "CalendarEventSeries", "description": "Sets a key/value tag on the event, for storing custom metadata."}, {"name": "setTitle", "parameters": [{"name": "title", "type": "String"}], "result": "CalendarEventSeries", "description": "Sets the title of the event."}, {"name": "setVisibility", "parameters": [{"name": "visibility", "type": "Visibility"}], "result": "CalendarEventSeries", "description": "Sets the visibility of the event."}], "properties": []}
]